var rw = Object.defineProperty;
var Sn = (A) => {
  throw TypeError(A);
};
var sw = (A, g, I) => g in A ? rw(A, g, { enumerable: !0, configurable: !0, writable: !0, value: I }) : A[g] = I;
var DA = (A, g, I) => sw(A, typeof g != "symbol" ? g + "" : g, I), yo = (A, g, I) => g.has(A) || Sn("Cannot " + I);
var MA = (A, g, I) => (yo(A, g, "read from private field"), I ? I.call(A) : g.get(A)), wg = (A, g, I) => g.has(A) ? Sn("Cannot add the same private member more than once") : g instanceof WeakSet ? g.add(A) : g.set(A, I), Qg = (A, g, I, B) => (yo(A, g, "write to private field"), B ? B.call(A, I) : g.set(A, I), I), Og = (A, g, I) => (yo(A, g, "access private method"), I);
var dt = (A, g, I, B) => ({
  set _(Q) {
    Qg(A, g, Q, I);
  },
  get _() {
    return MA(A, g, B);
  }
});
import { j as sA, S as nw, d as bD, g as ZD, P as cw, C as TD, I as XD, i as zD, k as VD, l as qD, L as PD, m as WD, n as Dw, T as hw, o as OD, p as jD, q as _D, r as lw } from "./vendor-radix-nHPuu8ug.js";
import { p as PA, b as ur, a as IA, d as $D, e as Sr, R as ig, c as pe, $ as Ur, f as yw, r as ww, O as A0, u as dw, h as Fw, i as Rw, j as fw, k as Gw, l as Mw } from "./vendor-react-DG1r0zWq.js";
import { t as Nw, c as uw, C as Sw, a as Uw, b as kw, d as Hw, e as pw, _ as zI, X as kr, L as Yw, f as Po, g as g0, h as Jw, i as Lw, j as Kw, I as mw } from "./vendor-ui-utils-9-Ouo9pm.js";
import { a as iE, B as DI, u as Hr, C as xw, Q as vw, X as bw, i as B0, b as Zw, I as Tw } from "./vendor-utils-CARgNrN0.js";
import { d as Xw, f as zw, h as he, a as Vw, b as qw, s as Pw, t as wo, c as Ww, e as Ow, i as $t, I as Un, g as pr, j as XC, k as oE, l as zC, m as jw, n as _w, M as $w, _ as DB, o as Ad, p as gg, q as hg, r as zE, u as xt } from "./vendor-web3-CfovYfnB.js";
import { B as FB, r as Yr, g as kn } from "./vendor-walletconnect-CNbnIvIA.js";
var Wo, Ft = ur;
if (PA.env.NODE_ENV === "production")
  Wo = Ft.createRoot, Ft.hydrateRoot;
else {
  var Hn = Ft.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  Wo = function(A, g) {
    Hn.usingClientEntryPoint = !0;
    try {
      return Ft.createRoot(A, g);
    } finally {
      Hn.usingClientEntryPoint = !1;
    }
  };
}
const KI = console.log.bind(console, "🚀");
function Rg(...A) {
  return Nw(uw(A));
}
class UQ {
  constructor(g) {
    DA(this, "isClient");
    DA(this, "key");
    this.isClient = typeof window < "u", this.key = g;
  }
  set(g) {
    this.isClient && localStorage.setItem(this.key, g);
  }
  get() {
    return this.isClient ? localStorage.getItem(this.key) : null;
  }
  remove() {
    this.isClient && localStorage.removeItem(this.key);
  }
  setData(g) {
    if (this.isClient)
      try {
        const I = JSON.stringify(g);
        return localStorage.setItem(this.key, I), !0;
      } catch (I) {
        return console.error("Failed to stringify object", I), !1;
      }
    return !1;
  }
  getData() {
    if (this.isClient) {
      const g = localStorage.getItem(this.key);
      if (g)
        try {
          return JSON.parse(g);
        } catch (I) {
          return console.error("Failed to parse JSON", I), null;
        }
    }
    return null;
  }
  // clear(): void {
  //   if (this.isClient) {
  //     localStorage.clear();
  //   }
  // }
}
const I0 = new UQ("language"), pn = new UQ("hideTotalAsset");
class gd {
  constructor() {
    DA(this, "storages");
    this.storages = {
      username: new UQ("username"),
      displayName: new UQ("displayName"),
      address: new UQ("address"),
      authenticatedHeader: new UQ("authenticatedHeader"),
      authenticated: new UQ("authenticated"),
      desUsername: new UQ("desUsername"),
      aeskey: new UQ("aeskey")
    };
  }
  saveAuthDataByKey(g, I) {
    return this.storages[g].setData(I);
  }
  getAuthDataByKey(g) {
    return this.storages[g].getData();
  }
  removeAuthDataByKey(g) {
    this.storages[g].remove();
  }
  clearAllAuthData() {
    for (const g in this.storages)
      this.storages.hasOwnProperty(g) && this.storages[g].remove();
  }
  all() {
    const g = {};
    for (const I in this.storages)
      this.storages.hasOwnProperty(I) && (g[I] = this.storages[I].getData());
    return g;
  }
  isAuthenticated() {
    return !!this.getAuthDataByKey("address");
  }
  getUserRandomAvatar(g) {
    return g ? `/static/avatars/${g}.svg` : "/static/avatars/1.svg";
  }
}
const fB = new gd(), Q0 = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256"
      }
    ],
    name: "ERC20InsufficientAllowance",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256"
      }
    ],
    name: "ERC20InsufficientBalance",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address"
      }
    ],
    name: "ERC20InvalidApprover",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      }
    ],
    name: "ERC20InvalidReceiver",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "ERC20InvalidSender",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "ERC20InvalidSpender",
    type: "error"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var VB = /* @__PURE__ */ ((A) => (A.ETH = "ETH", A.BASE_ETH = "BASE_ETH", A.MATIC = "MATIC", A.TVWT = "TVWT", A.VAST = "VAST", A.BTC = "BTC", A))(VB || {}), VC = /* @__PURE__ */ ((A) => (A.POL = "POL", A.SepoliaETH = "SepoliaETH", A.BaseSepoliaETH = "BaseSepoliaETH", A))(VC || {});
class Oe {
  constructor({
    tokenType: g,
    name: I,
    symbol: B,
    decimals: Q,
    gasSymbol: E,
    logo: C,
    color: o,
    viemChain: t,
    publicClient: e,
    scanTransactionUrl: i,
    contractAddress: a,
    contractAbi: r,
    gasless: h = !1
  }) {
    DA(this, "tokenType");
    DA(this, "name");
    DA(this, "symbol");
    DA(this, "decimals");
    DA(this, "gasSymbol");
    DA(this, "logo");
    DA(this, "color");
    DA(this, "viemChain");
    DA(this, "publicClient");
    DA(this, "scanTransactionUrl");
    DA(this, "contractAddress");
    DA(this, "contractAbi");
    DA(this, "gasless");
    this.tokenType = g, this.name = I, this.symbol = B, this.decimals = Q, this.gasSymbol = E, this.logo = C, this.color = o, this.viemChain = t, this.publicClient = e, this.scanTransactionUrl = i, this.contractAddress = a, this.contractAbi = r, this.gasless = h;
  }
}
const Bd = {
  gasPriceOracle: { address: "0x420000000000000000000000000000000000000F" },
  l1Block: { address: "0x4200000000000000000000000000000000000015" },
  l2CrossDomainMessenger: {
    address: "0x4200000000000000000000000000000000000007"
  },
  l2Erc721Bridge: { address: "0x4200000000000000000000000000000000000014" },
  l2StandardBridge: { address: "0x4200000000000000000000000000000000000010" },
  l2ToL1MessagePasser: {
    address: "0x4200000000000000000000000000000000000016"
  }
}, Id = {
  block: /* @__PURE__ */ Xw({
    format(A) {
      var I;
      return {
        transactions: (I = A.transactions) == null ? void 0 : I.map((B) => {
          if (typeof B == "string")
            return B;
          const Q = zw(B);
          return Q.typeHex === "0x7e" && (Q.isSystemTx = B.isSystemTx, Q.mint = B.mint ? he(B.mint) : void 0, Q.sourceHash = B.sourceHash, Q.type = "deposit"), Q;
        }),
        stateRoot: A.stateRoot
      };
    }
  }),
  transaction: /* @__PURE__ */ Vw({
    format(A) {
      const g = {};
      return A.type === "0x7e" && (g.isSystemTx = A.isSystemTx, g.mint = A.mint ? he(A.mint) : void 0, g.sourceHash = A.sourceHash, g.type = "deposit"), g;
    }
  }),
  transactionReceipt: /* @__PURE__ */ qw({
    format(A) {
      return {
        l1GasPrice: A.l1GasPrice ? he(A.l1GasPrice) : null,
        l1GasUsed: A.l1GasUsed ? he(A.l1GasUsed) : null,
        l1Fee: A.l1Fee ? he(A.l1Fee) : null,
        l1FeeScalar: A.l1FeeScalar ? Number(A.l1FeeScalar) : null
      };
    }
  })
};
function Qd(A, g) {
  return ed(A) ? Cd(A) : Pw(A, g);
}
const Ed = {
  transaction: Qd
};
function Cd(A) {
  td(A);
  const { sourceHash: g, data: I, from: B, gas: Q, isSystemTx: E, mint: C, to: o, value: t } = A, e = [
    g,
    B,
    o ?? "0x",
    C ? wo(C) : "0x",
    t ? wo(t) : "0x",
    Q ? wo(Q) : "0x",
    E ? "0x1" : "0x",
    I ?? "0x"
  ];
  return Ww([
    "0x7e",
    Ow(e)
  ]);
}
function ed(A) {
  return A.type === "deposit" || typeof A.sourceHash < "u";
}
function td(A) {
  const { from: g, to: I } = A;
  if (g && !$t(g))
    throw new Un({ address: g });
  if (I && !$t(I))
    throw new Un({ address: I });
}
const Yn = {
  contracts: Bd,
  formatters: Id,
  serializers: Ed
}, le = 11155111, Ai = /* @__PURE__ */ pr({
  ...Yn,
  id: 84532,
  network: "base-sepolia",
  name: "Base Sepolia",
  nativeCurrency: { name: "Sepolia Ether", symbol: "ETH", decimals: 18 },
  rpcUrls: {
    default: {
      http: ["https://sepolia.base.org"]
    }
  },
  blockExplorers: {
    default: {
      name: "Basescan",
      url: "https://sepolia.basescan.org",
      apiUrl: "https://api-sepolia.basescan.org/api"
    }
  },
  contracts: {
    ...Yn.contracts,
    disputeGameFactory: {
      [le]: {
        address: "0xd6E6dBf4F7EA0ac412fD8b65ED297e64BB7a06E1"
      }
    },
    l2OutputOracle: {
      [le]: {
        address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254"
      }
    },
    portal: {
      [le]: {
        address: "0x49f53e41452c74589e85ca1677426ba426459e85",
        blockCreated: 4446677
      }
    },
    l1StandardBridge: {
      [le]: {
        address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120",
        blockCreated: 4446677
      }
    },
    multicall3: {
      address: "0xca11bde05977b3631167028862be2a173976ca11",
      blockCreated: 1059647
    }
  },
  testnet: !0,
  sourceId: le
}), gi = /* @__PURE__ */ pr({
  id: 80002,
  name: "Polygon Amoy",
  nativeCurrency: { name: "MATIC", symbol: "MATIC", decimals: 18 },
  rpcUrls: {
    default: {
      http: ["https://rpc-amoy.polygon.technology"]
    }
  },
  blockExplorers: {
    default: {
      name: "PolygonScan",
      url: "https://amoy.polygonscan.com",
      apiUrl: "https://api-amoy.polygonscan.com/api"
    }
  },
  contracts: {
    multicall3: {
      address: "0xca11bde05977b3631167028862be2a173976ca11",
      blockCreated: 3127388
    }
  },
  testnet: !0
}), Jn = /* @__PURE__ */ pr({
  id: 11155111,
  name: "Sepolia",
  nativeCurrency: { name: "Sepolia Ether", symbol: "ETH", decimals: 18 },
  rpcUrls: {
    default: {
      http: ["https://rpc2.sepolia.org"]
    }
  },
  blockExplorers: {
    default: {
      name: "Etherscan",
      url: "https://sepolia.etherscan.io",
      apiUrl: "https://api-sepolia.etherscan.io/api"
    }
  },
  contracts: {
    multicall3: {
      address: "0xca11bde05977b3631167028862be2a173976ca11",
      blockCreated: 751532
    },
    ensRegistry: { address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e" },
    ensUniversalResolver: {
      address: "0xc8Af999e38273D658BE1b921b88A9Ddf005769cC",
      blockCreated: 5317080
    }
  },
  testnet: !0
});
class id extends Oe {
  constructor() {
    super({
      tokenType: VB.ETH,
      name: "Ethereum Sepolia",
      symbol: "SepoliaETH",
      decimals: 18,
      gasSymbol: VC.SepoliaETH,
      logo: "/imgs/logos/eth.png",
      color: "#3d7dc9",
      viemChain: Jn,
      publicClient: XC({
        chain: Jn,
        transport: zC("https://sepolia.infura.io/v3/ae9e8e14f6c34149bbd77db7b13b0679")
      }),
      scanTransactionUrl: "https://sepolia.etherscan.io/tx/"
    });
  }
  async getBalance(g) {
    const I = await this.publicClient.getBalance({
      address: g
    });
    return oE(I);
  }
  async getRecentTransactions(g) {
    const I = "https://api-sepolia.etherscan.io/api", Q = {
      apikey: "B5SAZ2TJCS8Z213CYTS3CS4DGNVTVWS9QI",
      module: "account",
      sort: "desc",
      page: 1,
      offset: 10
    };
    return (await iE.get(I, {
      params: {
        ...Q,
        action: "txlist",
        address: g,
        startblock: "0",
        endblock: "latest"
      }
    })).data.result;
  }
}
class od extends Oe {
  constructor() {
    super({
      tokenType: VB.MATIC,
      name: "Polygon Amoy",
      symbol: "POL",
      decimals: 18,
      gasSymbol: VC.POL,
      logo: "/imgs/logos/matic.png",
      color: "#c08fec",
      viemChain: gi,
      publicClient: XC({
        chain: gi,
        transport: zC("https://polygon-amoy.infura.io/v3/ae9e8e14f6c34149bbd77db7b13b0679")
      }),
      scanTransactionUrl: "https://amoy.polygonscan.com/tx/"
    });
  }
  async getBalance(g) {
    const I = await this.publicClient.getBalance({
      address: g
    });
    return oE(I);
  }
  async getRecentTransactions(g) {
    const I = "https://api-amoy.polygonscan.com/api", Q = {
      apikey: "FR9N1APH1EVF4MDQEUSMDBGZW522E8ES1I",
      module: "account",
      sort: "desc",
      page: 1,
      offset: 10
    };
    return (await iE.get(I, {
      params: {
        ...Q,
        action: "txlist",
        address: g,
        startblock: "0",
        endblock: "latest"
      }
    })).data.result;
  }
}
class ad extends Oe {
  constructor() {
    super({
      tokenType: VB.TVWT,
      name: "TheVastlinkToken",
      symbol: "TVWT",
      decimals: 18,
      gasSymbol: VC.POL,
      logo: "/imgs/logos/tvwt.png",
      color: "#52c41a",
      viemChain: gi,
      publicClient: XC({
        chain: gi,
        transport: zC("https://polygon-amoy.infura.io/v3/ae9e8e14f6c34149bbd77db7b13b0679")
      }),
      scanTransactionUrl: "https://amoy.polygonscan.com/tx/",
      contractAddress: "0x57518fb87f7972c27f4704d9f2de9fdc5d2c8b5e",
      contractAbi: Q0
    });
  }
  async getBalance(g) {
    const I = await this.publicClient.readContract({
      address: this.contractAddress,
      abi: this.contractAbi,
      functionName: "balanceOf",
      args: [g]
    });
    return oE(I);
  }
  async getRecentTransactions(g) {
    const I = "https://api-amoy.polygonscan.com/api", Q = {
      apikey: "FR9N1APH1EVF4MDQEUSMDBGZW522E8ES1I",
      module: "account",
      sort: "desc",
      page: 1,
      offset: 10
    };
    return (await iE.get(I, {
      params: {
        ...Q,
        action: "tokentx",
        address: g,
        contractaddress: "0x57518fb87f7972c27f4704d9f2de9fdc5d2c8b5e",
        startblock: "0",
        endblock: "latest"
      }
    })).data.result;
  }
}
class rd extends Oe {
  constructor() {
    super({
      tokenType: VB.VAST,
      name: "TheVastlinkToken",
      symbol: "VAST",
      decimals: 18,
      gasSymbol: VC.BaseSepoliaETH,
      logo: "/imgs/logos/tvwt.png",
      color: "#52c41a",
      viemChain: Ai,
      publicClient: XC({
        chain: Ai,
        transport: zC("https://base-sepolia.infura.io/v3/ae9e8e14f6c34149bbd77db7b13b0679")
      }),
      scanTransactionUrl: "https://sepolia.basescan.org/tx/",
      contractAddress: "0x4f86c33aE84c46972c2f7F8d33FAE3375F3E191b",
      contractAbi: jw,
      // kkktodo: add vast abi
      gasless: !0
    });
  }
  async getBalance(g) {
    const I = await this.publicClient.readContract({
      address: this.contractAddress,
      abi: this.contractAbi,
      functionName: "balanceOf",
      args: [g]
    });
    return oE(I);
  }
  async getRecentTransactions(g) {
    const I = "https://api-sepolia.basescan.org/api", Q = {
      apikey: "RGQ66MKA7BD483ZGG8ZDBFG6RD4UKZU9PS",
      module: "account",
      sort: "desc",
      page: 1,
      offset: 10
    };
    return (await iE.get(I, {
      params: {
        ...Q,
        action: "tokentx",
        address: g,
        contractaddress: "0x4f86c33aE84c46972c2f7F8d33FAE3375F3E191b",
        startblock: "0",
        endblock: "latest"
      }
    })).data.result;
  }
}
class sd extends Oe {
  constructor() {
    super({
      tokenType: VB.BASE_ETH,
      name: "Base Sepolia",
      symbol: "BaseSepoliaETH",
      decimals: 18,
      gasSymbol: VC.BaseSepoliaETH,
      logo: "/imgs/logos/eth.png",
      color: "#3d7dc9",
      viemChain: Ai,
      publicClient: XC({
        chain: Ai,
        transport: zC("https://base-sepolia.infura.io/v3/ae9e8e14f6c34149bbd77db7b13b0679")
      }),
      scanTransactionUrl: "https://sepolia.basescan.org/tx/"
    });
  }
  async getBalance(g) {
    const I = await this.publicClient.getBalance({
      address: g
    });
    return oE(I);
  }
  async getRecentTransactions(g) {
    const I = "https://api-sepolia.basescan.org/api", Q = {
      apikey: "RGQ66MKA7BD483ZGG8ZDBFG6RD4UKZU9PS",
      module: "account",
      sort: "desc",
      page: 1,
      offset: 10
    };
    return (await iE.get(I, {
      params: {
        ...Q,
        action: "txlist",
        address: g,
        startblock: "0",
        endblock: "latest"
      }
    })).data.result;
  }
}
const uE = class uE {
  constructor() {
    DA(this, "tokenMap");
    this.tokenMap = /* @__PURE__ */ new Map([
      [VB.ETH, new id()],
      [VB.BASE_ETH, new sd()],
      [VB.MATIC, new od()],
      [VB.TVWT, new ad()],
      [VB.VAST, new rd()]
    ]);
  }
  static getInstance() {
    return uE.instance || (uE.instance = new uE()), uE.instance;
  }
  getToken(g) {
    const I = this.tokenMap.get(g);
    if (!I)
      throw new Error(`Unsupported token type: ${g}`);
    return I;
  }
  getAllTokens() {
    return Array.from(this.tokenMap.values());
  }
  isNativeToken(g) {
    return g === VB.ETH || g === VB.BASE_ETH || g === VB.MATIC;
  }
  isERC20Token(g) {
    return g === VB.TVWT || g === VB.VAST;
  }
  createTokenMap(g) {
    return Array.from(this.tokenMap.entries()).reduce((I, [B, Q]) => (I[B] = g(Q), I), {});
  }
  getNativeTokenTypeByGasSymbol(g) {
    var B;
    return ((B = Array.from(this.tokenMap.values()).find((Q) => Q.gasSymbol === g && this.isNativeToken(Q.tokenType))) == null ? void 0 : B.tokenType) || null;
  }
};
DA(uE, "instance");
let Oo = uE;
const NB = Oo.getInstance();
Object.freeze(NB);
const SE = class SE {
  constructor() {
    DA(this, "tokenGetter", null);
  }
  static getInstance() {
    return SE.instance || (SE.instance = new SE()), SE.instance;
  }
  setTokenGetter(g) {
    this.tokenGetter = g;
  }
  async getToken() {
    if (!this.tokenGetter)
      throw new Error("Token getter not set. Please call setTokenGetter first.");
    return this.tokenGetter();
  }
};
DA(SE, "instance");
let jo = SE;
const E0 = jo.getInstance();
iE.defaults.withCredentials = !0;
const yB = iE.create({
  baseURL: "https://staging.api.vastlink.xyz",
  withCredentials: !0,
  headers: {
    "Content-Type": "application/json",
    "x-api-key": "YHBpDD+6hdItIfdEeAR3bjul5Tzn0+W6",
    "x-api-secret": "1Q8VubxTuhpsXXtF5XgddKGa0h7dgODMdpyf1yc+tb0="
  }
});
yB.interceptors.request.use(
  async (A) => {
    try {
      const g = await E0.getToken();
      console.log("token is", g), A.headers.Authorization = `Bearer ${g}`;
    } catch (g) {
      console.error("Error getting access token:", g);
    }
    return A;
  },
  (A) => Promise.reject(A)
);
yB.interceptors.response.use(
  (A) => A,
  async (A) => {
    var g, I;
    if (((g = A.response) == null ? void 0 : g.status) === 401 || ((I = A.response) == null ? void 0 : I.status) === 403) {
      const B = A.response.data.message || "Authentication error";
      console.log(`${B}, redirecting to login...`), fB.clearAllAuthData(), typeof window < "u" && (DI.error(B), console.warn("Router not set, falling back to window.location"), window.location.href = "/auth");
    }
    return Promise.reject(A);
  }
);
const nd = Q0, cd = (A) => A.replace(/\.?0+$/, ""), Ne = (A, g = 6) => parseFloat(A).toFixed(g), Dd = (A, g = 2) => {
  const B = (typeof A == "string" ? parseFloat(A) : A).toFixed(g), [Q, E] = B.split("."), C = Q.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  return E ? `${C}.${E}` : C;
};
async function hd({
  tokenType: A,
  transferParams: g,
  fromAddress: I,
  defaultGasPrice: B,
  defaultBlock: Q
}) {
  try {
    const E = NB.getToken(A).viemChain;
    if (!E) return null;
    if (NB.getToken(A).gasless)
      return {
        estimatedGas: BigInt(0),
        maxFeePerGas: BigInt(0),
        maxPriorityFeePerGas: BigInt(0),
        estimatedTotalFee: BigInt(0),
        baseFee: BigInt(0),
        gasPrice: BigInt(0),
        feeInTokens: "0"
      };
    const C = XC({
      chain: E,
      transport: zC()
    });
    let o;
    if (NB.isERC20Token(A) && (o = NB.getToken(A).contractAddress, !o))
      throw new Error("Invalid token contract address");
    let t;
    if (NB.isERC20Token(A)) {
      const e = _w({
        abi: nd,
        functionName: "transfer",
        args: [g.to, g.amount]
      });
      t = {
        to: o,
        data: e,
        value: BigInt(0)
      };
    } else
      t = {
        to: g.to,
        value: g.amount
      };
    try {
      const e = await C.estimateGas({
        ...t,
        account: I
      }), i = B || await C.getGasPrice(), r = (Q || await C.getBlock()).baseFeePerGas || BigInt(0), h = i > r ? i - r : BigInt(1e9), n = r + h * BigInt(2), l = e * n, y = Ne(
        (Number(l) / Math.pow(10, 18)).toString()
      );
      return {
        estimatedGas: e,
        maxFeePerGas: n,
        maxPriorityFeePerGas: h,
        estimatedTotalFee: l,
        baseFee: r,
        gasPrice: i,
        feeInTokens: y
      };
    } catch (e) {
      throw console.error("Gas estimation error:", e), e;
    }
  } catch (E) {
    throw console.error("Transaction error:", E), E;
  }
}
async function Ip(A, g, I = 18e4) {
  const B = Date.now(), Q = NB.getToken(g).publicClient;
  for (; ; )
    try {
      const E = await Q.getTransactionReceipt({ hash: A });
      if (E)
        return E;
      if (Date.now() - B > I)
        throw new Error("Transaction timeout");
      await new Promise((C) => setTimeout(C, 2e3));
    } catch (E) {
      if (console.error("Get transaction receipt error:", E), Date.now() - B > I)
        throw E;
      await new Promise((C) => setTimeout(C, 2e3));
    }
}
const Ln = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/, C0 = PA.env.NODE_ENV === "development", Qp = (A, g) => {
  const I = document.createElement("a");
  I.href = A, I.download = g, document.body.appendChild(I), I.click(), document.body.removeChild(I);
};
function vE(A) {
  if (iE.isAxiosError(A)) {
    const g = A;
    if (g.response) {
      const I = g.response.data;
      if (I && I.message) {
        const { errorType: B, message: Q } = I;
        if (B)
          return {
            message: Q,
            errorType: B
          };
      }
      return { message: I.message || `${g.message}` };
    } else
      return { message: `Request error: ${g.message}` };
  } else return A instanceof Error ? { message: A.message } : { message: "An unknown error occurred" };
}
const ld = 1e3 * 60 * 60 * 24, yd = 1e3 * 60 * 60 * 24, e0 = 1e3 * 60 * 60;
function t0(A, g = 5 * 60 * 1e3) {
  const I = Math.floor(Math.random() * g);
  return A + I;
}
function _o({
  iconSize: A = 20,
  address: g,
  className: I = "",
  iconClassName: B = "",
  ...Q
}) {
  const { t: E } = Hr();
  return /* @__PURE__ */ sA.jsx(xw, { text: g, onCopy: () => {
    DI.success(E("toastSuccess.copySuccess"), {
      autoClose: 1e3,
      hideProgressBar: !0
    });
  }, children: /* @__PURE__ */ sA.jsxs("span", { className: "flex text-primary items-start", children: [
    /* @__PURE__ */ sA.jsx("span", { ...Q, style: { wordBreak: "break-all", display: "block" }, className: "text-xs", children: /* @__PURE__ */ sA.jsx("span", { className: `text-primary ${I}`, children: g }) }),
    /* @__PURE__ */ sA.jsx(
      Sw,
      {
        className: `cursor-pointer hover:scale-105 ml-2 ${B}`,
        size: A
      }
    )
  ] }) });
}
const wd = Uw(
  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 px-4 py-3 rounded-full disabled:bg-[#f5f5f5] disabled:text-[#bdbdbd] disabled:border disabled:border-[#d7d7d7] disabled:cursor-not-allowed",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:opacity-80",
        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground disabled:bg-transparent disabled:text-[#bdbdbd] disabled:cursor-not-allowed",
        link: "text-primary underline-offset-4 hover:underline"
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), IE = IA.forwardRef(
  ({ className: A, variant: g, size: I, asChild: B = !1, ...Q }, E) => {
    const C = B ? nw : "button";
    return /* @__PURE__ */ sA.jsx(
      C,
      {
        className: Rg(wd({ variant: g, size: I, className: A })),
        ref: E,
        ...Q
      }
    );
  }
);
IE.displayName = "Button";
const Bi = IA.forwardRef(
  ({ className: A, type: g, ...I }, B) => /* @__PURE__ */ sA.jsx(
    "input",
    {
      type: g,
      className: Rg(
        "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-ring focus-visible:ring-offset-transparent disabled:cursor-not-allowed disabled:opacity-50",
        "focus-visible:border-foreground focus-visible:border-1 placeholder:text-gray-300",
        A
      ),
      ref: B,
      ...I
    }
  )
);
Bi.displayName = "Input";
function dd() {
  const [A, g] = IA.useState("/imgs/logos/logo.svg");
  return {
    logoPath: A
  };
}
function Fd({
  size: A = 32,
  className: g = ""
}) {
  const [I, B] = IA.useState("");
  return IA.useEffect(() => {
    const {
      username: Q
    } = fB.all();
    if (Q) {
      const E = Q.length > 0 ? Q[0] : "";
      B(E);
    }
  }, []), /* @__PURE__ */ sA.jsx(
    "div",
    {
      className: Rg(
        "bg-primary text-primary-foreground rounded-full flex items-center justify-center",
        `w-[${A}px] h-[${A}px]`,
        g
      ),
      children: /* @__PURE__ */ sA.jsx("div", { className: Rg(
        // 'flex items-center justify-center',
      ), children: I })
    }
  );
}
function Jr({
  size: A = 32,
  className: g,
  type: I = "spin",
  fullscreen: B = !1
}) {
  dd();
  const [Q, E] = IA.useState(!1);
  IA.useEffect(() => (E(!0), () => E(!1)), []);
  const t = I === "breathe" ? /* @__PURE__ */ sA.jsxs("div", { className: "flex items-center justify-center", children: [
    /* @__PURE__ */ sA.jsx(Fd, { className: Rg(
      "animate-[breathe_2s_cubic-bezier(0.4,0,0.6,1)_infinite]"
    ) }),
    /* @__PURE__ */ sA.jsx("style", { children: `
          @keyframes breathe {
            0%, 100% {
              opacity: 0.2;
              transform: scale(0.9);
            }
            20% {
              opacity: 1;
              transform: scale(1.1);
            }
            30% {
              opacity: 0.9;
              transform: scale(1.05);
            }
            50% {
              opacity: 0.5;
              transform: scale(0.95);
            }
            70% {
              opacity: 0.8;
              transform: scale(1.03);
            }
          }
        ` })
  ] }) : /* @__PURE__ */ sA.jsx("div", { className: Rg(
    "text-brand-foreground",
    g
  ), children: /* @__PURE__ */ sA.jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      width: A,
      height: A,
      className: "shape-rendering-auto block",
      children: /* @__PURE__ */ sA.jsx("g", { children: /* @__PURE__ */ sA.jsx(
        "circle",
        {
          strokeLinecap: "round",
          fill: "none",
          strokeDasharray: "50.26548245743669 50.26548245743669",
          stroke: "currentColor",
          strokeWidth: "8",
          r: "32",
          cy: "50",
          cx: "50",
          children: /* @__PURE__ */ sA.jsx(
            "animateTransform",
            {
              values: "0 50 50;360 50 50",
              keyTimes: "0;1",
              dur: "1s",
              repeatCount: "indefinite",
              type: "rotate",
              attributeName: "transform"
            }
          )
        }
      ) })
    }
  ) });
  return B && Q ? ur.createPortal(
    /* @__PURE__ */ sA.jsx("div", { className: "fixed inset-0 flex items-center justify-center bg-primary-foreground/80 z-[2147483646]", children: t }),
    document.body
  ) : t;
}
const i0 = IA.forwardRef(
  ({ className: A, ...g }, I) => /* @__PURE__ */ sA.jsx(
    "textarea",
    {
      className: Rg(
        "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        A
      ),
      ref: I,
      ...g
    }
  )
);
i0.displayName = "Textarea";
var o0 = /* @__PURE__ */ ((A) => (A.PURCHASE = "PURCHASE", A.SELL = "SELL", A.TRANSFER = "TRANSFER", A.SWAP = "SWAP", A.INVITE_TRANSFER = "INVITE_TRANSFER", A))(o0 || {}), KC = /* @__PURE__ */ ((A) => (A.PASSPORT = "PASSPORT", A.WEB3AUTH_WITH_MPC = "WEB3AUTH_WITH_MPC", A.FIREBLOCKS = "FIREBLOCKS", A))(KC || {});
class Ri {
  constructor(g) {
    DA(this, "config");
    if (this.constructor === Ri)
      throw new Error("Abstract classes can't be instantiated.");
    this.config = g;
  }
}
class Rd extends Ri {
  constructor() {
    super({
      serviceType: KC.WEB3AUTH_WITH_MPC
    });
    DA(this, "coreKitInstance");
  }
  async init() {
  }
  async signUp({
    username: I
  }) {
    const { data: B } = await yB.post("/keymanagement/signup", {
      username: I
    }), { address: Q, displayName: E } = B;
    fB.saveAuthDataByKey("address", Q), fB.saveAuthDataByKey("username", I), E ? fB.saveAuthDataByKey("displayName", E) : fB.removeAuthDataByKey("displayName");
  }
  async signIn({ authUsername: I }) {
    const { data: B } = await yB.post("/keymanagement/signin", {
      username: I
    }), { address: Q, displayName: E } = B;
    fB.saveAuthDataByKey("address", Q), fB.saveAuthDataByKey("username", I), E ? fB.saveAuthDataByKey("displayName", E) : fB.removeAuthDataByKey("displayName");
  }
  async signTransaction({
    toAddress: I,
    amount: B,
    token: Q,
    note: E,
    transactionType: C
  }) {
    const { data: {
      success: o,
      needOtp: t,
      hash: e,
      message: i,
      transactionId: a,
      relayerTransactionId: r,
      // not used
      transactionPayload: h,
      userEmail: n,
      toEmail: l
    } } = await yB.post("/transaction/sign", {
      from: fB.all().address,
      to: I,
      amount: B,
      token: Q,
      note: E,
      transactionType: C
    });
    return {
      success: o,
      needOtp: t,
      hash: e,
      message: i,
      transactionId: a,
      relayerTransactionId: r
    };
  }
  async signTransactionWithOTP({
    transactionId: I,
    otp: B
  }) {
    const { data: {
      token: Q,
      hash: E,
      // not used
      transactionPayload: C,
      userEmail: o,
      toEmail: t,
      note: e,
      transactionType: i
    } } = await yB.post("/transaction/verify-to-sign", {
      transactionId: I,
      OTP: B
    });
    return {
      success: !0,
      hash: E,
      token: Q
    };
  }
  async waitForTransactionReceipt(I, B) {
    return await NB.getToken(B).publicClient.waitForTransactionReceipt({
      hash: I
    });
  }
  async test() {
    await yB.post("/keymanagement/test-mpc");
  }
  async generateMPCKeys() {
    throw new Error("Method not implemented.");
  }
}
const a0 = "DEMO_APP:deviceId", fd = () => crypto.randomUUID(), Gd = (A) => localStorage.getItem(`${a0}-${A}`), Kn = (A) => {
  const g = Gd(A);
  if (g)
    return g;
  const I = fd();
  return Md(I, A), I;
}, Md = (A, g) => {
  localStorage.setItem(`${a0}-${g}`, A);
};
var r0 = { 925: (A, g, I) => {
  var B = I(832);
  function Q(y, N) {
    B.cipher.registerAlgorithm(y, function() {
      return new B.aes.Algorithm(y, N);
    });
  }
  I(649), I(967), I(116), A.exports = B.aes = B.aes || {}, B.aes.startEncrypting = function(y, N, s, F) {
    var u = l({ key: y, output: s, decrypt: !1, mode: F });
    return u.start(N), u;
  }, B.aes.createEncryptionCipher = function(y, N) {
    return l({ key: y, output: null, decrypt: !1, mode: N });
  }, B.aes.startDecrypting = function(y, N, s, F) {
    var u = l({ key: y, output: s, decrypt: !0, mode: F });
    return u.start(N), u;
  }, B.aes.createDecryptionCipher = function(y, N) {
    return l({ key: y, output: null, decrypt: !0, mode: N });
  }, B.aes.Algorithm = function(y, N) {
    i || r();
    var s = this;
    s.name = y, s.mode = new N({ blockSize: 16, cipher: { encrypt: function(F, u) {
      return n(s._w, F, u, !1);
    }, decrypt: function(F, u) {
      return n(s._w, F, u, !0);
    } } }), s._init = !1;
  }, B.aes.Algorithm.prototype.initialize = function(y) {
    if (!this._init) {
      var N, s = y.key;
      if (typeof s != "string" || s.length !== 16 && s.length !== 24 && s.length !== 32) {
        if (B.util.isArray(s) && (s.length === 16 || s.length === 24 || s.length === 32)) {
          N = s, s = B.util.createBuffer();
          for (var F = 0; F < N.length; ++F) s.putByte(N[F]);
        }
      } else s = B.util.createBuffer(s);
      if (!B.util.isArray(s)) {
        N = s, s = [];
        var u = N.length();
        if (u === 16 || u === 24 || u === 32) for (u >>>= 2, F = 0; F < u; ++F) s.push(N.getInt32());
      }
      if (!B.util.isArray(s) || s.length !== 4 && s.length !== 6 && s.length !== 8) throw new Error("Invalid key parameter.");
      var U = this.mode.name, J = ["CFB", "OFB", "CTR", "GCM"].indexOf(U) !== -1;
      this._w = h(s, y.decrypt && !J), this._init = !0;
    }
  }, B.aes._expandKey = function(y, N) {
    return i || r(), h(y, N);
  }, B.aes._updateBlock = n, Q("AES-ECB", B.cipher.modes.ecb), Q("AES-CBC", B.cipher.modes.cbc), Q("AES-CFB", B.cipher.modes.cfb), Q("AES-OFB", B.cipher.modes.ofb), Q("AES-CTR", B.cipher.modes.ctr), Q("AES-GCM", B.cipher.modes.gcm);
  var E, C, o, t, e, i = !1, a = 4;
  function r() {
    i = !0, o = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
    for (var y = new Array(256), N = 0; N < 128; ++N) y[N] = N << 1, y[N + 128] = N + 128 << 1 ^ 283;
    for (E = new Array(256), C = new Array(256), t = new Array(4), e = new Array(4), N = 0; N < 4; ++N) t[N] = new Array(256), e[N] = new Array(256);
    var s, F, u, U, J, L, f, d = 0, p = 0;
    for (N = 0; N < 256; ++N) {
      U = (U = p ^ p << 1 ^ p << 2 ^ p << 3 ^ p << 4) >> 8 ^ 255 & U ^ 99, E[d] = U, C[U] = d, L = (J = y[U]) << 24 ^ U << 16 ^ U << 8 ^ U ^ J, f = ((s = y[d]) ^ (F = y[s]) ^ (u = y[F])) << 24 ^ (d ^ u) << 16 ^ (d ^ F ^ u) << 8 ^ d ^ s ^ u;
      for (var x = 0; x < 4; ++x) t[x][d] = L, e[x][U] = f, L = L << 24 | L >>> 8, f = f << 24 | f >>> 8;
      d === 0 ? d = p = 1 : (d = s ^ y[y[y[s ^ u]]], p ^= y[y[p]]);
    }
  }
  function h(y, N) {
    for (var s, F = y.slice(0), u = 1, U = F.length, J = a * (U + 6 + 1), L = U; L < J; ++L) s = F[L - 1], L % U == 0 ? (s = E[s >>> 16 & 255] << 24 ^ E[s >>> 8 & 255] << 16 ^ E[255 & s] << 8 ^ E[s >>> 24] ^ o[u] << 24, u++) : U > 6 && L % U == 4 && (s = E[s >>> 24] << 24 ^ E[s >>> 16 & 255] << 16 ^ E[s >>> 8 & 255] << 8 ^ E[255 & s]), F[L] = F[L - U] ^ s;
    if (N) {
      for (var f, d = e[0], p = e[1], x = e[2], M = e[3], S = F.slice(0), k = (L = 0, (J = F.length) - a); L < J; L += a, k -= a) if (L === 0 || L === J - a) S[L] = F[k], S[L + 1] = F[k + 3], S[L + 2] = F[k + 2], S[L + 3] = F[k + 1];
      else for (var v = 0; v < a; ++v) f = F[k + v], S[L + (3 & -v)] = d[E[f >>> 24]] ^ p[E[f >>> 16 & 255]] ^ x[E[f >>> 8 & 255]] ^ M[E[255 & f]];
      F = S;
    }
    return F;
  }
  function n(y, N, s, F) {
    var u, U, J, L, f, d, p, x, M, S, k, v, m = y.length / 4 - 1;
    F ? (u = e[0], U = e[1], J = e[2], L = e[3], f = C) : (u = t[0], U = t[1], J = t[2], L = t[3], f = E), d = N[0] ^ y[0], p = N[F ? 3 : 1] ^ y[1], x = N[2] ^ y[2], M = N[F ? 1 : 3] ^ y[3];
    for (var T = 3, $ = 1; $ < m; ++$) S = u[d >>> 24] ^ U[p >>> 16 & 255] ^ J[x >>> 8 & 255] ^ L[255 & M] ^ y[++T], k = u[p >>> 24] ^ U[x >>> 16 & 255] ^ J[M >>> 8 & 255] ^ L[255 & d] ^ y[++T], v = u[x >>> 24] ^ U[M >>> 16 & 255] ^ J[d >>> 8 & 255] ^ L[255 & p] ^ y[++T], M = u[M >>> 24] ^ U[d >>> 16 & 255] ^ J[p >>> 8 & 255] ^ L[255 & x] ^ y[++T], d = S, p = k, x = v;
    s[0] = f[d >>> 24] << 24 ^ f[p >>> 16 & 255] << 16 ^ f[x >>> 8 & 255] << 8 ^ f[255 & M] ^ y[++T], s[F ? 3 : 1] = f[p >>> 24] << 24 ^ f[x >>> 16 & 255] << 16 ^ f[M >>> 8 & 255] << 8 ^ f[255 & d] ^ y[++T], s[2] = f[x >>> 24] << 24 ^ f[M >>> 16 & 255] << 16 ^ f[d >>> 8 & 255] << 8 ^ f[255 & p] ^ y[++T], s[F ? 1 : 3] = f[M >>> 24] << 24 ^ f[d >>> 16 & 255] << 16 ^ f[p >>> 8 & 255] << 8 ^ f[255 & x] ^ y[++T];
  }
  function l(y) {
    var N, s = "AES-" + ((y = y || {}).mode || "CBC").toUpperCase(), F = (N = y.decrypt ? B.cipher.createDecipher(s, y.key) : B.cipher.createCipher(s, y.key)).start;
    return N.start = function(u, U) {
      var J = null;
      U instanceof B.util.ByteBuffer && (J = U, U = {}), (U = U || {}).output = J, U.iv = u, F.call(N, U);
    }, N;
  }
}, 164: (A, g, I) => {
  var B = I(832);
  I(925), I(311);
  var Q = A.exports = B.tls;
  function E(i, a, r) {
    var h = a.entity === B.tls.ConnectionEnd.client;
    i.read.cipherState = { init: !1, cipher: B.cipher.createDecipher("AES-CBC", h ? r.keys.server_write_key : r.keys.client_write_key), iv: h ? r.keys.server_write_IV : r.keys.client_write_IV }, i.write.cipherState = { init: !1, cipher: B.cipher.createCipher("AES-CBC", h ? r.keys.client_write_key : r.keys.server_write_key), iv: h ? r.keys.client_write_IV : r.keys.server_write_IV }, i.read.cipherFunction = e, i.write.cipherFunction = C, i.read.macLength = i.write.macLength = r.mac_length, i.read.macFunction = i.write.macFunction = Q.hmac_sha1;
  }
  function C(i, a) {
    var r, h = !1, n = a.macFunction(a.macKey, a.sequenceNumber, i);
    i.fragment.putBytes(n), a.updateSequenceNumber(), r = i.version.minor === Q.Versions.TLS_1_0.minor ? a.cipherState.init ? null : a.cipherState.iv : B.random.getBytesSync(16), a.cipherState.init = !0;
    var l = a.cipherState.cipher;
    return l.start({ iv: r }), i.version.minor >= Q.Versions.TLS_1_1.minor && l.output.putBytes(r), l.update(i.fragment), l.finish(o) && (i.fragment = l.output, i.length = i.fragment.length(), h = !0), h;
  }
  function o(i, a, r) {
    if (!r) {
      var h = i - a.length() % i;
      a.fillWithByte(h - 1, h);
    }
    return !0;
  }
  function t(i, a, r) {
    var h = !0;
    if (r) {
      for (var n = a.length(), l = a.last(), y = n - 1 - l; y < n - 1; ++y) h = h && a.at(y) == l;
      h && a.truncate(l + 1);
    }
    return h;
  }
  function e(i, a) {
    var r, h = !1;
    r = i.version.minor === Q.Versions.TLS_1_0.minor ? a.cipherState.init ? null : a.cipherState.iv : i.fragment.getBytes(16), a.cipherState.init = !0;
    var n = a.cipherState.cipher;
    n.start({ iv: r }), n.update(i.fragment), h = n.finish(t);
    var l = a.macLength, y = B.random.getBytesSync(l), N = n.output.length();
    N >= l ? (i.fragment = n.output.getBytes(N - l), y = n.output.getBytes(l)) : i.fragment = n.output.getBytes(), i.fragment = B.util.createBuffer(i.fragment), i.length = i.fragment.length();
    var s = a.macFunction(a.macKey, a.sequenceNumber, i);
    return a.updateSequenceNumber(), h = function(F, u, U) {
      var J = B.hmac.create();
      return J.start("SHA1", F), J.update(u), u = J.digest().getBytes(), J.start(null, null), J.update(U), u === (U = J.digest().getBytes());
    }(a.macKey, y, s) && h, h;
  }
  Q.CipherSuites.TLS_RSA_WITH_AES_128_CBC_SHA = { id: [0, 47], name: "TLS_RSA_WITH_AES_128_CBC_SHA", initSecurityParameters: function(i) {
    i.bulk_cipher_algorithm = Q.BulkCipherAlgorithm.aes, i.cipher_type = Q.CipherType.block, i.enc_key_length = 16, i.block_length = 16, i.fixed_iv_length = 16, i.record_iv_length = 16, i.mac_algorithm = Q.MACAlgorithm.hmac_sha1, i.mac_length = 20, i.mac_key_length = 20;
  }, initConnectionState: E }, Q.CipherSuites.TLS_RSA_WITH_AES_256_CBC_SHA = { id: [0, 53], name: "TLS_RSA_WITH_AES_256_CBC_SHA", initSecurityParameters: function(i) {
    i.bulk_cipher_algorithm = Q.BulkCipherAlgorithm.aes, i.cipher_type = Q.CipherType.block, i.enc_key_length = 32, i.block_length = 16, i.fixed_iv_length = 16, i.record_iv_length = 16, i.mac_algorithm = Q.MACAlgorithm.hmac_sha1, i.mac_length = 20, i.mac_key_length = 20;
  }, initConnectionState: E };
}, 205: (A, g, I) => {
  var B = I(832);
  I(68);
  var Q = B.asn1;
  g.privateKeyValidator = { name: "PrivateKeyInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "PrivateKeyInfo.version", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "privateKeyVersion" }, { name: "PrivateKeyInfo.privateKeyAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "AlgorithmIdentifier.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "privateKeyOid" }] }, { name: "PrivateKeyInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OCTETSTRING, constructed: !1, capture: "privateKey" }] }, g.publicKeyValidator = { name: "SubjectPublicKeyInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "subjectPublicKeyInfo", value: [{ name: "SubjectPublicKeyInfo.AlgorithmIdentifier", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "AlgorithmIdentifier.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "publicKeyOid" }] }, { tagClass: Q.Class.UNIVERSAL, type: Q.Type.BITSTRING, constructed: !1, composed: !0, captureBitStringValue: "ed25519PublicKey" }] };
}, 68: (A, g, I) => {
  var B = I(832);
  I(116), I(270);
  var Q = A.exports = B.asn1 = B.asn1 || {};
  function E(t, e, i) {
    if (i > e) {
      var a = new Error("Too few bytes to parse DER.");
      throw a.available = t.length(), a.remaining = e, a.requested = i, a;
    }
  }
  function C(t, e, i, a) {
    var r;
    E(t, e, 2);
    var h = t.getByte();
    e--;
    var n = 192 & h, l = 31 & h;
    r = t.length();
    var y, N, s = function(M, S) {
      var k = M.getByte();
      if (S--, k !== 128) {
        var v;
        if (128 & k) {
          var m = 127 & k;
          E(M, S, m), v = M.getInt(m << 3);
        } else v = k;
        if (v < 0) throw new Error("Negative length: " + v);
        return v;
      }
    }(t, e);
    if (e -= r - t.length(), s !== void 0 && s > e) {
      if (a.strict) {
        var F = new Error("Too few bytes to read ASN.1 value.");
        throw F.available = t.length(), F.remaining = e, F.requested = s, F;
      }
      s = e;
    }
    var u = (32 & h) == 32;
    if (u) if (y = [], s === void 0) for (; ; ) {
      if (E(t, e, 2), t.bytes(2) === "\0\0") {
        t.getBytes(2), e -= 2;
        break;
      }
      r = t.length(), y.push(C(t, e, i + 1, a)), e -= r - t.length();
    }
    else for (; s > 0; ) r = t.length(), y.push(C(t, s, i + 1, a)), e -= r - t.length(), s -= r - t.length();
    if (y === void 0 && n === Q.Class.UNIVERSAL && l === Q.Type.BITSTRING && (N = t.bytes(s)), y === void 0 && a.decodeBitStrings && n === Q.Class.UNIVERSAL && l === Q.Type.BITSTRING && s > 1) {
      var U = t.read, J = e, L = 0;
      if (l === Q.Type.BITSTRING && (E(t, e, 1), L = t.getByte(), e--), L === 0) try {
        r = t.length();
        var f = C(t, e, i + 1, { strict: !0, decodeBitStrings: !0 }), d = r - t.length();
        e -= d, l == Q.Type.BITSTRING && d++;
        var p = f.tagClass;
        d !== s || p !== Q.Class.UNIVERSAL && p !== Q.Class.CONTEXT_SPECIFIC || (y = [f]);
      } catch {
      }
      y === void 0 && (t.read = U, e = J);
    }
    if (y === void 0) {
      if (s === void 0) {
        if (a.strict) throw new Error("Non-constructed ASN.1 object of indefinite length.");
        s = e;
      }
      if (l === Q.Type.BMPSTRING) for (y = ""; s > 0; s -= 2) E(t, e, 2), y += String.fromCharCode(t.getInt16()), e -= 2;
      else y = t.getBytes(s), e -= s;
    }
    var x = N === void 0 ? null : { bitStringContents: N };
    return Q.create(n, l, u, y, x);
  }
  Q.Class = { UNIVERSAL: 0, APPLICATION: 64, CONTEXT_SPECIFIC: 128, PRIVATE: 192 }, Q.Type = { NONE: 0, BOOLEAN: 1, INTEGER: 2, BITSTRING: 3, OCTETSTRING: 4, NULL: 5, OID: 6, ODESC: 7, EXTERNAL: 8, REAL: 9, ENUMERATED: 10, EMBEDDED: 11, UTF8: 12, ROID: 13, SEQUENCE: 16, SET: 17, PRINTABLESTRING: 19, IA5STRING: 22, UTCTIME: 23, GENERALIZEDTIME: 24, BMPSTRING: 30 }, Q.create = function(t, e, i, a, r) {
    if (B.util.isArray(a)) {
      for (var h = [], n = 0; n < a.length; ++n) a[n] !== void 0 && h.push(a[n]);
      a = h;
    }
    var l = { tagClass: t, type: e, constructed: i, composed: i || B.util.isArray(a), value: a };
    return r && "bitStringContents" in r && (l.bitStringContents = r.bitStringContents, l.original = Q.copy(l)), l;
  }, Q.copy = function(t, e) {
    var i;
    if (B.util.isArray(t)) {
      i = [];
      for (var a = 0; a < t.length; ++a) i.push(Q.copy(t[a], e));
      return i;
    }
    return typeof t == "string" ? t : (i = { tagClass: t.tagClass, type: t.type, constructed: t.constructed, composed: t.composed, value: Q.copy(t.value, e) }, e && !e.excludeBitStringContents && (i.bitStringContents = t.bitStringContents), i);
  }, Q.equals = function(t, e, i) {
    if (B.util.isArray(t)) {
      if (!B.util.isArray(e) || t.length !== e.length) return !1;
      for (var a = 0; a < t.length; ++a) if (!Q.equals(t[a], e[a])) return !1;
      return !0;
    }
    if (typeof t != typeof e) return !1;
    if (typeof t == "string") return t === e;
    var r = t.tagClass === e.tagClass && t.type === e.type && t.constructed === e.constructed && t.composed === e.composed && Q.equals(t.value, e.value);
    return i && i.includeBitStringContents && (r = r && t.bitStringContents === e.bitStringContents), r;
  }, Q.getBerValueLength = function(t) {
    var e = t.getByte();
    if (e !== 128) return 128 & e ? t.getInt((127 & e) << 3) : e;
  }, Q.fromDer = function(t, e) {
    e === void 0 && (e = { strict: !0, parseAllBytes: !0, decodeBitStrings: !0 }), typeof e == "boolean" && (e = { strict: e, parseAllBytes: !0, decodeBitStrings: !0 }), "strict" in e || (e.strict = !0), "parseAllBytes" in e || (e.parseAllBytes = !0), "decodeBitStrings" in e || (e.decodeBitStrings = !0), typeof t == "string" && (t = B.util.createBuffer(t));
    var i = t.length(), a = C(t, t.length(), 0, e);
    if (e.parseAllBytes && t.length() !== 0) {
      var r = new Error("Unparsed DER bytes remain after ASN.1 parsing.");
      throw r.byteCount = i, r.remaining = t.length(), r;
    }
    return a;
  }, Q.toDer = function(t) {
    var e = B.util.createBuffer(), i = t.tagClass | t.type, a = B.util.createBuffer(), r = !1;
    if ("bitStringContents" in t && (r = !0, t.original && (r = Q.equals(t, t.original))), r) a.putBytes(t.bitStringContents);
    else if (t.composed) {
      t.constructed ? i |= 32 : a.putByte(0);
      for (var h = 0; h < t.value.length; ++h) t.value[h] !== void 0 && a.putBuffer(Q.toDer(t.value[h]));
    } else if (t.type === Q.Type.BMPSTRING) for (h = 0; h < t.value.length; ++h) a.putInt16(t.value.charCodeAt(h));
    else t.type === Q.Type.INTEGER && t.value.length > 1 && (t.value.charCodeAt(0) === 0 && !(128 & t.value.charCodeAt(1)) || t.value.charCodeAt(0) === 255 && (128 & t.value.charCodeAt(1)) == 128) ? a.putBytes(t.value.substr(1)) : a.putBytes(t.value);
    if (e.putByte(i), a.length() <= 127) e.putByte(127 & a.length());
    else {
      var n = a.length(), l = "";
      do
        l += String.fromCharCode(255 & n), n >>>= 8;
      while (n > 0);
      for (e.putByte(128 | l.length), h = l.length - 1; h >= 0; --h) e.putByte(l.charCodeAt(h));
    }
    return e.putBuffer(a), e;
  }, Q.oidToDer = function(t) {
    var e, i, a, r, h = t.split("."), n = B.util.createBuffer();
    n.putByte(40 * parseInt(h[0], 10) + parseInt(h[1], 10));
    for (var l = 2; l < h.length; ++l) {
      e = !0, i = [], a = parseInt(h[l], 10);
      do
        r = 127 & a, a >>>= 7, e || (r |= 128), i.push(r), e = !1;
      while (a > 0);
      for (var y = i.length - 1; y >= 0; --y) n.putByte(i[y]);
    }
    return n;
  }, Q.derToOid = function(t) {
    var e;
    typeof t == "string" && (t = B.util.createBuffer(t));
    var i = t.getByte();
    e = Math.floor(i / 40) + "." + i % 40;
    for (var a = 0; t.length() > 0; ) a <<= 7, 128 & (i = t.getByte()) ? a += 127 & i : (e += "." + (a + i), a = 0);
    return e;
  }, Q.utcTimeToDate = function(t) {
    var e = /* @__PURE__ */ new Date(), i = parseInt(t.substr(0, 2), 10);
    i = i >= 50 ? 1900 + i : 2e3 + i;
    var a = parseInt(t.substr(2, 2), 10) - 1, r = parseInt(t.substr(4, 2), 10), h = parseInt(t.substr(6, 2), 10), n = parseInt(t.substr(8, 2), 10), l = 0;
    if (t.length > 11) {
      var y = t.charAt(10), N = 10;
      y !== "+" && y !== "-" && (l = parseInt(t.substr(10, 2), 10), N += 2);
    }
    if (e.setUTCFullYear(i, a, r), e.setUTCHours(h, n, l, 0), N && ((y = t.charAt(N)) === "+" || y === "-")) {
      var s = 60 * parseInt(t.substr(N + 1, 2), 10) + parseInt(t.substr(N + 4, 2), 10);
      s *= 6e4, y === "+" ? e.setTime(+e - s) : e.setTime(+e + s);
    }
    return e;
  }, Q.generalizedTimeToDate = function(t) {
    var e = /* @__PURE__ */ new Date(), i = parseInt(t.substr(0, 4), 10), a = parseInt(t.substr(4, 2), 10) - 1, r = parseInt(t.substr(6, 2), 10), h = parseInt(t.substr(8, 2), 10), n = parseInt(t.substr(10, 2), 10), l = parseInt(t.substr(12, 2), 10), y = 0, N = 0, s = !1;
    t.charAt(t.length - 1) === "Z" && (s = !0);
    var F = t.length - 5, u = t.charAt(F);
    return u !== "+" && u !== "-" || (N = 60 * parseInt(t.substr(F + 1, 2), 10) + parseInt(t.substr(F + 4, 2), 10), N *= 6e4, u === "+" && (N *= -1), s = !0), t.charAt(14) === "." && (y = 1e3 * parseFloat(t.substr(14), 10)), s ? (e.setUTCFullYear(i, a, r), e.setUTCHours(h, n, l, y), e.setTime(+e + N)) : (e.setFullYear(i, a, r), e.setHours(h, n, l, y)), e;
  }, Q.dateToUtcTime = function(t) {
    if (typeof t == "string") return t;
    var e = "", i = [];
    i.push(("" + t.getUTCFullYear()).substr(2)), i.push("" + (t.getUTCMonth() + 1)), i.push("" + t.getUTCDate()), i.push("" + t.getUTCHours()), i.push("" + t.getUTCMinutes()), i.push("" + t.getUTCSeconds());
    for (var a = 0; a < i.length; ++a) i[a].length < 2 && (e += "0"), e += i[a];
    return e + "Z";
  }, Q.dateToGeneralizedTime = function(t) {
    if (typeof t == "string") return t;
    var e = "", i = [];
    i.push("" + t.getUTCFullYear()), i.push("" + (t.getUTCMonth() + 1)), i.push("" + t.getUTCDate()), i.push("" + t.getUTCHours()), i.push("" + t.getUTCMinutes()), i.push("" + t.getUTCSeconds());
    for (var a = 0; a < i.length; ++a) i[a].length < 2 && (e += "0"), e += i[a];
    return e + "Z";
  }, Q.integerToDer = function(t) {
    var e = B.util.createBuffer();
    if (t >= -128 && t < 128) return e.putSignedInt(t, 8);
    if (t >= -32768 && t < 32768) return e.putSignedInt(t, 16);
    if (t >= -8388608 && t < 8388608) return e.putSignedInt(t, 24);
    if (t >= -2147483648 && t < 2147483648) return e.putSignedInt(t, 32);
    var i = new Error("Integer too large; max is 32-bits.");
    throw i.integer = t, i;
  }, Q.derToInteger = function(t) {
    typeof t == "string" && (t = B.util.createBuffer(t));
    var e = 8 * t.length();
    if (e > 32) throw new Error("Integer too large; max is 32-bits.");
    return t.getSignedInt(e);
  }, Q.validate = function(t, e, i, a) {
    var r = !1;
    if (t.tagClass !== e.tagClass && e.tagClass !== void 0 || t.type !== e.type && e.type !== void 0) a && (t.tagClass !== e.tagClass && a.push("[" + e.name + '] Expected tag class "' + e.tagClass + '", got "' + t.tagClass + '"'), t.type !== e.type && a.push("[" + e.name + '] Expected type "' + e.type + '", got "' + t.type + '"'));
    else if (t.constructed === e.constructed || e.constructed === void 0) {
      if (r = !0, e.value && B.util.isArray(e.value)) for (var h = 0, n = 0; r && n < e.value.length; ++n) r = e.value[n].optional || !1, t.value[h] && ((r = Q.validate(t.value[h], e.value[n], i, a)) ? ++h : e.value[n].optional && (r = !0)), !r && a && a.push("[" + e.name + '] Tag class "' + e.tagClass + '", type "' + e.type + '" expected value length "' + e.value.length + '", got "' + t.value.length + '"');
      if (r && i && (e.capture && (i[e.capture] = t.value), e.captureAsn1 && (i[e.captureAsn1] = t), e.captureBitStringContents && "bitStringContents" in t && (i[e.captureBitStringContents] = t.bitStringContents), e.captureBitStringValue && "bitStringContents" in t)) if (t.bitStringContents.length < 2) i[e.captureBitStringValue] = "";
      else {
        if (t.bitStringContents.charCodeAt(0) !== 0) throw new Error("captureBitStringValue only supported for zero unused bits");
        i[e.captureBitStringValue] = t.bitStringContents.slice(1);
      }
    } else a && a.push("[" + e.name + '] Expected constructed "' + e.constructed + '", got "' + t.constructed + '"');
    return r;
  };
  var o = /[^\\u0000-\\u00ff]/;
  Q.prettyPrint = function(t, e, i) {
    var a = "";
    i = i || 2, (e = e || 0) > 0 && (a += `
`);
    for (var r = "", h = 0; h < e * i; ++h) r += " ";
    switch (a += r + "Tag: ", t.tagClass) {
      case Q.Class.UNIVERSAL:
        a += "Universal:";
        break;
      case Q.Class.APPLICATION:
        a += "Application:";
        break;
      case Q.Class.CONTEXT_SPECIFIC:
        a += "Context-Specific:";
        break;
      case Q.Class.PRIVATE:
        a += "Private:";
    }
    if (t.tagClass === Q.Class.UNIVERSAL) switch (a += t.type, t.type) {
      case Q.Type.NONE:
        a += " (None)";
        break;
      case Q.Type.BOOLEAN:
        a += " (Boolean)";
        break;
      case Q.Type.INTEGER:
        a += " (Integer)";
        break;
      case Q.Type.BITSTRING:
        a += " (Bit string)";
        break;
      case Q.Type.OCTETSTRING:
        a += " (Octet string)";
        break;
      case Q.Type.NULL:
        a += " (Null)";
        break;
      case Q.Type.OID:
        a += " (Object Identifier)";
        break;
      case Q.Type.ODESC:
        a += " (Object Descriptor)";
        break;
      case Q.Type.EXTERNAL:
        a += " (External or Instance of)";
        break;
      case Q.Type.REAL:
        a += " (Real)";
        break;
      case Q.Type.ENUMERATED:
        a += " (Enumerated)";
        break;
      case Q.Type.EMBEDDED:
        a += " (Embedded PDV)";
        break;
      case Q.Type.UTF8:
        a += " (UTF8)";
        break;
      case Q.Type.ROID:
        a += " (Relative Object Identifier)";
        break;
      case Q.Type.SEQUENCE:
        a += " (Sequence)";
        break;
      case Q.Type.SET:
        a += " (Set)";
        break;
      case Q.Type.PRINTABLESTRING:
        a += " (Printable String)";
        break;
      case Q.Type.IA5String:
        a += " (IA5String (ASCII))";
        break;
      case Q.Type.UTCTIME:
        a += " (UTC time)";
        break;
      case Q.Type.GENERALIZEDTIME:
        a += " (Generalized time)";
        break;
      case Q.Type.BMPSTRING:
        a += " (BMP String)";
    }
    else a += t.type;
    if (a += `
`, a += r + "Constructed: " + t.constructed + `
`, t.composed) {
      var n = 0, l = "";
      for (h = 0; h < t.value.length; ++h) t.value[h] !== void 0 && (n += 1, l += Q.prettyPrint(t.value[h], e + 1, i), h + 1 < t.value.length && (l += ","));
      a += r + "Sub values: " + n + l;
    } else {
      if (a += r + "Value: ", t.type === Q.Type.OID) {
        var y = Q.derToOid(t.value);
        a += y, B.pki && B.pki.oids && y in B.pki.oids && (a += " (" + B.pki.oids[y] + ") ");
      }
      if (t.type === Q.Type.INTEGER) try {
        a += Q.derToInteger(t.value);
      } catch {
        a += "0x" + B.util.bytesToHex(t.value);
      }
      else if (t.type === Q.Type.BITSTRING) {
        if (t.value.length > 1 ? a += "0x" + B.util.bytesToHex(t.value.slice(1)) : a += "(none)", t.value.length > 0) {
          var N = t.value.charCodeAt(0);
          N == 1 ? a += " (1 unused bit shown)" : N > 1 && (a += " (" + N + " unused bits shown)");
        }
      } else if (t.type === Q.Type.OCTETSTRING) o.test(t.value) || (a += "(" + t.value + ") "), a += "0x" + B.util.bytesToHex(t.value);
      else if (t.type === Q.Type.UTF8) try {
        a += B.util.decodeUtf8(t.value);
      } catch (s) {
        if (s.message !== "URI malformed") throw s;
        a += "0x" + B.util.bytesToHex(t.value) + " (malformed UTF8)";
      }
      else t.type === Q.Type.PRINTABLESTRING || t.type === Q.Type.IA5String ? a += t.value : o.test(t.value) ? a += "0x" + B.util.bytesToHex(t.value) : t.value.length === 0 ? a += "[null]" : a += t.value;
    }
    return a;
  };
}, 807: (A) => {
  var g = {};
  A.exports = g;
  var I = {};
  g.encode = function(B, Q, E) {
    if (typeof Q != "string") throw new TypeError('"alphabet" must be a string.');
    if (E !== void 0 && typeof E != "number") throw new TypeError('"maxline" must be a number.');
    var C = "";
    if (B instanceof Uint8Array) {
      var o = 0, t = Q.length, e = Q.charAt(0), i = [0];
      for (o = 0; o < B.length; ++o) {
        for (var a = 0, r = B[o]; a < i.length; ++a) r += i[a] << 8, i[a] = r % t, r = r / t | 0;
        for (; r > 0; ) i.push(r % t), r = r / t | 0;
      }
      for (o = 0; B[o] === 0 && o < B.length - 1; ++o) C += e;
      for (o = i.length - 1; o >= 0; --o) C += Q[i[o]];
    } else C = function(n, l) {
      var y = 0, N = l.length, s = l.charAt(0), F = [0];
      for (y = 0; y < n.length(); ++y) {
        for (var u = 0, U = n.at(y); u < F.length; ++u) U += F[u] << 8, F[u] = U % N, U = U / N | 0;
        for (; U > 0; ) F.push(U % N), U = U / N | 0;
      }
      var J = "";
      for (y = 0; n.at(y) === 0 && y < n.length() - 1; ++y) J += s;
      for (y = F.length - 1; y >= 0; --y) J += l[F[y]];
      return J;
    }(B, Q);
    if (E) {
      var h = new RegExp(".{1," + E + "}", "g");
      C = C.match(h).join(`\r
`);
    }
    return C;
  }, g.decode = function(B, Q) {
    if (typeof B != "string") throw new TypeError('"input" must be a string.');
    if (typeof Q != "string") throw new TypeError('"alphabet" must be a string.');
    var E = I[Q];
    if (!E) {
      E = I[Q] = [];
      for (var C = 0; C < Q.length; ++C) E[Q.charCodeAt(C)] = C;
    }
    B = B.replace(/\s/g, "");
    var o = Q.length, t = Q.charAt(0), e = [0];
    for (C = 0; C < B.length; C++) {
      var i = E[B.charCodeAt(C)];
      if (i === void 0) return;
      for (var a = 0, r = i; a < e.length; ++a) r += e[a] * o, e[a] = 255 & r, r >>= 8;
      for (; r > 0; ) e.push(255 & r), r >>= 8;
    }
    for (var h = 0; B[h] === t && h < B.length - 1; ++h) e.push(0);
    return typeof FB < "u" ? FB.from(e.reverse()) : new Uint8Array(e.reverse());
  };
}, 649: (A, g, I) => {
  var B = I(832);
  I(116), A.exports = B.cipher = B.cipher || {}, B.cipher.algorithms = B.cipher.algorithms || {}, B.cipher.createCipher = function(E, C) {
    var o = E;
    if (typeof o == "string" && (o = B.cipher.getAlgorithm(o)) && (o = o()), !o) throw new Error("Unsupported algorithm: " + E);
    return new B.cipher.BlockCipher({ algorithm: o, key: C, decrypt: !1 });
  }, B.cipher.createDecipher = function(E, C) {
    var o = E;
    if (typeof o == "string" && (o = B.cipher.getAlgorithm(o)) && (o = o()), !o) throw new Error("Unsupported algorithm: " + E);
    return new B.cipher.BlockCipher({ algorithm: o, key: C, decrypt: !0 });
  }, B.cipher.registerAlgorithm = function(E, C) {
    E = E.toUpperCase(), B.cipher.algorithms[E] = C;
  }, B.cipher.getAlgorithm = function(E) {
    return (E = E.toUpperCase()) in B.cipher.algorithms ? B.cipher.algorithms[E] : null;
  };
  var Q = B.cipher.BlockCipher = function(E) {
    this.algorithm = E.algorithm, this.mode = this.algorithm.mode, this.blockSize = this.mode.blockSize, this._finish = !1, this._input = null, this.output = null, this._op = E.decrypt ? this.mode.decrypt : this.mode.encrypt, this._decrypt = E.decrypt, this.algorithm.initialize(E);
  };
  Q.prototype.start = function(E) {
    E = E || {};
    var C = {};
    for (var o in E) C[o] = E[o];
    C.decrypt = this._decrypt, this._finish = !1, this._input = B.util.createBuffer(), this.output = E.output || B.util.createBuffer(), this.mode.start(C);
  }, Q.prototype.update = function(E) {
    for (E && this._input.putBuffer(E); !this._op.call(this.mode, this._input, this.output, this._finish) && !this._finish; ) ;
    this._input.compact();
  }, Q.prototype.finish = function(E) {
    !E || this.mode.name !== "ECB" && this.mode.name !== "CBC" || (this.mode.pad = function(o) {
      return E(this.blockSize, o, !1);
    }, this.mode.unpad = function(o) {
      return E(this.blockSize, o, !0);
    });
    var C = {};
    return C.decrypt = this._decrypt, C.overflow = this._input.length() % this.blockSize, !(!this._decrypt && this.mode.pad && !this.mode.pad(this._input, C) || (this._finish = !0, this.update(), this._decrypt && this.mode.unpad && !this.mode.unpad(this.output, C) || this.mode.afterFinish && !this.mode.afterFinish(this.output, C)));
  };
}, 967: (A, g, I) => {
  var B = I(832);
  I(116), B.cipher = B.cipher || {};
  var Q = A.exports = B.cipher.modes = B.cipher.modes || {};
  function E(t, e) {
    if (typeof t == "string" && (t = B.util.createBuffer(t)), B.util.isArray(t) && t.length > 4) {
      var i = t;
      t = B.util.createBuffer();
      for (var a = 0; a < i.length; ++a) t.putByte(i[a]);
    }
    if (t.length() < e) throw new Error("Invalid IV length; got " + t.length() + " bytes and expected " + e + " bytes.");
    if (!B.util.isArray(t)) {
      var r = [], h = e / 4;
      for (a = 0; a < h; ++a) r.push(t.getInt32());
      t = r;
    }
    return t;
  }
  function C(t) {
    t[t.length - 1] = t[t.length - 1] + 1 & 4294967295;
  }
  function o(t) {
    return [t / 4294967296 | 0, 4294967295 & t];
  }
  Q.ecb = function(t) {
    t = t || {}, this.name = "ECB", this.cipher = t.cipher, this.blockSize = t.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints);
  }, Q.ecb.prototype.start = function(t) {
  }, Q.ecb.prototype.encrypt = function(t, e, i) {
    if (t.length() < this.blockSize && !(i && t.length() > 0)) return !0;
    for (var a = 0; a < this._ints; ++a) this._inBlock[a] = t.getInt32();
    for (this.cipher.encrypt(this._inBlock, this._outBlock), a = 0; a < this._ints; ++a) e.putInt32(this._outBlock[a]);
  }, Q.ecb.prototype.decrypt = function(t, e, i) {
    if (t.length() < this.blockSize && !(i && t.length() > 0)) return !0;
    for (var a = 0; a < this._ints; ++a) this._inBlock[a] = t.getInt32();
    for (this.cipher.decrypt(this._inBlock, this._outBlock), a = 0; a < this._ints; ++a) e.putInt32(this._outBlock[a]);
  }, Q.ecb.prototype.pad = function(t, e) {
    var i = t.length() === this.blockSize ? this.blockSize : this.blockSize - t.length();
    return t.fillWithByte(i, i), !0;
  }, Q.ecb.prototype.unpad = function(t, e) {
    if (e.overflow > 0) return !1;
    var i = t.length(), a = t.at(i - 1);
    return !(a > this.blockSize << 2 || (t.truncate(a), 0));
  }, Q.cbc = function(t) {
    t = t || {}, this.name = "CBC", this.cipher = t.cipher, this.blockSize = t.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints);
  }, Q.cbc.prototype.start = function(t) {
    if (t.iv === null) {
      if (!this._prev) throw new Error("Invalid IV parameter.");
      this._iv = this._prev.slice(0);
    } else {
      if (!("iv" in t)) throw new Error("Invalid IV parameter.");
      this._iv = E(t.iv, this.blockSize), this._prev = this._iv.slice(0);
    }
  }, Q.cbc.prototype.encrypt = function(t, e, i) {
    if (t.length() < this.blockSize && !(i && t.length() > 0)) return !0;
    for (var a = 0; a < this._ints; ++a) this._inBlock[a] = this._prev[a] ^ t.getInt32();
    for (this.cipher.encrypt(this._inBlock, this._outBlock), a = 0; a < this._ints; ++a) e.putInt32(this._outBlock[a]);
    this._prev = this._outBlock;
  }, Q.cbc.prototype.decrypt = function(t, e, i) {
    if (t.length() < this.blockSize && !(i && t.length() > 0)) return !0;
    for (var a = 0; a < this._ints; ++a) this._inBlock[a] = t.getInt32();
    for (this.cipher.decrypt(this._inBlock, this._outBlock), a = 0; a < this._ints; ++a) e.putInt32(this._prev[a] ^ this._outBlock[a]);
    this._prev = this._inBlock.slice(0);
  }, Q.cbc.prototype.pad = function(t, e) {
    var i = t.length() === this.blockSize ? this.blockSize : this.blockSize - t.length();
    return t.fillWithByte(i, i), !0;
  }, Q.cbc.prototype.unpad = function(t, e) {
    if (e.overflow > 0) return !1;
    var i = t.length(), a = t.at(i - 1);
    return !(a > this.blockSize << 2 || (t.truncate(a), 0));
  }, Q.cfb = function(t) {
    t = t || {}, this.name = "CFB", this.cipher = t.cipher, this.blockSize = t.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialBlock = new Array(this._ints), this._partialOutput = B.util.createBuffer(), this._partialBytes = 0;
  }, Q.cfb.prototype.start = function(t) {
    if (!("iv" in t)) throw new Error("Invalid IV parameter.");
    this._iv = E(t.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
  }, Q.cfb.prototype.encrypt = function(t, e, i) {
    var a = t.length();
    if (a === 0) return !0;
    if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && a >= this.blockSize) for (var r = 0; r < this._ints; ++r) this._inBlock[r] = t.getInt32() ^ this._outBlock[r], e.putInt32(this._inBlock[r]);
    else {
      var h = (this.blockSize - a) % this.blockSize;
      for (h > 0 && (h = this.blockSize - h), this._partialOutput.clear(), r = 0; r < this._ints; ++r) this._partialBlock[r] = t.getInt32() ^ this._outBlock[r], this._partialOutput.putInt32(this._partialBlock[r]);
      if (h > 0) t.read -= this.blockSize;
      else for (r = 0; r < this._ints; ++r) this._inBlock[r] = this._partialBlock[r];
      if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), h > 0 && !i) return e.putBytes(this._partialOutput.getBytes(h - this._partialBytes)), this._partialBytes = h, !0;
      e.putBytes(this._partialOutput.getBytes(a - this._partialBytes)), this._partialBytes = 0;
    }
  }, Q.cfb.prototype.decrypt = function(t, e, i) {
    var a = t.length();
    if (a === 0) return !0;
    if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && a >= this.blockSize) for (var r = 0; r < this._ints; ++r) this._inBlock[r] = t.getInt32(), e.putInt32(this._inBlock[r] ^ this._outBlock[r]);
    else {
      var h = (this.blockSize - a) % this.blockSize;
      for (h > 0 && (h = this.blockSize - h), this._partialOutput.clear(), r = 0; r < this._ints; ++r) this._partialBlock[r] = t.getInt32(), this._partialOutput.putInt32(this._partialBlock[r] ^ this._outBlock[r]);
      if (h > 0) t.read -= this.blockSize;
      else for (r = 0; r < this._ints; ++r) this._inBlock[r] = this._partialBlock[r];
      if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), h > 0 && !i) return e.putBytes(this._partialOutput.getBytes(h - this._partialBytes)), this._partialBytes = h, !0;
      e.putBytes(this._partialOutput.getBytes(a - this._partialBytes)), this._partialBytes = 0;
    }
  }, Q.ofb = function(t) {
    t = t || {}, this.name = "OFB", this.cipher = t.cipher, this.blockSize = t.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialOutput = B.util.createBuffer(), this._partialBytes = 0;
  }, Q.ofb.prototype.start = function(t) {
    if (!("iv" in t)) throw new Error("Invalid IV parameter.");
    this._iv = E(t.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
  }, Q.ofb.prototype.encrypt = function(t, e, i) {
    var a = t.length();
    if (t.length() === 0) return !0;
    if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && a >= this.blockSize) for (var r = 0; r < this._ints; ++r) e.putInt32(t.getInt32() ^ this._outBlock[r]), this._inBlock[r] = this._outBlock[r];
    else {
      var h = (this.blockSize - a) % this.blockSize;
      for (h > 0 && (h = this.blockSize - h), this._partialOutput.clear(), r = 0; r < this._ints; ++r) this._partialOutput.putInt32(t.getInt32() ^ this._outBlock[r]);
      if (h > 0) t.read -= this.blockSize;
      else for (r = 0; r < this._ints; ++r) this._inBlock[r] = this._outBlock[r];
      if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), h > 0 && !i) return e.putBytes(this._partialOutput.getBytes(h - this._partialBytes)), this._partialBytes = h, !0;
      e.putBytes(this._partialOutput.getBytes(a - this._partialBytes)), this._partialBytes = 0;
    }
  }, Q.ofb.prototype.decrypt = Q.ofb.prototype.encrypt, Q.ctr = function(t) {
    t = t || {}, this.name = "CTR", this.cipher = t.cipher, this.blockSize = t.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialOutput = B.util.createBuffer(), this._partialBytes = 0;
  }, Q.ctr.prototype.start = function(t) {
    if (!("iv" in t)) throw new Error("Invalid IV parameter.");
    this._iv = E(t.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
  }, Q.ctr.prototype.encrypt = function(t, e, i) {
    var a = t.length();
    if (a === 0) return !0;
    if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && a >= this.blockSize) for (var r = 0; r < this._ints; ++r) e.putInt32(t.getInt32() ^ this._outBlock[r]);
    else {
      var h = (this.blockSize - a) % this.blockSize;
      for (h > 0 && (h = this.blockSize - h), this._partialOutput.clear(), r = 0; r < this._ints; ++r) this._partialOutput.putInt32(t.getInt32() ^ this._outBlock[r]);
      if (h > 0 && (t.read -= this.blockSize), this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), h > 0 && !i) return e.putBytes(this._partialOutput.getBytes(h - this._partialBytes)), this._partialBytes = h, !0;
      e.putBytes(this._partialOutput.getBytes(a - this._partialBytes)), this._partialBytes = 0;
    }
    C(this._inBlock);
  }, Q.ctr.prototype.decrypt = Q.ctr.prototype.encrypt, Q.gcm = function(t) {
    t = t || {}, this.name = "GCM", this.cipher = t.cipher, this.blockSize = t.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints), this._partialOutput = B.util.createBuffer(), this._partialBytes = 0, this._R = 3774873600;
  }, Q.gcm.prototype.start = function(t) {
    if (!("iv" in t)) throw new Error("Invalid IV parameter.");
    var e, i = B.util.createBuffer(t.iv);
    if (this._cipherLength = 0, e = "additionalData" in t ? B.util.createBuffer(t.additionalData) : B.util.createBuffer(), this._tagLength = "tagLength" in t ? t.tagLength : 128, this._tag = null, t.decrypt && (this._tag = B.util.createBuffer(t.tag).getBytes(), this._tag.length !== this._tagLength / 8)) throw new Error("Authentication tag does not match tag length.");
    this._hashBlock = new Array(this._ints), this.tag = null, this._hashSubkey = new Array(this._ints), this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey), this.componentBits = 4, this._m = this.generateHashTable(this._hashSubkey, this.componentBits);
    var a = i.length();
    if (a === 12) this._j0 = [i.getInt32(), i.getInt32(), i.getInt32(), 1];
    else {
      for (this._j0 = [0, 0, 0, 0]; i.length() > 0; ) this._j0 = this.ghash(this._hashSubkey, this._j0, [i.getInt32(), i.getInt32(), i.getInt32(), i.getInt32()]);
      this._j0 = this.ghash(this._hashSubkey, this._j0, [0, 0].concat(o(8 * a)));
    }
    this._inBlock = this._j0.slice(0), C(this._inBlock), this._partialBytes = 0, e = B.util.createBuffer(e), this._aDataLength = o(8 * e.length());
    var r = e.length() % this.blockSize;
    for (r && e.fillWithByte(0, this.blockSize - r), this._s = [0, 0, 0, 0]; e.length() > 0; ) this._s = this.ghash(this._hashSubkey, this._s, [e.getInt32(), e.getInt32(), e.getInt32(), e.getInt32()]);
  }, Q.gcm.prototype.encrypt = function(t, e, i) {
    var a = t.length();
    if (a === 0) return !0;
    if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && a >= this.blockSize) {
      for (var r = 0; r < this._ints; ++r) e.putInt32(this._outBlock[r] ^= t.getInt32());
      this._cipherLength += this.blockSize;
    } else {
      var h = (this.blockSize - a) % this.blockSize;
      for (h > 0 && (h = this.blockSize - h), this._partialOutput.clear(), r = 0; r < this._ints; ++r) this._partialOutput.putInt32(t.getInt32() ^ this._outBlock[r]);
      if (h <= 0 || i) {
        if (i) {
          var n = a % this.blockSize;
          this._cipherLength += n, this._partialOutput.truncate(this.blockSize - n);
        } else this._cipherLength += this.blockSize;
        for (r = 0; r < this._ints; ++r) this._outBlock[r] = this._partialOutput.getInt32();
        this._partialOutput.read -= this.blockSize;
      }
      if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), h > 0 && !i) return t.read -= this.blockSize, e.putBytes(this._partialOutput.getBytes(h - this._partialBytes)), this._partialBytes = h, !0;
      e.putBytes(this._partialOutput.getBytes(a - this._partialBytes)), this._partialBytes = 0;
    }
    this._s = this.ghash(this._hashSubkey, this._s, this._outBlock), C(this._inBlock);
  }, Q.gcm.prototype.decrypt = function(t, e, i) {
    var a = t.length();
    if (a < this.blockSize && !(i && a > 0)) return !0;
    this.cipher.encrypt(this._inBlock, this._outBlock), C(this._inBlock), this._hashBlock[0] = t.getInt32(), this._hashBlock[1] = t.getInt32(), this._hashBlock[2] = t.getInt32(), this._hashBlock[3] = t.getInt32(), this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);
    for (var r = 0; r < this._ints; ++r) e.putInt32(this._outBlock[r] ^ this._hashBlock[r]);
    a < this.blockSize ? this._cipherLength += a % this.blockSize : this._cipherLength += this.blockSize;
  }, Q.gcm.prototype.afterFinish = function(t, e) {
    var i = !0;
    e.decrypt && e.overflow && t.truncate(this.blockSize - e.overflow), this.tag = B.util.createBuffer();
    var a = this._aDataLength.concat(o(8 * this._cipherLength));
    this._s = this.ghash(this._hashSubkey, this._s, a);
    var r = [];
    this.cipher.encrypt(this._j0, r);
    for (var h = 0; h < this._ints; ++h) this.tag.putInt32(this._s[h] ^ r[h]);
    return this.tag.truncate(this.tag.length() % (this._tagLength / 8)), e.decrypt && this.tag.bytes() !== this._tag && (i = !1), i;
  }, Q.gcm.prototype.multiply = function(t, e) {
    for (var i = [0, 0, 0, 0], a = e.slice(0), r = 0; r < 128; ++r) t[r / 32 | 0] & 1 << 31 - r % 32 && (i[0] ^= a[0], i[1] ^= a[1], i[2] ^= a[2], i[3] ^= a[3]), this.pow(a, a);
    return i;
  }, Q.gcm.prototype.pow = function(t, e) {
    for (var i = 1 & t[3], a = 3; a > 0; --a) e[a] = t[a] >>> 1 | (1 & t[a - 1]) << 31;
    e[0] = t[0] >>> 1, i && (e[0] ^= this._R);
  }, Q.gcm.prototype.tableMultiply = function(t) {
    for (var e = [0, 0, 0, 0], i = 0; i < 32; ++i) {
      var a = t[i / 8 | 0] >>> 4 * (7 - i % 8) & 15, r = this._m[i][a];
      e[0] ^= r[0], e[1] ^= r[1], e[2] ^= r[2], e[3] ^= r[3];
    }
    return e;
  }, Q.gcm.prototype.ghash = function(t, e, i) {
    return e[0] ^= i[0], e[1] ^= i[1], e[2] ^= i[2], e[3] ^= i[3], this.tableMultiply(e);
  }, Q.gcm.prototype.generateHashTable = function(t, e) {
    for (var i = 8 / e, a = 4 * i, r = 16 * i, h = new Array(r), n = 0; n < r; ++n) {
      var l = [0, 0, 0, 0], y = (a - 1 - n % a) * e;
      l[n / a | 0] = 1 << e - 1 << y, h[n] = this.generateSubHashTable(this.multiply(l, t), e);
    }
    return h;
  }, Q.gcm.prototype.generateSubHashTable = function(t, e) {
    var i = 1 << e, a = i >>> 1, r = new Array(i);
    r[a] = t.slice(0);
    for (var h = a >>> 1; h > 0; ) this.pow(r[2 * h], r[h] = []), h >>= 1;
    for (h = 2; h < a; ) {
      for (var n = 1; n < h; ++n) {
        var l = r[h], y = r[n];
        r[h + n] = [l[0] ^ y[0], l[1] ^ y[1], l[2] ^ y[2], l[3] ^ y[3]];
      }
      h *= 2;
    }
    for (r[0] = [0, 0, 0, 0], h = a + 1; h < i; ++h) {
      var N = r[h ^ a];
      r[h] = [t[0] ^ N[0], t[1] ^ N[1], t[2] ^ N[2], t[3] ^ N[3]];
    }
    return r;
  };
}, 480: (A, g, I) => {
  var B = I(832);
  function Q(l, y) {
    B.cipher.registerAlgorithm(l, function() {
      return new B.des.Algorithm(l, y);
    });
  }
  I(649), I(967), I(116), A.exports = B.des = B.des || {}, B.des.startEncrypting = function(l, y, N, s) {
    var F = n({ key: l, output: N, decrypt: !1, mode: s || (y === null ? "ECB" : "CBC") });
    return F.start(y), F;
  }, B.des.createEncryptionCipher = function(l, y) {
    return n({ key: l, output: null, decrypt: !1, mode: y });
  }, B.des.startDecrypting = function(l, y, N, s) {
    var F = n({ key: l, output: N, decrypt: !0, mode: s || (y === null ? "ECB" : "CBC") });
    return F.start(y), F;
  }, B.des.createDecryptionCipher = function(l, y) {
    return n({ key: l, output: null, decrypt: !0, mode: y });
  }, B.des.Algorithm = function(l, y) {
    var N = this;
    N.name = l, N.mode = new y({ blockSize: 8, cipher: { encrypt: function(s, F) {
      return h(N._keys, s, F, !1);
    }, decrypt: function(s, F) {
      return h(N._keys, s, F, !0);
    } } }), N._init = !1;
  }, B.des.Algorithm.prototype.initialize = function(l) {
    if (!this._init) {
      var y = B.util.createBuffer(l.key);
      if (this.name.indexOf("3DES") === 0 && y.length() !== 24) throw new Error("Invalid Triple-DES key size: " + 8 * y.length());
      this._keys = function(N) {
        for (var s, F = [0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512, 516, 536871424, 536871428, 66048, 66052, 536936960, 536936964], u = [0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256, 257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697], U = [0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272], J = [0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920, 136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416, 134356992, 136454144], L = [0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112, 266256, 4096, 266240, 4112, 266256], f = [0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464, 33555488, 33554432, 33555456, 33554464, 33555488], d = [0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746], p = [0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496, 131072, 196608, 133120, 198656, 537001984, 537067520, 537004032, 537069568], x = [0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576, 33554432, 33816576, 33554434, 33816578, 33554434, 33816578], M = [0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024, 268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488], S = [0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192, 8224, 1056768, 1056800, 1056768, 1056800], k = [0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880, 67108864, 83886080, 67109376, 83886592, 69206016, 85983232, 69206528, 85983744], v = [0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112, 16, 4112, 134217744, 134221840, 524304, 528400, 134742032, 134746128], m = [0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261], T = N.length() > 8 ? 3 : 1, $ = [], AA = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], lA = 0, FA = 0; FA < T; FA++) {
          var cA = N.getInt32(), yA = N.getInt32();
          cA ^= (s = 252645135 & (cA >>> 4 ^ yA)) << 4, cA ^= s = 65535 & ((yA ^= s) >>> -16 ^ cA), cA ^= (s = 858993459 & (cA >>> 2 ^ (yA ^= s << -16))) << 2, cA ^= s = 65535 & ((yA ^= s) >>> -16 ^ cA), cA ^= (s = 1431655765 & (cA >>> 1 ^ (yA ^= s << -16))) << 1, cA ^= s = 16711935 & ((yA ^= s) >>> 8 ^ cA), s = (cA ^= (s = 1431655765 & (cA >>> 1 ^ (yA ^= s << 8))) << 1) << 8 | (yA ^= s) >>> 20 & 240, cA = yA << 24 | yA << 8 & 16711680 | yA >>> 8 & 65280 | yA >>> 24 & 240, yA = s;
          for (var aA = 0; aA < AA.length; ++aA) {
            AA[aA] ? (cA = cA << 2 | cA >>> 26, yA = yA << 2 | yA >>> 26) : (cA = cA << 1 | cA >>> 27, yA = yA << 1 | yA >>> 27);
            var eA = F[(cA &= -15) >>> 28] | u[cA >>> 24 & 15] | U[cA >>> 20 & 15] | J[cA >>> 16 & 15] | L[cA >>> 12 & 15] | f[cA >>> 8 & 15] | d[cA >>> 4 & 15], CA = p[(yA &= -15) >>> 28] | x[yA >>> 24 & 15] | M[yA >>> 20 & 15] | S[yA >>> 16 & 15] | k[yA >>> 12 & 15] | v[yA >>> 8 & 15] | m[yA >>> 4 & 15];
            s = 65535 & (CA >>> 16 ^ eA), $[lA++] = eA ^ s, $[lA++] = CA ^ s << 16;
          }
        }
        return $;
      }(y), this._init = !0;
    }
  }, Q("DES-ECB", B.cipher.modes.ecb), Q("DES-CBC", B.cipher.modes.cbc), Q("DES-CFB", B.cipher.modes.cfb), Q("DES-OFB", B.cipher.modes.ofb), Q("DES-CTR", B.cipher.modes.ctr), Q("3DES-ECB", B.cipher.modes.ecb), Q("3DES-CBC", B.cipher.modes.cbc), Q("3DES-CFB", B.cipher.modes.cfb), Q("3DES-OFB", B.cipher.modes.ofb), Q("3DES-CTR", B.cipher.modes.ctr);
  var E = [16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028, 16778240, 16778240, 0, 65540, 66560, 0, 16842756], C = [-2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576, -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344], o = [520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584], t = [8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193, 8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928], e = [256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976, 1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976, 1073742080], i = [536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704, 541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0, 541081600, 536870912, 4194320, 536887312], a = [2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016, 2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154], r = [268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520, 268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456, 268701696];
  function h(l, y, N, s) {
    var F, u, U = l.length === 32 ? 3 : 9;
    F = U === 3 ? s ? [30, -2, -2] : [0, 32, 2] : s ? [94, 62, -2, 32, 64, 2, 30, -2, -2] : [0, 32, 2, 62, 30, -2, 64, 96, 2];
    var J = y[0], L = y[1];
    J ^= (u = 252645135 & (J >>> 4 ^ L)) << 4, J ^= (u = 65535 & (J >>> 16 ^ (L ^= u))) << 16, J ^= u = 858993459 & ((L ^= u) >>> 2 ^ J), J ^= u = 16711935 & ((L ^= u << 2) >>> 8 ^ J), J = (J ^= (u = 1431655765 & (J >>> 1 ^ (L ^= u << 8))) << 1) << 1 | J >>> 31, L = (L ^= u) << 1 | L >>> 31;
    for (var f = 0; f < U; f += 3) {
      for (var d = F[f + 1], p = F[f + 2], x = F[f]; x != d; x += p) {
        var M = L ^ l[x], S = (L >>> 4 | L << 28) ^ l[x + 1];
        u = J, J = L, L = u ^ (C[M >>> 24 & 63] | t[M >>> 16 & 63] | i[M >>> 8 & 63] | r[63 & M] | E[S >>> 24 & 63] | o[S >>> 16 & 63] | e[S >>> 8 & 63] | a[63 & S]);
      }
      u = J, J = L, L = u;
    }
    L = L >>> 1 | L << 31, L ^= u = 1431655765 & ((J = J >>> 1 | J << 31) >>> 1 ^ L), L ^= (u = 16711935 & (L >>> 8 ^ (J ^= u << 1))) << 8, L ^= (u = 858993459 & (L >>> 2 ^ (J ^= u))) << 2, L ^= u = 65535 & ((J ^= u) >>> 16 ^ L), L ^= u = 252645135 & ((J ^= u << 16) >>> 4 ^ L), J ^= u << 4, N[0] = J, N[1] = L;
  }
  function n(l) {
    var y, N = "DES-" + ((l = l || {}).mode || "CBC").toUpperCase(), s = (y = l.decrypt ? B.cipher.createDecipher(N, l.key) : B.cipher.createCipher(N, l.key)).start;
    return y.start = function(F, u) {
      var U = null;
      u instanceof B.util.ByteBuffer && (U = u, u = {}), (u = u || {}).output = U, u.iv = F, s.call(y, u);
    }, y;
  }
}, 69: (A, g, I) => {
  var B = I(832);
  I(764), I(563), I(219), I(116);
  var Q = I(205), E = Q.publicKeyValidator, C = Q.privateKeyValidator;
  if (o === void 0) var o = B.jsbn.BigInteger;
  var t = B.util.ByteBuffer, e = typeof FB > "u" ? Uint8Array : FB;
  B.pki = B.pki || {}, A.exports = B.pki.ed25519 = B.ed25519 = B.ed25519 || {};
  var i = B.ed25519;
  function a(aA) {
    var eA = aA.message;
    if (eA instanceof Uint8Array || eA instanceof e) return eA;
    var CA = aA.encoding;
    if (eA === void 0) {
      if (!aA.md) throw new TypeError('"options.message" or "options.md" not specified.');
      eA = aA.md.digest().getBytes(), CA = "binary";
    }
    if (typeof eA == "string" && !CA) throw new TypeError('"options.encoding" must be "binary" or "utf8".');
    if (typeof eA == "string") {
      if (typeof FB < "u") return FB.from(eA, CA);
      eA = new t(eA, CA);
    } else if (!(eA instanceof t)) throw new TypeError('"options.message" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a string with "options.encoding" specifying its encoding.');
    for (var b = new e(eA.length()), Y = 0; Y < b.length; ++Y) b[Y] = eA.at(Y);
    return b;
  }
  i.constants = {}, i.constants.PUBLIC_KEY_BYTE_LENGTH = 32, i.constants.PRIVATE_KEY_BYTE_LENGTH = 64, i.constants.SEED_BYTE_LENGTH = 32, i.constants.SIGN_BYTE_LENGTH = 64, i.constants.HASH_BYTE_LENGTH = 64, i.generateKeyPair = function(aA) {
    var eA = (aA = aA || {}).seed;
    if (eA === void 0) eA = B.random.getBytesSync(i.constants.SEED_BYTE_LENGTH);
    else if (typeof eA == "string") {
      if (eA.length !== i.constants.SEED_BYTE_LENGTH) throw new TypeError('"seed" must be ' + i.constants.SEED_BYTE_LENGTH + " bytes in length.");
    } else if (!(eA instanceof Uint8Array)) throw new TypeError('"seed" must be a node.js Buffer, Uint8Array, or a binary string.');
    eA = a({ message: eA, encoding: "binary" });
    for (var CA = new e(i.constants.PUBLIC_KEY_BYTE_LENGTH), b = new e(i.constants.PRIVATE_KEY_BYTE_LENGTH), Y = 0; Y < 32; ++Y) b[Y] = eA[Y];
    return function(QA, BA) {
      var iA, rA = [AA(), AA(), AA(), AA()], GA = u(BA, 32);
      for (GA[0] &= 248, GA[31] &= 127, GA[31] |= 64, v(rA, GA), d(QA, rA), iA = 0; iA < 32; ++iA) BA[iA + 32] = QA[iA];
    }(CA, b), { publicKey: CA, privateKey: b };
  }, i.privateKeyFromAsn1 = function(aA) {
    var eA = {}, CA = [];
    if (!B.asn1.validate(aA, C, eA, CA)) {
      var b = new Error("Invalid Key.");
      throw b.errors = CA, b;
    }
    var Y = B.asn1.derToOid(eA.privateKeyOid), QA = B.oids.EdDSA25519;
    if (Y !== QA) throw new Error('Invalid OID "' + Y + '"; OID must be "' + QA + '".');
    var BA = eA.privateKey;
    return { privateKeyBytes: a({ message: B.asn1.fromDer(BA).value, encoding: "binary" }) };
  }, i.publicKeyFromAsn1 = function(aA) {
    var eA = {}, CA = [];
    if (!B.asn1.validate(aA, E, eA, CA)) {
      var b = new Error("Invalid Key.");
      throw b.errors = CA, b;
    }
    var Y = B.asn1.derToOid(eA.publicKeyOid), QA = B.oids.EdDSA25519;
    if (Y !== QA) throw new Error('Invalid OID "' + Y + '"; OID must be "' + QA + '".');
    var BA = eA.ed25519PublicKey;
    if (BA.length !== i.constants.PUBLIC_KEY_BYTE_LENGTH) throw new Error("Key length is invalid.");
    return a({ message: BA, encoding: "binary" });
  }, i.publicKeyFromPrivateKey = function(aA) {
    var eA = a({ message: (aA = aA || {}).privateKey, encoding: "binary" });
    if (eA.length !== i.constants.PRIVATE_KEY_BYTE_LENGTH) throw new TypeError('"options.privateKey" must have a byte length of ' + i.constants.PRIVATE_KEY_BYTE_LENGTH);
    for (var CA = new e(i.constants.PUBLIC_KEY_BYTE_LENGTH), b = 0; b < CA.length; ++b) CA[b] = eA[32 + b];
    return CA;
  }, i.sign = function(aA) {
    var eA = a(aA = aA || {}), CA = a({ message: aA.privateKey, encoding: "binary" });
    if (CA.length === i.constants.SEED_BYTE_LENGTH) CA = i.generateKeyPair({ seed: CA }).privateKey;
    else if (CA.length !== i.constants.PRIVATE_KEY_BYTE_LENGTH) throw new TypeError('"options.privateKey" must have a byte length of ' + i.constants.SEED_BYTE_LENGTH + " or " + i.constants.PRIVATE_KEY_BYTE_LENGTH);
    var b = new e(i.constants.SIGN_BYTE_LENGTH + eA.length);
    (function(BA, iA, rA, GA) {
      var _, uA, HA = new Float64Array(64), JA = [AA(), AA(), AA(), AA()], VA = u(GA, 32);
      for (VA[0] &= 248, VA[31] &= 127, VA[31] |= 64, _ = 0; _ < rA; ++_) BA[64 + _] = iA[_];
      for (_ = 0; _ < 32; ++_) BA[32 + _] = VA[32 + _];
      var $A = u(BA.subarray(32), rA + 32);
      for (J($A), v(JA, $A), d(BA, JA), _ = 32; _ < 64; ++_) BA[_] = GA[_];
      var XA = u(BA, rA + 64);
      for (J(XA), _ = 32; _ < 64; ++_) HA[_] = 0;
      for (_ = 0; _ < 32; ++_) HA[_] = $A[_];
      for (_ = 0; _ < 32; ++_) for (uA = 0; uA < 32; uA++) HA[_ + uA] += XA[_] * VA[uA];
      U(BA.subarray(32), HA);
    })(b, eA, eA.length, CA);
    for (var Y = new e(i.constants.SIGN_BYTE_LENGTH), QA = 0; QA < Y.length; ++QA) Y[QA] = b[QA];
    return Y;
  }, i.verify = function(aA) {
    var eA = a(aA = aA || {});
    if (aA.signature === void 0) throw new TypeError('"options.signature" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a binary string.');
    var CA = a({ message: aA.signature, encoding: "binary" });
    if (CA.length !== i.constants.SIGN_BYTE_LENGTH) throw new TypeError('"options.signature" must have a byte length of ' + i.constants.SIGN_BYTE_LENGTH);
    var b = a({ message: aA.publicKey, encoding: "binary" });
    if (b.length !== i.constants.PUBLIC_KEY_BYTE_LENGTH) throw new TypeError('"options.publicKey" must have a byte length of ' + i.constants.PUBLIC_KEY_BYTE_LENGTH);
    var Y, QA = new e(i.constants.SIGN_BYTE_LENGTH + eA.length), BA = new e(i.constants.SIGN_BYTE_LENGTH + eA.length);
    for (Y = 0; Y < i.constants.SIGN_BYTE_LENGTH; ++Y) QA[Y] = CA[Y];
    for (Y = 0; Y < eA.length; ++Y) QA[Y + i.constants.SIGN_BYTE_LENGTH] = eA[Y];
    return function(iA, rA, GA, _) {
      var uA, HA = new e(32), JA = [AA(), AA(), AA(), AA()], VA = [AA(), AA(), AA(), AA()];
      if (GA < 64 || function(XA, Ig) {
        var jA = AA(), ag = AA(), ng = AA(), lg = AA(), BB = AA(), rB = AA(), eg = AA();
        return m(XA[2], h), function(yg, Wg) {
          var Mg;
          for (Mg = 0; Mg < 16; ++Mg) yg[Mg] = Wg[2 * Mg] + (Wg[2 * Mg + 1] << 8);
          yg[15] &= 32767;
        }(XA[1], Ig), cA(ng, XA[1]), yA(lg, ng, n), FA(ng, ng, XA[2]), lA(lg, XA[2], lg), cA(BB, lg), cA(rB, BB), yA(eg, rB, BB), yA(jA, eg, ng), yA(jA, jA, lg), function(yg, Wg) {
          var Mg, LB = AA();
          for (Mg = 0; Mg < 16; ++Mg) LB[Mg] = Wg[Mg];
          for (Mg = 250; Mg >= 0; --Mg) cA(LB, LB), Mg !== 1 && yA(LB, LB, Wg);
          for (Mg = 0; Mg < 16; ++Mg) yg[Mg] = LB[Mg];
        }(jA, jA), yA(jA, jA, ng), yA(jA, jA, lg), yA(jA, jA, lg), yA(XA[0], jA, lg), cA(ag, XA[0]), yA(ag, ag, lg), x(ag, ng) && yA(XA[0], XA[0], F), cA(ag, XA[0]), yA(ag, ag, lg), x(ag, ng) ? -1 : (S(XA[0]) === Ig[31] >> 7 && FA(XA[0], r, XA[0]), yA(XA[3], XA[0], XA[1]), 0);
      }(VA, _)) return -1;
      for (uA = 0; uA < GA; ++uA) iA[uA] = rA[uA];
      for (uA = 0; uA < 32; ++uA) iA[uA + 32] = _[uA];
      var $A = u(iA, GA);
      if (J($A), k(JA, VA, $A), v(VA, rA.subarray(32)), L(JA, VA), d(HA, JA), GA -= 64, M(rA, 0, HA, 0)) {
        for (uA = 0; uA < GA; ++uA) iA[uA] = 0;
        return -1;
      }
      for (uA = 0; uA < GA; ++uA) iA[uA] = rA[uA + 64];
      return GA;
    }(BA, QA, QA.length, b) >= 0;
  };
  var r = AA(), h = AA([1]), n = AA([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), l = AA([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), y = AA([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), N = AA([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), s = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]), F = AA([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
  function u(aA, eA) {
    var CA = B.md.sha512.create(), b = new t(aA);
    CA.update(b.getBytes(eA), "binary");
    var Y = CA.digest().getBytes();
    if (typeof FB < "u") return FB.from(Y, "binary");
    for (var QA = new e(i.constants.HASH_BYTE_LENGTH), BA = 0; BA < 64; ++BA) QA[BA] = Y.charCodeAt(BA);
    return QA;
  }
  function U(aA, eA) {
    var CA, b, Y, QA;
    for (b = 63; b >= 32; --b) {
      for (CA = 0, Y = b - 32, QA = b - 12; Y < QA; ++Y) eA[Y] += CA - 16 * eA[b] * s[Y - (b - 32)], CA = eA[Y] + 128 >> 8, eA[Y] -= 256 * CA;
      eA[Y] += CA, eA[b] = 0;
    }
    for (CA = 0, Y = 0; Y < 32; ++Y) eA[Y] += CA - (eA[31] >> 4) * s[Y], CA = eA[Y] >> 8, eA[Y] &= 255;
    for (Y = 0; Y < 32; ++Y) eA[Y] -= CA * s[Y];
    for (b = 0; b < 32; ++b) eA[b + 1] += eA[b] >> 8, aA[b] = 255 & eA[b];
  }
  function J(aA) {
    for (var eA = new Float64Array(64), CA = 0; CA < 64; ++CA) eA[CA] = aA[CA], aA[CA] = 0;
    U(aA, eA);
  }
  function L(aA, eA) {
    var CA = AA(), b = AA(), Y = AA(), QA = AA(), BA = AA(), iA = AA(), rA = AA(), GA = AA(), _ = AA();
    FA(CA, aA[1], aA[0]), FA(_, eA[1], eA[0]), yA(CA, CA, _), lA(b, aA[0], aA[1]), lA(_, eA[0], eA[1]), yA(b, b, _), yA(Y, aA[3], eA[3]), yA(Y, Y, l), yA(QA, aA[2], eA[2]), lA(QA, QA, QA), FA(BA, b, CA), FA(iA, QA, Y), lA(rA, QA, Y), lA(GA, b, CA), yA(aA[0], BA, iA), yA(aA[1], GA, rA), yA(aA[2], rA, iA), yA(aA[3], BA, GA);
  }
  function f(aA, eA, CA) {
    for (var b = 0; b < 4; ++b) $(aA[b], eA[b], CA);
  }
  function d(aA, eA) {
    var CA = AA(), b = AA(), Y = AA();
    (function(QA, BA) {
      var iA, rA = AA();
      for (iA = 0; iA < 16; ++iA) rA[iA] = BA[iA];
      for (iA = 253; iA >= 0; --iA) cA(rA, rA), iA !== 2 && iA !== 4 && yA(rA, rA, BA);
      for (iA = 0; iA < 16; ++iA) QA[iA] = rA[iA];
    })(Y, eA[2]), yA(CA, eA[0], Y), yA(b, eA[1], Y), p(aA, b), aA[31] ^= S(CA) << 7;
  }
  function p(aA, eA) {
    var CA, b, Y, QA = AA(), BA = AA();
    for (CA = 0; CA < 16; ++CA) BA[CA] = eA[CA];
    for (T(BA), T(BA), T(BA), b = 0; b < 2; ++b) {
      for (QA[0] = BA[0] - 65517, CA = 1; CA < 15; ++CA) QA[CA] = BA[CA] - 65535 - (QA[CA - 1] >> 16 & 1), QA[CA - 1] &= 65535;
      QA[15] = BA[15] - 32767 - (QA[14] >> 16 & 1), Y = QA[15] >> 16 & 1, QA[14] &= 65535, $(BA, QA, 1 - Y);
    }
    for (CA = 0; CA < 16; CA++) aA[2 * CA] = 255 & BA[CA], aA[2 * CA + 1] = BA[CA] >> 8;
  }
  function x(aA, eA) {
    var CA = new e(32), b = new e(32);
    return p(CA, aA), p(b, eA), M(CA, 0, b, 0);
  }
  function M(aA, eA, CA, b) {
    return function(Y, QA, BA, iA, rA) {
      var GA, _ = 0;
      for (GA = 0; GA < 32; ++GA) _ |= Y[QA + GA] ^ BA[iA + GA];
      return (1 & _ - 1 >>> 8) - 1;
    }(aA, eA, CA, b);
  }
  function S(aA) {
    var eA = new e(32);
    return p(eA, aA), 1 & eA[0];
  }
  function k(aA, eA, CA) {
    var b, Y;
    for (m(aA[0], r), m(aA[1], h), m(aA[2], h), m(aA[3], r), Y = 255; Y >= 0; --Y) f(aA, eA, b = CA[Y / 8 | 0] >> (7 & Y) & 1), L(eA, aA), L(aA, aA), f(aA, eA, b);
  }
  function v(aA, eA) {
    var CA = [AA(), AA(), AA(), AA()];
    m(CA[0], y), m(CA[1], N), m(CA[2], h), yA(CA[3], y, N), k(aA, CA, eA);
  }
  function m(aA, eA) {
    var CA;
    for (CA = 0; CA < 16; CA++) aA[CA] = 0 | eA[CA];
  }
  function T(aA) {
    var eA, CA, b = 1;
    for (eA = 0; eA < 16; ++eA) CA = aA[eA] + b + 65535, b = Math.floor(CA / 65536), aA[eA] = CA - 65536 * b;
    aA[0] += b - 1 + 37 * (b - 1);
  }
  function $(aA, eA, CA) {
    for (var b, Y = ~(CA - 1), QA = 0; QA < 16; ++QA) b = Y & (aA[QA] ^ eA[QA]), aA[QA] ^= b, eA[QA] ^= b;
  }
  function AA(aA) {
    var eA, CA = new Float64Array(16);
    if (aA) for (eA = 0; eA < aA.length; ++eA) CA[eA] = aA[eA];
    return CA;
  }
  function lA(aA, eA, CA) {
    for (var b = 0; b < 16; ++b) aA[b] = eA[b] + CA[b];
  }
  function FA(aA, eA, CA) {
    for (var b = 0; b < 16; ++b) aA[b] = eA[b] - CA[b];
  }
  function cA(aA, eA) {
    yA(aA, eA, eA);
  }
  function yA(aA, eA, CA) {
    var b, Y, QA = 0, BA = 0, iA = 0, rA = 0, GA = 0, _ = 0, uA = 0, HA = 0, JA = 0, VA = 0, $A = 0, XA = 0, Ig = 0, jA = 0, ag = 0, ng = 0, lg = 0, BB = 0, rB = 0, eg = 0, yg = 0, Wg = 0, Mg = 0, LB = 0, mB = 0, yI = 0, tI = 0, YI = 0, IQ = 0, LQ = 0, QQ = 0, Bg = CA[0], rg = CA[1], Ug = CA[2], IB = CA[3], $g = CA[4], nB = CA[5], sB = CA[6], wB = CA[7], xB = CA[8], Hg = CA[9], uB = CA[10], dB = CA[11], Yg = CA[12], Vg = CA[13], EB = CA[14], CB = CA[15];
    QA += (b = eA[0]) * Bg, BA += b * rg, iA += b * Ug, rA += b * IB, GA += b * $g, _ += b * nB, uA += b * sB, HA += b * wB, JA += b * xB, VA += b * Hg, $A += b * uB, XA += b * dB, Ig += b * Yg, jA += b * Vg, ag += b * EB, ng += b * CB, BA += (b = eA[1]) * Bg, iA += b * rg, rA += b * Ug, GA += b * IB, _ += b * $g, uA += b * nB, HA += b * sB, JA += b * wB, VA += b * xB, $A += b * Hg, XA += b * uB, Ig += b * dB, jA += b * Yg, ag += b * Vg, ng += b * EB, lg += b * CB, iA += (b = eA[2]) * Bg, rA += b * rg, GA += b * Ug, _ += b * IB, uA += b * $g, HA += b * nB, JA += b * sB, VA += b * wB, $A += b * xB, XA += b * Hg, Ig += b * uB, jA += b * dB, ag += b * Yg, ng += b * Vg, lg += b * EB, BB += b * CB, rA += (b = eA[3]) * Bg, GA += b * rg, _ += b * Ug, uA += b * IB, HA += b * $g, JA += b * nB, VA += b * sB, $A += b * wB, XA += b * xB, Ig += b * Hg, jA += b * uB, ag += b * dB, ng += b * Yg, lg += b * Vg, BB += b * EB, rB += b * CB, GA += (b = eA[4]) * Bg, _ += b * rg, uA += b * Ug, HA += b * IB, JA += b * $g, VA += b * nB, $A += b * sB, XA += b * wB, Ig += b * xB, jA += b * Hg, ag += b * uB, ng += b * dB, lg += b * Yg, BB += b * Vg, rB += b * EB, eg += b * CB, _ += (b = eA[5]) * Bg, uA += b * rg, HA += b * Ug, JA += b * IB, VA += b * $g, $A += b * nB, XA += b * sB, Ig += b * wB, jA += b * xB, ag += b * Hg, ng += b * uB, lg += b * dB, BB += b * Yg, rB += b * Vg, eg += b * EB, yg += b * CB, uA += (b = eA[6]) * Bg, HA += b * rg, JA += b * Ug, VA += b * IB, $A += b * $g, XA += b * nB, Ig += b * sB, jA += b * wB, ag += b * xB, ng += b * Hg, lg += b * uB, BB += b * dB, rB += b * Yg, eg += b * Vg, yg += b * EB, Wg += b * CB, HA += (b = eA[7]) * Bg, JA += b * rg, VA += b * Ug, $A += b * IB, XA += b * $g, Ig += b * nB, jA += b * sB, ag += b * wB, ng += b * xB, lg += b * Hg, BB += b * uB, rB += b * dB, eg += b * Yg, yg += b * Vg, Wg += b * EB, Mg += b * CB, JA += (b = eA[8]) * Bg, VA += b * rg, $A += b * Ug, XA += b * IB, Ig += b * $g, jA += b * nB, ag += b * sB, ng += b * wB, lg += b * xB, BB += b * Hg, rB += b * uB, eg += b * dB, yg += b * Yg, Wg += b * Vg, Mg += b * EB, LB += b * CB, VA += (b = eA[9]) * Bg, $A += b * rg, XA += b * Ug, Ig += b * IB, jA += b * $g, ag += b * nB, ng += b * sB, lg += b * wB, BB += b * xB, rB += b * Hg, eg += b * uB, yg += b * dB, Wg += b * Yg, Mg += b * Vg, LB += b * EB, mB += b * CB, $A += (b = eA[10]) * Bg, XA += b * rg, Ig += b * Ug, jA += b * IB, ag += b * $g, ng += b * nB, lg += b * sB, BB += b * wB, rB += b * xB, eg += b * Hg, yg += b * uB, Wg += b * dB, Mg += b * Yg, LB += b * Vg, mB += b * EB, yI += b * CB, XA += (b = eA[11]) * Bg, Ig += b * rg, jA += b * Ug, ag += b * IB, ng += b * $g, lg += b * nB, BB += b * sB, rB += b * wB, eg += b * xB, yg += b * Hg, Wg += b * uB, Mg += b * dB, LB += b * Yg, mB += b * Vg, yI += b * EB, tI += b * CB, Ig += (b = eA[12]) * Bg, jA += b * rg, ag += b * Ug, ng += b * IB, lg += b * $g, BB += b * nB, rB += b * sB, eg += b * wB, yg += b * xB, Wg += b * Hg, Mg += b * uB, LB += b * dB, mB += b * Yg, yI += b * Vg, tI += b * EB, YI += b * CB, jA += (b = eA[13]) * Bg, ag += b * rg, ng += b * Ug, lg += b * IB, BB += b * $g, rB += b * nB, eg += b * sB, yg += b * wB, Wg += b * xB, Mg += b * Hg, LB += b * uB, mB += b * dB, yI += b * Yg, tI += b * Vg, YI += b * EB, IQ += b * CB, ag += (b = eA[14]) * Bg, ng += b * rg, lg += b * Ug, BB += b * IB, rB += b * $g, eg += b * nB, yg += b * sB, Wg += b * wB, Mg += b * xB, LB += b * Hg, mB += b * uB, yI += b * dB, tI += b * Yg, YI += b * Vg, IQ += b * EB, LQ += b * CB, ng += (b = eA[15]) * Bg, BA += 38 * (BB += b * Ug), iA += 38 * (rB += b * IB), rA += 38 * (eg += b * $g), GA += 38 * (yg += b * nB), _ += 38 * (Wg += b * sB), uA += 38 * (Mg += b * wB), HA += 38 * (LB += b * xB), JA += 38 * (mB += b * Hg), VA += 38 * (yI += b * uB), $A += 38 * (tI += b * dB), XA += 38 * (YI += b * Yg), Ig += 38 * (IQ += b * Vg), jA += 38 * (LQ += b * EB), ag += 38 * (QQ += b * CB), QA = (b = (QA += 38 * (lg += b * rg)) + (Y = 1) + 65535) - 65536 * (Y = Math.floor(b / 65536)), BA = (b = BA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), iA = (b = iA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), rA = (b = rA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), GA = (b = GA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), _ = (b = _ + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), uA = (b = uA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), HA = (b = HA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), JA = (b = JA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), VA = (b = VA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), $A = (b = $A + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), XA = (b = XA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), Ig = (b = Ig + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), jA = (b = jA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), ag = (b = ag + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), ng = (b = ng + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), QA = (b = (QA += Y - 1 + 37 * (Y - 1)) + (Y = 1) + 65535) - 65536 * (Y = Math.floor(b / 65536)), BA = (b = BA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), iA = (b = iA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), rA = (b = rA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), GA = (b = GA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), _ = (b = _ + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), uA = (b = uA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), HA = (b = HA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), JA = (b = JA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), VA = (b = VA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), $A = (b = $A + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), XA = (b = XA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), Ig = (b = Ig + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), jA = (b = jA + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), ag = (b = ag + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), ng = (b = ng + Y + 65535) - 65536 * (Y = Math.floor(b / 65536)), QA += Y - 1 + 37 * (Y - 1), aA[0] = QA, aA[1] = BA, aA[2] = iA, aA[3] = rA, aA[4] = GA, aA[5] = _, aA[6] = uA, aA[7] = HA, aA[8] = JA, aA[9] = VA, aA[10] = $A, aA[11] = XA, aA[12] = Ig, aA[13] = jA, aA[14] = ag, aA[15] = ng;
  }
}, 832: (A) => {
  A.exports = { options: { usePureJavaScript: !1 } };
}, 607: (A, g, I) => {
  var B = I(832);
  I(991), I(116), (A.exports = B.hmac = B.hmac || {}).create = function() {
    var Q = null, E = null, C = null, o = null, t = { start: function(e, i) {
      if (e !== null) if (typeof e == "string") {
        if (!((e = e.toLowerCase()) in B.md.algorithms)) throw new Error('Unknown hash algorithm "' + e + '"');
        E = B.md.algorithms[e].create();
      } else E = e;
      if (i === null) i = Q;
      else {
        if (typeof i == "string") i = B.util.createBuffer(i);
        else if (B.util.isArray(i)) {
          var a = i;
          i = B.util.createBuffer();
          for (var r = 0; r < a.length; ++r) i.putByte(a[r]);
        }
        var h = i.length();
        for (h > E.blockLength && (E.start(), E.update(i.bytes()), i = E.digest()), C = B.util.createBuffer(), o = B.util.createBuffer(), h = i.length(), r = 0; r < h; ++r) a = i.at(r), C.putByte(54 ^ a), o.putByte(92 ^ a);
        if (h < E.blockLength) for (a = E.blockLength - h, r = 0; r < a; ++r) C.putByte(54), o.putByte(92);
        Q = i, C = C.bytes(), o = o.bytes();
      }
      E.start(), E.update(C);
    }, update: function(e) {
      E.update(e);
    }, getMac: function() {
      var e = E.digest().bytes();
      return E.start(), E.update(o), E.update(e), E.digest();
    } };
    return t.digest = t.getMac, t;
  };
}, 79: (A, g, I) => {
  A.exports = I(832), I(925), I(164), I(68), I(649), I(480), I(69), I(607), I(366), I(145), I(389), I(453), I(960), I(953), I(936), I(147), I(437), I(742), I(654), I(933), I(7), I(563), I(372), I(173), I(311), I(116);
}, 764: (A, g, I) => {
  var B, Q = I(832);
  function E(M, S, k) {
    this.data = [], M != null && (typeof M == "number" ? this.fromNumber(M, S, k) : S == null && typeof M != "string" ? this.fromString(M, 256) : this.fromString(M, S));
  }
  function C() {
    return new E(null);
  }
  function o(M, S, k, v, m, T) {
    for (var $ = 16383 & S, AA = S >> 14; --T >= 0; ) {
      var lA = 16383 & this.data[M], FA = this.data[M++] >> 14, cA = AA * lA + FA * $;
      m = ((lA = $ * lA + ((16383 & cA) << 14) + k.data[v] + m) >> 28) + (cA >> 14) + AA * FA, k.data[v++] = 268435455 & lA;
    }
    return m;
  }
  A.exports = Q.jsbn = Q.jsbn || {}, Q.jsbn.BigInteger = E, typeof navigator > "u" ? (E.prototype.am = o, B = 28) : navigator.appName == "Microsoft Internet Explorer" ? (E.prototype.am = function(M, S, k, v, m, T) {
    for (var $ = 32767 & S, AA = S >> 15; --T >= 0; ) {
      var lA = 32767 & this.data[M], FA = this.data[M++] >> 15, cA = AA * lA + FA * $;
      m = ((lA = $ * lA + ((32767 & cA) << 15) + k.data[v] + (1073741823 & m)) >>> 30) + (cA >>> 15) + AA * FA + (m >>> 30), k.data[v++] = 1073741823 & lA;
    }
    return m;
  }, B = 30) : navigator.appName != "Netscape" ? (E.prototype.am = function(M, S, k, v, m, T) {
    for (; --T >= 0; ) {
      var $ = S * this.data[M++] + k.data[v] + m;
      m = Math.floor($ / 67108864), k.data[v++] = 67108863 & $;
    }
    return m;
  }, B = 26) : (E.prototype.am = o, B = 28), E.prototype.DB = B, E.prototype.DM = (1 << B) - 1, E.prototype.DV = 1 << B, E.prototype.FV = Math.pow(2, 52), E.prototype.F1 = 52 - B, E.prototype.F2 = 2 * B - 52;
  var t, e, i = new Array();
  for (t = 48, e = 0; e <= 9; ++e) i[t++] = e;
  for (t = 97, e = 10; e < 36; ++e) i[t++] = e;
  for (t = 65, e = 10; e < 36; ++e) i[t++] = e;
  function a(M) {
    return "0123456789abcdefghijklmnopqrstuvwxyz".charAt(M);
  }
  function r(M, S) {
    var k = i[M.charCodeAt(S)];
    return k ?? -1;
  }
  function h(M) {
    var S = C();
    return S.fromInt(M), S;
  }
  function n(M) {
    var S, k = 1;
    return (S = M >>> 16) != 0 && (M = S, k += 16), (S = M >> 8) != 0 && (M = S, k += 8), (S = M >> 4) != 0 && (M = S, k += 4), (S = M >> 2) != 0 && (M = S, k += 2), (S = M >> 1) != 0 && (M = S, k += 1), k;
  }
  function l(M) {
    this.m = M;
  }
  function y(M) {
    this.m = M, this.mp = M.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << M.DB - 15) - 1, this.mt2 = 2 * M.t;
  }
  function N(M, S) {
    return M & S;
  }
  function s(M, S) {
    return M | S;
  }
  function F(M, S) {
    return M ^ S;
  }
  function u(M, S) {
    return M & ~S;
  }
  function U(M) {
    if (M == 0) return -1;
    var S = 0;
    return !(65535 & M) && (M >>= 16, S += 16), !(255 & M) && (M >>= 8, S += 8), !(15 & M) && (M >>= 4, S += 4), !(3 & M) && (M >>= 2, S += 2), !(1 & M) && ++S, S;
  }
  function J(M) {
    for (var S = 0; M != 0; ) M &= M - 1, ++S;
    return S;
  }
  function L() {
  }
  function f(M) {
    return M;
  }
  function d(M) {
    this.r2 = C(), this.q3 = C(), E.ONE.dlShiftTo(2 * M.t, this.r2), this.mu = this.r2.divide(M), this.m = M;
  }
  l.prototype.convert = function(M) {
    return M.s < 0 || M.compareTo(this.m) >= 0 ? M.mod(this.m) : M;
  }, l.prototype.revert = function(M) {
    return M;
  }, l.prototype.reduce = function(M) {
    M.divRemTo(this.m, null, M);
  }, l.prototype.mulTo = function(M, S, k) {
    M.multiplyTo(S, k), this.reduce(k);
  }, l.prototype.sqrTo = function(M, S) {
    M.squareTo(S), this.reduce(S);
  }, y.prototype.convert = function(M) {
    var S = C();
    return M.abs().dlShiftTo(this.m.t, S), S.divRemTo(this.m, null, S), M.s < 0 && S.compareTo(E.ZERO) > 0 && this.m.subTo(S, S), S;
  }, y.prototype.revert = function(M) {
    var S = C();
    return M.copyTo(S), this.reduce(S), S;
  }, y.prototype.reduce = function(M) {
    for (; M.t <= this.mt2; ) M.data[M.t++] = 0;
    for (var S = 0; S < this.m.t; ++S) {
      var k = 32767 & M.data[S], v = k * this.mpl + ((k * this.mph + (M.data[S] >> 15) * this.mpl & this.um) << 15) & M.DM;
      for (k = S + this.m.t, M.data[k] += this.m.am(0, v, M, S, 0, this.m.t); M.data[k] >= M.DV; ) M.data[k] -= M.DV, M.data[++k]++;
    }
    M.clamp(), M.drShiftTo(this.m.t, M), M.compareTo(this.m) >= 0 && M.subTo(this.m, M);
  }, y.prototype.mulTo = function(M, S, k) {
    M.multiplyTo(S, k), this.reduce(k);
  }, y.prototype.sqrTo = function(M, S) {
    M.squareTo(S), this.reduce(S);
  }, E.prototype.copyTo = function(M) {
    for (var S = this.t - 1; S >= 0; --S) M.data[S] = this.data[S];
    M.t = this.t, M.s = this.s;
  }, E.prototype.fromInt = function(M) {
    this.t = 1, this.s = M < 0 ? -1 : 0, M > 0 ? this.data[0] = M : M < -1 ? this.data[0] = M + this.DV : this.t = 0;
  }, E.prototype.fromString = function(M, S) {
    var k;
    if (S == 16) k = 4;
    else if (S == 8) k = 3;
    else if (S == 256) k = 8;
    else if (S == 2) k = 1;
    else if (S == 32) k = 5;
    else {
      if (S != 4) return void this.fromRadix(M, S);
      k = 2;
    }
    this.t = 0, this.s = 0;
    for (var v = M.length, m = !1, T = 0; --v >= 0; ) {
      var $ = k == 8 ? 255 & M[v] : r(M, v);
      $ < 0 ? M.charAt(v) == "-" && (m = !0) : (m = !1, T == 0 ? this.data[this.t++] = $ : T + k > this.DB ? (this.data[this.t - 1] |= ($ & (1 << this.DB - T) - 1) << T, this.data[this.t++] = $ >> this.DB - T) : this.data[this.t - 1] |= $ << T, (T += k) >= this.DB && (T -= this.DB));
    }
    k == 8 && 128 & M[0] && (this.s = -1, T > 0 && (this.data[this.t - 1] |= (1 << this.DB - T) - 1 << T)), this.clamp(), m && E.ZERO.subTo(this, this);
  }, E.prototype.clamp = function() {
    for (var M = this.s & this.DM; this.t > 0 && this.data[this.t - 1] == M; ) --this.t;
  }, E.prototype.dlShiftTo = function(M, S) {
    var k;
    for (k = this.t - 1; k >= 0; --k) S.data[k + M] = this.data[k];
    for (k = M - 1; k >= 0; --k) S.data[k] = 0;
    S.t = this.t + M, S.s = this.s;
  }, E.prototype.drShiftTo = function(M, S) {
    for (var k = M; k < this.t; ++k) S.data[k - M] = this.data[k];
    S.t = Math.max(this.t - M, 0), S.s = this.s;
  }, E.prototype.lShiftTo = function(M, S) {
    var k, v = M % this.DB, m = this.DB - v, T = (1 << m) - 1, $ = Math.floor(M / this.DB), AA = this.s << v & this.DM;
    for (k = this.t - 1; k >= 0; --k) S.data[k + $ + 1] = this.data[k] >> m | AA, AA = (this.data[k] & T) << v;
    for (k = $ - 1; k >= 0; --k) S.data[k] = 0;
    S.data[$] = AA, S.t = this.t + $ + 1, S.s = this.s, S.clamp();
  }, E.prototype.rShiftTo = function(M, S) {
    S.s = this.s;
    var k = Math.floor(M / this.DB);
    if (k >= this.t) S.t = 0;
    else {
      var v = M % this.DB, m = this.DB - v, T = (1 << v) - 1;
      S.data[0] = this.data[k] >> v;
      for (var $ = k + 1; $ < this.t; ++$) S.data[$ - k - 1] |= (this.data[$] & T) << m, S.data[$ - k] = this.data[$] >> v;
      v > 0 && (S.data[this.t - k - 1] |= (this.s & T) << m), S.t = this.t - k, S.clamp();
    }
  }, E.prototype.subTo = function(M, S) {
    for (var k = 0, v = 0, m = Math.min(M.t, this.t); k < m; ) v += this.data[k] - M.data[k], S.data[k++] = v & this.DM, v >>= this.DB;
    if (M.t < this.t) {
      for (v -= M.s; k < this.t; ) v += this.data[k], S.data[k++] = v & this.DM, v >>= this.DB;
      v += this.s;
    } else {
      for (v += this.s; k < M.t; ) v -= M.data[k], S.data[k++] = v & this.DM, v >>= this.DB;
      v -= M.s;
    }
    S.s = v < 0 ? -1 : 0, v < -1 ? S.data[k++] = this.DV + v : v > 0 && (S.data[k++] = v), S.t = k, S.clamp();
  }, E.prototype.multiplyTo = function(M, S) {
    var k = this.abs(), v = M.abs(), m = k.t;
    for (S.t = m + v.t; --m >= 0; ) S.data[m] = 0;
    for (m = 0; m < v.t; ++m) S.data[m + k.t] = k.am(0, v.data[m], S, m, 0, k.t);
    S.s = 0, S.clamp(), this.s != M.s && E.ZERO.subTo(S, S);
  }, E.prototype.squareTo = function(M) {
    for (var S = this.abs(), k = M.t = 2 * S.t; --k >= 0; ) M.data[k] = 0;
    for (k = 0; k < S.t - 1; ++k) {
      var v = S.am(k, S.data[k], M, 2 * k, 0, 1);
      (M.data[k + S.t] += S.am(k + 1, 2 * S.data[k], M, 2 * k + 1, v, S.t - k - 1)) >= S.DV && (M.data[k + S.t] -= S.DV, M.data[k + S.t + 1] = 1);
    }
    M.t > 0 && (M.data[M.t - 1] += S.am(k, S.data[k], M, 2 * k, 0, 1)), M.s = 0, M.clamp();
  }, E.prototype.divRemTo = function(M, S, k) {
    var v = M.abs();
    if (!(v.t <= 0)) {
      var m = this.abs();
      if (m.t < v.t) return S != null && S.fromInt(0), void (k != null && this.copyTo(k));
      k == null && (k = C());
      var T = C(), $ = this.s, AA = M.s, lA = this.DB - n(v.data[v.t - 1]);
      lA > 0 ? (v.lShiftTo(lA, T), m.lShiftTo(lA, k)) : (v.copyTo(T), m.copyTo(k));
      var FA = T.t, cA = T.data[FA - 1];
      if (cA != 0) {
        var yA = cA * (1 << this.F1) + (FA > 1 ? T.data[FA - 2] >> this.F2 : 0), aA = this.FV / yA, eA = (1 << this.F1) / yA, CA = 1 << this.F2, b = k.t, Y = b - FA, QA = S ?? C();
        for (T.dlShiftTo(Y, QA), k.compareTo(QA) >= 0 && (k.data[k.t++] = 1, k.subTo(QA, k)), E.ONE.dlShiftTo(FA, QA), QA.subTo(T, T); T.t < FA; ) T.data[T.t++] = 0;
        for (; --Y >= 0; ) {
          var BA = k.data[--b] == cA ? this.DM : Math.floor(k.data[b] * aA + (k.data[b - 1] + CA) * eA);
          if ((k.data[b] += T.am(0, BA, k, Y, 0, FA)) < BA) for (T.dlShiftTo(Y, QA), k.subTo(QA, k); k.data[b] < --BA; ) k.subTo(QA, k);
        }
        S != null && (k.drShiftTo(FA, S), $ != AA && E.ZERO.subTo(S, S)), k.t = FA, k.clamp(), lA > 0 && k.rShiftTo(lA, k), $ < 0 && E.ZERO.subTo(k, k);
      }
    }
  }, E.prototype.invDigit = function() {
    if (this.t < 1) return 0;
    var M = this.data[0];
    if (!(1 & M)) return 0;
    var S = 3 & M;
    return (S = (S = (S = (S = S * (2 - (15 & M) * S) & 15) * (2 - (255 & M) * S) & 255) * (2 - ((65535 & M) * S & 65535)) & 65535) * (2 - M * S % this.DV) % this.DV) > 0 ? this.DV - S : -S;
  }, E.prototype.isEven = function() {
    return (this.t > 0 ? 1 & this.data[0] : this.s) == 0;
  }, E.prototype.exp = function(M, S) {
    if (M > 4294967295 || M < 1) return E.ONE;
    var k = C(), v = C(), m = S.convert(this), T = n(M) - 1;
    for (m.copyTo(k); --T >= 0; ) if (S.sqrTo(k, v), (M & 1 << T) > 0) S.mulTo(v, m, k);
    else {
      var $ = k;
      k = v, v = $;
    }
    return S.revert(k);
  }, E.prototype.toString = function(M) {
    if (this.s < 0) return "-" + this.negate().toString(M);
    var S;
    if (M == 16) S = 4;
    else if (M == 8) S = 3;
    else if (M == 2) S = 1;
    else if (M == 32) S = 5;
    else {
      if (M != 4) return this.toRadix(M);
      S = 2;
    }
    var k, v = (1 << S) - 1, m = !1, T = "", $ = this.t, AA = this.DB - $ * this.DB % S;
    if ($-- > 0) for (AA < this.DB && (k = this.data[$] >> AA) > 0 && (m = !0, T = a(k)); $ >= 0; ) AA < S ? (k = (this.data[$] & (1 << AA) - 1) << S - AA, k |= this.data[--$] >> (AA += this.DB - S)) : (k = this.data[$] >> (AA -= S) & v, AA <= 0 && (AA += this.DB, --$)), k > 0 && (m = !0), m && (T += a(k));
    return m ? T : "0";
  }, E.prototype.negate = function() {
    var M = C();
    return E.ZERO.subTo(this, M), M;
  }, E.prototype.abs = function() {
    return this.s < 0 ? this.negate() : this;
  }, E.prototype.compareTo = function(M) {
    var S = this.s - M.s;
    if (S != 0) return S;
    var k = this.t;
    if ((S = k - M.t) != 0) return this.s < 0 ? -S : S;
    for (; --k >= 0; ) if ((S = this.data[k] - M.data[k]) != 0) return S;
    return 0;
  }, E.prototype.bitLength = function() {
    return this.t <= 0 ? 0 : this.DB * (this.t - 1) + n(this.data[this.t - 1] ^ this.s & this.DM);
  }, E.prototype.mod = function(M) {
    var S = C();
    return this.abs().divRemTo(M, null, S), this.s < 0 && S.compareTo(E.ZERO) > 0 && M.subTo(S, S), S;
  }, E.prototype.modPowInt = function(M, S) {
    var k;
    return k = M < 256 || S.isEven() ? new l(S) : new y(S), this.exp(M, k);
  }, E.ZERO = h(0), E.ONE = h(1), L.prototype.convert = f, L.prototype.revert = f, L.prototype.mulTo = function(M, S, k) {
    M.multiplyTo(S, k);
  }, L.prototype.sqrTo = function(M, S) {
    M.squareTo(S);
  }, d.prototype.convert = function(M) {
    if (M.s < 0 || M.t > 2 * this.m.t) return M.mod(this.m);
    if (M.compareTo(this.m) < 0) return M;
    var S = C();
    return M.copyTo(S), this.reduce(S), S;
  }, d.prototype.revert = function(M) {
    return M;
  }, d.prototype.reduce = function(M) {
    for (M.drShiftTo(this.m.t - 1, this.r2), M.t > this.m.t + 1 && (M.t = this.m.t + 1, M.clamp()), this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3), this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); M.compareTo(this.r2) < 0; ) M.dAddOffset(1, this.m.t + 1);
    for (M.subTo(this.r2, M); M.compareTo(this.m) >= 0; ) M.subTo(this.m, M);
  }, d.prototype.mulTo = function(M, S, k) {
    M.multiplyTo(S, k), this.reduce(k);
  }, d.prototype.sqrTo = function(M, S) {
    M.squareTo(S), this.reduce(S);
  };
  var p = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509], x = (1 << 26) / p[p.length - 1];
  E.prototype.chunkSize = function(M) {
    return Math.floor(Math.LN2 * this.DB / Math.log(M));
  }, E.prototype.toRadix = function(M) {
    if (M == null && (M = 10), this.signum() == 0 || M < 2 || M > 36) return "0";
    var S = this.chunkSize(M), k = Math.pow(M, S), v = h(k), m = C(), T = C(), $ = "";
    for (this.divRemTo(v, m, T); m.signum() > 0; ) $ = (k + T.intValue()).toString(M).substr(1) + $, m.divRemTo(v, m, T);
    return T.intValue().toString(M) + $;
  }, E.prototype.fromRadix = function(M, S) {
    this.fromInt(0), S == null && (S = 10);
    for (var k = this.chunkSize(S), v = Math.pow(S, k), m = !1, T = 0, $ = 0, AA = 0; AA < M.length; ++AA) {
      var lA = r(M, AA);
      lA < 0 ? M.charAt(AA) == "-" && this.signum() == 0 && (m = !0) : ($ = S * $ + lA, ++T >= k && (this.dMultiply(v), this.dAddOffset($, 0), T = 0, $ = 0));
    }
    T > 0 && (this.dMultiply(Math.pow(S, T)), this.dAddOffset($, 0)), m && E.ZERO.subTo(this, this);
  }, E.prototype.fromNumber = function(M, S, k) {
    if (typeof S == "number") if (M < 2) this.fromInt(1);
    else for (this.fromNumber(M, k), this.testBit(M - 1) || this.bitwiseTo(E.ONE.shiftLeft(M - 1), s, this), this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(S); ) this.dAddOffset(2, 0), this.bitLength() > M && this.subTo(E.ONE.shiftLeft(M - 1), this);
    else {
      var v = new Array(), m = 7 & M;
      v.length = 1 + (M >> 3), S.nextBytes(v), m > 0 ? v[0] &= (1 << m) - 1 : v[0] = 0, this.fromString(v, 256);
    }
  }, E.prototype.bitwiseTo = function(M, S, k) {
    var v, m, T = Math.min(M.t, this.t);
    for (v = 0; v < T; ++v) k.data[v] = S(this.data[v], M.data[v]);
    if (M.t < this.t) {
      for (m = M.s & this.DM, v = T; v < this.t; ++v) k.data[v] = S(this.data[v], m);
      k.t = this.t;
    } else {
      for (m = this.s & this.DM, v = T; v < M.t; ++v) k.data[v] = S(m, M.data[v]);
      k.t = M.t;
    }
    k.s = S(this.s, M.s), k.clamp();
  }, E.prototype.changeBit = function(M, S) {
    var k = E.ONE.shiftLeft(M);
    return this.bitwiseTo(k, S, k), k;
  }, E.prototype.addTo = function(M, S) {
    for (var k = 0, v = 0, m = Math.min(M.t, this.t); k < m; ) v += this.data[k] + M.data[k], S.data[k++] = v & this.DM, v >>= this.DB;
    if (M.t < this.t) {
      for (v += M.s; k < this.t; ) v += this.data[k], S.data[k++] = v & this.DM, v >>= this.DB;
      v += this.s;
    } else {
      for (v += this.s; k < M.t; ) v += M.data[k], S.data[k++] = v & this.DM, v >>= this.DB;
      v += M.s;
    }
    S.s = v < 0 ? -1 : 0, v > 0 ? S.data[k++] = v : v < -1 && (S.data[k++] = this.DV + v), S.t = k, S.clamp();
  }, E.prototype.dMultiply = function(M) {
    this.data[this.t] = this.am(0, M - 1, this, 0, 0, this.t), ++this.t, this.clamp();
  }, E.prototype.dAddOffset = function(M, S) {
    if (M != 0) {
      for (; this.t <= S; ) this.data[this.t++] = 0;
      for (this.data[S] += M; this.data[S] >= this.DV; ) this.data[S] -= this.DV, ++S >= this.t && (this.data[this.t++] = 0), ++this.data[S];
    }
  }, E.prototype.multiplyLowerTo = function(M, S, k) {
    var v, m = Math.min(this.t + M.t, S);
    for (k.s = 0, k.t = m; m > 0; ) k.data[--m] = 0;
    for (v = k.t - this.t; m < v; ++m) k.data[m + this.t] = this.am(0, M.data[m], k, m, 0, this.t);
    for (v = Math.min(M.t, S); m < v; ++m) this.am(0, M.data[m], k, m, 0, S - m);
    k.clamp();
  }, E.prototype.multiplyUpperTo = function(M, S, k) {
    --S;
    var v = k.t = this.t + M.t - S;
    for (k.s = 0; --v >= 0; ) k.data[v] = 0;
    for (v = Math.max(S - this.t, 0); v < M.t; ++v) k.data[this.t + v - S] = this.am(S - v, M.data[v], k, 0, 0, this.t + v - S);
    k.clamp(), k.drShiftTo(1, k);
  }, E.prototype.modInt = function(M) {
    if (M <= 0) return 0;
    var S = this.DV % M, k = this.s < 0 ? M - 1 : 0;
    if (this.t > 0) if (S == 0) k = this.data[0] % M;
    else for (var v = this.t - 1; v >= 0; --v) k = (S * k + this.data[v]) % M;
    return k;
  }, E.prototype.millerRabin = function(M) {
    var S = this.subtract(E.ONE), k = S.getLowestSetBit();
    if (k <= 0) return !1;
    for (var v, m = S.shiftRight(k), T = { nextBytes: function(FA) {
      for (var cA = 0; cA < FA.length; ++cA) FA[cA] = Math.floor(256 * Math.random());
    } }, $ = 0; $ < M; ++$) {
      do
        v = new E(this.bitLength(), T);
      while (v.compareTo(E.ONE) <= 0 || v.compareTo(S) >= 0);
      var AA = v.modPow(m, this);
      if (AA.compareTo(E.ONE) != 0 && AA.compareTo(S) != 0) {
        for (var lA = 1; lA++ < k && AA.compareTo(S) != 0; ) if ((AA = AA.modPowInt(2, this)).compareTo(E.ONE) == 0) return !1;
        if (AA.compareTo(S) != 0) return !1;
      }
    }
    return !0;
  }, E.prototype.clone = function() {
    var M = C();
    return this.copyTo(M), M;
  }, E.prototype.intValue = function() {
    if (this.s < 0) {
      if (this.t == 1) return this.data[0] - this.DV;
      if (this.t == 0) return -1;
    } else {
      if (this.t == 1) return this.data[0];
      if (this.t == 0) return 0;
    }
    return (this.data[1] & (1 << 32 - this.DB) - 1) << this.DB | this.data[0];
  }, E.prototype.byteValue = function() {
    return this.t == 0 ? this.s : this.data[0] << 24 >> 24;
  }, E.prototype.shortValue = function() {
    return this.t == 0 ? this.s : this.data[0] << 16 >> 16;
  }, E.prototype.signum = function() {
    return this.s < 0 ? -1 : this.t <= 0 || this.t == 1 && this.data[0] <= 0 ? 0 : 1;
  }, E.prototype.toByteArray = function() {
    var M = this.t, S = new Array();
    S[0] = this.s;
    var k, v = this.DB - M * this.DB % 8, m = 0;
    if (M-- > 0) for (v < this.DB && (k = this.data[M] >> v) != (this.s & this.DM) >> v && (S[m++] = k | this.s << this.DB - v); M >= 0; ) v < 8 ? (k = (this.data[M] & (1 << v) - 1) << 8 - v, k |= this.data[--M] >> (v += this.DB - 8)) : (k = this.data[M] >> (v -= 8) & 255, v <= 0 && (v += this.DB, --M)), 128 & k && (k |= -256), m == 0 && (128 & this.s) != (128 & k) && ++m, (m > 0 || k != this.s) && (S[m++] = k);
    return S;
  }, E.prototype.equals = function(M) {
    return this.compareTo(M) == 0;
  }, E.prototype.min = function(M) {
    return this.compareTo(M) < 0 ? this : M;
  }, E.prototype.max = function(M) {
    return this.compareTo(M) > 0 ? this : M;
  }, E.prototype.and = function(M) {
    var S = C();
    return this.bitwiseTo(M, N, S), S;
  }, E.prototype.or = function(M) {
    var S = C();
    return this.bitwiseTo(M, s, S), S;
  }, E.prototype.xor = function(M) {
    var S = C();
    return this.bitwiseTo(M, F, S), S;
  }, E.prototype.andNot = function(M) {
    var S = C();
    return this.bitwiseTo(M, u, S), S;
  }, E.prototype.not = function() {
    for (var M = C(), S = 0; S < this.t; ++S) M.data[S] = this.DM & ~this.data[S];
    return M.t = this.t, M.s = ~this.s, M;
  }, E.prototype.shiftLeft = function(M) {
    var S = C();
    return M < 0 ? this.rShiftTo(-M, S) : this.lShiftTo(M, S), S;
  }, E.prototype.shiftRight = function(M) {
    var S = C();
    return M < 0 ? this.lShiftTo(-M, S) : this.rShiftTo(M, S), S;
  }, E.prototype.getLowestSetBit = function() {
    for (var M = 0; M < this.t; ++M) if (this.data[M] != 0) return M * this.DB + U(this.data[M]);
    return this.s < 0 ? this.t * this.DB : -1;
  }, E.prototype.bitCount = function() {
    for (var M = 0, S = this.s & this.DM, k = 0; k < this.t; ++k) M += J(this.data[k] ^ S);
    return M;
  }, E.prototype.testBit = function(M) {
    var S = Math.floor(M / this.DB);
    return S >= this.t ? this.s != 0 : (this.data[S] & 1 << M % this.DB) != 0;
  }, E.prototype.setBit = function(M) {
    return this.changeBit(M, s);
  }, E.prototype.clearBit = function(M) {
    return this.changeBit(M, u);
  }, E.prototype.flipBit = function(M) {
    return this.changeBit(M, F);
  }, E.prototype.add = function(M) {
    var S = C();
    return this.addTo(M, S), S;
  }, E.prototype.subtract = function(M) {
    var S = C();
    return this.subTo(M, S), S;
  }, E.prototype.multiply = function(M) {
    var S = C();
    return this.multiplyTo(M, S), S;
  }, E.prototype.divide = function(M) {
    var S = C();
    return this.divRemTo(M, S, null), S;
  }, E.prototype.remainder = function(M) {
    var S = C();
    return this.divRemTo(M, null, S), S;
  }, E.prototype.divideAndRemainder = function(M) {
    var S = C(), k = C();
    return this.divRemTo(M, S, k), new Array(S, k);
  }, E.prototype.modPow = function(M, S) {
    var k, v, m = M.bitLength(), T = h(1);
    if (m <= 0) return T;
    k = m < 18 ? 1 : m < 48 ? 3 : m < 144 ? 4 : m < 768 ? 5 : 6, v = m < 8 ? new l(S) : S.isEven() ? new d(S) : new y(S);
    var $ = new Array(), AA = 3, lA = k - 1, FA = (1 << k) - 1;
    if ($[1] = v.convert(this), k > 1) {
      var cA = C();
      for (v.sqrTo($[1], cA); AA <= FA; ) $[AA] = C(), v.mulTo(cA, $[AA - 2], $[AA]), AA += 2;
    }
    var yA, aA, eA = M.t - 1, CA = !0, b = C();
    for (m = n(M.data[eA]) - 1; eA >= 0; ) {
      for (m >= lA ? yA = M.data[eA] >> m - lA & FA : (yA = (M.data[eA] & (1 << m + 1) - 1) << lA - m, eA > 0 && (yA |= M.data[eA - 1] >> this.DB + m - lA)), AA = k; !(1 & yA); ) yA >>= 1, --AA;
      if ((m -= AA) < 0 && (m += this.DB, --eA), CA) $[yA].copyTo(T), CA = !1;
      else {
        for (; AA > 1; ) v.sqrTo(T, b), v.sqrTo(b, T), AA -= 2;
        AA > 0 ? v.sqrTo(T, b) : (aA = T, T = b, b = aA), v.mulTo(b, $[yA], T);
      }
      for (; eA >= 0 && !(M.data[eA] & 1 << m); ) v.sqrTo(T, b), aA = T, T = b, b = aA, --m < 0 && (m = this.DB - 1, --eA);
    }
    return v.revert(T);
  }, E.prototype.modInverse = function(M) {
    var S = M.isEven();
    if (this.isEven() && S || M.signum() == 0) return E.ZERO;
    for (var k = M.clone(), v = this.clone(), m = h(1), T = h(0), $ = h(0), AA = h(1); k.signum() != 0; ) {
      for (; k.isEven(); ) k.rShiftTo(1, k), S ? (m.isEven() && T.isEven() || (m.addTo(this, m), T.subTo(M, T)), m.rShiftTo(1, m)) : T.isEven() || T.subTo(M, T), T.rShiftTo(1, T);
      for (; v.isEven(); ) v.rShiftTo(1, v), S ? ($.isEven() && AA.isEven() || ($.addTo(this, $), AA.subTo(M, AA)), $.rShiftTo(1, $)) : AA.isEven() || AA.subTo(M, AA), AA.rShiftTo(1, AA);
      k.compareTo(v) >= 0 ? (k.subTo(v, k), S && m.subTo($, m), T.subTo(AA, T)) : (v.subTo(k, v), S && $.subTo(m, $), AA.subTo(T, AA));
    }
    return v.compareTo(E.ONE) != 0 ? E.ZERO : AA.compareTo(M) >= 0 ? AA.subtract(M) : AA.signum() < 0 ? (AA.addTo(M, AA), AA.signum() < 0 ? AA.add(M) : AA) : AA;
  }, E.prototype.pow = function(M) {
    return this.exp(M, new L());
  }, E.prototype.gcd = function(M) {
    var S = this.s < 0 ? this.negate() : this.clone(), k = M.s < 0 ? M.negate() : M.clone();
    if (S.compareTo(k) < 0) {
      var v = S;
      S = k, k = v;
    }
    var m = S.getLowestSetBit(), T = k.getLowestSetBit();
    if (T < 0) return S;
    for (m < T && (T = m), T > 0 && (S.rShiftTo(T, S), k.rShiftTo(T, k)); S.signum() > 0; ) (m = S.getLowestSetBit()) > 0 && S.rShiftTo(m, S), (m = k.getLowestSetBit()) > 0 && k.rShiftTo(m, k), S.compareTo(k) >= 0 ? (S.subTo(k, S), S.rShiftTo(1, S)) : (k.subTo(S, k), k.rShiftTo(1, k));
    return T > 0 && k.lShiftTo(T, k), k;
  }, E.prototype.isProbablePrime = function(M) {
    var S, k = this.abs();
    if (k.t == 1 && k.data[0] <= p[p.length - 1]) {
      for (S = 0; S < p.length; ++S) if (k.data[0] == p[S]) return !0;
      return !1;
    }
    if (k.isEven()) return !1;
    for (S = 1; S < p.length; ) {
      for (var v = p[S], m = S + 1; m < p.length && v < x; ) v *= p[m++];
      for (v = k.modInt(v); S < m; ) if (v % p[S++] == 0) return !1;
    }
    return k.millerRabin(M);
  };
}, 366: (A, g, I) => {
  var B = I(832);
  I(116), I(563), I(764), A.exports = B.kem = B.kem || {};
  var Q = B.jsbn.BigInteger;
  function E(C, o, t, e) {
    C.generate = function(i, a) {
      for (var r = new B.util.ByteBuffer(), h = Math.ceil(a / e) + t, n = new B.util.ByteBuffer(), l = t; l < h; ++l) {
        n.putInt32(l), o.start(), o.update(i + n.getBytes());
        var y = o.digest();
        r.putBytes(y.getBytes(e));
      }
      return r.truncate(r.length() - a), r.getBytes();
    };
  }
  B.kem.rsa = {}, B.kem.rsa.create = function(C, o) {
    var t = (o = o || {}).prng || B.random;
    return { encrypt: function(e, i) {
      var a, r = Math.ceil(e.n.bitLength() / 8);
      do
        a = new Q(B.util.bytesToHex(t.getBytesSync(r)), 16).mod(e.n);
      while (a.compareTo(Q.ONE) <= 0);
      var h = r - (a = B.util.hexToBytes(a.toString(16))).length;
      return h > 0 && (a = B.util.fillString("\0", h) + a), { encapsulation: e.encrypt(a, "NONE"), key: C.generate(a, i) };
    }, decrypt: function(e, i, a) {
      var r = e.decrypt(i, "NONE");
      return C.generate(r, a);
    } };
  }, B.kem.kdf1 = function(C, o) {
    E(this, C, 0, o || C.digestLength);
  }, B.kem.kdf2 = function(C, o) {
    E(this, C, 1, o || C.digestLength);
  };
}, 145: (A, g, I) => {
  var B = I(832);
  I(116), A.exports = B.log = B.log || {}, B.log.levels = ["none", "error", "warning", "info", "debug", "verbose", "max"];
  var Q = {}, E = [], C = null;
  B.log.LEVEL_LOCKED = 2, B.log.NO_LEVEL_CHECK = 4, B.log.INTERPOLATE = 8;
  for (var o = 0; o < B.log.levels.length; ++o) {
    var t = B.log.levels[o];
    Q[t] = { index: o, name: t.toUpperCase() };
  }
  B.log.logMessage = function(n) {
    for (var l = Q[n.level].index, y = 0; y < E.length; ++y) {
      var N = E[y];
      N.flags & B.log.NO_LEVEL_CHECK ? N.f(n) : l <= Q[N.level].index && N.f(N, n);
    }
  }, B.log.prepareStandard = function(n) {
    "standard" in n || (n.standard = Q[n.level].name + " [" + n.category + "] " + n.message);
  }, B.log.prepareFull = function(n) {
    if (!("full" in n)) {
      var l = [n.message];
      l = l.concat([]), n.full = B.util.format.apply(this, l);
    }
  }, B.log.prepareStandardFull = function(n) {
    "standardFull" in n || (B.log.prepareStandard(n), n.standardFull = n.standard);
  };
  var e = ["error", "warning", "info", "debug", "verbose"];
  for (o = 0; o < e.length; ++o) (function(n) {
    B.log[n] = function(l, y) {
      var N = Array.prototype.slice.call(arguments).slice(2), s = { timestamp: /* @__PURE__ */ new Date(), level: n, category: l, message: y, arguments: N };
      B.log.logMessage(s);
    };
  })(e[o]);
  if (B.log.makeLogger = function(n) {
    var l = { flags: 0, f: n };
    return B.log.setLevel(l, "none"), l;
  }, B.log.setLevel = function(n, l) {
    var y = !1;
    if (n && !(n.flags & B.log.LEVEL_LOCKED)) {
      for (var N = 0; N < B.log.levels.length; ++N) if (l == B.log.levels[N]) {
        n.level = l, y = !0;
        break;
      }
    }
    return y;
  }, B.log.lock = function(n, l) {
    l === void 0 || l ? n.flags |= B.log.LEVEL_LOCKED : n.flags &= ~B.log.LEVEL_LOCKED;
  }, B.log.addLogger = function(n) {
    E.push(n);
  }, typeof console < "u" && "log" in console) {
    var i;
    if (console.error && console.warn && console.info && console.debug) {
      var a = { error: console.error, warning: console.warn, info: console.info, debug: console.debug, verbose: console.debug }, r = function(n, l) {
        B.log.prepareStandard(l);
        var y = a[l.level], N = [l.standard];
        N = N.concat(l.arguments.slice()), y.apply(console, N);
      };
      i = B.log.makeLogger(r);
    } else r = function(n, l) {
      B.log.prepareStandardFull(l), console.log(l.standardFull);
    }, i = B.log.makeLogger(r);
    B.log.setLevel(i, "debug"), B.log.addLogger(i), C = i;
  } else console = { log: function() {
  } };
  if (C !== null && typeof window < "u" && window.location) {
    var h = new URL(window.location.href).searchParams;
    h.has("console.level") && B.log.setLevel(C, h.get("console.level").slice(-1)[0]), h.has("console.lock") && h.get("console.lock").slice(-1)[0] == "true" && B.log.lock(C);
  }
  B.log.consoleLogger = C;
}, 389: (A, g, I) => {
  A.exports = I(991), I(63), I(137), I(668), I(219);
}, 991: (A, g, I) => {
  var B = I(832);
  A.exports = B.md = B.md || {}, B.md.algorithms = B.md.algorithms || {};
}, 63: (A, g, I) => {
  var B = I(832);
  I(991), I(116);
  var Q = A.exports = B.md5 = B.md5 || {};
  B.md.md5 = B.md.algorithms.md5 = Q, Q.create = function() {
    e || function() {
      E = "", E += B.util.fillString("\0", 64), C = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2, 0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9], o = [7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21], t = new Array(64);
      for (var l = 0; l < 64; ++l) t[l] = Math.floor(4294967296 * Math.abs(Math.sin(l + 1)));
      e = !0;
    }();
    var a = null, r = B.util.createBuffer(), h = new Array(16), n = { algorithm: "md5", blockLength: 64, digestLength: 16, messageLength: 0, fullMessageLength: null, messageLengthSize: 8, start: function() {
      n.messageLength = 0, n.fullMessageLength = n.messageLength64 = [];
      for (var l = n.messageLengthSize / 4, y = 0; y < l; ++y) n.fullMessageLength.push(0);
      return r = B.util.createBuffer(), a = { h0: 1732584193, h1: 4023233417, h2: 2562383102, h3: 271733878 }, n;
    } };
    return n.start(), n.update = function(l, y) {
      y === "utf8" && (l = B.util.encodeUtf8(l));
      var N = l.length;
      n.messageLength += N, N = [N / 4294967296 >>> 0, N >>> 0];
      for (var s = n.fullMessageLength.length - 1; s >= 0; --s) n.fullMessageLength[s] += N[1], N[1] = N[0] + (n.fullMessageLength[s] / 4294967296 >>> 0), n.fullMessageLength[s] = n.fullMessageLength[s] >>> 0, N[0] = N[1] / 4294967296 >>> 0;
      return r.putBytes(l), i(a, h, r), (r.read > 2048 || r.length() === 0) && r.compact(), n;
    }, n.digest = function() {
      var l = B.util.createBuffer();
      l.putBytes(r.bytes());
      var y = n.fullMessageLength[n.fullMessageLength.length - 1] + n.messageLengthSize & n.blockLength - 1;
      l.putBytes(E.substr(0, n.blockLength - y));
      for (var N, s = 0, F = n.fullMessageLength.length - 1; F >= 0; --F) s = (N = 8 * n.fullMessageLength[F] + s) / 4294967296 >>> 0, l.putInt32Le(N >>> 0);
      var u = { h0: a.h0, h1: a.h1, h2: a.h2, h3: a.h3 };
      i(u, h, l);
      var U = B.util.createBuffer();
      return U.putInt32Le(u.h0), U.putInt32Le(u.h1), U.putInt32Le(u.h2), U.putInt32Le(u.h3), U;
    }, n;
  };
  var E = null, C = null, o = null, t = null, e = !1;
  function i(a, r, h) {
    for (var n, l, y, N, s, F, u, U = h.length(); U >= 64; ) {
      for (l = a.h0, y = a.h1, N = a.h2, s = a.h3, u = 0; u < 16; ++u) r[u] = h.getInt32Le(), n = l + (s ^ y & (N ^ s)) + t[u] + r[u], l = s, s = N, N = y, y += n << (F = o[u]) | n >>> 32 - F;
      for (; u < 32; ++u) n = l + (N ^ s & (y ^ N)) + t[u] + r[C[u]], l = s, s = N, N = y, y += n << (F = o[u]) | n >>> 32 - F;
      for (; u < 48; ++u) n = l + (y ^ N ^ s) + t[u] + r[C[u]], l = s, s = N, N = y, y += n << (F = o[u]) | n >>> 32 - F;
      for (; u < 64; ++u) n = l + (N ^ (y | ~s)) + t[u] + r[C[u]], l = s, s = N, N = y, y += n << (F = o[u]) | n >>> 32 - F;
      a.h0 = a.h0 + l | 0, a.h1 = a.h1 + y | 0, a.h2 = a.h2 + N | 0, a.h3 = a.h3 + s | 0, U -= 64;
    }
  }
}, 971: (A, g, I) => {
  var B = I(832);
  I(453), A.exports = B.mgf = B.mgf || {}, B.mgf.mgf1 = B.mgf1;
}, 453: (A, g, I) => {
  var B = I(832);
  I(116), B.mgf = B.mgf || {}, (A.exports = B.mgf.mgf1 = B.mgf1 = B.mgf1 || {}).create = function(Q) {
    return { generate: function(E, C) {
      for (var o = new B.util.ByteBuffer(), t = Math.ceil(C / Q.digestLength), e = 0; e < t; e++) {
        var i = new B.util.ByteBuffer();
        i.putInt32(e), Q.start(), Q.update(E + i.getBytes()), o.putBuffer(Q.digest());
      }
      return o.truncate(o.length() - C), o.getBytes();
    } };
  };
}, 270: (A, g, I) => {
  var B = I(832);
  B.pki = B.pki || {};
  var Q = A.exports = B.pki.oids = B.oids = B.oids || {};
  function E(o, t) {
    Q[o] = t, Q[t] = o;
  }
  function C(o, t) {
    Q[o] = t;
  }
  E("1.2.840.113549.1.1.1", "rsaEncryption"), E("1.2.840.113549.1.1.4", "md5WithRSAEncryption"), E("1.2.840.113549.1.1.5", "sha1WithRSAEncryption"), E("1.2.840.113549.1.1.7", "RSAES-OAEP"), E("1.2.840.113549.1.1.8", "mgf1"), E("1.2.840.113549.1.1.9", "pSpecified"), E("1.2.840.113549.1.1.10", "RSASSA-PSS"), E("1.2.840.113549.1.1.11", "sha256WithRSAEncryption"), E("1.2.840.113549.1.1.12", "sha384WithRSAEncryption"), E("1.2.840.113549.1.1.13", "sha512WithRSAEncryption"), E("1.3.101.112", "EdDSA25519"), E("1.2.840.10040.4.3", "dsa-with-sha1"), E("1.3.14.3.2.7", "desCBC"), E("1.3.14.3.2.26", "sha1"), E("1.3.14.3.2.29", "sha1WithRSASignature"), E("2.16.840.1.101.3.4.2.1", "sha256"), E("2.16.840.1.101.3.4.2.2", "sha384"), E("2.16.840.1.101.3.4.2.3", "sha512"), E("2.16.840.1.101.3.4.2.4", "sha224"), E("2.16.840.1.101.3.4.2.5", "sha512-224"), E("2.16.840.1.101.3.4.2.6", "sha512-256"), E("1.2.840.113549.2.2", "md2"), E("1.2.840.113549.2.5", "md5"), E("1.2.840.113549.1.7.1", "data"), E("1.2.840.113549.1.7.2", "signedData"), E("1.2.840.113549.1.7.3", "envelopedData"), E("1.2.840.113549.1.7.4", "signedAndEnvelopedData"), E("1.2.840.113549.1.7.5", "digestedData"), E("1.2.840.113549.1.7.6", "encryptedData"), E("1.2.840.113549.1.9.1", "emailAddress"), E("1.2.840.113549.1.9.2", "unstructuredName"), E("1.2.840.113549.1.9.3", "contentType"), E("1.2.840.113549.1.9.4", "messageDigest"), E("1.2.840.113549.1.9.5", "signingTime"), E("1.2.840.113549.1.9.6", "counterSignature"), E("1.2.840.113549.1.9.7", "challengePassword"), E("1.2.840.113549.1.9.8", "unstructuredAddress"), E("1.2.840.113549.1.9.14", "extensionRequest"), E("1.2.840.113549.1.9.20", "friendlyName"), E("1.2.840.113549.1.9.21", "localKeyId"), E("1.2.840.113549.1.9.22.1", "x509Certificate"), E("1.2.840.113549.1.12.10.1.1", "keyBag"), E("1.2.840.113549.1.12.10.1.2", "pkcs8ShroudedKeyBag"), E("1.2.840.113549.1.12.10.1.3", "certBag"), E("1.2.840.113549.1.12.10.1.4", "crlBag"), E("1.2.840.113549.1.12.10.1.5", "secretBag"), E("1.2.840.113549.1.12.10.1.6", "safeContentsBag"), E("1.2.840.113549.1.5.13", "pkcs5PBES2"), E("1.2.840.113549.1.5.12", "pkcs5PBKDF2"), E("1.2.840.113549.1.12.1.1", "pbeWithSHAAnd128BitRC4"), E("1.2.840.113549.1.12.1.2", "pbeWithSHAAnd40BitRC4"), E("1.2.840.113549.1.12.1.3", "pbeWithSHAAnd3-KeyTripleDES-CBC"), E("1.2.840.113549.1.12.1.4", "pbeWithSHAAnd2-KeyTripleDES-CBC"), E("1.2.840.113549.1.12.1.5", "pbeWithSHAAnd128BitRC2-CBC"), E("1.2.840.113549.1.12.1.6", "pbewithSHAAnd40BitRC2-CBC"), E("1.2.840.113549.2.7", "hmacWithSHA1"), E("1.2.840.113549.2.8", "hmacWithSHA224"), E("1.2.840.113549.2.9", "hmacWithSHA256"), E("1.2.840.113549.2.10", "hmacWithSHA384"), E("1.2.840.113549.2.11", "hmacWithSHA512"), E("1.2.840.113549.3.7", "des-EDE3-CBC"), E("2.16.840.1.101.3.4.1.2", "aes128-CBC"), E("2.16.840.1.101.3.4.1.22", "aes192-CBC"), E("2.16.840.1.101.3.4.1.42", "aes256-CBC"), E("2.5.4.3", "commonName"), E("2.5.4.4", "surname"), E("2.5.4.5", "serialNumber"), E("2.5.4.6", "countryName"), E("2.5.4.7", "localityName"), E("2.5.4.8", "stateOrProvinceName"), E("2.5.4.9", "streetAddress"), E("2.5.4.10", "organizationName"), E("2.5.4.11", "organizationalUnitName"), E("2.5.4.12", "title"), E("2.5.4.13", "description"), E("2.5.4.15", "businessCategory"), E("2.5.4.17", "postalCode"), E("2.5.4.42", "givenName"), E("1.3.6.1.4.1.311.60.2.1.2", "jurisdictionOfIncorporationStateOrProvinceName"), E("1.3.6.1.4.1.311.60.2.1.3", "jurisdictionOfIncorporationCountryName"), E("2.16.840.1.113730.1.1", "nsCertType"), E("2.16.840.1.113730.1.13", "nsComment"), C("2.5.29.1", "authorityKeyIdentifier"), C("2.5.29.2", "keyAttributes"), C("2.5.29.3", "certificatePolicies"), C("2.5.29.4", "keyUsageRestriction"), C("2.5.29.5", "policyMapping"), C("2.5.29.6", "subtreesConstraint"), C("2.5.29.7", "subjectAltName"), C("2.5.29.8", "issuerAltName"), C("2.5.29.9", "subjectDirectoryAttributes"), C("2.5.29.10", "basicConstraints"), C("2.5.29.11", "nameConstraints"), C("2.5.29.12", "policyConstraints"), C("2.5.29.13", "basicConstraints"), E("2.5.29.14", "subjectKeyIdentifier"), E("2.5.29.15", "keyUsage"), C("2.5.29.16", "privateKeyUsagePeriod"), E("2.5.29.17", "subjectAltName"), E("2.5.29.18", "issuerAltName"), E("2.5.29.19", "basicConstraints"), C("2.5.29.20", "cRLNumber"), C("2.5.29.21", "cRLReason"), C("2.5.29.22", "expirationDate"), C("2.5.29.23", "instructionCode"), C("2.5.29.24", "invalidityDate"), C("2.5.29.25", "cRLDistributionPoints"), C("2.5.29.26", "issuingDistributionPoint"), C("2.5.29.27", "deltaCRLIndicator"), C("2.5.29.28", "issuingDistributionPoint"), C("2.5.29.29", "certificateIssuer"), C("2.5.29.30", "nameConstraints"), E("2.5.29.31", "cRLDistributionPoints"), E("2.5.29.32", "certificatePolicies"), C("2.5.29.33", "policyMappings"), C("2.5.29.34", "policyConstraints"), E("2.5.29.35", "authorityKeyIdentifier"), C("2.5.29.36", "policyConstraints"), E("2.5.29.37", "extKeyUsage"), C("2.5.29.46", "freshestCRL"), C("2.5.29.54", "inhibitAnyPolicy"), E("1.3.6.1.4.1.11129.2.4.2", "timestampList"), E("1.3.6.1.5.5.7.1.1", "authorityInfoAccess"), E("1.3.6.1.5.5.7.3.1", "serverAuth"), E("1.3.6.1.5.5.7.3.2", "clientAuth"), E("1.3.6.1.5.5.7.3.3", "codeSigning"), E("1.3.6.1.5.5.7.3.4", "emailProtection"), E("1.3.6.1.5.5.7.3.8", "timeStamping");
}, 450: (A, g, I) => {
  var B = I(832);
  if (I(925), I(68), I(480), I(991), I(270), I(960), I(953), I(563), I(372), I(95), I(116), Q === void 0) var Q = B.jsbn.BigInteger;
  var E = B.asn1, C = B.pki = B.pki || {};
  A.exports = C.pbe = B.pbe = B.pbe || {};
  var o = C.oids, t = { name: "EncryptedPrivateKeyInfo", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, value: [{ name: "EncryptedPrivateKeyInfo.encryptionAlgorithm", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, value: [{ name: "AlgorithmIdentifier.algorithm", tagClass: E.Class.UNIVERSAL, type: E.Type.OID, constructed: !1, capture: "encryptionOid" }, { name: "AlgorithmIdentifier.parameters", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, captureAsn1: "encryptionParams" }] }, { name: "EncryptedPrivateKeyInfo.encryptedData", tagClass: E.Class.UNIVERSAL, type: E.Type.OCTETSTRING, constructed: !1, capture: "encryptedData" }] }, e = { name: "PBES2Algorithms", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, value: [{ name: "PBES2Algorithms.keyDerivationFunc", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, value: [{ name: "PBES2Algorithms.keyDerivationFunc.oid", tagClass: E.Class.UNIVERSAL, type: E.Type.OID, constructed: !1, capture: "kdfOid" }, { name: "PBES2Algorithms.params", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, value: [{ name: "PBES2Algorithms.params.salt", tagClass: E.Class.UNIVERSAL, type: E.Type.OCTETSTRING, constructed: !1, capture: "kdfSalt" }, { name: "PBES2Algorithms.params.iterationCount", tagClass: E.Class.UNIVERSAL, type: E.Type.INTEGER, constructed: !1, capture: "kdfIterationCount" }, { name: "PBES2Algorithms.params.keyLength", tagClass: E.Class.UNIVERSAL, type: E.Type.INTEGER, constructed: !1, optional: !0, capture: "keyLength" }, { name: "PBES2Algorithms.params.prf", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, optional: !0, value: [{ name: "PBES2Algorithms.params.prf.algorithm", tagClass: E.Class.UNIVERSAL, type: E.Type.OID, constructed: !1, capture: "prfOid" }] }] }] }, { name: "PBES2Algorithms.encryptionScheme", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, value: [{ name: "PBES2Algorithms.encryptionScheme.oid", tagClass: E.Class.UNIVERSAL, type: E.Type.OID, constructed: !1, capture: "encOid" }, { name: "PBES2Algorithms.encryptionScheme.iv", tagClass: E.Class.UNIVERSAL, type: E.Type.OCTETSTRING, constructed: !1, capture: "encIv" }] }] }, i = { name: "pkcs-12PbeParams", tagClass: E.Class.UNIVERSAL, type: E.Type.SEQUENCE, constructed: !0, value: [{ name: "pkcs-12PbeParams.salt", tagClass: E.Class.UNIVERSAL, type: E.Type.OCTETSTRING, constructed: !1, capture: "salt" }, { name: "pkcs-12PbeParams.iterations", tagClass: E.Class.UNIVERSAL, type: E.Type.INTEGER, constructed: !1, capture: "iterations" }] };
  function a(n, l) {
    return n.start().update(l).digest().getBytes();
  }
  function r(n) {
    var l;
    if (n) {
      if (!(l = C.oids[E.derToOid(n)])) {
        var y = new Error("Unsupported PRF OID.");
        throw y.oid = n, y.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"], y;
      }
    } else l = "hmacWithSHA1";
    return h(l);
  }
  function h(n) {
    var l = B.md;
    switch (n) {
      case "hmacWithSHA224":
        l = B.md.sha512;
      case "hmacWithSHA1":
      case "hmacWithSHA256":
      case "hmacWithSHA384":
      case "hmacWithSHA512":
        n = n.substr(8).toLowerCase();
        break;
      default:
        var y = new Error("Unsupported PRF algorithm.");
        throw y.algorithm = n, y.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"], y;
    }
    if (!l || !(n in l)) throw new Error("Unknown hash algorithm: " + n);
    return l[n].create();
  }
  C.encryptPrivateKeyInfo = function(n, l, y) {
    (y = y || {}).saltSize = y.saltSize || 8, y.count = y.count || 2048, y.algorithm = y.algorithm || "aes128", y.prfAlgorithm = y.prfAlgorithm || "sha1";
    var N, s, F, u = B.random.getBytesSync(y.saltSize), U = y.count, J = E.integerToDer(U);
    if (y.algorithm.indexOf("aes") === 0 || y.algorithm === "des") {
      var L, f, d;
      switch (y.algorithm) {
        case "aes128":
          N = 16, L = 16, f = o["aes128-CBC"], d = B.aes.createEncryptionCipher;
          break;
        case "aes192":
          N = 24, L = 16, f = o["aes192-CBC"], d = B.aes.createEncryptionCipher;
          break;
        case "aes256":
          N = 32, L = 16, f = o["aes256-CBC"], d = B.aes.createEncryptionCipher;
          break;
        case "des":
          N = 8, L = 8, f = o.desCBC, d = B.des.createEncryptionCipher;
          break;
        default:
          throw (v = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = y.algorithm, v;
      }
      var p = "hmacWith" + y.prfAlgorithm.toUpperCase(), x = h(p), M = B.pkcs5.pbkdf2(l, u, U, N, x), S = B.random.getBytesSync(L);
      (m = d(M)).start(S), m.update(E.toDer(n)), m.finish(), F = m.output.getBytes();
      var k = function($, AA, lA, FA) {
        var cA = E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.OCTETSTRING, !1, $), E.create(E.Class.UNIVERSAL, E.Type.INTEGER, !1, AA.getBytes())]);
        return FA !== "hmacWithSHA1" && cA.value.push(E.create(E.Class.UNIVERSAL, E.Type.INTEGER, !1, B.util.hexToBytes(lA.toString(16))), E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.OID, !1, E.oidToDer(C.oids[FA]).getBytes()), E.create(E.Class.UNIVERSAL, E.Type.NULL, !1, "")])), cA;
      }(u, J, N, p);
      s = E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.OID, !1, E.oidToDer(o.pkcs5PBES2).getBytes()), E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.OID, !1, E.oidToDer(o.pkcs5PBKDF2).getBytes()), k]), E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.OID, !1, E.oidToDer(f).getBytes()), E.create(E.Class.UNIVERSAL, E.Type.OCTETSTRING, !1, S)])])]);
    } else {
      var v;
      if (y.algorithm !== "3des") throw (v = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = y.algorithm, v;
      N = 24;
      var m, T = new B.util.ByteBuffer(u);
      M = C.pbe.generatePkcs12Key(l, T, 1, U, N), S = C.pbe.generatePkcs12Key(l, T, 2, U, N), (m = B.des.createEncryptionCipher(M)).start(S), m.update(E.toDer(n)), m.finish(), F = m.output.getBytes(), s = E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.OID, !1, E.oidToDer(o["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()), E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [E.create(E.Class.UNIVERSAL, E.Type.OCTETSTRING, !1, u), E.create(E.Class.UNIVERSAL, E.Type.INTEGER, !1, J.getBytes())])]);
    }
    return E.create(E.Class.UNIVERSAL, E.Type.SEQUENCE, !0, [s, E.create(E.Class.UNIVERSAL, E.Type.OCTETSTRING, !1, F)]);
  }, C.decryptPrivateKeyInfo = function(n, l) {
    var y = null, N = {}, s = [];
    if (!E.validate(n, t, N, s)) {
      var F = new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
      throw F.errors = s, F;
    }
    var u = E.derToOid(N.encryptionOid), U = C.pbe.getCipher(u, N.encryptionParams, l), J = B.util.createBuffer(N.encryptedData);
    return U.update(J), U.finish() && (y = E.fromDer(U.output)), y;
  }, C.encryptedPrivateKeyToPem = function(n, l) {
    var y = { type: "ENCRYPTED PRIVATE KEY", body: E.toDer(n).getBytes() };
    return B.pem.encode(y, { maxline: l });
  }, C.encryptedPrivateKeyFromPem = function(n) {
    var l = B.pem.decode(n)[0];
    if (l.type !== "ENCRYPTED PRIVATE KEY") {
      var y = new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');
      throw y.headerType = l.type, y;
    }
    if (l.procType && l.procType.type === "ENCRYPTED") throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");
    return E.fromDer(l.body);
  }, C.encryptRsaPrivateKey = function(n, l, y) {
    if (!(y = y || {}).legacy) {
      var N = C.wrapRsaPrivateKey(C.privateKeyToAsn1(n));
      return N = C.encryptPrivateKeyInfo(N, l, y), C.encryptedPrivateKeyToPem(N);
    }
    var s, F, u, U;
    switch (y.algorithm) {
      case "aes128":
        s = "AES-128-CBC", u = 16, F = B.random.getBytesSync(16), U = B.aes.createEncryptionCipher;
        break;
      case "aes192":
        s = "AES-192-CBC", u = 24, F = B.random.getBytesSync(16), U = B.aes.createEncryptionCipher;
        break;
      case "aes256":
        s = "AES-256-CBC", u = 32, F = B.random.getBytesSync(16), U = B.aes.createEncryptionCipher;
        break;
      case "3des":
        s = "DES-EDE3-CBC", u = 24, F = B.random.getBytesSync(8), U = B.des.createEncryptionCipher;
        break;
      case "des":
        s = "DES-CBC", u = 8, F = B.random.getBytesSync(8), U = B.des.createEncryptionCipher;
        break;
      default:
        var J = new Error('Could not encrypt RSA private key; unsupported encryption algorithm "' + y.algorithm + '".');
        throw J.algorithm = y.algorithm, J;
    }
    var L = U(B.pbe.opensslDeriveBytes(l, F.substr(0, 8), u));
    L.start(F), L.update(E.toDer(C.privateKeyToAsn1(n))), L.finish();
    var f = { type: "RSA PRIVATE KEY", procType: { version: "4", type: "ENCRYPTED" }, dekInfo: { algorithm: s, parameters: B.util.bytesToHex(F).toUpperCase() }, body: L.output.getBytes() };
    return B.pem.encode(f);
  }, C.decryptRsaPrivateKey = function(n, l) {
    var y = null, N = B.pem.decode(n)[0];
    if (N.type !== "ENCRYPTED PRIVATE KEY" && N.type !== "PRIVATE KEY" && N.type !== "RSA PRIVATE KEY") throw (u = new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".')).headerType = u, u;
    if (N.procType && N.procType.type === "ENCRYPTED") {
      var s, F;
      switch (N.dekInfo.algorithm) {
        case "DES-CBC":
          s = 8, F = B.des.createDecryptionCipher;
          break;
        case "DES-EDE3-CBC":
          s = 24, F = B.des.createDecryptionCipher;
          break;
        case "AES-128-CBC":
          s = 16, F = B.aes.createDecryptionCipher;
          break;
        case "AES-192-CBC":
          s = 24, F = B.aes.createDecryptionCipher;
          break;
        case "AES-256-CBC":
          s = 32, F = B.aes.createDecryptionCipher;
          break;
        case "RC2-40-CBC":
          s = 5, F = function(L) {
            return B.rc2.createDecryptionCipher(L, 40);
          };
          break;
        case "RC2-64-CBC":
          s = 8, F = function(L) {
            return B.rc2.createDecryptionCipher(L, 64);
          };
          break;
        case "RC2-128-CBC":
          s = 16, F = function(L) {
            return B.rc2.createDecryptionCipher(L, 128);
          };
          break;
        default:
          var u;
          throw (u = new Error('Could not decrypt private key; unsupported encryption algorithm "' + N.dekInfo.algorithm + '".')).algorithm = N.dekInfo.algorithm, u;
      }
      var U = B.util.hexToBytes(N.dekInfo.parameters), J = F(B.pbe.opensslDeriveBytes(l, U.substr(0, 8), s));
      if (J.start(U), J.update(B.util.createBuffer(N.body)), !J.finish()) return y;
      y = J.output.getBytes();
    } else y = N.body;
    return (y = N.type === "ENCRYPTED PRIVATE KEY" ? C.decryptPrivateKeyInfo(E.fromDer(y), l) : E.fromDer(y)) !== null && (y = C.privateKeyFromAsn1(y)), y;
  }, C.pbe.generatePkcs12Key = function(n, l, y, N, s, F) {
    var u, U;
    if (F == null) {
      if (!("sha1" in B.md)) throw new Error('"sha1" hash algorithm unavailable.');
      F = B.md.sha1.create();
    }
    var J = F.digestLength, L = F.blockLength, f = new B.util.ByteBuffer(), d = new B.util.ByteBuffer();
    if (n != null) {
      for (U = 0; U < n.length; U++) d.putInt16(n.charCodeAt(U));
      d.putInt16(0);
    }
    var p = d.length(), x = l.length(), M = new B.util.ByteBuffer();
    M.fillWithByte(y, L);
    var S = L * Math.ceil(x / L), k = new B.util.ByteBuffer();
    for (U = 0; U < S; U++) k.putByte(l.at(U % x));
    var v = L * Math.ceil(p / L), m = new B.util.ByteBuffer();
    for (U = 0; U < v; U++) m.putByte(d.at(U % p));
    var T = k;
    T.putBuffer(m);
    for (var $ = Math.ceil(s / J), AA = 1; AA <= $; AA++) {
      var lA = new B.util.ByteBuffer();
      lA.putBytes(M.bytes()), lA.putBytes(T.bytes());
      for (var FA = 0; FA < N; FA++) F.start(), F.update(lA.getBytes()), lA = F.digest();
      var cA = new B.util.ByteBuffer();
      for (U = 0; U < L; U++) cA.putByte(lA.at(U % J));
      var yA = Math.ceil(x / L) + Math.ceil(p / L), aA = new B.util.ByteBuffer();
      for (u = 0; u < yA; u++) {
        var eA = new B.util.ByteBuffer(T.getBytes(L)), CA = 511;
        for (U = cA.length() - 1; U >= 0; U--) CA >>= 8, CA += cA.at(U) + eA.at(U), eA.setAt(U, 255 & CA);
        aA.putBuffer(eA);
      }
      T = aA, f.putBuffer(lA);
    }
    return f.truncate(f.length() - s), f;
  }, C.pbe.getCipher = function(n, l, y) {
    switch (n) {
      case C.oids.pkcs5PBES2:
        return C.pbe.getCipherForPBES2(n, l, y);
      case C.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
      case C.oids["pbewithSHAAnd40BitRC2-CBC"]:
        return C.pbe.getCipherForPKCS12PBE(n, l, y);
      default:
        var N = new Error("Cannot read encrypted PBE data block. Unsupported OID.");
        throw N.oid = n, N.supportedOids = ["pkcs5PBES2", "pbeWithSHAAnd3-KeyTripleDES-CBC", "pbewithSHAAnd40BitRC2-CBC"], N;
    }
  }, C.pbe.getCipherForPBES2 = function(n, l, y) {
    var N, s = {}, F = [];
    if (!E.validate(l, e, s, F)) throw (N = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = F, N;
    if ((n = E.derToOid(s.kdfOid)) !== C.oids.pkcs5PBKDF2) throw (N = new Error("Cannot read encrypted private key. Unsupported key derivation function OID.")).oid = n, N.supportedOids = ["pkcs5PBKDF2"], N;
    if ((n = E.derToOid(s.encOid)) !== C.oids["aes128-CBC"] && n !== C.oids["aes192-CBC"] && n !== C.oids["aes256-CBC"] && n !== C.oids["des-EDE3-CBC"] && n !== C.oids.desCBC) throw (N = new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.")).oid = n, N.supportedOids = ["aes128-CBC", "aes192-CBC", "aes256-CBC", "des-EDE3-CBC", "desCBC"], N;
    var u, U, J = s.kdfSalt, L = B.util.createBuffer(s.kdfIterationCount);
    switch (L = L.getInt(L.length() << 3), C.oids[n]) {
      case "aes128-CBC":
        u = 16, U = B.aes.createDecryptionCipher;
        break;
      case "aes192-CBC":
        u = 24, U = B.aes.createDecryptionCipher;
        break;
      case "aes256-CBC":
        u = 32, U = B.aes.createDecryptionCipher;
        break;
      case "des-EDE3-CBC":
        u = 24, U = B.des.createDecryptionCipher;
        break;
      case "desCBC":
        u = 8, U = B.des.createDecryptionCipher;
    }
    var f = r(s.prfOid), d = B.pkcs5.pbkdf2(y, J, L, u, f), p = s.encIv, x = U(d);
    return x.start(p), x;
  }, C.pbe.getCipherForPKCS12PBE = function(n, l, y) {
    var N = {}, s = [];
    if (!E.validate(l, i, N, s)) throw (f = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = s, f;
    var F, u, U, J = B.util.createBuffer(N.salt), L = B.util.createBuffer(N.iterations);
    switch (L = L.getInt(L.length() << 3), n) {
      case C.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
        F = 24, u = 8, U = B.des.startDecrypting;
        break;
      case C.oids["pbewithSHAAnd40BitRC2-CBC"]:
        F = 5, u = 8, U = function(x, M) {
          var S = B.rc2.createDecryptionCipher(x, 40);
          return S.start(M, null), S;
        };
        break;
      default:
        var f;
        throw (f = new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.")).oid = n, f;
    }
    var d = r(N.prfOid), p = C.pbe.generatePkcs12Key(y, J, 1, L, F, d);
    return d.start(), U(p, C.pbe.generatePkcs12Key(y, J, 2, L, u, d));
  }, C.pbe.opensslDeriveBytes = function(n, l, y, N) {
    if (N == null) {
      if (!("md5" in B.md)) throw new Error('"md5" hash algorithm unavailable.');
      N = B.md.md5.create();
    }
    l === null && (l = "");
    for (var s = [a(N, n + l)], F = 16, u = 1; F < y; ++u, F += 16) s.push(a(N, s[u - 1] + n + l));
    return s.join("").substr(0, y);
  };
}, 960: (A, g, I) => {
  var B = I(832);
  I(607), I(991), I(116);
  var Q, E = B.pkcs5 = B.pkcs5 || {};
  B.util.isNodejs && !B.options.usePureJavaScript && (Q = I(819)), A.exports = B.pbkdf2 = E.pbkdf2 = function(C, o, t, e, i, a) {
    if (typeof i == "function" && (a = i, i = null), B.util.isNodejs && !B.options.usePureJavaScript && Q.pbkdf2 && (i === null || typeof i != "object") && (Q.pbkdf2Sync.length > 4 || !i || i === "sha1")) return typeof i != "string" && (i = "sha1"), C = FB.from(C, "binary"), o = FB.from(o, "binary"), a ? Q.pbkdf2Sync.length === 4 ? Q.pbkdf2(C, o, t, e, function(d, p) {
      if (d) return a(d);
      a(null, p.toString("binary"));
    }) : Q.pbkdf2(C, o, t, e, i, function(d, p) {
      if (d) return a(d);
      a(null, p.toString("binary"));
    }) : Q.pbkdf2Sync.length === 4 ? Q.pbkdf2Sync(C, o, t, e).toString("binary") : Q.pbkdf2Sync(C, o, t, e, i).toString("binary");
    if (i == null && (i = "sha1"), typeof i == "string") {
      if (!(i in B.md.algorithms)) throw new Error("Unknown hash algorithm: " + i);
      i = B.md[i].create();
    }
    var r = i.digestLength;
    if (e > 4294967295 * r) {
      var h = new Error("Derived key is too long.");
      if (a) return a(h);
      throw h;
    }
    var n = Math.ceil(e / r), l = e - (n - 1) * r, y = B.hmac.create();
    y.start(i, C);
    var N, s, F, u = "";
    if (!a) {
      for (var U = 1; U <= n; ++U) {
        y.start(null, null), y.update(o), y.update(B.util.int32ToBytes(U)), N = F = y.digest().getBytes();
        for (var J = 2; J <= t; ++J) y.start(null, null), y.update(F), s = y.digest().getBytes(), N = B.util.xorBytes(N, s, r), F = s;
        u += U < n ? N : N.substr(0, l);
      }
      return u;
    }
    function L() {
      if (U > n) return a(null, u);
      y.start(null, null), y.update(o), y.update(B.util.int32ToBytes(U)), N = F = y.digest().getBytes(), J = 2, f();
    }
    function f() {
      if (J <= t) return y.start(null, null), y.update(F), s = y.digest().getBytes(), N = B.util.xorBytes(N, s, r), F = s, ++J, B.util.setImmediate(f);
      u += U < n ? N : N.substr(0, l), ++U, L();
    }
    U = 1, L();
  };
}, 953: (A, g, I) => {
  var B = I(832);
  I(116);
  var Q = A.exports = B.pem = B.pem || {};
  function E(o) {
    for (var t = o.name + ": ", e = [], i = function(l, y) {
      return " " + y;
    }, a = 0; a < o.values.length; ++a) e.push(o.values[a].replace(/^(\S+\r\n)/, i));
    t += e.join(",") + `\r
`;
    var r = 0, h = -1;
    for (a = 0; a < t.length; ++a, ++r) if (r > 65 && h !== -1) {
      var n = t[h];
      n === "," ? (++h, t = t.substr(0, h) + `\r
 ` + t.substr(h)) : t = t.substr(0, h) + `\r
` + n + t.substr(h + 1), r = a - h - 1, h = -1, ++a;
    } else t[a] !== " " && t[a] !== "	" && t[a] !== "," || (h = a);
    return t;
  }
  function C(o) {
    return o.replace(/^\s+/, "");
  }
  Q.encode = function(o, t) {
    t = t || {};
    var e, i = "-----BEGIN " + o.type + `-----\r
`;
    if (o.procType && (i += E(e = { name: "Proc-Type", values: [String(o.procType.version), o.procType.type] })), o.contentDomain && (i += E(e = { name: "Content-Domain", values: [o.contentDomain] })), o.dekInfo && (e = { name: "DEK-Info", values: [o.dekInfo.algorithm] }, o.dekInfo.parameters && e.values.push(o.dekInfo.parameters), i += E(e)), o.headers) for (var a = 0; a < o.headers.length; ++a) i += E(o.headers[a]);
    return o.procType && (i += `\r
`), (i += B.util.encode64(o.body, t.maxline || 64) + `\r
`) + "-----END " + o.type + `-----\r
`;
  }, Q.decode = function(o) {
    for (var t, e = [], i = /\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g, a = /([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/, r = /\r?\n/; t = i.exec(o); ) {
      var h = t[1];
      h === "NEW CERTIFICATE REQUEST" && (h = "CERTIFICATE REQUEST");
      var n = { type: h, procType: null, contentDomain: null, dekInfo: null, headers: [], body: B.util.decode64(t[3]) };
      if (e.push(n), t[2]) {
        for (var l = t[2].split(r), y = 0; t && y < l.length; ) {
          for (var N = l[y].replace(/\s+$/, ""), s = y + 1; s < l.length; ++s) {
            var F = l[s];
            if (!/\s/.test(F[0])) break;
            N += F, y = s;
          }
          if (t = N.match(a)) {
            for (var u = { name: t[1], values: [] }, U = t[2].split(","), J = 0; J < U.length; ++J) u.values.push(C(U[J]));
            if (n.procType) if (n.contentDomain || u.name !== "Content-Domain") if (n.dekInfo || u.name !== "DEK-Info") n.headers.push(u);
            else {
              if (u.values.length === 0) throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');
              n.dekInfo = { algorithm: U[0], parameters: U[1] || null };
            }
            else n.contentDomain = U[0] || "";
            else {
              if (u.name !== "Proc-Type") throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');
              if (u.values.length !== 2) throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');
              n.procType = { version: U[0], type: U[1] };
            }
          }
          ++y;
        }
        if (n.procType === "ENCRYPTED" && !n.dekInfo) throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".');
      }
    }
    if (e.length === 0) throw new Error("Invalid PEM formatted message.");
    return e;
  };
}, 936: (A, g, I) => {
  var B = I(832);
  I(116), I(563), I(137);
  var Q = A.exports = B.pkcs1 = B.pkcs1 || {};
  function E(C, o, t) {
    t || (t = B.md.sha1.create());
    for (var e = "", i = Math.ceil(o / t.digestLength), a = 0; a < i; ++a) {
      var r = String.fromCharCode(a >> 24 & 255, a >> 16 & 255, a >> 8 & 255, 255 & a);
      t.start(), t.update(C + r), e += t.digest().getBytes();
    }
    return e.substring(0, o);
  }
  Q.encode_rsa_oaep = function(C, o, t) {
    var e, i, a, r;
    typeof t == "string" ? (e = t, i = arguments[3] || void 0, a = arguments[4] || void 0) : t && (e = t.label || void 0, i = t.seed || void 0, a = t.md || void 0, t.mgf1 && t.mgf1.md && (r = t.mgf1.md)), a ? a.start() : a = B.md.sha1.create(), r || (r = a);
    var h = Math.ceil(C.n.bitLength() / 8), n = h - 2 * a.digestLength - 2;
    if (o.length > n) throw (u = new Error("RSAES-OAEP input message length is too long.")).length = o.length, u.maxLength = n, u;
    e || (e = ""), a.update(e, "raw");
    for (var l = a.digest(), y = "", N = n - o.length, s = 0; s < N; s++) y += "\0";
    var F = l.getBytes() + y + "" + o;
    if (i) {
      if (i.length !== a.digestLength) {
        var u;
        throw (u = new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.")).seedLength = i.length, u.digestLength = a.digestLength, u;
      }
    } else i = B.random.getBytes(a.digestLength);
    var U = E(i, h - a.digestLength - 1, r), J = B.util.xorBytes(F, U, F.length), L = E(J, a.digestLength, r);
    return "\0" + B.util.xorBytes(i, L, i.length) + J;
  }, Q.decode_rsa_oaep = function(C, o, t) {
    var e, i, a;
    typeof t == "string" ? (e = t, i = arguments[3] || void 0) : t && (e = t.label || void 0, i = t.md || void 0, t.mgf1 && t.mgf1.md && (a = t.mgf1.md));
    var r = Math.ceil(C.n.bitLength() / 8);
    if (o.length !== r) throw (U = new Error("RSAES-OAEP encoded message length is invalid.")).length = o.length, U.expectedLength = r, U;
    if (i === void 0 ? i = B.md.sha1.create() : i.start(), a || (a = i), r < 2 * i.digestLength + 2) throw new Error("RSAES-OAEP key is too short for the hash function.");
    e || (e = ""), i.update(e, "raw");
    for (var h = i.digest().getBytes(), n = o.charAt(0), l = o.substring(1, i.digestLength + 1), y = o.substring(1 + i.digestLength), N = E(y, i.digestLength, a), s = E(B.util.xorBytes(l, N, l.length), r - i.digestLength - 1, a), F = B.util.xorBytes(y, s, y.length), u = F.substring(0, i.digestLength), U = n !== "\0", J = 0; J < i.digestLength; ++J) U |= h.charAt(J) !== u.charAt(J);
    for (var L = 1, f = i.digestLength, d = i.digestLength; d < F.length; d++) {
      var p = F.charCodeAt(d);
      U |= p & (L ? 65534 : 0), f += L &= 1 & p ^ 1;
    }
    if (U || F.charCodeAt(f) !== 1) throw new Error("Invalid RSAES-OAEP padding.");
    return F.substring(f + 1);
  };
}, 147: (A, g, I) => {
  var B = I(832);
  I(68), I(607), I(270), I(496), I(450), I(563), I(95), I(137), I(116), I(414);
  var Q = B.asn1, E = B.pki, C = A.exports = B.pkcs12 = B.pkcs12 || {}, o = { name: "ContentInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "ContentInfo.contentType", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "contentType" }, { name: "ContentInfo.content", tagClass: Q.Class.CONTEXT_SPECIFIC, constructed: !0, captureAsn1: "content" }] }, t = { name: "PFX", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "PFX.version", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "version" }, o, { name: "PFX.macData", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, optional: !0, captureAsn1: "mac", value: [{ name: "PFX.macData.mac", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "PFX.macData.mac.digestAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "PFX.macData.mac.digestAlgorithm.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "macAlgorithm" }, { name: "PFX.macData.mac.digestAlgorithm.parameters", tagClass: Q.Class.UNIVERSAL, captureAsn1: "macAlgorithmParameters" }] }, { name: "PFX.macData.mac.digest", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OCTETSTRING, constructed: !1, capture: "macDigest" }] }, { name: "PFX.macData.macSalt", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OCTETSTRING, constructed: !1, capture: "macSalt" }, { name: "PFX.macData.iterations", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, optional: !0, capture: "macIterations" }] }] }, e = { name: "SafeBag", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "SafeBag.bagId", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "bagId" }, { name: "SafeBag.bagValue", tagClass: Q.Class.CONTEXT_SPECIFIC, constructed: !0, captureAsn1: "bagValue" }, { name: "SafeBag.bagAttributes", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SET, constructed: !0, optional: !0, capture: "bagAttributes" }] }, i = { name: "Attribute", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "Attribute.attrId", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "oid" }, { name: "Attribute.attrValues", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SET, constructed: !0, capture: "values" }] }, a = { name: "CertBag", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "CertBag.certId", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "certId" }, { name: "CertBag.certValue", tagClass: Q.Class.CONTEXT_SPECIFIC, constructed: !0, value: [{ name: "CertBag.certValue[0]", tagClass: Q.Class.UNIVERSAL, type: Q.Class.OCTETSTRING, constructed: !1, capture: "cert" }] }] };
  function r(N, s, F, u) {
    for (var U = [], J = 0; J < N.length; J++) for (var L = 0; L < N[J].safeBags.length; L++) {
      var f = N[J].safeBags[L];
      u !== void 0 && f.type !== u || (s !== null ? f.attributes[s] !== void 0 && f.attributes[s].indexOf(F) >= 0 && U.push(f) : U.push(f));
    }
    return U;
  }
  function h(N) {
    if (N.composed || N.constructed) {
      for (var s = B.util.createBuffer(), F = 0; F < N.value.length; ++F) s.putBytes(N.value[F].value);
      N.composed = N.constructed = !1, N.value = s.getBytes();
    }
    return N;
  }
  function n(N, s) {
    var F = {}, u = [];
    if (!Q.validate(N, B.pkcs7.asn1.encryptedDataValidator, F, u)) throw (U = new Error("Cannot read EncryptedContentInfo.")).errors = u, U;
    var U, J = Q.derToOid(F.contentType);
    if (J !== E.oids.data) throw (U = new Error("PKCS#12 EncryptedContentInfo ContentType is not Data.")).oid = J, U;
    J = Q.derToOid(F.encAlgorithm);
    var L = E.pbe.getCipher(J, F.encParameter, s), f = h(F.encryptedContentAsn1), d = B.util.createBuffer(f.value);
    if (L.update(d), !L.finish()) throw new Error("Failed to decrypt PKCS#12 SafeContents.");
    return L.output.getBytes();
  }
  function l(N, s, F) {
    if (!s && N.length === 0) return [];
    if ((N = Q.fromDer(N, s)).tagClass !== Q.Class.UNIVERSAL || N.type !== Q.Type.SEQUENCE || N.constructed !== !0) throw new Error("PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.");
    for (var u = [], U = 0; U < N.value.length; U++) {
      var J = N.value[U], L = {}, f = [];
      if (!Q.validate(J, e, L, f)) throw (S = new Error("Cannot read SafeBag.")).errors = f, S;
      var d, p, x = { type: Q.derToOid(L.bagId), attributes: y(L.bagAttributes) };
      u.push(x);
      var M = L.bagValue.value[0];
      switch (x.type) {
        case E.oids.pkcs8ShroudedKeyBag:
          if ((M = E.decryptPrivateKeyInfo(M, F)) === null) throw new Error("Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?");
        case E.oids.keyBag:
          try {
            x.key = E.privateKeyFromAsn1(M);
          } catch {
            x.key = null, x.asn1 = M;
          }
          continue;
        case E.oids.certBag:
          d = a, p = function() {
            if (Q.derToOid(L.certId) !== E.oids.x509Certificate) {
              var k = new Error("Unsupported certificate type, only X.509 supported.");
              throw k.oid = Q.derToOid(L.certId), k;
            }
            var v = Q.fromDer(L.cert, s);
            try {
              x.cert = E.certificateFromAsn1(v, !0);
            } catch {
              x.cert = null, x.asn1 = v;
            }
          };
          break;
        default:
          var S;
          throw (S = new Error("Unsupported PKCS#12 SafeBag type.")).oid = x.type, S;
      }
      if (d !== void 0 && !Q.validate(M, d, L, f)) throw (S = new Error("Cannot read PKCS#12 " + d.name)).errors = f, S;
      p();
    }
    return u;
  }
  function y(N) {
    var s = {};
    if (N !== void 0) for (var F = 0; F < N.length; ++F) {
      var u = {}, U = [];
      if (!Q.validate(N[F], i, u, U)) {
        var J = new Error("Cannot read PKCS#12 BagAttribute.");
        throw J.errors = U, J;
      }
      var L = Q.derToOid(u.oid);
      if (E.oids[L] !== void 0) {
        s[E.oids[L]] = [];
        for (var f = 0; f < u.values.length; ++f) s[E.oids[L]].push(u.values[f].value);
      }
    }
    return s;
  }
  C.pkcs12FromAsn1 = function(N, s, F) {
    typeof s == "string" ? (F = s, s = !0) : s === void 0 && (s = !0);
    var u = {};
    if (!Q.validate(N, t, u, [])) throw (U = new Error("Cannot read PKCS#12 PFX. ASN.1 object is not an PKCS#12 PFX.")).errors = U, U;
    var U, J = { version: u.version.charCodeAt(0), safeContents: [], getBags: function(v) {
      var m, T = {};
      return "localKeyId" in v ? m = v.localKeyId : "localKeyIdHex" in v && (m = B.util.hexToBytes(v.localKeyIdHex)), m === void 0 && !("friendlyName" in v) && "bagType" in v && (T[v.bagType] = r(J.safeContents, null, null, v.bagType)), m !== void 0 && (T.localKeyId = r(J.safeContents, "localKeyId", m, v.bagType)), "friendlyName" in v && (T.friendlyName = r(J.safeContents, "friendlyName", v.friendlyName, v.bagType)), T;
    }, getBagsByFriendlyName: function(v, m) {
      return r(J.safeContents, "friendlyName", v, m);
    }, getBagsByLocalKeyId: function(v, m) {
      return r(J.safeContents, "localKeyId", v, m);
    } };
    if (u.version.charCodeAt(0) !== 3) throw (U = new Error("PKCS#12 PFX of version other than 3 not supported.")).version = u.version.charCodeAt(0), U;
    if (Q.derToOid(u.contentType) !== E.oids.data) throw (U = new Error("Only PKCS#12 PFX in password integrity mode supported.")).oid = Q.derToOid(u.contentType), U;
    var L = u.content.value[0];
    if (L.tagClass !== Q.Class.UNIVERSAL || L.type !== Q.Type.OCTETSTRING) throw new Error("PKCS#12 authSafe content data is not an OCTET STRING.");
    if (L = h(L), u.mac) {
      var f = null, d = 0, p = Q.derToOid(u.macAlgorithm);
      switch (p) {
        case E.oids.sha1:
          f = B.md.sha1.create(), d = 20;
          break;
        case E.oids.sha256:
          f = B.md.sha256.create(), d = 32;
          break;
        case E.oids.sha384:
          f = B.md.sha384.create(), d = 48;
          break;
        case E.oids.sha512:
          f = B.md.sha512.create(), d = 64;
          break;
        case E.oids.md5:
          f = B.md.md5.create(), d = 16;
      }
      if (f === null) throw new Error("PKCS#12 uses unsupported MAC algorithm: " + p);
      var x = new B.util.ByteBuffer(u.macSalt), M = "macIterations" in u ? parseInt(B.util.bytesToHex(u.macIterations), 16) : 1, S = C.generateKey(F, x, 3, M, d, f), k = B.hmac.create();
      if (k.start(f, S), k.update(L.value), k.getMac().getBytes() !== u.macDigest) throw new Error("PKCS#12 MAC could not be verified. Invalid password?");
    }
    return function(v, m, T, $) {
      if ((m = Q.fromDer(m, T)).tagClass !== Q.Class.UNIVERSAL || m.type !== Q.Type.SEQUENCE || m.constructed !== !0) throw new Error("PKCS#12 AuthenticatedSafe expected to be a SEQUENCE OF ContentInfo");
      for (var AA = 0; AA < m.value.length; AA++) {
        var lA = m.value[AA], FA = {}, cA = [];
        if (!Q.validate(lA, o, FA, cA)) throw (CA = new Error("Cannot read ContentInfo.")).errors = cA, CA;
        var yA = { encrypted: !1 }, aA = null, eA = FA.content.value[0];
        switch (Q.derToOid(FA.contentType)) {
          case E.oids.data:
            if (eA.tagClass !== Q.Class.UNIVERSAL || eA.type !== Q.Type.OCTETSTRING) throw new Error("PKCS#12 SafeContents Data is not an OCTET STRING.");
            aA = h(eA).value;
            break;
          case E.oids.encryptedData:
            aA = n(eA, $), yA.encrypted = !0;
            break;
          default:
            var CA;
            throw (CA = new Error("Unsupported PKCS#12 contentType.")).contentType = Q.derToOid(FA.contentType), CA;
        }
        yA.safeBags = l(aA, T, $), v.safeContents.push(yA);
      }
    }(J, L.value, s, F), J;
  }, C.toPkcs12Asn1 = function(N, s, F, u) {
    (u = u || {}).saltSize = u.saltSize || 8, u.count = u.count || 2048, u.algorithm = u.algorithm || u.encAlgorithm || "aes128", "useMac" in u || (u.useMac = !0), "localKeyId" in u || (u.localKeyId = null), "generateLocalKeyId" in u || (u.generateLocalKeyId = !0);
    var U, J = u.localKeyId;
    if (J !== null) J = B.util.hexToBytes(J);
    else if (u.generateLocalKeyId) if (s) {
      var L = B.util.isArray(s) ? s[0] : s;
      typeof L == "string" && (L = E.certificateFromPem(L)), (aA = B.md.sha1.create()).update(Q.toDer(E.certificateToAsn1(L)).getBytes()), J = aA.digest().getBytes();
    } else J = B.random.getBytes(20);
    var f = [];
    J !== null && f.push(Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.localKeyId).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, J)])])), "friendlyName" in u && f.push(Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.friendlyName).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.BMPSTRING, !1, u.friendlyName)])])), f.length > 0 && (U = Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, f));
    var d = [], p = [];
    s !== null && (p = B.util.isArray(s) ? s : [s]);
    for (var x = [], M = 0; M < p.length; ++M) {
      typeof (s = p[M]) == "string" && (s = E.certificateFromPem(s));
      var S = M === 0 ? U : void 0, k = E.certificateToAsn1(s), v = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.certBag).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.x509Certificate).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, Q.toDer(k).getBytes())])])]), S]);
      x.push(v);
    }
    if (x.length > 0) {
      var m = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, x), T = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.data).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, Q.toDer(m).getBytes())])]);
      d.push(T);
    }
    var $ = null;
    if (N !== null) {
      var AA = E.wrapRsaPrivateKey(E.privateKeyToAsn1(N));
      $ = F === null ? Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.keyBag).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [AA]), U]) : Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.pkcs8ShroudedKeyBag).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [E.encryptPrivateKeyInfo(AA, F, u)]), U]);
      var lA = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [$]), FA = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.data).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, Q.toDer(lA).getBytes())])]);
      d.push(FA);
    }
    var cA, yA = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, d);
    if (u.useMac) {
      var aA = B.md.sha1.create(), eA = new B.util.ByteBuffer(B.random.getBytes(u.saltSize)), CA = u.count, b = (N = C.generateKey(F, eA, 3, CA, 20), B.hmac.create());
      b.start(aA, N), b.update(Q.toDer(yA).getBytes());
      var Y = b.getMac();
      cA = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.sha1).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "")]), Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, Y.getBytes())]), Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, eA.getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(CA).getBytes())]);
    }
    return Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(3).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(E.oids.data).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, Q.toDer(yA).getBytes())])]), cA]);
  }, C.generateKey = B.pbe.generatePkcs12Key;
}, 437: (A, g, I) => {
  var B = I(832);
  I(925), I(68), I(480), I(270), I(953), I(496), I(563), I(116), I(414);
  var Q = B.asn1, E = A.exports = B.pkcs7 = B.pkcs7 || {};
  function C(r) {
    var h = {}, n = [];
    if (!Q.validate(r, E.asn1.recipientInfoValidator, h, n)) {
      var l = new Error("Cannot read PKCS#7 RecipientInfo. ASN.1 object is not an PKCS#7 RecipientInfo.");
      throw l.errors = n, l;
    }
    return { version: h.version.charCodeAt(0), issuer: B.pki.RDNAttributesAsArray(h.issuer), serialNumber: B.util.createBuffer(h.serial).toHex(), encryptedContent: { algorithm: Q.derToOid(h.encAlgorithm), parameter: h.encParameter ? h.encParameter.value : void 0, content: h.encKey } };
  }
  function o(r) {
    for (var h, n = [], l = 0; l < r.length; ++l) n.push((h = r[l], Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(h.version).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [B.pki.distinguishedNameToAsn1({ attributes: h.issuer }), Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, B.util.hexToBytes(h.serialNumber))]), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(h.encryptedContent.algorithm).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "")]), Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, h.encryptedContent.content)])));
    return n;
  }
  function t(r) {
    var h = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(r.version).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [B.pki.distinguishedNameToAsn1({ attributes: r.issuer }), Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, B.util.hexToBytes(r.serialNumber))]), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(r.digestAlgorithm).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "")])]);
    if (r.authenticatedAttributesAsn1 && h.value.push(r.authenticatedAttributesAsn1), h.value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(r.signatureAlgorithm).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "")])), h.value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, r.signature)), r.unauthenticatedAttributes.length > 0) {
      for (var n = Q.create(Q.Class.CONTEXT_SPECIFIC, 1, !0, []), l = 0; l < r.unauthenticatedAttributes.length; ++l) {
        var y = r.unauthenticatedAttributes[l];
        n.values.push(e(y));
      }
      h.value.push(n);
    }
    return h;
  }
  function e(r) {
    var h;
    if (r.type === B.pki.oids.contentType) h = Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(r.value).getBytes());
    else if (r.type === B.pki.oids.messageDigest) h = Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, r.value.bytes());
    else if (r.type === B.pki.oids.signingTime) {
      var n = /* @__PURE__ */ new Date("1950-01-01T00:00:00Z"), l = /* @__PURE__ */ new Date("2050-01-01T00:00:00Z"), y = r.value;
      if (typeof y == "string") {
        var N = Date.parse(y);
        y = isNaN(N) ? y.length === 13 ? Q.utcTimeToDate(y) : Q.generalizedTimeToDate(y) : new Date(N);
      }
      h = y >= n && y < l ? Q.create(Q.Class.UNIVERSAL, Q.Type.UTCTIME, !1, Q.dateToUtcTime(y)) : Q.create(Q.Class.UNIVERSAL, Q.Type.GENERALIZEDTIME, !1, Q.dateToGeneralizedTime(y));
    }
    return Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(r.type).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, [h])]);
  }
  function i(r, h, n) {
    var l = {};
    if (!Q.validate(h, n, l, [])) {
      var y = new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");
      throw y.errors = y, y;
    }
    if (Q.derToOid(l.contentType) !== B.pki.oids.data) throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");
    if (l.encryptedContent) {
      var N = "";
      if (B.util.isArray(l.encryptedContent)) for (var s = 0; s < l.encryptedContent.length; ++s) {
        if (l.encryptedContent[s].type !== Q.Type.OCTETSTRING) throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");
        N += l.encryptedContent[s].value;
      }
      else N = l.encryptedContent;
      r.encryptedContent = { algorithm: Q.derToOid(l.encAlgorithm), parameter: B.util.createBuffer(l.encParameter.value), content: B.util.createBuffer(N) };
    }
    if (l.content) {
      if (N = "", B.util.isArray(l.content)) for (s = 0; s < l.content.length; ++s) {
        if (l.content[s].type !== Q.Type.OCTETSTRING) throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");
        N += l.content[s].value;
      }
      else N = l.content;
      r.content = B.util.createBuffer(N);
    }
    return r.version = l.version.charCodeAt(0), r.rawCapture = l, l;
  }
  function a(r) {
    if (r.encryptedContent.key === void 0) throw new Error("Symmetric key not available.");
    if (r.content === void 0) {
      var h;
      switch (r.encryptedContent.algorithm) {
        case B.pki.oids["aes128-CBC"]:
        case B.pki.oids["aes192-CBC"]:
        case B.pki.oids["aes256-CBC"]:
          h = B.aes.createDecryptionCipher(r.encryptedContent.key);
          break;
        case B.pki.oids.desCBC:
        case B.pki.oids["des-EDE3-CBC"]:
          h = B.des.createDecryptionCipher(r.encryptedContent.key);
          break;
        default:
          throw new Error("Unsupported symmetric cipher, OID " + r.encryptedContent.algorithm);
      }
      if (h.start(r.encryptedContent.parameter), h.update(r.encryptedContent.content), !h.finish()) throw new Error("Symmetric decryption failed.");
      r.content = h.output;
    }
  }
  E.messageFromPem = function(r) {
    var h = B.pem.decode(r)[0];
    if (h.type !== "PKCS7") {
      var n = new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');
      throw n.headerType = h.type, n;
    }
    if (h.procType && h.procType.type === "ENCRYPTED") throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");
    var l = Q.fromDer(h.body);
    return E.messageFromAsn1(l);
  }, E.messageToPem = function(r, h) {
    var n = { type: "PKCS7", body: Q.toDer(r.toAsn1()).getBytes() };
    return B.pem.encode(n, { maxline: h });
  }, E.messageFromAsn1 = function(r) {
    var h = {}, n = [];
    if (!Q.validate(r, E.asn1.contentInfoValidator, h, n)) {
      var l = new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");
      throw l.errors = n, l;
    }
    var y, N = Q.derToOid(h.contentType);
    switch (N) {
      case B.pki.oids.envelopedData:
        y = E.createEnvelopedData();
        break;
      case B.pki.oids.encryptedData:
        y = E.createEncryptedData();
        break;
      case B.pki.oids.signedData:
        y = E.createSignedData();
        break;
      default:
        throw new Error("Cannot read PKCS#7 message. ContentType with OID " + N + " is not (yet) supported.");
    }
    return y.fromAsn1(h.content.value[0]), y;
  }, E.createSignedData = function() {
    var r = null;
    return r = { type: B.pki.oids.signedData, version: 1, certificates: [], crls: [], signers: [], digestAlgorithmIdentifiers: [], contentInfo: null, signerInfos: [], fromAsn1: function(h) {
      if (i(r, h, E.asn1.signedDataValidator), r.certificates = [], r.crls = [], r.digestAlgorithmIdentifiers = [], r.contentInfo = null, r.signerInfos = [], r.rawCapture.certificates) for (var n = r.rawCapture.certificates.value, l = 0; l < n.length; ++l) r.certificates.push(B.pki.certificateFromAsn1(n[l]));
    }, toAsn1: function() {
      r.contentInfo || r.sign();
      for (var h = [], n = 0; n < r.certificates.length; ++n) h.push(B.pki.certificateToAsn1(r.certificates[n]));
      var l = [], y = Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(r.version).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, r.digestAlgorithmIdentifiers), r.contentInfo])]);
      return h.length > 0 && y.value[0].value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, h)), l.length > 0 && y.value[0].value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 1, !0, l)), y.value[0].value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, r.signerInfos)), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(r.type).getBytes()), y]);
    }, addSigner: function(h) {
      var n = h.issuer, l = h.serialNumber;
      if (h.certificate) {
        var y = h.certificate;
        typeof y == "string" && (y = B.pki.certificateFromPem(y)), n = y.issuer.attributes, l = y.serialNumber;
      }
      var N = h.key;
      if (!N) throw new Error("Could not add PKCS#7 signer; no private key specified.");
      typeof N == "string" && (N = B.pki.privateKeyFromPem(N));
      var s = h.digestAlgorithm || B.pki.oids.sha1;
      switch (s) {
        case B.pki.oids.sha1:
        case B.pki.oids.sha256:
        case B.pki.oids.sha384:
        case B.pki.oids.sha512:
        case B.pki.oids.md5:
          break;
        default:
          throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: " + s);
      }
      var F = h.authenticatedAttributes || [];
      if (F.length > 0) {
        for (var u = !1, U = !1, J = 0; J < F.length; ++J) {
          var L = F[J];
          if (u || L.type !== B.pki.oids.contentType) {
            if (!(U || L.type !== B.pki.oids.messageDigest)) {
              if (U = !0, u) break;
            }
          } else if (u = !0, U) break;
        }
        if (!u || !U) throw new Error("Invalid signer.authenticatedAttributes. If signer.authenticatedAttributes is specified, then it must contain at least two attributes, PKCS #9 content-type and PKCS #9 message-digest.");
      }
      r.signers.push({ key: N, version: 1, issuer: n, serialNumber: l, digestAlgorithm: s, signatureAlgorithm: B.pki.oids.rsaEncryption, signature: null, authenticatedAttributes: F, unauthenticatedAttributes: [] });
    }, sign: function(h) {
      var n;
      h = h || {}, (typeof r.content != "object" || r.contentInfo === null) && (r.contentInfo = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(B.pki.oids.data).getBytes())]), "content" in r && (r.content instanceof B.util.ByteBuffer ? n = r.content.bytes() : typeof r.content == "string" && (n = B.util.encodeUtf8(r.content)), h.detached ? r.detachedContent = Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, n) : r.contentInfo.value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, n)])))), r.signers.length !== 0 && function(l) {
        var y;
        if (!(y = r.detachedContent ? r.detachedContent : (y = r.contentInfo.value[1]).value[0])) throw new Error("Could not sign PKCS#7 message; there is no content to sign.");
        var N = Q.derToOid(r.contentInfo.value[0].value), s = Q.toDer(y);
        for (var F in s.getByte(), Q.getBerValueLength(s), s = s.getBytes(), l) l[F].start().update(s);
        for (var u = /* @__PURE__ */ new Date(), U = 0; U < r.signers.length; ++U) {
          var J = r.signers[U];
          if (J.authenticatedAttributes.length === 0) {
            if (N !== B.pki.oids.data) throw new Error("Invalid signer; authenticatedAttributes must be present when the ContentInfo content type is not PKCS#7 Data.");
          } else {
            J.authenticatedAttributesAsn1 = Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, []);
            for (var L = Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, []), f = 0; f < J.authenticatedAttributes.length; ++f) {
              var d = J.authenticatedAttributes[f];
              d.type === B.pki.oids.messageDigest ? d.value = l[J.digestAlgorithm].digest() : d.type === B.pki.oids.signingTime && (d.value || (d.value = u)), L.value.push(e(d)), J.authenticatedAttributesAsn1.value.push(e(d));
            }
            s = Q.toDer(L).getBytes(), J.md.start().update(s);
          }
          J.signature = J.key.sign(J.md, "RSASSA-PKCS1-V1_5");
        }
        r.signerInfos = function(p) {
          for (var x = [], M = 0; M < p.length; ++M) x.push(t(p[M]));
          return x;
        }(r.signers);
      }(function() {
        for (var l = {}, y = 0; y < r.signers.length; ++y) {
          var N = r.signers[y];
          (s = N.digestAlgorithm) in l || (l[s] = B.md[B.pki.oids[s]].create()), N.authenticatedAttributes.length === 0 ? N.md = l[s] : N.md = B.md[B.pki.oids[s]].create();
        }
        for (var s in r.digestAlgorithmIdentifiers = [], l) r.digestAlgorithmIdentifiers.push(Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(s).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "")]));
        return l;
      }());
    }, verify: function() {
      throw new Error("PKCS#7 signature verification not yet implemented.");
    }, addCertificate: function(h) {
      typeof h == "string" && (h = B.pki.certificateFromPem(h)), r.certificates.push(h);
    }, addCertificateRevokationList: function(h) {
      throw new Error("PKCS#7 CRL support not yet implemented.");
    } };
  }, E.createEncryptedData = function() {
    var r = null;
    return r = { type: B.pki.oids.encryptedData, version: 0, encryptedContent: { algorithm: B.pki.oids["aes256-CBC"] }, fromAsn1: function(h) {
      i(r, h, E.asn1.encryptedDataValidator);
    }, decrypt: function(h) {
      h !== void 0 && (r.encryptedContent.key = h), a(r);
    } };
  }, E.createEnvelopedData = function() {
    var r = null;
    return r = { type: B.pki.oids.envelopedData, version: 0, recipients: [], encryptedContent: { algorithm: B.pki.oids["aes256-CBC"] }, fromAsn1: function(h) {
      var n = i(r, h, E.asn1.envelopedDataValidator);
      r.recipients = function(l) {
        for (var y = [], N = 0; N < l.length; ++N) y.push(C(l[N]));
        return y;
      }(n.recipientInfos.value);
    }, toAsn1: function() {
      return Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(r.type).getBytes()), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(r.version).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, o(r.recipients)), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, (h = r.encryptedContent, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(B.pki.oids.data).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(h.algorithm).getBytes()), h.parameter ? Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, h.parameter.getBytes()) : void 0]), Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, h.content.getBytes())])]))])])]);
      var h;
    }, findRecipient: function(h) {
      for (var n = h.issuer.attributes, l = 0; l < r.recipients.length; ++l) {
        var y = r.recipients[l], N = y.issuer;
        if (y.serialNumber === h.serialNumber && N.length === n.length) {
          for (var s = !0, F = 0; F < n.length; ++F) if (N[F].type !== n[F].type || N[F].value !== n[F].value) {
            s = !1;
            break;
          }
          if (s) return y;
        }
      }
      return null;
    }, decrypt: function(h, n) {
      if (r.encryptedContent.key === void 0 && h !== void 0 && n !== void 0) switch (h.encryptedContent.algorithm) {
        case B.pki.oids.rsaEncryption:
        case B.pki.oids.desCBC:
          var l = n.decrypt(h.encryptedContent.content);
          r.encryptedContent.key = B.util.createBuffer(l);
          break;
        default:
          throw new Error("Unsupported asymmetric cipher, OID " + h.encryptedContent.algorithm);
      }
      a(r);
    }, addRecipient: function(h) {
      r.recipients.push({ version: 0, issuer: h.issuer.attributes, serialNumber: h.serialNumber, encryptedContent: { algorithm: B.pki.oids.rsaEncryption, key: h.publicKey } });
    }, encrypt: function(h, n) {
      if (r.encryptedContent.content === void 0) {
        var l, y, N;
        switch (n = n || r.encryptedContent.algorithm, h = h || r.encryptedContent.key, n) {
          case B.pki.oids["aes128-CBC"]:
            l = 16, y = 16, N = B.aes.createEncryptionCipher;
            break;
          case B.pki.oids["aes192-CBC"]:
            l = 24, y = 16, N = B.aes.createEncryptionCipher;
            break;
          case B.pki.oids["aes256-CBC"]:
            l = 32, y = 16, N = B.aes.createEncryptionCipher;
            break;
          case B.pki.oids["des-EDE3-CBC"]:
            l = 24, y = 8, N = B.des.createEncryptionCipher;
            break;
          default:
            throw new Error("Unsupported symmetric cipher, OID " + n);
        }
        if (h === void 0) h = B.util.createBuffer(B.random.getBytes(l));
        else if (h.length() != l) throw new Error("Symmetric key has wrong length; got " + h.length() + " bytes, expected " + l + ".");
        r.encryptedContent.algorithm = n, r.encryptedContent.key = h, r.encryptedContent.parameter = B.util.createBuffer(B.random.getBytes(y));
        var s = N(h);
        if (s.start(r.encryptedContent.parameter.copy()), s.update(r.content), !s.finish()) throw new Error("Symmetric encryption failed.");
        r.encryptedContent.content = s.output;
      }
      for (var F = 0; F < r.recipients.length; ++F) {
        var u = r.recipients[F];
        if (u.encryptedContent.content === void 0) {
          if (u.encryptedContent.algorithm !== B.pki.oids.rsaEncryption) throw new Error("Unsupported asymmetric cipher, OID " + u.encryptedContent.algorithm);
          u.encryptedContent.content = u.encryptedContent.key.encrypt(r.encryptedContent.key.data);
        }
      }
    } };
  };
}, 496: (A, g, I) => {
  var B = I(832);
  I(68), I(116);
  var Q = B.asn1, E = A.exports = B.pkcs7asn1 = B.pkcs7asn1 || {};
  B.pkcs7 = B.pkcs7 || {}, B.pkcs7.asn1 = E;
  var C = { name: "ContentInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "ContentInfo.ContentType", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "contentType" }, { name: "ContentInfo.content", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 0, constructed: !0, optional: !0, captureAsn1: "content" }] };
  E.contentInfoValidator = C;
  var o = { name: "EncryptedContentInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "EncryptedContentInfo.contentType", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "contentType" }, { name: "EncryptedContentInfo.contentEncryptionAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "EncryptedContentInfo.contentEncryptionAlgorithm.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "encAlgorithm" }, { name: "EncryptedContentInfo.contentEncryptionAlgorithm.parameter", tagClass: Q.Class.UNIVERSAL, captureAsn1: "encParameter" }] }, { name: "EncryptedContentInfo.encryptedContent", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 0, capture: "encryptedContent", captureAsn1: "encryptedContentAsn1" }] };
  E.envelopedDataValidator = { name: "EnvelopedData", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "EnvelopedData.Version", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "version" }, { name: "EnvelopedData.RecipientInfos", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SET, constructed: !0, captureAsn1: "recipientInfos" }].concat(o) }, E.encryptedDataValidator = { name: "EncryptedData", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "EncryptedData.Version", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "version" }].concat(o) };
  var t = { name: "SignerInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "SignerInfo.version", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1 }, { name: "SignerInfo.issuerAndSerialNumber", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "SignerInfo.issuerAndSerialNumber.issuer", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "issuer" }, { name: "SignerInfo.issuerAndSerialNumber.serialNumber", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "serial" }] }, { name: "SignerInfo.digestAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "SignerInfo.digestAlgorithm.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "digestAlgorithm" }, { name: "SignerInfo.digestAlgorithm.parameter", tagClass: Q.Class.UNIVERSAL, constructed: !1, captureAsn1: "digestParameter", optional: !0 }] }, { name: "SignerInfo.authenticatedAttributes", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 0, constructed: !0, optional: !0, capture: "authenticatedAttributes" }, { name: "SignerInfo.digestEncryptionAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, capture: "signatureAlgorithm" }, { name: "SignerInfo.encryptedDigest", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OCTETSTRING, constructed: !1, capture: "signature" }, { name: "SignerInfo.unauthenticatedAttributes", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 1, constructed: !0, optional: !0, capture: "unauthenticatedAttributes" }] };
  E.signedDataValidator = { name: "SignedData", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "SignedData.Version", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "version" }, { name: "SignedData.DigestAlgorithms", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SET, constructed: !0, captureAsn1: "digestAlgorithms" }, C, { name: "SignedData.Certificates", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 0, optional: !0, captureAsn1: "certificates" }, { name: "SignedData.CertificateRevocationLists", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 1, optional: !0, captureAsn1: "crls" }, { name: "SignedData.SignerInfos", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SET, capture: "signerInfos", optional: !0, value: [t] }] }, E.recipientInfoValidator = { name: "RecipientInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "RecipientInfo.version", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "version" }, { name: "RecipientInfo.issuerAndSerial", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "RecipientInfo.issuerAndSerial.issuer", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "issuer" }, { name: "RecipientInfo.issuerAndSerial.serialNumber", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "serial" }] }, { name: "RecipientInfo.keyEncryptionAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "RecipientInfo.keyEncryptionAlgorithm.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "encAlgorithm" }, { name: "RecipientInfo.keyEncryptionAlgorithm.parameter", tagClass: Q.Class.UNIVERSAL, constructed: !1, captureAsn1: "encParameter", optional: !0 }] }, { name: "RecipientInfo.encryptedKey", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OCTETSTRING, constructed: !1, capture: "encKey" }] };
}, 742: (A, g, I) => {
  var B = I(832);
  I(68), I(270), I(450), I(953), I(960), I(147), I(7), I(95), I(116), I(414);
  var Q = B.asn1, E = A.exports = B.pki = B.pki || {};
  E.pemToDer = function(C) {
    var o = B.pem.decode(C)[0];
    if (o.procType && o.procType.type === "ENCRYPTED") throw new Error("Could not convert PEM to DER; PEM is encrypted.");
    return B.util.createBuffer(o.body);
  }, E.privateKeyFromPem = function(C) {
    var o = B.pem.decode(C)[0];
    if (o.type !== "PRIVATE KEY" && o.type !== "RSA PRIVATE KEY") {
      var t = new Error('Could not convert private key from PEM; PEM header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".');
      throw t.headerType = o.type, t;
    }
    if (o.procType && o.procType.type === "ENCRYPTED") throw new Error("Could not convert private key from PEM; PEM is encrypted.");
    var e = Q.fromDer(o.body);
    return E.privateKeyFromAsn1(e);
  }, E.privateKeyToPem = function(C, o) {
    var t = { type: "RSA PRIVATE KEY", body: Q.toDer(E.privateKeyToAsn1(C)).getBytes() };
    return B.pem.encode(t, { maxline: o });
  }, E.privateKeyInfoToPem = function(C, o) {
    var t = { type: "PRIVATE KEY", body: Q.toDer(C).getBytes() };
    return B.pem.encode(t, { maxline: o });
  };
}, 654: (A, g, I) => {
  var B = I(832);
  I(116), I(764), I(563), function() {
    if (B.prime) A.exports = B.prime;
    else {
      var Q = A.exports = B.prime = B.prime || {}, E = B.jsbn.BigInteger, C = [6, 4, 2, 4, 2, 4, 6, 2], o = new E(null);
      o.fromInt(30);
      var t = function(r, h) {
        return r | h;
      };
      Q.generateProbablePrime = function(r, h, n) {
        typeof h == "function" && (n = h, h = {});
        var l = (h = h || {}).algorithm || "PRIMEINC";
        typeof l == "string" && (l = { name: l }), l.options = l.options || {};
        var y = h.prng || B.random, N = { nextBytes: function(s) {
          for (var F = y.getBytesSync(s.length), u = 0; u < s.length; ++u) s[u] = F.charCodeAt(u);
        } };
        if (l.name === "PRIMEINC") return function(s, F, u, U) {
          return "workers" in u ? function(J, L, f, d) {
            if (typeof Worker > "u") return e(J, L, f, d);
            var p = a(J, L), x = f.workers, M = f.workLoad || 100, S = 30 * M / 8, k = f.workerScript || "forge/prime.worker.js";
            if (x === -1) return B.util.estimateCores(function(m, T) {
              m && (T = 2), x = T - 1, v();
            });
            function v() {
              x = Math.max(1, x);
              for (var m = [], T = 0; T < x; ++T) m[T] = new Worker(k);
              for (T = 0; T < x; ++T) m[T].addEventListener("message", AA);
              var $ = !1;
              function AA(lA) {
                if (!$) {
                  var FA = lA.data;
                  if (FA.found) {
                    for (var cA = 0; cA < m.length; ++cA) m[cA].terminate();
                    return $ = !0, d(null, new E(FA.prime, 16));
                  }
                  p.bitLength() > J && (p = a(J, L));
                  var yA = p.toString(16);
                  lA.target.postMessage({ hex: yA, workLoad: M }), p.dAddOffset(S, 0);
                }
              }
            }
            v();
          }(s, F, u, U) : e(s, F, u, U);
        }(r, N, l.options, n);
        throw new Error("Invalid prime generation algorithm: " + l.name);
      };
    }
    function e(r, h, n, l) {
      var y = a(r, h), N = function(F) {
        return F <= 100 ? 27 : F <= 150 ? 18 : F <= 200 ? 15 : F <= 250 ? 12 : F <= 300 ? 9 : F <= 350 ? 8 : F <= 400 ? 7 : F <= 500 ? 6 : F <= 600 ? 5 : F <= 800 ? 4 : F <= 1250 ? 3 : 2;
      }(y.bitLength());
      "millerRabinTests" in n && (N = n.millerRabinTests);
      var s = 10;
      "maxBlockTime" in n && (s = n.maxBlockTime), i(y, r, h, 0, N, s, l);
    }
    function i(r, h, n, l, y, N, s) {
      var F = +/* @__PURE__ */ new Date();
      do {
        if (r.bitLength() > h && (r = a(h, n)), r.isProbablePrime(y)) return s(null, r);
        r.dAddOffset(C[l++ % 8], 0);
      } while (N < 0 || +/* @__PURE__ */ new Date() - F < N);
      B.util.setImmediate(function() {
        i(r, h, n, l, y, N, s);
      });
    }
    function a(r, h) {
      var n = new E(r, h), l = r - 1;
      return n.testBit(l) || n.bitwiseTo(E.ONE.shiftLeft(l), t, n), n.dAddOffset(31 - n.mod(o).byteValue(), 0), n;
    }
  }();
}, 933: (A, g, I) => {
  var B = I(832);
  I(116);
  var Q = null;
  !B.util.isNodejs || B.options.usePureJavaScript || PA.versions["node-webkit"] || (Q = I(819)), (A.exports = B.prng = B.prng || {}).create = function(E) {
    for (var C = { plugin: E, key: null, seed: null, time: null, reseeds: 0, generated: 0, keyBytes: "" }, o = E.md, t = new Array(32), e = 0; e < 32; ++e) t[e] = o.create();
    function i() {
      if (C.pools[0].messageLength >= 32) return a();
      var h = 32 - C.pools[0].messageLength << 5;
      C.collect(C.seedFileSync(h)), a();
    }
    function a() {
      C.reseeds = C.reseeds === 4294967295 ? 0 : C.reseeds + 1;
      var h = C.plugin.md.create();
      h.update(C.keyBytes);
      for (var n = 1, l = 0; l < 32; ++l) C.reseeds % n == 0 && (h.update(C.pools[l].digest().getBytes()), C.pools[l].start()), n <<= 1;
      C.keyBytes = h.digest().getBytes(), h.start(), h.update(C.keyBytes);
      var y = h.digest().getBytes();
      C.key = C.plugin.formatKey(C.keyBytes), C.seed = C.plugin.formatSeed(y), C.generated = 0;
    }
    function r(h) {
      var n = null, l = B.util.globalScope, y = l.crypto || l.msCrypto;
      y && y.getRandomValues && (n = function(d) {
        return y.getRandomValues(d);
      });
      var N = B.util.createBuffer();
      if (n) for (; N.length() < h; ) {
        var s = Math.max(1, Math.min(h - N.length(), 65536) / 4), F = new Uint32Array(Math.floor(s));
        try {
          n(F);
          for (var u = 0; u < F.length; ++u) N.putInt32(F[u]);
        } catch (d) {
          if (!(typeof QuotaExceededError < "u" && d instanceof QuotaExceededError)) throw d;
        }
      }
      if (N.length() < h) for (var U, J, L, f = Math.floor(65536 * Math.random()); N.length() < h; ) for (J = 16807 * (65535 & f), J += (32767 & (U = 16807 * (f >> 16))) << 16, f = 4294967295 & (J = (2147483647 & (J += U >> 15)) + (J >> 31)), u = 0; u < 3; ++u) L = f >>> (u << 3), L ^= Math.floor(256 * Math.random()), N.putByte(255 & L);
      return N.getBytes(h);
    }
    return C.pools = t, C.pool = 0, C.generate = function(h, n) {
      if (!n) return C.generateSync(h);
      var l = C.plugin.cipher, y = C.plugin.increment, N = C.plugin.formatKey, s = C.plugin.formatSeed, F = B.util.createBuffer();
      C.key = null, function u(U) {
        if (U) return n(U);
        if (F.length() >= h) return n(null, F.getBytes(h));
        if (C.generated > 1048575 && (C.key = null), C.key === null) return B.util.nextTick(function() {
          (function(L) {
            if (C.pools[0].messageLength >= 32) return a(), L();
            var f = 32 - C.pools[0].messageLength << 5;
            C.seedFile(f, function(d, p) {
              if (d) return L(d);
              C.collect(p), a(), L();
            });
          })(u);
        });
        var J = l(C.key, C.seed);
        C.generated += J.length, F.putBytes(J), C.key = N(l(C.key, y(C.seed))), C.seed = s(l(C.key, C.seed)), B.util.setImmediate(u);
      }();
    }, C.generateSync = function(h) {
      var n = C.plugin.cipher, l = C.plugin.increment, y = C.plugin.formatKey, N = C.plugin.formatSeed;
      C.key = null;
      for (var s = B.util.createBuffer(); s.length() < h; ) {
        C.generated > 1048575 && (C.key = null), C.key === null && i();
        var F = n(C.key, C.seed);
        C.generated += F.length, s.putBytes(F), C.key = y(n(C.key, l(C.seed))), C.seed = N(n(C.key, C.seed));
      }
      return s.getBytes(h);
    }, Q ? (C.seedFile = function(h, n) {
      Q.randomBytes(h, function(l, y) {
        if (l) return n(l);
        n(null, y.toString());
      });
    }, C.seedFileSync = function(h) {
      return Q.randomBytes(h).toString();
    }) : (C.seedFile = function(h, n) {
      try {
        n(null, r(h));
      } catch (l) {
        n(l);
      }
    }, C.seedFileSync = r), C.collect = function(h) {
      for (var n = h.length, l = 0; l < n; ++l) C.pools[C.pool].update(h.substr(l, 1)), C.pool = C.pool === 31 ? 0 : C.pool + 1;
    }, C.collectInt = function(h, n) {
      for (var l = "", y = 0; y < n; y += 8) l += String.fromCharCode(h >> y & 255);
      C.collect(l);
    }, C.registerWorker = function(h) {
      h === self ? C.seedFile = function(n, l) {
        self.addEventListener("message", function y(N) {
          var s = N.data;
          s.forge && s.forge.prng && (self.removeEventListener("message", y), l(s.forge.prng.err, s.forge.prng.bytes));
        }), self.postMessage({ forge: { prng: { needed: n } } });
      } : h.addEventListener("message", function(n) {
        var l = n.data;
        l.forge && l.forge.prng && C.seedFile(l.forge.prng.needed, function(y, N) {
          h.postMessage({ forge: { prng: { err: y, bytes: N } } });
        });
      });
    }, C;
  };
}, 7: (A, g, I) => {
  var B = I(832);
  I(563), I(116), (A.exports = B.pss = B.pss || {}).create = function(Q) {
    arguments.length === 3 && (Q = { md: arguments[0], mgf: arguments[1], saltLength: arguments[2] });
    var E, C = Q.md, o = Q.mgf, t = C.digestLength, e = Q.salt || null;
    if (typeof e == "string" && (e = B.util.createBuffer(e)), "saltLength" in Q) E = Q.saltLength;
    else {
      if (e === null) throw new Error("Salt length not specified or specific salt not given.");
      E = e.length();
    }
    if (e !== null && e.length() !== E) throw new Error("Given salt length does not match length of given salt.");
    var i = Q.prng || B.random;
    return { encode: function(a, r) {
      var h, n, l = r - 1, y = Math.ceil(l / 8), N = a.digest().getBytes();
      if (y < t + E + 2) throw new Error("Message is too long to encrypt.");
      n = e === null ? i.getBytesSync(E) : e.bytes();
      var s = new B.util.ByteBuffer();
      s.fillWithByte(0, 8), s.putBytes(N), s.putBytes(n), C.start(), C.update(s.getBytes());
      var F = C.digest().getBytes(), u = new B.util.ByteBuffer();
      u.fillWithByte(0, y - E - t - 2), u.putByte(1), u.putBytes(n);
      var U = u.getBytes(), J = y - t - 1, L = o.generate(F, J), f = "";
      for (h = 0; h < J; h++) f += String.fromCharCode(U.charCodeAt(h) ^ L.charCodeAt(h));
      var d = 65280 >> 8 * y - l & 255;
      return (f = String.fromCharCode(f.charCodeAt(0) & ~d) + f.substr(1)) + F + "¼";
    }, verify: function(a, r, h) {
      var n, l = h - 1, y = Math.ceil(l / 8);
      if (r = r.substr(-y), y < t + E + 2) throw new Error("Inconsistent parameters to PSS signature verification.");
      if (r.charCodeAt(y - 1) !== 188) throw new Error("Encoded message does not end in 0xBC.");
      var N = y - t - 1, s = r.substr(0, N), F = r.substr(N, t), u = 65280 >> 8 * y - l & 255;
      if (s.charCodeAt(0) & u) throw new Error("Bits beyond keysize not zero as expected.");
      var U = o.generate(F, N), J = "";
      for (n = 0; n < N; n++) J += String.fromCharCode(s.charCodeAt(n) ^ U.charCodeAt(n));
      J = String.fromCharCode(J.charCodeAt(0) & ~u) + J.substr(1);
      var L = y - t - E - 2;
      for (n = 0; n < L; n++) if (J.charCodeAt(n) !== 0) throw new Error("Leftmost octets not zero as expected");
      if (J.charCodeAt(L) !== 1) throw new Error("Inconsistent PSS signature, 0x01 marker not found");
      var f = J.substr(-E), d = new B.util.ByteBuffer();
      return d.fillWithByte(0, 8), d.putBytes(a), d.putBytes(f), C.start(), C.update(d.getBytes()), F === C.digest().getBytes();
    } };
  };
}, 563: (A, g, I) => {
  var B = I(832);
  I(925), I(668), I(933), I(116), B.random && B.random.getBytes ? A.exports = B.random : function(Q) {
    var E = {}, C = new Array(4), o = B.util.createBuffer();
    function t() {
      var l = B.prng.create(E);
      return l.getBytes = function(y, N) {
        return l.generate(y, N);
      }, l.getBytesSync = function(y) {
        return l.generate(y);
      }, l;
    }
    E.formatKey = function(l) {
      var y = B.util.createBuffer(l);
      return (l = new Array(4))[0] = y.getInt32(), l[1] = y.getInt32(), l[2] = y.getInt32(), l[3] = y.getInt32(), B.aes._expandKey(l, !1);
    }, E.formatSeed = function(l) {
      var y = B.util.createBuffer(l);
      return (l = new Array(4))[0] = y.getInt32(), l[1] = y.getInt32(), l[2] = y.getInt32(), l[3] = y.getInt32(), l;
    }, E.cipher = function(l, y) {
      return B.aes._updateBlock(l, y, C, !1), o.putInt32(C[0]), o.putInt32(C[1]), o.putInt32(C[2]), o.putInt32(C[3]), o.getBytes();
    }, E.increment = function(l) {
      return ++l[3], l;
    }, E.md = B.md.sha256;
    var e = t(), i = null, a = B.util.globalScope, r = a.crypto || a.msCrypto;
    if (r && r.getRandomValues && (i = function(l) {
      return r.getRandomValues(l);
    }), B.options.usePureJavaScript || !B.util.isNodejs && !i) {
      if (e.collectInt(+/* @__PURE__ */ new Date(), 32), typeof navigator < "u") {
        var h = "";
        for (var n in navigator) try {
          typeof navigator[n] == "string" && (h += navigator[n]);
        } catch {
        }
        e.collect(h), h = null;
      }
      Q && (Q().mousemove(function(l) {
        e.collectInt(l.clientX, 16), e.collectInt(l.clientY, 16);
      }), Q().keypress(function(l) {
        e.collectInt(l.charCode, 8);
      }));
    }
    if (B.random) for (var n in e) B.random[n] = e[n];
    else B.random = e;
    B.random.createInstance = t, A.exports = B.random;
  }(typeof jQuery < "u" ? jQuery : null);
}, 372: (A, g, I) => {
  var B = I(832);
  I(116);
  var Q = [217, 120, 249, 196, 25, 221, 181, 237, 40, 233, 253, 121, 74, 160, 216, 157, 198, 126, 55, 131, 43, 118, 83, 142, 98, 76, 100, 136, 68, 139, 251, 162, 23, 154, 89, 245, 135, 179, 79, 19, 97, 69, 109, 141, 9, 129, 125, 50, 189, 143, 64, 235, 134, 183, 123, 11, 240, 149, 33, 34, 92, 107, 78, 130, 84, 214, 101, 147, 206, 96, 178, 28, 115, 86, 192, 20, 167, 140, 241, 220, 18, 117, 202, 31, 59, 190, 228, 209, 66, 61, 212, 48, 163, 60, 182, 38, 111, 191, 14, 218, 70, 105, 7, 87, 39, 242, 29, 155, 188, 148, 67, 3, 248, 17, 199, 246, 144, 239, 62, 231, 6, 195, 213, 47, 200, 102, 30, 215, 8, 232, 234, 222, 128, 82, 238, 247, 132, 170, 114, 172, 53, 77, 106, 42, 150, 26, 210, 113, 90, 21, 73, 116, 75, 159, 208, 94, 4, 24, 164, 236, 194, 224, 65, 110, 15, 81, 203, 204, 36, 145, 175, 80, 161, 244, 112, 57, 153, 124, 58, 133, 35, 184, 180, 122, 252, 2, 54, 91, 37, 85, 151, 49, 45, 93, 250, 152, 227, 138, 146, 174, 5, 223, 41, 16, 103, 108, 186, 201, 211, 0, 230, 207, 225, 158, 168, 44, 99, 22, 1, 63, 88, 226, 137, 169, 13, 56, 52, 27, 171, 51, 255, 176, 187, 72, 12, 95, 185, 177, 205, 46, 197, 243, 219, 71, 229, 165, 156, 119, 10, 166, 32, 104, 254, 127, 193, 173], E = [1, 2, 3, 5], C = function(e, i) {
    return e << i & 65535 | (65535 & e) >> 16 - i;
  }, o = function(e, i) {
    return (65535 & e) >> i | e << 16 - i & 65535;
  };
  A.exports = B.rc2 = B.rc2 || {}, B.rc2.expandKey = function(e, i) {
    typeof e == "string" && (e = B.util.createBuffer(e)), i = i || 128;
    var a, r = e, h = e.length(), n = i, l = Math.ceil(n / 8), y = 255 >> (7 & n);
    for (a = h; a < 128; a++) r.putByte(Q[r.at(a - 1) + r.at(a - h) & 255]);
    for (r.setAt(128 - l, Q[r.at(128 - l) & y]), a = 127 - l; a >= 0; a--) r.setAt(a, Q[r.at(a + 1) ^ r.at(a + l)]);
    return r;
  };
  var t = function(e, i, a) {
    var r, h, n, l, y = !1, N = null, s = null, F = null, u = [];
    for (e = B.rc2.expandKey(e, i), n = 0; n < 64; n++) u.push(e.getInt16Le());
    a ? (r = function(L) {
      for (n = 0; n < 4; n++) L[n] += u[l] + (L[(n + 3) % 4] & L[(n + 2) % 4]) + (~L[(n + 3) % 4] & L[(n + 1) % 4]), L[n] = C(L[n], E[n]), l++;
    }, h = function(L) {
      for (n = 0; n < 4; n++) L[n] += u[63 & L[(n + 3) % 4]];
    }) : (r = function(L) {
      for (n = 3; n >= 0; n--) L[n] = o(L[n], E[n]), L[n] -= u[l] + (L[(n + 3) % 4] & L[(n + 2) % 4]) + (~L[(n + 3) % 4] & L[(n + 1) % 4]), l--;
    }, h = function(L) {
      for (n = 3; n >= 0; n--) L[n] -= u[63 & L[(n + 3) % 4]];
    });
    var U = function(L) {
      var f = [];
      for (n = 0; n < 4; n++) {
        var d = N.getInt16Le();
        F !== null && (a ? d ^= F.getInt16Le() : F.putInt16Le(d)), f.push(65535 & d);
      }
      l = a ? 0 : 63;
      for (var p = 0; p < L.length; p++) for (var x = 0; x < L[p][0]; x++) L[p][1](f);
      for (n = 0; n < 4; n++) F !== null && (a ? F.putInt16Le(f[n]) : f[n] ^= F.getInt16Le()), s.putInt16Le(f[n]);
    }, J = null;
    return J = { start: function(L, f) {
      L && typeof L == "string" && (L = B.util.createBuffer(L)), y = !1, N = B.util.createBuffer(), s = f || new B.util.createBuffer(), F = L, J.output = s;
    }, update: function(L) {
      for (y || N.putBuffer(L); N.length() >= 8; ) U([[5, r], [1, h], [6, r], [1, h], [5, r]]);
    }, finish: function(L) {
      var f = !0;
      if (a) if (L) f = L(8, N, !a);
      else {
        var d = N.length() === 8 ? 8 : 8 - N.length();
        N.fillWithByte(d, d);
      }
      if (f && (y = !0, J.update()), !a && (f = N.length() === 0)) if (L) f = L(8, s, !a);
      else {
        var p = s.length(), x = s.at(p - 1);
        x > p ? f = !1 : s.truncate(x);
      }
      return f;
    } };
  };
  B.rc2.startEncrypting = function(e, i, a) {
    var r = B.rc2.createEncryptionCipher(e, 128);
    return r.start(i, a), r;
  }, B.rc2.createEncryptionCipher = function(e, i) {
    return t(e, i, !0);
  }, B.rc2.startDecrypting = function(e, i, a) {
    var r = B.rc2.createDecryptionCipher(e, 128);
    return r.start(i, a), r;
  }, B.rc2.createDecryptionCipher = function(e, i) {
    return t(e, i, !1);
  };
}, 95: (A, g, I) => {
  var B = I(832);
  if (I(68), I(764), I(270), I(936), I(654), I(563), I(116), Q === void 0) var Q = B.jsbn.BigInteger;
  var E = B.util.isNodejs ? I(819) : null, C = B.asn1, o = B.util;
  B.pki = B.pki || {}, A.exports = B.pki.rsa = B.rsa = B.rsa || {};
  var t = B.pki, e = [6, 4, 2, 4, 2, 4, 6, 2], i = { name: "PrivateKeyInfo", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, value: [{ name: "PrivateKeyInfo.version", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyVersion" }, { name: "PrivateKeyInfo.privateKeyAlgorithm", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, value: [{ name: "AlgorithmIdentifier.algorithm", tagClass: C.Class.UNIVERSAL, type: C.Type.OID, constructed: !1, capture: "privateKeyOid" }] }, { name: "PrivateKeyInfo", tagClass: C.Class.UNIVERSAL, type: C.Type.OCTETSTRING, constructed: !1, capture: "privateKey" }] }, a = { name: "RSAPrivateKey", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, value: [{ name: "RSAPrivateKey.version", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyVersion" }, { name: "RSAPrivateKey.modulus", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyModulus" }, { name: "RSAPrivateKey.publicExponent", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyPublicExponent" }, { name: "RSAPrivateKey.privateExponent", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyPrivateExponent" }, { name: "RSAPrivateKey.prime1", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyPrime1" }, { name: "RSAPrivateKey.prime2", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyPrime2" }, { name: "RSAPrivateKey.exponent1", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyExponent1" }, { name: "RSAPrivateKey.exponent2", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyExponent2" }, { name: "RSAPrivateKey.coefficient", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "privateKeyCoefficient" }] }, r = { name: "RSAPublicKey", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, value: [{ name: "RSAPublicKey.modulus", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "publicKeyModulus" }, { name: "RSAPublicKey.exponent", tagClass: C.Class.UNIVERSAL, type: C.Type.INTEGER, constructed: !1, capture: "publicKeyExponent" }] }, h = B.pki.rsa.publicKeyValidator = { name: "SubjectPublicKeyInfo", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, captureAsn1: "subjectPublicKeyInfo", value: [{ name: "SubjectPublicKeyInfo.AlgorithmIdentifier", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, value: [{ name: "AlgorithmIdentifier.algorithm", tagClass: C.Class.UNIVERSAL, type: C.Type.OID, constructed: !1, capture: "publicKeyOid" }] }, { name: "SubjectPublicKeyInfo.subjectPublicKey", tagClass: C.Class.UNIVERSAL, type: C.Type.BITSTRING, constructed: !1, value: [{ name: "SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, optional: !0, captureAsn1: "rsaPublicKey" }] }] }, n = { name: "DigestInfo", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, value: [{ name: "DigestInfo.DigestAlgorithm", tagClass: C.Class.UNIVERSAL, type: C.Type.SEQUENCE, constructed: !0, value: [{ name: "DigestInfo.DigestAlgorithm.algorithmIdentifier", tagClass: C.Class.UNIVERSAL, type: C.Type.OID, constructed: !1, capture: "algorithmIdentifier" }, { name: "DigestInfo.DigestAlgorithm.parameters", tagClass: C.Class.UNIVERSAL, type: C.Type.NULL, capture: "parameters", optional: !0, constructed: !1 }] }, { name: "DigestInfo.digest", tagClass: C.Class.UNIVERSAL, type: C.Type.OCTETSTRING, constructed: !1, capture: "digest" }] }, l = function(d) {
    var p;
    if (!(d.algorithm in t.oids)) {
      var x = new Error("Unknown message digest algorithm.");
      throw x.algorithm = d.algorithm, x;
    }
    p = t.oids[d.algorithm];
    var M = C.oidToDer(p).getBytes(), S = C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, []), k = C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, []);
    k.value.push(C.create(C.Class.UNIVERSAL, C.Type.OID, !1, M)), k.value.push(C.create(C.Class.UNIVERSAL, C.Type.NULL, !1, ""));
    var v = C.create(C.Class.UNIVERSAL, C.Type.OCTETSTRING, !1, d.digest().getBytes());
    return S.value.push(k), S.value.push(v), C.toDer(S).getBytes();
  }, y = function(d, p, x) {
    if (x) return d.modPow(p.e, p.n);
    if (!p.p || !p.q) return d.modPow(p.d, p.n);
    var M;
    p.dP || (p.dP = p.d.mod(p.p.subtract(Q.ONE))), p.dQ || (p.dQ = p.d.mod(p.q.subtract(Q.ONE))), p.qInv || (p.qInv = p.q.modInverse(p.p));
    do
      M = new Q(B.util.bytesToHex(B.random.getBytes(p.n.bitLength() / 8)), 16);
    while (M.compareTo(p.n) >= 0 || !M.gcd(p.n).equals(Q.ONE));
    for (var S = (d = d.multiply(M.modPow(p.e, p.n)).mod(p.n)).mod(p.p).modPow(p.dP, p.p), k = d.mod(p.q).modPow(p.dQ, p.q); S.compareTo(k) < 0; ) S = S.add(p.p);
    var v = S.subtract(k).multiply(p.qInv).mod(p.p).multiply(p.q).add(k);
    return v.multiply(M.modInverse(p.n)).mod(p.n);
  };
  function N(d, p, x) {
    var M = B.util.createBuffer(), S = Math.ceil(p.n.bitLength() / 8);
    if (d.length > S - 11) {
      var k = new Error("Message is too long for PKCS#1 v1.5 padding.");
      throw k.length = d.length, k.max = S - 11, k;
    }
    M.putByte(0), M.putByte(x);
    var v, m = S - 3 - d.length;
    if (x === 0 || x === 1) {
      v = x === 0 ? 0 : 255;
      for (var T = 0; T < m; ++T) M.putByte(v);
    } else for (; m > 0; ) {
      var $ = 0, AA = B.random.getBytes(m);
      for (T = 0; T < m; ++T) (v = AA.charCodeAt(T)) === 0 ? ++$ : M.putByte(v);
      m = $;
    }
    return M.putByte(0), M.putBytes(d), M;
  }
  function s(d, p, x, M) {
    var S = Math.ceil(p.n.bitLength() / 8), k = B.util.createBuffer(d), v = k.getByte(), m = k.getByte();
    if (v !== 0 || x && m !== 0 && m !== 1 || !x && m != 2 || x && m === 0 && M === void 0) throw new Error("Encryption block is invalid.");
    var T = 0;
    if (m === 0) {
      T = S - 3 - M;
      for (var $ = 0; $ < T; ++$) if (k.getByte() !== 0) throw new Error("Encryption block is invalid.");
    } else if (m === 1) for (T = 0; k.length() > 1; ) {
      if (k.getByte() !== 255) {
        --k.read;
        break;
      }
      ++T;
    }
    else if (m === 2) for (T = 0; k.length() > 1; ) {
      if (k.getByte() === 0) {
        --k.read;
        break;
      }
      ++T;
    }
    if (k.getByte() !== 0 || T !== S - 3 - k.length()) throw new Error("Encryption block is invalid.");
    return k.getBytes();
  }
  function F(d) {
    var p = d.toString(16);
    p[0] >= "8" && (p = "00" + p);
    var x = B.util.hexToBytes(p);
    return x.length > 1 && (x.charCodeAt(0) === 0 && !(128 & x.charCodeAt(1)) || x.charCodeAt(0) === 255 && (128 & x.charCodeAt(1)) == 128) ? x.substr(1) : x;
  }
  function u(d) {
    return d <= 100 ? 27 : d <= 150 ? 18 : d <= 200 ? 15 : d <= 250 ? 12 : d <= 300 ? 9 : d <= 350 ? 8 : d <= 400 ? 7 : d <= 500 ? 6 : d <= 600 ? 5 : d <= 800 ? 4 : d <= 1250 ? 3 : 2;
  }
  function U(d) {
    return B.util.isNodejs && typeof E[d] == "function";
  }
  function J(d) {
    return o.globalScope !== void 0 && typeof o.globalScope.crypto == "object" && typeof o.globalScope.crypto.subtle == "object" && typeof o.globalScope.crypto.subtle[d] == "function";
  }
  function L(d) {
    return o.globalScope !== void 0 && typeof o.globalScope.msCrypto == "object" && typeof o.globalScope.msCrypto.subtle == "object" && typeof o.globalScope.msCrypto.subtle[d] == "function";
  }
  function f(d) {
    for (var p = B.util.hexToBytes(d.toString(16)), x = new Uint8Array(p.length), M = 0; M < p.length; ++M) x[M] = p.charCodeAt(M);
    return x;
  }
  t.rsa.encrypt = function(d, p, x) {
    var M, S = x, k = Math.ceil(p.n.bitLength() / 8);
    x !== !1 && x !== !0 ? (S = x === 2, M = N(d, p, x)) : (M = B.util.createBuffer()).putBytes(d);
    for (var v = new Q(M.toHex(), 16), m = y(v, p, S).toString(16), T = B.util.createBuffer(), $ = k - Math.ceil(m.length / 2); $ > 0; ) T.putByte(0), --$;
    return T.putBytes(B.util.hexToBytes(m)), T.getBytes();
  }, t.rsa.decrypt = function(d, p, x, M) {
    var S = Math.ceil(p.n.bitLength() / 8);
    if (d.length !== S) {
      var k = new Error("Encrypted message length is invalid.");
      throw k.length = d.length, k.expected = S, k;
    }
    var v = new Q(B.util.createBuffer(d).toHex(), 16);
    if (v.compareTo(p.n) >= 0) throw new Error("Encrypted message is invalid.");
    for (var m = y(v, p, x).toString(16), T = B.util.createBuffer(), $ = S - Math.ceil(m.length / 2); $ > 0; ) T.putByte(0), --$;
    return T.putBytes(B.util.hexToBytes(m)), M !== !1 ? s(T.getBytes(), p, x) : T.getBytes();
  }, t.rsa.createKeyPairGenerationState = function(d, p, x) {
    typeof d == "string" && (d = parseInt(d, 10)), d = d || 2048;
    var M, S = (x = x || {}).prng || B.random, k = { nextBytes: function(m) {
      for (var T = S.getBytesSync(m.length), $ = 0; $ < m.length; ++$) m[$] = T.charCodeAt($);
    } }, v = x.algorithm || "PRIMEINC";
    if (v !== "PRIMEINC") throw new Error("Invalid key generation algorithm: " + v);
    return (M = { algorithm: v, state: 0, bits: d, rng: k, eInt: p || 65537, e: new Q(null), p: null, q: null, qBits: d >> 1, pBits: d - (d >> 1), pqState: 0, num: null, keys: null }).e.fromInt(M.eInt), M;
  }, t.rsa.stepKeyPairGenerationState = function(d, p) {
    "algorithm" in d || (d.algorithm = "PRIMEINC");
    var x = new Q(null);
    x.fromInt(30);
    for (var M, S = 0, k = function(lA, FA) {
      return lA | FA;
    }, v = +/* @__PURE__ */ new Date(), m = 0; d.keys === null && (p <= 0 || m < p); ) {
      if (d.state === 0) {
        var T = d.p === null ? d.pBits : d.qBits, $ = T - 1;
        d.pqState === 0 ? (d.num = new Q(T, d.rng), d.num.testBit($) || d.num.bitwiseTo(Q.ONE.shiftLeft($), k, d.num), d.num.dAddOffset(31 - d.num.mod(x).byteValue(), 0), S = 0, ++d.pqState) : d.pqState === 1 ? d.num.bitLength() > T ? d.pqState = 0 : d.num.isProbablePrime(u(d.num.bitLength())) ? ++d.pqState : d.num.dAddOffset(e[S++ % 8], 0) : d.pqState === 2 ? d.pqState = d.num.subtract(Q.ONE).gcd(d.e).compareTo(Q.ONE) === 0 ? 3 : 0 : d.pqState === 3 && (d.pqState = 0, d.p === null ? d.p = d.num : d.q = d.num, d.p !== null && d.q !== null && ++d.state, d.num = null);
      } else if (d.state === 1) d.p.compareTo(d.q) < 0 && (d.num = d.p, d.p = d.q, d.q = d.num), ++d.state;
      else if (d.state === 2) d.p1 = d.p.subtract(Q.ONE), d.q1 = d.q.subtract(Q.ONE), d.phi = d.p1.multiply(d.q1), ++d.state;
      else if (d.state === 3) d.phi.gcd(d.e).compareTo(Q.ONE) === 0 ? ++d.state : (d.p = null, d.q = null, d.state = 0);
      else if (d.state === 4) d.n = d.p.multiply(d.q), d.n.bitLength() === d.bits ? ++d.state : (d.q = null, d.state = 0);
      else if (d.state === 5) {
        var AA = d.e.modInverse(d.phi);
        d.keys = { privateKey: t.rsa.setPrivateKey(d.n, d.e, AA, d.p, d.q, AA.mod(d.p1), AA.mod(d.q1), d.q.modInverse(d.p)), publicKey: t.rsa.setPublicKey(d.n, d.e) };
      }
      m += (M = +/* @__PURE__ */ new Date()) - v, v = M;
    }
    return d.keys !== null;
  }, t.rsa.generateKeyPair = function(d, p, x, M) {
    if (arguments.length === 1 ? typeof d == "object" ? (x = d, d = void 0) : typeof d == "function" && (M = d, d = void 0) : arguments.length === 2 ? typeof d == "number" ? typeof p == "function" ? (M = p, p = void 0) : typeof p != "number" && (x = p, p = void 0) : (x = d, M = p, d = void 0, p = void 0) : arguments.length === 3 && (typeof p == "number" ? typeof x == "function" && (M = x, x = void 0) : (M = x, x = p, p = void 0)), x = x || {}, d === void 0 && (d = x.bits || 2048), p === void 0 && (p = x.e || 65537), !B.options.usePureJavaScript && !x.prng && d >= 256 && d <= 16384 && (p === 65537 || p === 3)) {
      if (M) {
        if (U("generateKeyPair")) return E.generateKeyPair("rsa", { modulusLength: d, publicExponent: p, publicKeyEncoding: { type: "spki", format: "pem" }, privateKeyEncoding: { type: "pkcs8", format: "pem" } }, function(m, T, $) {
          if (m) return M(m);
          M(null, { privateKey: t.privateKeyFromPem($), publicKey: t.publicKeyFromPem(T) });
        });
        if (J("generateKey") && J("exportKey")) return o.globalScope.crypto.subtle.generateKey({ name: "RSASSA-PKCS1-v1_5", modulusLength: d, publicExponent: f(p), hash: { name: "SHA-256" } }, !0, ["sign", "verify"]).then(function(m) {
          return o.globalScope.crypto.subtle.exportKey("pkcs8", m.privateKey);
        }).then(void 0, function(m) {
          M(m);
        }).then(function(m) {
          if (m) {
            var T = t.privateKeyFromAsn1(C.fromDer(B.util.createBuffer(m)));
            M(null, { privateKey: T, publicKey: t.setRsaPublicKey(T.n, T.e) });
          }
        });
        if (L("generateKey") && L("exportKey")) {
          var S = o.globalScope.msCrypto.subtle.generateKey({ name: "RSASSA-PKCS1-v1_5", modulusLength: d, publicExponent: f(p), hash: { name: "SHA-256" } }, !0, ["sign", "verify"]);
          return S.oncomplete = function(m) {
            var T = m.target.result, $ = o.globalScope.msCrypto.subtle.exportKey("pkcs8", T.privateKey);
            $.oncomplete = function(AA) {
              var lA = AA.target.result, FA = t.privateKeyFromAsn1(C.fromDer(B.util.createBuffer(lA)));
              M(null, { privateKey: FA, publicKey: t.setRsaPublicKey(FA.n, FA.e) });
            }, $.onerror = function(AA) {
              M(AA);
            };
          }, void (S.onerror = function(m) {
            M(m);
          });
        }
      } else if (U("generateKeyPairSync")) {
        var k = E.generateKeyPairSync("rsa", { modulusLength: d, publicExponent: p, publicKeyEncoding: { type: "spki", format: "pem" }, privateKeyEncoding: { type: "pkcs8", format: "pem" } });
        return { privateKey: t.privateKeyFromPem(k.privateKey), publicKey: t.publicKeyFromPem(k.publicKey) };
      }
    }
    var v = t.rsa.createKeyPairGenerationState(d, p, x);
    if (!M) return t.rsa.stepKeyPairGenerationState(v, 0), v.keys;
    (function(m, T, $) {
      typeof T == "function" && ($ = T, T = {});
      var AA = { algorithm: { name: (T = T || {}).algorithm || "PRIMEINC", options: { workers: T.workers || 2, workLoad: T.workLoad || 100, workerScript: T.workerScript } } };
      function lA() {
        FA(m.pBits, function(yA, aA) {
          return yA ? $(yA) : (m.p = aA, m.q !== null ? cA(yA, m.q) : void FA(m.qBits, cA));
        });
      }
      function FA(yA, aA) {
        B.prime.generateProbablePrime(yA, AA, aA);
      }
      function cA(yA, aA) {
        if (yA) return $(yA);
        if (m.q = aA, m.p.compareTo(m.q) < 0) {
          var eA = m.p;
          m.p = m.q, m.q = eA;
        }
        if (m.p.subtract(Q.ONE).gcd(m.e).compareTo(Q.ONE) !== 0) return m.p = null, void lA();
        if (m.q.subtract(Q.ONE).gcd(m.e).compareTo(Q.ONE) !== 0) return m.q = null, void FA(m.qBits, cA);
        if (m.p1 = m.p.subtract(Q.ONE), m.q1 = m.q.subtract(Q.ONE), m.phi = m.p1.multiply(m.q1), m.phi.gcd(m.e).compareTo(Q.ONE) !== 0) return m.p = m.q = null, void lA();
        if (m.n = m.p.multiply(m.q), m.n.bitLength() !== m.bits) return m.q = null, void FA(m.qBits, cA);
        var CA = m.e.modInverse(m.phi);
        m.keys = { privateKey: t.rsa.setPrivateKey(m.n, m.e, CA, m.p, m.q, CA.mod(m.p1), CA.mod(m.q1), m.q.modInverse(m.p)), publicKey: t.rsa.setPublicKey(m.n, m.e) }, $(null, m.keys);
      }
      "prng" in T && (AA.prng = T.prng), lA();
    })(v, x, M);
  }, t.setRsaPublicKey = t.rsa.setPublicKey = function(d, p) {
    var x = { n: d, e: p, encrypt: function(M, S, k) {
      if (typeof S == "string" ? S = S.toUpperCase() : S === void 0 && (S = "RSAES-PKCS1-V1_5"), S === "RSAES-PKCS1-V1_5") S = { encode: function(m, T, $) {
        return N(m, T, 2).getBytes();
      } };
      else if (S === "RSA-OAEP" || S === "RSAES-OAEP") S = { encode: function(m, T) {
        return B.pkcs1.encode_rsa_oaep(T, m, k);
      } };
      else if (["RAW", "NONE", "NULL", null].indexOf(S) !== -1) S = { encode: function(m) {
        return m;
      } };
      else if (typeof S == "string") throw new Error('Unsupported encryption scheme: "' + S + '".');
      var v = S.encode(M, x, !0);
      return t.rsa.encrypt(v, x, !0);
    }, verify: function(M, S, k, v) {
      typeof k == "string" ? k = k.toUpperCase() : k === void 0 && (k = "RSASSA-PKCS1-V1_5"), v === void 0 && (v = { _parseAllDigestBytes: !0 }), "_parseAllDigestBytes" in v || (v._parseAllDigestBytes = !0), k === "RSASSA-PKCS1-V1_5" ? k = { verify: function(T, $) {
        $ = s($, x, !0);
        var AA = C.fromDer($, { parseAllBytes: v._parseAllDigestBytes }), lA = {}, FA = [];
        if (!C.validate(AA, n, lA, FA)) throw (cA = new Error("ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 DigestInfo value.")).errors = FA, cA;
        var cA, yA = C.derToOid(lA.algorithmIdentifier);
        if (yA !== B.oids.md2 && yA !== B.oids.md5 && yA !== B.oids.sha1 && yA !== B.oids.sha224 && yA !== B.oids.sha256 && yA !== B.oids.sha384 && yA !== B.oids.sha512 && yA !== B.oids["sha512-224"] && yA !== B.oids["sha512-256"]) throw (cA = new Error("Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.")).oid = yA, cA;
        if ((yA === B.oids.md2 || yA === B.oids.md5) && !("parameters" in lA)) throw new Error("ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 DigestInfo value. Missing algorithm identifer NULL parameters.");
        return T === lA.digest;
      } } : k !== "NONE" && k !== "NULL" && k !== null || (k = { verify: function(T, $) {
        return T === s($, x, !0);
      } });
      var m = t.rsa.decrypt(S, x, !0, !1);
      return k.verify(M, m, x.n.bitLength());
    } };
    return x;
  }, t.setRsaPrivateKey = t.rsa.setPrivateKey = function(d, p, x, M, S, k, v, m) {
    var T = { n: d, e: p, d: x, p: M, q: S, dP: k, dQ: v, qInv: m, decrypt: function($, AA, lA) {
      typeof AA == "string" ? AA = AA.toUpperCase() : AA === void 0 && (AA = "RSAES-PKCS1-V1_5");
      var FA = t.rsa.decrypt($, T, !1, !1);
      if (AA === "RSAES-PKCS1-V1_5") AA = { decode: s };
      else if (AA === "RSA-OAEP" || AA === "RSAES-OAEP") AA = { decode: function(cA, yA) {
        return B.pkcs1.decode_rsa_oaep(yA, cA, lA);
      } };
      else {
        if (["RAW", "NONE", "NULL", null].indexOf(AA) === -1) throw new Error('Unsupported encryption scheme: "' + AA + '".');
        AA = { decode: function(cA) {
          return cA;
        } };
      }
      return AA.decode(FA, T, !1);
    }, sign: function($, AA) {
      var lA = !1;
      typeof AA == "string" && (AA = AA.toUpperCase()), AA === void 0 || AA === "RSASSA-PKCS1-V1_5" ? (AA = { encode: l }, lA = 1) : AA !== "NONE" && AA !== "NULL" && AA !== null || (AA = { encode: function() {
        return $;
      } }, lA = 1);
      var FA = AA.encode($, T.n.bitLength());
      return t.rsa.encrypt(FA, T, lA);
    } };
    return T;
  }, t.wrapRsaPrivateKey = function(d) {
    return C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, [C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, C.integerToDer(0).getBytes()), C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, [C.create(C.Class.UNIVERSAL, C.Type.OID, !1, C.oidToDer(t.oids.rsaEncryption).getBytes()), C.create(C.Class.UNIVERSAL, C.Type.NULL, !1, "")]), C.create(C.Class.UNIVERSAL, C.Type.OCTETSTRING, !1, C.toDer(d).getBytes())]);
  }, t.privateKeyFromAsn1 = function(d) {
    var p, x, M, S, k, v, m, T, $ = {}, AA = [];
    if (C.validate(d, i, $, AA) && (d = C.fromDer(B.util.createBuffer($.privateKey))), $ = {}, AA = [], !C.validate(d, a, $, AA)) {
      var lA = new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");
      throw lA.errors = AA, lA;
    }
    return p = B.util.createBuffer($.privateKeyModulus).toHex(), x = B.util.createBuffer($.privateKeyPublicExponent).toHex(), M = B.util.createBuffer($.privateKeyPrivateExponent).toHex(), S = B.util.createBuffer($.privateKeyPrime1).toHex(), k = B.util.createBuffer($.privateKeyPrime2).toHex(), v = B.util.createBuffer($.privateKeyExponent1).toHex(), m = B.util.createBuffer($.privateKeyExponent2).toHex(), T = B.util.createBuffer($.privateKeyCoefficient).toHex(), t.setRsaPrivateKey(new Q(p, 16), new Q(x, 16), new Q(M, 16), new Q(S, 16), new Q(k, 16), new Q(v, 16), new Q(m, 16), new Q(T, 16));
  }, t.privateKeyToAsn1 = t.privateKeyToRSAPrivateKey = function(d) {
    return C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, [C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, C.integerToDer(0).getBytes()), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.n)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.e)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.d)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.p)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.q)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.dP)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.dQ)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.qInv))]);
  }, t.publicKeyFromAsn1 = function(d) {
    var p = {}, x = [];
    if (C.validate(d, h, p, x)) {
      var M, S = C.derToOid(p.publicKeyOid);
      if (S !== t.oids.rsaEncryption) throw (M = new Error("Cannot read public key. Unknown OID.")).oid = S, M;
      d = p.rsaPublicKey;
    }
    if (x = [], !C.validate(d, r, p, x)) throw (M = new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.")).errors = x, M;
    var k = B.util.createBuffer(p.publicKeyModulus).toHex(), v = B.util.createBuffer(p.publicKeyExponent).toHex();
    return t.setRsaPublicKey(new Q(k, 16), new Q(v, 16));
  }, t.publicKeyToAsn1 = t.publicKeyToSubjectPublicKeyInfo = function(d) {
    return C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, [C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, [C.create(C.Class.UNIVERSAL, C.Type.OID, !1, C.oidToDer(t.oids.rsaEncryption).getBytes()), C.create(C.Class.UNIVERSAL, C.Type.NULL, !1, "")]), C.create(C.Class.UNIVERSAL, C.Type.BITSTRING, !1, [t.publicKeyToRSAPublicKey(d)])]);
  }, t.publicKeyToRSAPublicKey = function(d) {
    return C.create(C.Class.UNIVERSAL, C.Type.SEQUENCE, !0, [C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.n)), C.create(C.Class.UNIVERSAL, C.Type.INTEGER, !1, F(d.e))]);
  };
}, 137: (A, g, I) => {
  var B = I(832);
  I(991), I(116);
  var Q = A.exports = B.sha1 = B.sha1 || {};
  B.md.sha1 = B.md.algorithms.sha1 = Q, Q.create = function() {
    C || (E = "", E += B.util.fillString("\0", 64), C = !0);
    var t = null, e = B.util.createBuffer(), i = new Array(80), a = { algorithm: "sha1", blockLength: 64, digestLength: 20, messageLength: 0, fullMessageLength: null, messageLengthSize: 8, start: function() {
      a.messageLength = 0, a.fullMessageLength = a.messageLength64 = [];
      for (var r = a.messageLengthSize / 4, h = 0; h < r; ++h) a.fullMessageLength.push(0);
      return e = B.util.createBuffer(), t = { h0: 1732584193, h1: 4023233417, h2: 2562383102, h3: 271733878, h4: 3285377520 }, a;
    } };
    return a.start(), a.update = function(r, h) {
      h === "utf8" && (r = B.util.encodeUtf8(r));
      var n = r.length;
      a.messageLength += n, n = [n / 4294967296 >>> 0, n >>> 0];
      for (var l = a.fullMessageLength.length - 1; l >= 0; --l) a.fullMessageLength[l] += n[1], n[1] = n[0] + (a.fullMessageLength[l] / 4294967296 >>> 0), a.fullMessageLength[l] = a.fullMessageLength[l] >>> 0, n[0] = n[1] / 4294967296 >>> 0;
      return e.putBytes(r), o(t, i, e), (e.read > 2048 || e.length() === 0) && e.compact(), a;
    }, a.digest = function() {
      var r = B.util.createBuffer();
      r.putBytes(e.bytes());
      var h, n = a.fullMessageLength[a.fullMessageLength.length - 1] + a.messageLengthSize & a.blockLength - 1;
      r.putBytes(E.substr(0, a.blockLength - n));
      for (var l = 8 * a.fullMessageLength[0], y = 0; y < a.fullMessageLength.length - 1; ++y) l += (h = 8 * a.fullMessageLength[y + 1]) / 4294967296 >>> 0, r.putInt32(l >>> 0), l = h >>> 0;
      r.putInt32(l);
      var N = { h0: t.h0, h1: t.h1, h2: t.h2, h3: t.h3, h4: t.h4 };
      o(N, i, r);
      var s = B.util.createBuffer();
      return s.putInt32(N.h0), s.putInt32(N.h1), s.putInt32(N.h2), s.putInt32(N.h3), s.putInt32(N.h4), s;
    }, a;
  };
  var E = null, C = !1;
  function o(t, e, i) {
    for (var a, r, h, n, l, y, N, s = i.length(); s >= 64; ) {
      for (r = t.h0, h = t.h1, n = t.h2, l = t.h3, y = t.h4, N = 0; N < 16; ++N) a = i.getInt32(), e[N] = a, a = (r << 5 | r >>> 27) + (l ^ h & (n ^ l)) + y + 1518500249 + a, y = l, l = n, n = (h << 30 | h >>> 2) >>> 0, h = r, r = a;
      for (; N < 20; ++N) a = (a = e[N - 3] ^ e[N - 8] ^ e[N - 14] ^ e[N - 16]) << 1 | a >>> 31, e[N] = a, a = (r << 5 | r >>> 27) + (l ^ h & (n ^ l)) + y + 1518500249 + a, y = l, l = n, n = (h << 30 | h >>> 2) >>> 0, h = r, r = a;
      for (; N < 32; ++N) a = (a = e[N - 3] ^ e[N - 8] ^ e[N - 14] ^ e[N - 16]) << 1 | a >>> 31, e[N] = a, a = (r << 5 | r >>> 27) + (h ^ n ^ l) + y + 1859775393 + a, y = l, l = n, n = (h << 30 | h >>> 2) >>> 0, h = r, r = a;
      for (; N < 40; ++N) a = (a = e[N - 6] ^ e[N - 16] ^ e[N - 28] ^ e[N - 32]) << 2 | a >>> 30, e[N] = a, a = (r << 5 | r >>> 27) + (h ^ n ^ l) + y + 1859775393 + a, y = l, l = n, n = (h << 30 | h >>> 2) >>> 0, h = r, r = a;
      for (; N < 60; ++N) a = (a = e[N - 6] ^ e[N - 16] ^ e[N - 28] ^ e[N - 32]) << 2 | a >>> 30, e[N] = a, a = (r << 5 | r >>> 27) + (h & n | l & (h ^ n)) + y + 2400959708 + a, y = l, l = n, n = (h << 30 | h >>> 2) >>> 0, h = r, r = a;
      for (; N < 80; ++N) a = (a = e[N - 6] ^ e[N - 16] ^ e[N - 28] ^ e[N - 32]) << 2 | a >>> 30, e[N] = a, a = (r << 5 | r >>> 27) + (h ^ n ^ l) + y + 3395469782 + a, y = l, l = n, n = (h << 30 | h >>> 2) >>> 0, h = r, r = a;
      t.h0 = t.h0 + r | 0, t.h1 = t.h1 + h | 0, t.h2 = t.h2 + n | 0, t.h3 = t.h3 + l | 0, t.h4 = t.h4 + y | 0, s -= 64;
    }
  }
}, 668: (A, g, I) => {
  var B = I(832);
  I(991), I(116);
  var Q = A.exports = B.sha256 = B.sha256 || {};
  B.md.sha256 = B.md.algorithms.sha256 = Q, Q.create = function() {
    C || (E = "", E += B.util.fillString("\0", 64), o = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], C = !0);
    var e = null, i = B.util.createBuffer(), a = new Array(64), r = { algorithm: "sha256", blockLength: 64, digestLength: 32, messageLength: 0, fullMessageLength: null, messageLengthSize: 8, start: function() {
      r.messageLength = 0, r.fullMessageLength = r.messageLength64 = [];
      for (var h = r.messageLengthSize / 4, n = 0; n < h; ++n) r.fullMessageLength.push(0);
      return i = B.util.createBuffer(), e = { h0: 1779033703, h1: 3144134277, h2: 1013904242, h3: 2773480762, h4: 1359893119, h5: 2600822924, h6: 528734635, h7: 1541459225 }, r;
    } };
    return r.start(), r.update = function(h, n) {
      n === "utf8" && (h = B.util.encodeUtf8(h));
      var l = h.length;
      r.messageLength += l, l = [l / 4294967296 >>> 0, l >>> 0];
      for (var y = r.fullMessageLength.length - 1; y >= 0; --y) r.fullMessageLength[y] += l[1], l[1] = l[0] + (r.fullMessageLength[y] / 4294967296 >>> 0), r.fullMessageLength[y] = r.fullMessageLength[y] >>> 0, l[0] = l[1] / 4294967296 >>> 0;
      return i.putBytes(h), t(e, a, i), (i.read > 2048 || i.length() === 0) && i.compact(), r;
    }, r.digest = function() {
      var h = B.util.createBuffer();
      h.putBytes(i.bytes());
      var n, l = r.fullMessageLength[r.fullMessageLength.length - 1] + r.messageLengthSize & r.blockLength - 1;
      h.putBytes(E.substr(0, r.blockLength - l));
      for (var y = 8 * r.fullMessageLength[0], N = 0; N < r.fullMessageLength.length - 1; ++N) y += (n = 8 * r.fullMessageLength[N + 1]) / 4294967296 >>> 0, h.putInt32(y >>> 0), y = n >>> 0;
      h.putInt32(y);
      var s = { h0: e.h0, h1: e.h1, h2: e.h2, h3: e.h3, h4: e.h4, h5: e.h5, h6: e.h6, h7: e.h7 };
      t(s, a, h);
      var F = B.util.createBuffer();
      return F.putInt32(s.h0), F.putInt32(s.h1), F.putInt32(s.h2), F.putInt32(s.h3), F.putInt32(s.h4), F.putInt32(s.h5), F.putInt32(s.h6), F.putInt32(s.h7), F;
    }, r;
  };
  var E = null, C = !1, o = null;
  function t(e, i, a) {
    for (var r, h, n, l, y, N, s, F, u, U, J, L, f, d = a.length(); d >= 64; ) {
      for (y = 0; y < 16; ++y) i[y] = a.getInt32();
      for (; y < 64; ++y) r = ((r = i[y - 2]) >>> 17 | r << 15) ^ (r >>> 19 | r << 13) ^ r >>> 10, h = ((h = i[y - 15]) >>> 7 | h << 25) ^ (h >>> 18 | h << 14) ^ h >>> 3, i[y] = r + i[y - 7] + h + i[y - 16] | 0;
      for (N = e.h0, s = e.h1, F = e.h2, u = e.h3, U = e.h4, J = e.h5, L = e.h6, f = e.h7, y = 0; y < 64; ++y) n = (N >>> 2 | N << 30) ^ (N >>> 13 | N << 19) ^ (N >>> 22 | N << 10), l = N & s | F & (N ^ s), r = f + ((U >>> 6 | U << 26) ^ (U >>> 11 | U << 21) ^ (U >>> 25 | U << 7)) + (L ^ U & (J ^ L)) + o[y] + i[y], f = L, L = J, J = U, U = u + r >>> 0, u = F, F = s, s = N, N = r + (h = n + l) >>> 0;
      e.h0 = e.h0 + N | 0, e.h1 = e.h1 + s | 0, e.h2 = e.h2 + F | 0, e.h3 = e.h3 + u | 0, e.h4 = e.h4 + U | 0, e.h5 = e.h5 + J | 0, e.h6 = e.h6 + L | 0, e.h7 = e.h7 + f | 0, d -= 64;
    }
  }
}, 219: (A, g, I) => {
  var B = I(832);
  I(991), I(116);
  var Q = A.exports = B.sha512 = B.sha512 || {};
  B.md.sha512 = B.md.algorithms.sha512 = Q;
  var E = B.sha384 = B.sha512.sha384 = B.sha512.sha384 || {};
  E.create = function() {
    return Q.create("SHA-384");
  }, B.md.sha384 = B.md.algorithms.sha384 = E, B.sha512.sha256 = B.sha512.sha256 || { create: function() {
    return Q.create("SHA-512/256");
  } }, B.md["sha512/256"] = B.md.algorithms["sha512/256"] = B.sha512.sha256, B.sha512.sha224 = B.sha512.sha224 || { create: function() {
    return Q.create("SHA-512/224");
  } }, B.md["sha512/224"] = B.md.algorithms["sha512/224"] = B.sha512.sha224, Q.create = function(a) {
    if (o || (C = "", C += B.util.fillString("\0", 128), t = [[1116352408, 3609767458], [1899447441, 602891725], [3049323471, 3964484399], [3921009573, 2173295548], [961987163, 4081628472], [1508970993, 3053834265], [2453635748, 2937671579], [2870763221, 3664609560], [3624381080, 2734883394], [310598401, 1164996542], [607225278, 1323610764], [1426881987, 3590304994], [1925078388, 4068182383], [2162078206, 991336113], [2614888103, 633803317], [3248222580, 3479774868], [3835390401, 2666613458], [4022224774, 944711139], [264347078, 2341262773], [604807628, 2007800933], [770255983, 1495990901], [1249150122, 1856431235], [1555081692, 3175218132], [1996064986, 2198950837], [2554220882, 3999719339], [2821834349, 766784016], [2952996808, 2566594879], [3210313671, 3203337956], [3336571891, 1034457026], [3584528711, 2466948901], [113926993, 3758326383], [338241895, 168717936], [666307205, 1188179964], [773529912, 1546045734], [1294757372, 1522805485], [1396182291, 2643833823], [1695183700, 2343527390], [1986661051, 1014477480], [2177026350, 1206759142], [2456956037, 344077627], [2730485921, 1290863460], [2820302411, 3158454273], [3259730800, 3505952657], [3345764771, 106217008], [3516065817, 3606008344], [3600352804, 1432725776], [4094571909, 1467031594], [275423344, 851169720], [430227734, 3100823752], [506948616, 1363258195], [659060556, 3750685593], [883997877, 3785050280], [958139571, 3318307427], [1322822218, 3812723403], [1537002063, 2003034995], [1747873779, 3602036899], [1955562222, 1575990012], [2024104815, 1125592928], [2227730452, 2716904306], [2361852424, 442776044], [2428436474, 593698344], [2756734187, 3733110249], [3204031479, 2999351573], [3329325298, 3815920427], [3391569614, 3928383900], [3515267271, 566280711], [3940187606, 3454069534], [4118630271, 4000239992], [116418474, 1914138554], [174292421, 2731055270], [289380356, 3203993006], [460393269, 320620315], [685471733, 587496836], [852142971, 1086792851], [1017036298, 365543100], [1126000580, 2618297676], [1288033470, 3409855158], [1501505948, 4234509866], [1607167915, 987167468], [1816402316, 1246189591]], (e = {})["SHA-512"] = [[1779033703, 4089235720], [3144134277, 2227873595], [1013904242, 4271175723], [2773480762, 1595750129], [1359893119, 2917565137], [2600822924, 725511199], [528734635, 4215389547], [1541459225, 327033209]], e["SHA-384"] = [[3418070365, 3238371032], [1654270250, 914150663], [2438529370, 812702999], [355462360, 4144912697], [1731405415, 4290775857], [2394180231, 1750603025], [3675008525, 1694076839], [1203062813, 3204075428]], e["SHA-512/256"] = [[573645204, 4230739756], [2673172387, 3360449730], [596883563, 1867755857], [2520282905, 1497426621], [2519219938, 2827943907], [3193839141, 1401305490], [721525244, 746961066], [246885852, 2177182882]], e["SHA-512/224"] = [[2352822216, 424955298], [1944164710, 2312950998], [502970286, 855612546], [1738396948, 1479516111], [258812777, 2077511080], [2011393907, 79989058], [1067287976, 1780299464], [286451373, 2446758561]], o = !0), a === void 0 && (a = "SHA-512"), !(a in e)) throw new Error("Invalid SHA-512 algorithm: " + a);
    for (var r = e[a], h = null, n = B.util.createBuffer(), l = new Array(80), y = 0; y < 80; ++y) l[y] = new Array(2);
    var N = 64;
    switch (a) {
      case "SHA-384":
        N = 48;
        break;
      case "SHA-512/256":
        N = 32;
        break;
      case "SHA-512/224":
        N = 28;
    }
    var s = { algorithm: a.replace("-", "").toLowerCase(), blockLength: 128, digestLength: N, messageLength: 0, fullMessageLength: null, messageLengthSize: 16, start: function() {
      s.messageLength = 0, s.fullMessageLength = s.messageLength128 = [];
      for (var F = s.messageLengthSize / 4, u = 0; u < F; ++u) s.fullMessageLength.push(0);
      for (n = B.util.createBuffer(), h = new Array(r.length), u = 0; u < r.length; ++u) h[u] = r[u].slice(0);
      return s;
    } };
    return s.start(), s.update = function(F, u) {
      u === "utf8" && (F = B.util.encodeUtf8(F));
      var U = F.length;
      s.messageLength += U, U = [U / 4294967296 >>> 0, U >>> 0];
      for (var J = s.fullMessageLength.length - 1; J >= 0; --J) s.fullMessageLength[J] += U[1], U[1] = U[0] + (s.fullMessageLength[J] / 4294967296 >>> 0), s.fullMessageLength[J] = s.fullMessageLength[J] >>> 0, U[0] = U[1] / 4294967296 >>> 0;
      return n.putBytes(F), i(h, l, n), (n.read > 2048 || n.length() === 0) && n.compact(), s;
    }, s.digest = function() {
      var F = B.util.createBuffer();
      F.putBytes(n.bytes());
      var u, U = s.fullMessageLength[s.fullMessageLength.length - 1] + s.messageLengthSize & s.blockLength - 1;
      F.putBytes(C.substr(0, s.blockLength - U));
      for (var J = 8 * s.fullMessageLength[0], L = 0; L < s.fullMessageLength.length - 1; ++L) J += (u = 8 * s.fullMessageLength[L + 1]) / 4294967296 >>> 0, F.putInt32(J >>> 0), J = u >>> 0;
      F.putInt32(J);
      var f = new Array(h.length);
      for (L = 0; L < h.length; ++L) f[L] = h[L].slice(0);
      i(f, l, F);
      var d, p = B.util.createBuffer();
      for (d = a === "SHA-512" ? f.length : a === "SHA-384" ? f.length - 2 : f.length - 4, L = 0; L < d; ++L) p.putInt32(f[L][0]), L === d - 1 && a === "SHA-512/224" || p.putInt32(f[L][1]);
      return p;
    }, s;
  };
  var C = null, o = !1, t = null, e = null;
  function i(a, r, h) {
    for (var n, l, y, N, s, F, u, U, J, L, f, d, p, x, M, S, k, v, m, T, $, AA, lA, FA, cA, yA, aA, eA, CA, b, Y, QA, BA, iA = h.length(); iA >= 128; ) {
      for (aA = 0; aA < 16; ++aA) r[aA][0] = h.getInt32() >>> 0, r[aA][1] = h.getInt32() >>> 0;
      for (; aA < 80; ++aA) n = (((eA = (b = r[aA - 2])[0]) >>> 19 | (CA = b[1]) << 13) ^ (CA >>> 29 | eA << 3) ^ eA >>> 6) >>> 0, l = ((eA << 13 | CA >>> 19) ^ (CA << 3 | eA >>> 29) ^ (eA << 26 | CA >>> 6)) >>> 0, y = (((eA = (QA = r[aA - 15])[0]) >>> 1 | (CA = QA[1]) << 31) ^ (eA >>> 8 | CA << 24) ^ eA >>> 7) >>> 0, N = ((eA << 31 | CA >>> 1) ^ (eA << 24 | CA >>> 8) ^ (eA << 25 | CA >>> 7)) >>> 0, Y = r[aA - 7], BA = r[aA - 16], CA = l + Y[1] + N + BA[1], r[aA][0] = n + Y[0] + y + BA[0] + (CA / 4294967296 >>> 0) >>> 0, r[aA][1] = CA >>> 0;
      for (f = a[0][0], d = a[0][1], p = a[1][0], x = a[1][1], M = a[2][0], S = a[2][1], k = a[3][0], v = a[3][1], m = a[4][0], T = a[4][1], $ = a[5][0], AA = a[5][1], lA = a[6][0], FA = a[6][1], cA = a[7][0], yA = a[7][1], aA = 0; aA < 80; ++aA) u = ((m >>> 14 | T << 18) ^ (m >>> 18 | T << 14) ^ (T >>> 9 | m << 23)) >>> 0, U = (lA ^ m & ($ ^ lA)) >>> 0, s = ((f >>> 28 | d << 4) ^ (d >>> 2 | f << 30) ^ (d >>> 7 | f << 25)) >>> 0, F = ((f << 4 | d >>> 28) ^ (d << 30 | f >>> 2) ^ (d << 25 | f >>> 7)) >>> 0, J = (f & p | M & (f ^ p)) >>> 0, L = (d & x | S & (d ^ x)) >>> 0, CA = yA + (((m << 18 | T >>> 14) ^ (m << 14 | T >>> 18) ^ (T << 23 | m >>> 9)) >>> 0) + ((FA ^ T & (AA ^ FA)) >>> 0) + t[aA][1] + r[aA][1], n = cA + u + U + t[aA][0] + r[aA][0] + (CA / 4294967296 >>> 0) >>> 0, l = CA >>> 0, y = s + J + ((CA = F + L) / 4294967296 >>> 0) >>> 0, N = CA >>> 0, cA = lA, yA = FA, lA = $, FA = AA, $ = m, AA = T, m = k + n + ((CA = v + l) / 4294967296 >>> 0) >>> 0, T = CA >>> 0, k = M, v = S, M = p, S = x, p = f, x = d, f = n + y + ((CA = l + N) / 4294967296 >>> 0) >>> 0, d = CA >>> 0;
      CA = a[0][1] + d, a[0][0] = a[0][0] + f + (CA / 4294967296 >>> 0) >>> 0, a[0][1] = CA >>> 0, CA = a[1][1] + x, a[1][0] = a[1][0] + p + (CA / 4294967296 >>> 0) >>> 0, a[1][1] = CA >>> 0, CA = a[2][1] + S, a[2][0] = a[2][0] + M + (CA / 4294967296 >>> 0) >>> 0, a[2][1] = CA >>> 0, CA = a[3][1] + v, a[3][0] = a[3][0] + k + (CA / 4294967296 >>> 0) >>> 0, a[3][1] = CA >>> 0, CA = a[4][1] + T, a[4][0] = a[4][0] + m + (CA / 4294967296 >>> 0) >>> 0, a[4][1] = CA >>> 0, CA = a[5][1] + AA, a[5][0] = a[5][0] + $ + (CA / 4294967296 >>> 0) >>> 0, a[5][1] = CA >>> 0, CA = a[6][1] + FA, a[6][0] = a[6][0] + lA + (CA / 4294967296 >>> 0) >>> 0, a[6][1] = CA >>> 0, CA = a[7][1] + yA, a[7][0] = a[7][0] + cA + (CA / 4294967296 >>> 0) >>> 0, a[7][1] = CA >>> 0, iA -= 128;
    }
  }
}, 173: (A, g, I) => {
  var B = I(832);
  I(925), I(607), I(63), I(137), I(116);
  var Q = A.exports = B.ssh = B.ssh || {};
  function E(t, e) {
    var i = e.toString(16);
    i[0] >= "8" && (i = "00" + i);
    var a = B.util.hexToBytes(i);
    t.putInt32(a.length), t.putBytes(a);
  }
  function C(t, e) {
    t.putInt32(e.length), t.putString(e);
  }
  function o() {
    for (var t = B.md.sha1.create(), e = arguments.length, i = 0; i < e; ++i) t.update(arguments[i]);
    return t.digest();
  }
  Q.privateKeyToPutty = function(t, e, i) {
    var a = "ssh-rsa", r = (e = e || "") === "" ? "none" : "aes256-cbc", h = "PuTTY-User-Key-File-2: " + a + `\r
`;
    h += "Encryption: " + r + `\r
`, h += "Comment: " + (i = i || "") + `\r
`;
    var n = B.util.createBuffer();
    C(n, a), E(n, t.e), E(n, t.n);
    var l = B.util.encode64(n.bytes(), 64), y = Math.floor(l.length / 66) + 1;
    h += "Public-Lines: " + y + `\r
`, h += l;
    var N, s = B.util.createBuffer();
    if (E(s, t.d), E(s, t.p), E(s, t.q), E(s, t.qInv), e) {
      var F = s.length() + 16 - 1;
      F -= F % 16;
      var u = o(s.bytes());
      u.truncate(u.length() - F + s.length()), s.putBuffer(u);
      var U = B.util.createBuffer();
      U.putBuffer(o("\0\0\0\0", e)), U.putBuffer(o("\0\0\0", e));
      var J = B.aes.createEncryptionCipher(U.truncate(8), "CBC");
      J.start(B.util.createBuffer().fillWithByte(0, 16)), J.update(s.copy()), J.finish();
      var L = J.output;
      L.truncate(16), N = B.util.encode64(L.bytes(), 64);
    } else N = B.util.encode64(s.bytes(), 64);
    h += `\r
Private-Lines: ` + (y = Math.floor(N.length / 66) + 1) + `\r
`, h += N;
    var f = o("putty-private-key-file-mac-key", e), d = B.util.createBuffer();
    C(d, a), C(d, r), C(d, i), d.putInt32(n.length()), d.putBuffer(n), d.putInt32(s.length()), d.putBuffer(s);
    var p = B.hmac.create();
    return p.start("sha1", f), p.update(d.bytes()), h + `\r
Private-MAC: ` + p.digest().toHex() + `\r
`;
  }, Q.publicKeyToOpenSSH = function(t, e) {
    var i = "ssh-rsa";
    e = e || "";
    var a = B.util.createBuffer();
    return C(a, i), E(a, t.e), E(a, t.n), i + " " + B.util.encode64(a.bytes()) + " " + e;
  }, Q.privateKeyToOpenSSH = function(t, e) {
    return e ? B.pki.encryptRsaPrivateKey(t, e, { legacy: !0, algorithm: "aes128" }) : B.pki.privateKeyToPem(t);
  }, Q.getPublicKeyFingerprint = function(t, e) {
    var i = (e = e || {}).md || B.md.md5.create(), a = B.util.createBuffer();
    C(a, "ssh-rsa"), E(a, t.e), E(a, t.n), i.start(), i.update(a.getBytes());
    var r = i.digest();
    if (e.encoding === "hex") {
      var h = r.toHex();
      return e.delimiter ? h.match(/.{2}/g).join(e.delimiter) : h;
    }
    if (e.encoding === "binary") return r.getBytes();
    if (e.encoding) throw new Error('Unknown encoding "' + e.encoding + '".');
    return r;
  };
}, 311: (A, g, I) => {
  var B = I(832);
  I(68), I(607), I(63), I(953), I(742), I(563), I(137), I(116);
  var Q = function(Y, QA, BA, iA) {
    var rA = B.util.createBuffer(), GA = Y.length >> 1, _ = GA + (1 & Y.length), uA = Y.substr(0, _), HA = Y.substr(GA, _), JA = B.util.createBuffer(), VA = B.hmac.create();
    BA = QA + BA;
    var $A = Math.ceil(iA / 16), XA = Math.ceil(iA / 20);
    VA.start("MD5", uA);
    var Ig = B.util.createBuffer();
    JA.putBytes(BA);
    for (var jA = 0; jA < $A; ++jA) VA.start(null, null), VA.update(JA.getBytes()), JA.putBuffer(VA.digest()), VA.start(null, null), VA.update(JA.bytes() + BA), Ig.putBuffer(VA.digest());
    VA.start("SHA1", HA);
    var ag = B.util.createBuffer();
    for (JA.clear(), JA.putBytes(BA), jA = 0; jA < XA; ++jA) VA.start(null, null), VA.update(JA.getBytes()), JA.putBuffer(VA.digest()), VA.start(null, null), VA.update(JA.bytes() + BA), ag.putBuffer(VA.digest());
    return rA.putBytes(B.util.xorBytes(Ig.getBytes(), ag.getBytes(), iA)), rA;
  }, E = function(Y, QA, BA) {
    var iA = !1;
    try {
      var rA = Y.deflate(QA.fragment.getBytes());
      QA.fragment = B.util.createBuffer(rA), QA.length = rA.length, iA = !0;
    } catch {
    }
    return iA;
  }, C = function(Y, QA, BA) {
    var iA = !1;
    try {
      var rA = Y.inflate(QA.fragment.getBytes());
      QA.fragment = B.util.createBuffer(rA), QA.length = rA.length, iA = !0;
    } catch {
    }
    return iA;
  }, o = function(Y, QA) {
    var BA = 0;
    switch (QA) {
      case 1:
        BA = Y.getByte();
        break;
      case 2:
        BA = Y.getInt16();
        break;
      case 3:
        BA = Y.getInt24();
        break;
      case 4:
        BA = Y.getInt32();
    }
    return B.util.createBuffer(Y.getBytes(BA));
  }, t = function(Y, QA, BA) {
    Y.putInt(BA.length(), QA << 3), Y.putBuffer(BA);
  }, e = { Versions: { TLS_1_0: { major: 3, minor: 1 }, TLS_1_1: { major: 3, minor: 2 }, TLS_1_2: { major: 3, minor: 3 } } };
  e.SupportedVersions = [e.Versions.TLS_1_1, e.Versions.TLS_1_0], e.Version = e.SupportedVersions[0], e.MaxFragment = 15360, e.ConnectionEnd = { server: 0, client: 1 }, e.PRFAlgorithm = { tls_prf_sha256: 0 }, e.BulkCipherAlgorithm = { none: null, rc4: 0, des3: 1, aes: 2 }, e.CipherType = { stream: 0, block: 1, aead: 2 }, e.MACAlgorithm = { none: null, hmac_md5: 0, hmac_sha1: 1, hmac_sha256: 2, hmac_sha384: 3, hmac_sha512: 4 }, e.CompressionMethod = { none: 0, deflate: 1 }, e.ContentType = { change_cipher_spec: 20, alert: 21, handshake: 22, application_data: 23, heartbeat: 24 }, e.HandshakeType = { hello_request: 0, client_hello: 1, server_hello: 2, certificate: 11, server_key_exchange: 12, certificate_request: 13, server_hello_done: 14, certificate_verify: 15, client_key_exchange: 16, finished: 20 }, e.Alert = {}, e.Alert.Level = { warning: 1, fatal: 2 }, e.Alert.Description = { close_notify: 0, unexpected_message: 10, bad_record_mac: 20, decryption_failed: 21, record_overflow: 22, decompression_failure: 30, handshake_failure: 40, bad_certificate: 42, unsupported_certificate: 43, certificate_revoked: 44, certificate_expired: 45, certificate_unknown: 46, illegal_parameter: 47, unknown_ca: 48, access_denied: 49, decode_error: 50, decrypt_error: 51, export_restriction: 60, protocol_version: 70, insufficient_security: 71, internal_error: 80, user_canceled: 90, no_renegotiation: 100 }, e.HeartbeatMessageType = { heartbeat_request: 1, heartbeat_response: 2 }, e.CipherSuites = {}, e.getCipherSuite = function(Y) {
    var QA = null;
    for (var BA in e.CipherSuites) {
      var iA = e.CipherSuites[BA];
      if (iA.id[0] === Y.charCodeAt(0) && iA.id[1] === Y.charCodeAt(1)) {
        QA = iA;
        break;
      }
    }
    return QA;
  }, e.handleUnexpected = function(Y, QA) {
    !Y.open && Y.entity === e.ConnectionEnd.client || Y.error(Y, { message: "Unexpected message. Received TLS record out of order.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.unexpected_message } });
  }, e.handleHelloRequest = function(Y, QA, BA) {
    !Y.handshaking && Y.handshakes > 0 && (e.queue(Y, e.createAlert(Y, { level: e.Alert.Level.warning, description: e.Alert.Description.no_renegotiation })), e.flush(Y)), Y.process();
  }, e.parseHelloMessage = function(Y, QA, BA) {
    var iA = null, rA = Y.entity === e.ConnectionEnd.client;
    if (BA < 38) Y.error(Y, { message: rA ? "Invalid ServerHello message. Message too short." : "Invalid ClientHello message. Message too short.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.illegal_parameter } });
    else {
      var GA = QA.fragment, _ = GA.length();
      if (iA = { version: { major: GA.getByte(), minor: GA.getByte() }, random: B.util.createBuffer(GA.getBytes(32)), session_id: o(GA, 1), extensions: [] }, rA ? (iA.cipher_suite = GA.getBytes(2), iA.compression_method = GA.getByte()) : (iA.cipher_suites = o(GA, 2), iA.compression_methods = o(GA, 1)), (_ = BA - (_ - GA.length())) > 0) {
        for (var uA = o(GA, 2); uA.length() > 0; ) iA.extensions.push({ type: [uA.getByte(), uA.getByte()], data: o(uA, 2) });
        if (!rA) for (var HA = 0; HA < iA.extensions.length; ++HA) {
          var JA = iA.extensions[HA];
          if (JA.type[0] === 0 && JA.type[1] === 0) for (var VA = o(JA.data, 2); VA.length() > 0 && VA.getByte() === 0; ) Y.session.extensions.server_name.serverNameList.push(o(VA, 2).getBytes());
        }
      }
      if (Y.session.version && (iA.version.major !== Y.session.version.major || iA.version.minor !== Y.session.version.minor)) return Y.error(Y, { message: "TLS version change is disallowed during renegotiation.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.protocol_version } });
      if (rA) Y.session.cipherSuite = e.getCipherSuite(iA.cipher_suite);
      else for (var $A = B.util.createBuffer(iA.cipher_suites.bytes()); $A.length() > 0 && (Y.session.cipherSuite = e.getCipherSuite($A.getBytes(2)), Y.session.cipherSuite === null); ) ;
      if (Y.session.cipherSuite === null) return Y.error(Y, { message: "No cipher suites in common.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.handshake_failure }, cipherSuite: B.util.bytesToHex(iA.cipher_suite) });
      Y.session.compressionMethod = rA ? iA.compression_method : e.CompressionMethod.none;
    }
    return iA;
  }, e.createSecurityParameters = function(Y, QA) {
    var BA = Y.entity === e.ConnectionEnd.client, iA = QA.random.bytes(), rA = BA ? Y.session.sp.client_random : iA, GA = BA ? iA : e.createRandom().getBytes();
    Y.session.sp = { entity: Y.entity, prf_algorithm: e.PRFAlgorithm.tls_prf_sha256, bulk_cipher_algorithm: null, cipher_type: null, enc_key_length: null, block_length: null, fixed_iv_length: null, record_iv_length: null, mac_algorithm: null, mac_length: null, mac_key_length: null, compression_algorithm: Y.session.compressionMethod, pre_master_secret: null, master_secret: null, client_random: rA, server_random: GA };
  }, e.handleServerHello = function(Y, QA, BA) {
    var iA = e.parseHelloMessage(Y, QA, BA);
    if (!Y.fail) {
      if (!(iA.version.minor <= Y.version.minor)) return Y.error(Y, { message: "Incompatible TLS version.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.protocol_version } });
      Y.version.minor = iA.version.minor, Y.session.version = Y.version;
      var rA = iA.session_id.bytes();
      rA.length > 0 && rA === Y.session.id ? (Y.expect = n, Y.session.resuming = !0, Y.session.sp.server_random = iA.random.bytes()) : (Y.expect = i, Y.session.resuming = !1, e.createSecurityParameters(Y, iA)), Y.session.id = rA, Y.process();
    }
  }, e.handleClientHello = function(Y, QA, BA) {
    var iA = e.parseHelloMessage(Y, QA, BA);
    if (!Y.fail) {
      var rA = iA.session_id.bytes(), GA = null;
      if (Y.sessionCache && ((GA = Y.sessionCache.getSession(rA)) === null ? rA = "" : (GA.version.major !== iA.version.major || GA.version.minor > iA.version.minor) && (GA = null, rA = "")), rA.length === 0 && (rA = B.random.getBytes(32)), Y.session.id = rA, Y.session.clientHelloVersion = iA.version, Y.session.sp = {}, GA) Y.version = Y.session.version = GA.version, Y.session.sp = GA.sp;
      else {
        for (var _, uA = 1; uA < e.SupportedVersions.length && !((_ = e.SupportedVersions[uA]).minor <= iA.version.minor); ++uA) ;
        Y.version = { major: _.major, minor: _.minor }, Y.session.version = Y.version;
      }
      GA !== null ? (Y.expect = U, Y.session.resuming = !0, Y.session.sp.client_random = iA.random.bytes()) : (Y.expect = Y.verifyClient !== !1 ? s : F, Y.session.resuming = !1, e.createSecurityParameters(Y, iA)), Y.open = !0, e.queue(Y, e.createRecord(Y, { type: e.ContentType.handshake, data: e.createServerHello(Y) })), Y.session.resuming ? (e.queue(Y, e.createRecord(Y, { type: e.ContentType.change_cipher_spec, data: e.createChangeCipherSpec() })), Y.state.pending = e.createConnectionState(Y), Y.state.current.write = Y.state.pending.write, e.queue(Y, e.createRecord(Y, { type: e.ContentType.handshake, data: e.createFinished(Y) }))) : (e.queue(Y, e.createRecord(Y, { type: e.ContentType.handshake, data: e.createCertificate(Y) })), Y.fail || (e.queue(Y, e.createRecord(Y, { type: e.ContentType.handshake, data: e.createServerKeyExchange(Y) })), Y.verifyClient !== !1 && e.queue(Y, e.createRecord(Y, { type: e.ContentType.handshake, data: e.createCertificateRequest(Y) })), e.queue(Y, e.createRecord(Y, { type: e.ContentType.handshake, data: e.createServerHelloDone(Y) })))), e.flush(Y), Y.process();
    }
  }, e.handleCertificate = function(Y, QA, BA) {
    if (BA < 3) return Y.error(Y, { message: "Invalid Certificate message. Message too short.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.illegal_parameter } });
    var iA, rA, GA = QA.fragment, _ = { certificate_list: o(GA, 3) }, uA = [];
    try {
      for (; _.certificate_list.length() > 0; ) iA = o(_.certificate_list, 3), rA = B.asn1.fromDer(iA), iA = B.pki.certificateFromAsn1(rA, !0), uA.push(iA);
    } catch (JA) {
      return Y.error(Y, { message: "Could not parse certificate list.", cause: JA, send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.bad_certificate } });
    }
    var HA = Y.entity === e.ConnectionEnd.client;
    !HA && Y.verifyClient !== !0 || uA.length !== 0 ? uA.length === 0 ? Y.expect = HA ? a : F : (HA ? Y.session.serverCertificate = uA[0] : Y.session.clientCertificate = uA[0], e.verifyCertificateChain(Y, uA) && (Y.expect = HA ? a : F)) : Y.error(Y, { message: HA ? "No server certificate provided." : "No client certificate provided.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.illegal_parameter } }), Y.process();
  }, e.handleServerKeyExchange = function(Y, QA, BA) {
    if (BA > 0) return Y.error(Y, { message: "Invalid key parameters. Only RSA is supported.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.unsupported_certificate } });
    Y.expect = r, Y.process();
  }, e.handleClientKeyExchange = function(Y, QA, BA) {
    if (BA < 48) return Y.error(Y, { message: "Invalid key parameters. Only RSA is supported.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.unsupported_certificate } });
    var iA = QA.fragment, rA = { enc_pre_master_secret: o(iA, 2).getBytes() }, GA = null;
    if (Y.getPrivateKey) try {
      GA = Y.getPrivateKey(Y, Y.session.serverCertificate), GA = B.pki.privateKeyFromPem(GA);
    } catch (HA) {
      Y.error(Y, { message: "Could not get private key.", cause: HA, send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.internal_error } });
    }
    if (GA === null) return Y.error(Y, { message: "No private key set.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.internal_error } });
    try {
      var _ = Y.session.sp;
      _.pre_master_secret = GA.decrypt(rA.enc_pre_master_secret);
      var uA = Y.session.clientHelloVersion;
      if (uA.major !== _.pre_master_secret.charCodeAt(0) || uA.minor !== _.pre_master_secret.charCodeAt(1)) throw new Error("TLS version rollback attack detected.");
    } catch {
      _.pre_master_secret = B.random.getBytes(48);
    }
    Y.expect = U, Y.session.clientCertificate !== null && (Y.expect = u), Y.process();
  }, e.handleCertificateRequest = function(Y, QA, BA) {
    if (BA < 3) return Y.error(Y, { message: "Invalid CertificateRequest. Message too short.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.illegal_parameter } });
    var iA = QA.fragment, rA = { certificate_types: o(iA, 1), certificate_authorities: o(iA, 2) };
    Y.session.certificateRequest = rA, Y.expect = h, Y.process();
  }, e.handleCertificateVerify = function(Y, QA, BA) {
    if (BA < 2) return Y.error(Y, { message: "Invalid CertificateVerify. Message too short.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.illegal_parameter } });
    var iA = QA.fragment;
    iA.read -= 4;
    var rA = iA.bytes();
    iA.read += 4;
    var GA = { signature: o(iA, 2).getBytes() }, _ = B.util.createBuffer();
    _.putBuffer(Y.session.md5.digest()), _.putBuffer(Y.session.sha1.digest()), _ = _.getBytes();
    try {
      if (!Y.session.clientCertificate.publicKey.verify(_, GA.signature, "NONE")) throw new Error("CertificateVerify signature does not match.");
      Y.session.md5.update(rA), Y.session.sha1.update(rA);
    } catch {
      return Y.error(Y, { message: "Bad signature in CertificateVerify.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.handshake_failure } });
    }
    Y.expect = U, Y.process();
  }, e.handleServerHelloDone = function(Y, QA, BA) {
    if (BA > 0) return Y.error(Y, { message: "Invalid ServerHelloDone message. Invalid length.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.record_overflow } });
    if (Y.serverCertificate === null) {
      var iA = { message: "No server certificate provided. Not enough security.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.insufficient_security } }, rA = Y.verify(Y, iA.alert.description, 0, []);
      if (rA !== !0) return (rA || rA === 0) && (typeof rA != "object" || B.util.isArray(rA) ? typeof rA == "number" && (iA.alert.description = rA) : (rA.message && (iA.message = rA.message), rA.alert && (iA.alert.description = rA.alert))), Y.error(Y, iA);
    }
    Y.session.certificateRequest !== null && (QA = e.createRecord(Y, { type: e.ContentType.handshake, data: e.createCertificate(Y) }), e.queue(Y, QA)), QA = e.createRecord(Y, { type: e.ContentType.handshake, data: e.createClientKeyExchange(Y) }), e.queue(Y, QA), Y.expect = N;
    var GA = function(_, uA) {
      _.session.certificateRequest !== null && _.session.clientCertificate !== null && e.queue(_, e.createRecord(_, { type: e.ContentType.handshake, data: e.createCertificateVerify(_, uA) })), e.queue(_, e.createRecord(_, { type: e.ContentType.change_cipher_spec, data: e.createChangeCipherSpec() })), _.state.pending = e.createConnectionState(_), _.state.current.write = _.state.pending.write, e.queue(_, e.createRecord(_, { type: e.ContentType.handshake, data: e.createFinished(_) })), _.expect = n, e.flush(_), _.process();
    };
    if (Y.session.certificateRequest === null || Y.session.clientCertificate === null) return GA(Y, null);
    e.getClientSignature(Y, GA);
  }, e.handleChangeCipherSpec = function(Y, QA) {
    if (QA.fragment.getByte() !== 1) return Y.error(Y, { message: "Invalid ChangeCipherSpec message received.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.illegal_parameter } });
    var BA = Y.entity === e.ConnectionEnd.client;
    (Y.session.resuming && BA || !Y.session.resuming && !BA) && (Y.state.pending = e.createConnectionState(Y)), Y.state.current.read = Y.state.pending.read, (!Y.session.resuming && BA || Y.session.resuming && !BA) && (Y.state.pending = null), Y.expect = BA ? l : J, Y.process();
  }, e.handleFinished = function(Y, QA, BA) {
    var iA = QA.fragment;
    iA.read -= 4;
    var rA = iA.bytes();
    iA.read += 4;
    var GA = QA.fragment.getBytes();
    (iA = B.util.createBuffer()).putBuffer(Y.session.md5.digest()), iA.putBuffer(Y.session.sha1.digest());
    var _ = Y.entity === e.ConnectionEnd.client, uA = _ ? "server finished" : "client finished", HA = Y.session.sp;
    if ((iA = Q(HA.master_secret, uA, iA.getBytes(), 12)).getBytes() !== GA) return Y.error(Y, { message: "Invalid verify_data in Finished message.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.decrypt_error } });
    Y.session.md5.update(rA), Y.session.sha1.update(rA), (Y.session.resuming && _ || !Y.session.resuming && !_) && (e.queue(Y, e.createRecord(Y, { type: e.ContentType.change_cipher_spec, data: e.createChangeCipherSpec() })), Y.state.current.write = Y.state.pending.write, Y.state.pending = null, e.queue(Y, e.createRecord(Y, { type: e.ContentType.handshake, data: e.createFinished(Y) }))), Y.expect = _ ? y : L, Y.handshaking = !1, ++Y.handshakes, Y.peerCertificate = _ ? Y.session.serverCertificate : Y.session.clientCertificate, e.flush(Y), Y.isConnected = !0, Y.connected(Y), Y.process();
  }, e.handleAlert = function(Y, QA) {
    var BA, iA = QA.fragment, rA = { level: iA.getByte(), description: iA.getByte() };
    switch (rA.description) {
      case e.Alert.Description.close_notify:
        BA = "Connection closed.";
        break;
      case e.Alert.Description.unexpected_message:
        BA = "Unexpected message.";
        break;
      case e.Alert.Description.bad_record_mac:
        BA = "Bad record MAC.";
        break;
      case e.Alert.Description.decryption_failed:
        BA = "Decryption failed.";
        break;
      case e.Alert.Description.record_overflow:
        BA = "Record overflow.";
        break;
      case e.Alert.Description.decompression_failure:
        BA = "Decompression failed.";
        break;
      case e.Alert.Description.handshake_failure:
        BA = "Handshake failure.";
        break;
      case e.Alert.Description.bad_certificate:
        BA = "Bad certificate.";
        break;
      case e.Alert.Description.unsupported_certificate:
        BA = "Unsupported certificate.";
        break;
      case e.Alert.Description.certificate_revoked:
        BA = "Certificate revoked.";
        break;
      case e.Alert.Description.certificate_expired:
        BA = "Certificate expired.";
        break;
      case e.Alert.Description.certificate_unknown:
        BA = "Certificate unknown.";
        break;
      case e.Alert.Description.illegal_parameter:
        BA = "Illegal parameter.";
        break;
      case e.Alert.Description.unknown_ca:
        BA = "Unknown certificate authority.";
        break;
      case e.Alert.Description.access_denied:
        BA = "Access denied.";
        break;
      case e.Alert.Description.decode_error:
        BA = "Decode error.";
        break;
      case e.Alert.Description.decrypt_error:
        BA = "Decrypt error.";
        break;
      case e.Alert.Description.export_restriction:
        BA = "Export restriction.";
        break;
      case e.Alert.Description.protocol_version:
        BA = "Unsupported protocol version.";
        break;
      case e.Alert.Description.insufficient_security:
        BA = "Insufficient security.";
        break;
      case e.Alert.Description.internal_error:
        BA = "Internal error.";
        break;
      case e.Alert.Description.user_canceled:
        BA = "User canceled.";
        break;
      case e.Alert.Description.no_renegotiation:
        BA = "Renegotiation not supported.";
        break;
      default:
        BA = "Unknown error.";
    }
    if (rA.description === e.Alert.Description.close_notify) return Y.close();
    Y.error(Y, { message: BA, send: !1, origin: Y.entity === e.ConnectionEnd.client ? "server" : "client", alert: rA }), Y.process();
  }, e.handleHandshake = function(Y, QA) {
    var BA = QA.fragment, iA = BA.getByte(), rA = BA.getInt24();
    if (rA > BA.length()) return Y.fragmented = QA, QA.fragment = B.util.createBuffer(), BA.read -= 4, Y.process();
    Y.fragmented = null, BA.read -= 4;
    var GA = BA.bytes(rA + 4);
    BA.read += 4, iA in cA[Y.entity][Y.expect] ? (Y.entity !== e.ConnectionEnd.server || Y.open || Y.fail || (Y.handshaking = !0, Y.session = { version: null, extensions: { server_name: { serverNameList: [] } }, cipherSuite: null, compressionMethod: null, serverCertificate: null, clientCertificate: null, md5: B.md.md5.create(), sha1: B.md.sha1.create() }), iA !== e.HandshakeType.hello_request && iA !== e.HandshakeType.certificate_verify && iA !== e.HandshakeType.finished && (Y.session.md5.update(GA), Y.session.sha1.update(GA)), cA[Y.entity][Y.expect][iA](Y, QA, rA)) : e.handleUnexpected(Y, QA);
  }, e.handleApplicationData = function(Y, QA) {
    Y.data.putBuffer(QA.fragment), Y.dataReady(Y), Y.process();
  }, e.handleHeartbeat = function(Y, QA) {
    var BA = QA.fragment, iA = BA.getByte(), rA = BA.getInt16(), GA = BA.getBytes(rA);
    if (iA === e.HeartbeatMessageType.heartbeat_request) {
      if (Y.handshaking || rA > GA.length) return Y.process();
      e.queue(Y, e.createRecord(Y, { type: e.ContentType.heartbeat, data: e.createHeartbeat(e.HeartbeatMessageType.heartbeat_response, GA) })), e.flush(Y);
    } else if (iA === e.HeartbeatMessageType.heartbeat_response) {
      if (GA !== Y.expectedHeartbeatPayload) return Y.process();
      Y.heartbeatReceived && Y.heartbeatReceived(Y, B.util.createBuffer(GA));
    }
    Y.process();
  };
  var i = 1, a = 2, r = 3, h = 4, n = 5, l = 6, y = 7, N = 8, s = 1, F = 2, u = 3, U = 4, J = 5, L = 6, f = e.handleUnexpected, d = e.handleChangeCipherSpec, p = e.handleAlert, x = e.handleHandshake, M = e.handleApplicationData, S = e.handleHeartbeat, k = [];
  k[e.ConnectionEnd.client] = [[f, p, x, f, S], [f, p, x, f, S], [f, p, x, f, S], [f, p, x, f, S], [f, p, x, f, S], [d, p, f, f, S], [f, p, x, f, S], [f, p, x, M, S], [f, p, x, f, S]], k[e.ConnectionEnd.server] = [[f, p, x, f, S], [f, p, x, f, S], [f, p, x, f, S], [f, p, x, f, S], [d, p, f, f, S], [f, p, x, f, S], [f, p, x, M, S], [f, p, x, f, S]];
  var v = e.handleHelloRequest, m = e.handleServerHello, T = e.handleCertificate, $ = e.handleServerKeyExchange, AA = e.handleCertificateRequest, lA = e.handleServerHelloDone, FA = e.handleFinished, cA = [];
  cA[e.ConnectionEnd.client] = [[f, f, m, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f], [v, f, f, f, f, f, f, f, f, f, f, T, $, AA, lA, f, f, f, f, f, f], [v, f, f, f, f, f, f, f, f, f, f, f, $, AA, lA, f, f, f, f, f, f], [v, f, f, f, f, f, f, f, f, f, f, f, f, AA, lA, f, f, f, f, f, f], [v, f, f, f, f, f, f, f, f, f, f, f, f, f, lA, f, f, f, f, f, f], [v, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f], [v, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, FA], [v, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f], [v, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f]];
  var yA = e.handleClientHello, aA = e.handleClientKeyExchange, eA = e.handleCertificateVerify;
  cA[e.ConnectionEnd.server] = [[f, yA, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f], [f, f, f, f, f, f, f, f, f, f, f, T, f, f, f, f, f, f, f, f, f], [f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, aA, f, f, f, f], [f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, eA, f, f, f, f, f], [f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f], [f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, FA], [f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f], [f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f]], e.generateKeys = function(Y, QA) {
    var BA = Q, iA = QA.client_random + QA.server_random;
    Y.session.resuming || (QA.master_secret = BA(QA.pre_master_secret, "master secret", iA, 48).bytes(), QA.pre_master_secret = null), iA = QA.server_random + QA.client_random;
    var rA = 2 * QA.mac_key_length + 2 * QA.enc_key_length, GA = Y.version.major === e.Versions.TLS_1_0.major && Y.version.minor === e.Versions.TLS_1_0.minor;
    GA && (rA += 2 * QA.fixed_iv_length);
    var _ = BA(QA.master_secret, "key expansion", iA, rA), uA = { client_write_MAC_key: _.getBytes(QA.mac_key_length), server_write_MAC_key: _.getBytes(QA.mac_key_length), client_write_key: _.getBytes(QA.enc_key_length), server_write_key: _.getBytes(QA.enc_key_length) };
    return GA && (uA.client_write_IV = _.getBytes(QA.fixed_iv_length), uA.server_write_IV = _.getBytes(QA.fixed_iv_length)), uA;
  }, e.createConnectionState = function(Y) {
    var QA = Y.entity === e.ConnectionEnd.client, BA = function() {
      var GA = { sequenceNumber: [0, 0], macKey: null, macLength: 0, macFunction: null, cipherState: null, cipherFunction: function(_) {
        return !0;
      }, compressionState: null, compressFunction: function(_) {
        return !0;
      }, updateSequenceNumber: function() {
        GA.sequenceNumber[1] === 4294967295 ? (GA.sequenceNumber[1] = 0, ++GA.sequenceNumber[0]) : ++GA.sequenceNumber[1];
      } };
      return GA;
    }, iA = { read: BA(), write: BA() };
    if (iA.read.update = function(GA, _) {
      return iA.read.cipherFunction(_, iA.read) ? iA.read.compressFunction(GA, _, iA.read) || GA.error(GA, { message: "Could not decompress record.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.decompression_failure } }) : GA.error(GA, { message: "Could not decrypt record or bad MAC.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.bad_record_mac } }), !GA.fail;
    }, iA.write.update = function(GA, _) {
      return iA.write.compressFunction(GA, _, iA.write) ? iA.write.cipherFunction(_, iA.write) || GA.error(GA, { message: "Could not encrypt record.", send: !1, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.internal_error } }) : GA.error(GA, { message: "Could not compress record.", send: !1, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.internal_error } }), !GA.fail;
    }, Y.session) {
      var rA = Y.session.sp;
      switch (Y.session.cipherSuite.initSecurityParameters(rA), rA.keys = e.generateKeys(Y, rA), iA.read.macKey = QA ? rA.keys.server_write_MAC_key : rA.keys.client_write_MAC_key, iA.write.macKey = QA ? rA.keys.client_write_MAC_key : rA.keys.server_write_MAC_key, Y.session.cipherSuite.initConnectionState(iA, Y, rA), rA.compression_algorithm) {
        case e.CompressionMethod.none:
          break;
        case e.CompressionMethod.deflate:
          iA.read.compressFunction = C, iA.write.compressFunction = E;
          break;
        default:
          throw new Error("Unsupported compression algorithm.");
      }
    }
    return iA;
  }, e.createRandom = function() {
    var Y = /* @__PURE__ */ new Date(), QA = +Y + 6e4 * Y.getTimezoneOffset(), BA = B.util.createBuffer();
    return BA.putInt32(QA), BA.putBytes(B.random.getBytes(28)), BA;
  }, e.createRecord = function(Y, QA) {
    return QA.data ? { type: QA.type, version: { major: Y.version.major, minor: Y.version.minor }, length: QA.data.length(), fragment: QA.data } : null;
  }, e.createAlert = function(Y, QA) {
    var BA = B.util.createBuffer();
    return BA.putByte(QA.level), BA.putByte(QA.description), e.createRecord(Y, { type: e.ContentType.alert, data: BA });
  }, e.createClientHello = function(Y) {
    Y.session.clientHelloVersion = { major: Y.version.major, minor: Y.version.minor };
    for (var QA = B.util.createBuffer(), BA = 0; BA < Y.cipherSuites.length; ++BA) {
      var iA = Y.cipherSuites[BA];
      QA.putByte(iA.id[0]), QA.putByte(iA.id[1]);
    }
    var rA = QA.length(), GA = B.util.createBuffer();
    GA.putByte(e.CompressionMethod.none);
    var _ = GA.length(), uA = B.util.createBuffer();
    if (Y.virtualHost) {
      var HA = B.util.createBuffer();
      HA.putByte(0), HA.putByte(0);
      var JA = B.util.createBuffer();
      JA.putByte(0), t(JA, 2, B.util.createBuffer(Y.virtualHost));
      var VA = B.util.createBuffer();
      t(VA, 2, JA), t(HA, 2, VA), uA.putBuffer(HA);
    }
    var $A = uA.length();
    $A > 0 && ($A += 2);
    var XA = Y.session.id, Ig = XA.length + 1 + 2 + 4 + 28 + 2 + rA + 1 + _ + $A, jA = B.util.createBuffer();
    return jA.putByte(e.HandshakeType.client_hello), jA.putInt24(Ig), jA.putByte(Y.version.major), jA.putByte(Y.version.minor), jA.putBytes(Y.session.sp.client_random), t(jA, 1, B.util.createBuffer(XA)), t(jA, 2, QA), t(jA, 1, GA), $A > 0 && t(jA, 2, uA), jA;
  }, e.createServerHello = function(Y) {
    var QA = Y.session.id, BA = QA.length + 1 + 2 + 4 + 28 + 2 + 1, iA = B.util.createBuffer();
    return iA.putByte(e.HandshakeType.server_hello), iA.putInt24(BA), iA.putByte(Y.version.major), iA.putByte(Y.version.minor), iA.putBytes(Y.session.sp.server_random), t(iA, 1, B.util.createBuffer(QA)), iA.putByte(Y.session.cipherSuite.id[0]), iA.putByte(Y.session.cipherSuite.id[1]), iA.putByte(Y.session.compressionMethod), iA;
  }, e.createCertificate = function(Y) {
    var QA, BA = Y.entity === e.ConnectionEnd.client, iA = null;
    Y.getCertificate && (QA = BA ? Y.session.certificateRequest : Y.session.extensions.server_name.serverNameList, iA = Y.getCertificate(Y, QA));
    var rA = B.util.createBuffer();
    if (iA !== null) try {
      B.util.isArray(iA) || (iA = [iA]);
      for (var GA = null, _ = 0; _ < iA.length; ++_) {
        var uA = B.pem.decode(iA[_])[0];
        if (uA.type !== "CERTIFICATE" && uA.type !== "X509 CERTIFICATE" && uA.type !== "TRUSTED CERTIFICATE") {
          var HA = new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
          throw HA.headerType = uA.type, HA;
        }
        if (uA.procType && uA.procType.type === "ENCRYPTED") throw new Error("Could not convert certificate from PEM; PEM is encrypted.");
        var JA = B.util.createBuffer(uA.body);
        GA === null && (GA = B.asn1.fromDer(JA.bytes(), !1));
        var VA = B.util.createBuffer();
        t(VA, 3, JA), rA.putBuffer(VA);
      }
      iA = B.pki.certificateFromAsn1(GA), BA ? Y.session.clientCertificate = iA : Y.session.serverCertificate = iA;
    } catch (Ig) {
      return Y.error(Y, { message: "Could not send certificate list.", cause: Ig, send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.bad_certificate } });
    }
    var $A = 3 + rA.length(), XA = B.util.createBuffer();
    return XA.putByte(e.HandshakeType.certificate), XA.putInt24($A), t(XA, 3, rA), XA;
  }, e.createClientKeyExchange = function(Y) {
    var QA = B.util.createBuffer();
    QA.putByte(Y.session.clientHelloVersion.major), QA.putByte(Y.session.clientHelloVersion.minor), QA.putBytes(B.random.getBytes(46));
    var BA = Y.session.sp;
    BA.pre_master_secret = QA.getBytes();
    var iA = (QA = Y.session.serverCertificate.publicKey.encrypt(BA.pre_master_secret)).length + 2, rA = B.util.createBuffer();
    return rA.putByte(e.HandshakeType.client_key_exchange), rA.putInt24(iA), rA.putInt16(QA.length), rA.putBytes(QA), rA;
  }, e.createServerKeyExchange = function(Y) {
    return B.util.createBuffer();
  }, e.getClientSignature = function(Y, QA) {
    var BA = B.util.createBuffer();
    BA.putBuffer(Y.session.md5.digest()), BA.putBuffer(Y.session.sha1.digest()), BA = BA.getBytes(), Y.getSignature = Y.getSignature || function(iA, rA, GA) {
      var _ = null;
      if (iA.getPrivateKey) try {
        _ = iA.getPrivateKey(iA, iA.session.clientCertificate), _ = B.pki.privateKeyFromPem(_);
      } catch (uA) {
        iA.error(iA, { message: "Could not get private key.", cause: uA, send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.internal_error } });
      }
      _ === null ? iA.error(iA, { message: "No private key set.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.internal_error } }) : rA = _.sign(rA, null), GA(iA, rA);
    }, Y.getSignature(Y, BA, QA);
  }, e.createCertificateVerify = function(Y, QA) {
    var BA = QA.length + 2, iA = B.util.createBuffer();
    return iA.putByte(e.HandshakeType.certificate_verify), iA.putInt24(BA), iA.putInt16(QA.length), iA.putBytes(QA), iA;
  }, e.createCertificateRequest = function(Y) {
    var QA = B.util.createBuffer();
    QA.putByte(1);
    var BA = B.util.createBuffer();
    for (var iA in Y.caStore.certs) {
      var rA = Y.caStore.certs[iA], GA = B.pki.distinguishedNameToAsn1(rA.subject), _ = B.asn1.toDer(GA);
      BA.putInt16(_.length()), BA.putBuffer(_);
    }
    var uA = 1 + QA.length() + 2 + BA.length(), HA = B.util.createBuffer();
    return HA.putByte(e.HandshakeType.certificate_request), HA.putInt24(uA), t(HA, 1, QA), t(HA, 2, BA), HA;
  }, e.createServerHelloDone = function(Y) {
    var QA = B.util.createBuffer();
    return QA.putByte(e.HandshakeType.server_hello_done), QA.putInt24(0), QA;
  }, e.createChangeCipherSpec = function() {
    var Y = B.util.createBuffer();
    return Y.putByte(1), Y;
  }, e.createFinished = function(Y) {
    var QA = B.util.createBuffer();
    QA.putBuffer(Y.session.md5.digest()), QA.putBuffer(Y.session.sha1.digest());
    var BA = Y.entity === e.ConnectionEnd.client, iA = Y.session.sp, rA = BA ? "client finished" : "server finished";
    QA = Q(iA.master_secret, rA, QA.getBytes(), 12);
    var GA = B.util.createBuffer();
    return GA.putByte(e.HandshakeType.finished), GA.putInt24(QA.length()), GA.putBuffer(QA), GA;
  }, e.createHeartbeat = function(Y, QA, BA) {
    BA === void 0 && (BA = QA.length);
    var iA = B.util.createBuffer();
    iA.putByte(Y), iA.putInt16(BA), iA.putBytes(QA);
    var rA = iA.length(), GA = Math.max(16, rA - BA - 3);
    return iA.putBytes(B.random.getBytes(GA)), iA;
  }, e.queue = function(Y, QA) {
    if (QA && (QA.fragment.length() !== 0 || QA.type !== e.ContentType.handshake && QA.type !== e.ContentType.alert && QA.type !== e.ContentType.change_cipher_spec)) {
      if (QA.type === e.ContentType.handshake) {
        var BA = QA.fragment.bytes();
        Y.session.md5.update(BA), Y.session.sha1.update(BA), BA = null;
      }
      var iA;
      if (QA.fragment.length() <= e.MaxFragment) iA = [QA];
      else {
        iA = [];
        for (var rA = QA.fragment.bytes(); rA.length > e.MaxFragment; ) iA.push(e.createRecord(Y, { type: QA.type, data: B.util.createBuffer(rA.slice(0, e.MaxFragment)) })), rA = rA.slice(e.MaxFragment);
        rA.length > 0 && iA.push(e.createRecord(Y, { type: QA.type, data: B.util.createBuffer(rA) }));
      }
      for (var GA = 0; GA < iA.length && !Y.fail; ++GA) {
        var _ = iA[GA];
        Y.state.current.write.update(Y, _) && Y.records.push(_);
      }
    }
  }, e.flush = function(Y) {
    for (var QA = 0; QA < Y.records.length; ++QA) {
      var BA = Y.records[QA];
      Y.tlsData.putByte(BA.type), Y.tlsData.putByte(BA.version.major), Y.tlsData.putByte(BA.version.minor), Y.tlsData.putInt16(BA.fragment.length()), Y.tlsData.putBuffer(Y.records[QA].fragment);
    }
    return Y.records = [], Y.tlsDataReady(Y);
  };
  var CA = function(Y) {
    switch (Y) {
      case !0:
        return !0;
      case B.pki.certificateError.bad_certificate:
        return e.Alert.Description.bad_certificate;
      case B.pki.certificateError.unsupported_certificate:
        return e.Alert.Description.unsupported_certificate;
      case B.pki.certificateError.certificate_revoked:
        return e.Alert.Description.certificate_revoked;
      case B.pki.certificateError.certificate_expired:
        return e.Alert.Description.certificate_expired;
      case B.pki.certificateError.certificate_unknown:
        return e.Alert.Description.certificate_unknown;
      case B.pki.certificateError.unknown_ca:
        return e.Alert.Description.unknown_ca;
      default:
        return e.Alert.Description.bad_certificate;
    }
  };
  for (var b in e.verifyCertificateChain = function(Y, QA) {
    try {
      var BA = {};
      for (var iA in Y.verifyOptions) BA[iA] = Y.verifyOptions[iA];
      BA.verify = function(GA, _, uA) {
        CA(GA);
        var HA = Y.verify(Y, GA, _, uA);
        if (HA !== !0) {
          if (typeof HA == "object" && !B.util.isArray(HA)) {
            var JA = new Error("The application rejected the certificate.");
            throw JA.send = !0, JA.alert = { level: e.Alert.Level.fatal, description: e.Alert.Description.bad_certificate }, HA.message && (JA.message = HA.message), HA.alert && (JA.alert.description = HA.alert), JA;
          }
          HA !== GA && (HA = function(VA) {
            switch (VA) {
              case !0:
                return !0;
              case e.Alert.Description.bad_certificate:
                return B.pki.certificateError.bad_certificate;
              case e.Alert.Description.unsupported_certificate:
                return B.pki.certificateError.unsupported_certificate;
              case e.Alert.Description.certificate_revoked:
                return B.pki.certificateError.certificate_revoked;
              case e.Alert.Description.certificate_expired:
                return B.pki.certificateError.certificate_expired;
              case e.Alert.Description.certificate_unknown:
                return B.pki.certificateError.certificate_unknown;
              case e.Alert.Description.unknown_ca:
                return B.pki.certificateError.unknown_ca;
              default:
                return B.pki.certificateError.bad_certificate;
            }
          }(HA));
        }
        return HA;
      }, B.pki.verifyCertificateChain(Y.caStore, QA, BA);
    } catch (GA) {
      var rA = GA;
      (typeof rA != "object" || B.util.isArray(rA)) && (rA = { send: !0, alert: { level: e.Alert.Level.fatal, description: CA(GA) } }), "send" in rA || (rA.send = !0), "alert" in rA || (rA.alert = { level: e.Alert.Level.fatal, description: CA(rA.error) }), Y.error(Y, rA);
    }
    return !Y.fail;
  }, e.createSessionCache = function(Y, QA) {
    var BA = null;
    if (Y && Y.getSession && Y.setSession && Y.order) BA = Y;
    else {
      for (var iA in (BA = {}).cache = Y || {}, BA.capacity = Math.max(QA || 100, 1), BA.order = [], Y) BA.order.length <= QA ? BA.order.push(iA) : delete Y[iA];
      BA.getSession = function(rA) {
        var GA = null, _ = null;
        if (rA ? _ = B.util.bytesToHex(rA) : BA.order.length > 0 && (_ = BA.order[0]), _ !== null && _ in BA.cache) {
          for (var uA in GA = BA.cache[_], delete BA.cache[_], BA.order) if (BA.order[uA] === _) {
            BA.order.splice(uA, 1);
            break;
          }
        }
        return GA;
      }, BA.setSession = function(rA, GA) {
        if (BA.order.length === BA.capacity) {
          var _ = BA.order.shift();
          delete BA.cache[_];
        }
        _ = B.util.bytesToHex(rA), BA.order.push(_), BA.cache[_] = GA;
      };
    }
    return BA;
  }, e.createConnection = function(Y) {
    var QA;
    QA = Y.caStore ? B.util.isArray(Y.caStore) ? B.pki.createCaStore(Y.caStore) : Y.caStore : B.pki.createCaStore();
    var BA = Y.cipherSuites || null;
    if (BA === null) for (var iA in BA = [], e.CipherSuites) BA.push(e.CipherSuites[iA]);
    var rA = Y.server ? e.ConnectionEnd.server : e.ConnectionEnd.client, GA = Y.sessionCache ? e.createSessionCache(Y.sessionCache) : null, _ = { version: { major: e.Version.major, minor: e.Version.minor }, entity: rA, sessionId: Y.sessionId, caStore: QA, sessionCache: GA, cipherSuites: BA, connected: Y.connected, virtualHost: Y.virtualHost || null, verifyClient: Y.verifyClient || !1, verify: Y.verify || function(uA, HA, JA, VA) {
      return HA;
    }, verifyOptions: Y.verifyOptions || {}, getCertificate: Y.getCertificate || null, getPrivateKey: Y.getPrivateKey || null, getSignature: Y.getSignature || null, input: B.util.createBuffer(), tlsData: B.util.createBuffer(), data: B.util.createBuffer(), tlsDataReady: Y.tlsDataReady, dataReady: Y.dataReady, heartbeatReceived: Y.heartbeatReceived, closed: Y.closed, error: function(uA, HA) {
      HA.origin = HA.origin || (uA.entity === e.ConnectionEnd.client ? "client" : "server"), HA.send && (e.queue(uA, e.createAlert(uA, HA.alert)), e.flush(uA));
      var JA = HA.fatal !== !1;
      JA && (uA.fail = !0), Y.error(uA, HA), JA && uA.close(!1);
    }, deflate: Y.deflate || null, inflate: Y.inflate || null, reset: function(uA) {
      _.version = { major: e.Version.major, minor: e.Version.minor }, _.record = null, _.session = null, _.peerCertificate = null, _.state = { pending: null, current: null }, _.expect = (_.entity, e.ConnectionEnd.client, 0), _.fragmented = null, _.records = [], _.open = !1, _.handshakes = 0, _.handshaking = !1, _.isConnected = !1, _.fail = !(uA || uA === void 0), _.input.clear(), _.tlsData.clear(), _.data.clear(), _.state.current = e.createConnectionState(_);
    } };
    return _.reset(), _.handshake = function(uA) {
      if (_.entity !== e.ConnectionEnd.client) _.error(_, { message: "Cannot initiate handshake as a server.", fatal: !1 });
      else if (_.handshaking) _.error(_, { message: "Handshake already in progress.", fatal: !1 });
      else {
        _.fail && !_.open && _.handshakes === 0 && (_.fail = !1), _.handshaking = !0;
        var HA = null;
        (uA = uA || "").length > 0 && (_.sessionCache && (HA = _.sessionCache.getSession(uA)), HA === null && (uA = "")), uA.length === 0 && _.sessionCache && (HA = _.sessionCache.getSession()) !== null && (uA = HA.id), _.session = { id: uA, version: null, cipherSuite: null, compressionMethod: null, serverCertificate: null, certificateRequest: null, clientCertificate: null, sp: {}, md5: B.md.md5.create(), sha1: B.md.sha1.create() }, HA && (_.version = HA.version, _.session.sp = HA.sp), _.session.sp.client_random = e.createRandom().getBytes(), _.open = !0, e.queue(_, e.createRecord(_, { type: e.ContentType.handshake, data: e.createClientHello(_) })), e.flush(_);
      }
    }, _.process = function(uA) {
      var HA = 0;
      return uA && _.input.putBytes(uA), _.fail || (_.record !== null && _.record.ready && _.record.fragment.isEmpty() && (_.record = null), _.record === null && (HA = function(JA) {
        var VA = 0, $A = JA.input, XA = $A.length();
        if (XA < 5) VA = 5 - XA;
        else {
          JA.record = { type: $A.getByte(), version: { major: $A.getByte(), minor: $A.getByte() }, length: $A.getInt16(), fragment: B.util.createBuffer(), ready: !1 };
          var Ig = JA.record.version.major === JA.version.major;
          Ig && JA.session && JA.session.version && (Ig = JA.record.version.minor === JA.version.minor), Ig || JA.error(JA, { message: "Incompatible TLS version.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.protocol_version } });
        }
        return VA;
      }(_)), _.fail || _.record === null || _.record.ready || (HA = function(JA) {
        var VA = 0, $A = JA.input, XA = $A.length();
        return XA < JA.record.length ? VA = JA.record.length - XA : (JA.record.fragment.putBytes($A.getBytes(JA.record.length)), $A.compact(), JA.state.current.read.update(JA, JA.record) && (JA.fragmented !== null && (JA.fragmented.type === JA.record.type ? (JA.fragmented.fragment.putBuffer(JA.record.fragment), JA.record = JA.fragmented) : JA.error(JA, { message: "Invalid fragmented record.", send: !0, alert: { level: e.Alert.Level.fatal, description: e.Alert.Description.unexpected_message } })), JA.record.ready = !0)), VA;
      }(_)), !_.fail && _.record !== null && _.record.ready && function(JA, VA) {
        var $A = VA.type - e.ContentType.change_cipher_spec, XA = k[JA.entity][JA.expect];
        $A in XA ? XA[$A](JA, VA) : e.handleUnexpected(JA, VA);
      }(_, _.record)), HA;
    }, _.prepare = function(uA) {
      return e.queue(_, e.createRecord(_, { type: e.ContentType.application_data, data: B.util.createBuffer(uA) })), e.flush(_);
    }, _.prepareHeartbeatRequest = function(uA, HA) {
      return uA instanceof B.util.ByteBuffer && (uA = uA.bytes()), HA === void 0 && (HA = uA.length), _.expectedHeartbeatPayload = uA, e.queue(_, e.createRecord(_, { type: e.ContentType.heartbeat, data: e.createHeartbeat(e.HeartbeatMessageType.heartbeat_request, uA, HA) })), e.flush(_);
    }, _.close = function(uA) {
      if (!_.fail && _.sessionCache && _.session) {
        var HA = { id: _.session.id, version: _.session.version, sp: _.session.sp };
        HA.sp.keys = null, _.sessionCache.setSession(HA.id, HA);
      }
      _.open && (_.open = !1, _.input.clear(), (_.isConnected || _.handshaking) && (_.isConnected = _.handshaking = !1, e.queue(_, e.createAlert(_, { level: e.Alert.Level.warning, description: e.Alert.Description.close_notify })), e.flush(_)), _.closed(_)), _.reset(uA);
    }, _;
  }, A.exports = B.tls = B.tls || {}, e) typeof e[b] != "function" && (B.tls[b] = e[b]);
  B.tls.prf_tls1 = Q, B.tls.hmac_sha1 = function(Y, QA, BA) {
    var iA = B.hmac.create();
    iA.start("SHA1", Y);
    var rA = B.util.createBuffer();
    return rA.putInt32(QA[0]), rA.putInt32(QA[1]), rA.putByte(BA.type), rA.putByte(BA.version.major), rA.putByte(BA.version.minor), rA.putInt16(BA.length), rA.putBytes(BA.fragment.bytes()), iA.update(rA.getBytes()), iA.digest().getBytes();
  }, B.tls.createSessionCache = e.createSessionCache, B.tls.createConnection = e.createConnection;
}, 116: (A, g, I) => {
  var B = I(832), Q = I(807), E = A.exports = B.util = B.util || {};
  function C(s) {
    if (s !== 8 && s !== 16 && s !== 24 && s !== 32) throw new Error("Only 8, 16, 24, or 32 bits supported: " + s);
  }
  function o(s) {
    if (this.data = "", this.read = 0, typeof s == "string") this.data = s;
    else if (E.isArrayBuffer(s) || E.isArrayBufferView(s)) if (typeof FB < "u" && s instanceof FB) this.data = s.toString("binary");
    else {
      var F = new Uint8Array(s);
      try {
        this.data = String.fromCharCode.apply(null, F);
      } catch {
        for (var u = 0; u < F.length; ++u) this.putByte(F[u]);
      }
    }
    else (s instanceof o || typeof s == "object" && typeof s.data == "string" && typeof s.read == "number") && (this.data = s.data, this.read = s.read);
    this._constructedStringLength = 0;
  }
  (function() {
    if (typeof PA < "u" && PA.nextTick && !PA.browser) return E.nextTick = PA.nextTick, void (typeof setImmediate == "function" ? E.setImmediate = setImmediate : E.setImmediate = E.nextTick);
    if (typeof setImmediate == "function") return E.setImmediate = function() {
      return setImmediate.apply(void 0, arguments);
    }, void (E.nextTick = function(f) {
      return setImmediate(f);
    });
    if (E.setImmediate = function(f) {
      setTimeout(f, 0);
    }, typeof window < "u" && typeof window.postMessage == "function") {
      let f = function(d) {
        if (d.source === window && d.data === s) {
          d.stopPropagation();
          var p = F.slice();
          F.length = 0, p.forEach(function(x) {
            x();
          });
        }
      };
      var s = "forge.setImmediate", F = [];
      E.setImmediate = function(d) {
        F.push(d), F.length === 1 && window.postMessage(s, "*");
      }, window.addEventListener("message", f, !0);
    }
    if (typeof MutationObserver < "u") {
      var u = Date.now(), U = !0, J = document.createElement("div");
      F = [], new MutationObserver(function() {
        var f = F.slice();
        F.length = 0, f.forEach(function(d) {
          d();
        });
      }).observe(J, { attributes: !0 });
      var L = E.setImmediate;
      E.setImmediate = function(f) {
        Date.now() - u > 15 ? (u = Date.now(), L(f)) : (F.push(f), F.length === 1 && J.setAttribute("a", U = !U));
      };
    }
    E.nextTick = E.setImmediate;
  })(), E.isNodejs = typeof PA < "u" && PA.versions && PA.versions.node, E.globalScope = E.isNodejs ? I.g : typeof self > "u" ? window : self, E.isArray = Array.isArray || function(s) {
    return Object.prototype.toString.call(s) === "[object Array]";
  }, E.isArrayBuffer = function(s) {
    return typeof ArrayBuffer < "u" && s instanceof ArrayBuffer;
  }, E.isArrayBufferView = function(s) {
    return s && E.isArrayBuffer(s.buffer) && s.byteLength !== void 0;
  }, E.ByteBuffer = o, E.ByteStringBuffer = o, E.ByteStringBuffer.prototype._optimizeConstructedString = function(s) {
    this._constructedStringLength += s, this._constructedStringLength > 4096 && (this.data.substr(0, 1), this._constructedStringLength = 0);
  }, E.ByteStringBuffer.prototype.length = function() {
    return this.data.length - this.read;
  }, E.ByteStringBuffer.prototype.isEmpty = function() {
    return this.length() <= 0;
  }, E.ByteStringBuffer.prototype.putByte = function(s) {
    return this.putBytes(String.fromCharCode(s));
  }, E.ByteStringBuffer.prototype.fillWithByte = function(s, F) {
    s = String.fromCharCode(s);
    for (var u = this.data; F > 0; ) 1 & F && (u += s), (F >>>= 1) > 0 && (s += s);
    return this.data = u, this._optimizeConstructedString(F), this;
  }, E.ByteStringBuffer.prototype.putBytes = function(s) {
    return this.data += s, this._optimizeConstructedString(s.length), this;
  }, E.ByteStringBuffer.prototype.putString = function(s) {
    return this.putBytes(E.encodeUtf8(s));
  }, E.ByteStringBuffer.prototype.putInt16 = function(s) {
    return this.putBytes(String.fromCharCode(s >> 8 & 255) + String.fromCharCode(255 & s));
  }, E.ByteStringBuffer.prototype.putInt24 = function(s) {
    return this.putBytes(String.fromCharCode(s >> 16 & 255) + String.fromCharCode(s >> 8 & 255) + String.fromCharCode(255 & s));
  }, E.ByteStringBuffer.prototype.putInt32 = function(s) {
    return this.putBytes(String.fromCharCode(s >> 24 & 255) + String.fromCharCode(s >> 16 & 255) + String.fromCharCode(s >> 8 & 255) + String.fromCharCode(255 & s));
  }, E.ByteStringBuffer.prototype.putInt16Le = function(s) {
    return this.putBytes(String.fromCharCode(255 & s) + String.fromCharCode(s >> 8 & 255));
  }, E.ByteStringBuffer.prototype.putInt24Le = function(s) {
    return this.putBytes(String.fromCharCode(255 & s) + String.fromCharCode(s >> 8 & 255) + String.fromCharCode(s >> 16 & 255));
  }, E.ByteStringBuffer.prototype.putInt32Le = function(s) {
    return this.putBytes(String.fromCharCode(255 & s) + String.fromCharCode(s >> 8 & 255) + String.fromCharCode(s >> 16 & 255) + String.fromCharCode(s >> 24 & 255));
  }, E.ByteStringBuffer.prototype.putInt = function(s, F) {
    C(F);
    var u = "";
    do
      F -= 8, u += String.fromCharCode(s >> F & 255);
    while (F > 0);
    return this.putBytes(u);
  }, E.ByteStringBuffer.prototype.putSignedInt = function(s, F) {
    return s < 0 && (s += 2 << F - 1), this.putInt(s, F);
  }, E.ByteStringBuffer.prototype.putBuffer = function(s) {
    return this.putBytes(s.getBytes());
  }, E.ByteStringBuffer.prototype.getByte = function() {
    return this.data.charCodeAt(this.read++);
  }, E.ByteStringBuffer.prototype.getInt16 = function() {
    var s = this.data.charCodeAt(this.read) << 8 ^ this.data.charCodeAt(this.read + 1);
    return this.read += 2, s;
  }, E.ByteStringBuffer.prototype.getInt24 = function() {
    var s = this.data.charCodeAt(this.read) << 16 ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2);
    return this.read += 3, s;
  }, E.ByteStringBuffer.prototype.getInt32 = function() {
    var s = this.data.charCodeAt(this.read) << 24 ^ this.data.charCodeAt(this.read + 1) << 16 ^ this.data.charCodeAt(this.read + 2) << 8 ^ this.data.charCodeAt(this.read + 3);
    return this.read += 4, s;
  }, E.ByteStringBuffer.prototype.getInt16Le = function() {
    var s = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8;
    return this.read += 2, s;
  }, E.ByteStringBuffer.prototype.getInt24Le = function() {
    var s = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16;
    return this.read += 3, s;
  }, E.ByteStringBuffer.prototype.getInt32Le = function() {
    var s = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16 ^ this.data.charCodeAt(this.read + 3) << 24;
    return this.read += 4, s;
  }, E.ByteStringBuffer.prototype.getInt = function(s) {
    C(s);
    var F = 0;
    do
      F = (F << 8) + this.data.charCodeAt(this.read++), s -= 8;
    while (s > 0);
    return F;
  }, E.ByteStringBuffer.prototype.getSignedInt = function(s) {
    var F = this.getInt(s), u = 2 << s - 2;
    return F >= u && (F -= u << 1), F;
  }, E.ByteStringBuffer.prototype.getBytes = function(s) {
    var F;
    return s ? (s = Math.min(this.length(), s), F = this.data.slice(this.read, this.read + s), this.read += s) : s === 0 ? F = "" : (F = this.read === 0 ? this.data : this.data.slice(this.read), this.clear()), F;
  }, E.ByteStringBuffer.prototype.bytes = function(s) {
    return s === void 0 ? this.data.slice(this.read) : this.data.slice(this.read, this.read + s);
  }, E.ByteStringBuffer.prototype.at = function(s) {
    return this.data.charCodeAt(this.read + s);
  }, E.ByteStringBuffer.prototype.setAt = function(s, F) {
    return this.data = this.data.substr(0, this.read + s) + String.fromCharCode(F) + this.data.substr(this.read + s + 1), this;
  }, E.ByteStringBuffer.prototype.last = function() {
    return this.data.charCodeAt(this.data.length - 1);
  }, E.ByteStringBuffer.prototype.copy = function() {
    var s = E.createBuffer(this.data);
    return s.read = this.read, s;
  }, E.ByteStringBuffer.prototype.compact = function() {
    return this.read > 0 && (this.data = this.data.slice(this.read), this.read = 0), this;
  }, E.ByteStringBuffer.prototype.clear = function() {
    return this.data = "", this.read = 0, this;
  }, E.ByteStringBuffer.prototype.truncate = function(s) {
    var F = Math.max(0, this.length() - s);
    return this.data = this.data.substr(this.read, F), this.read = 0, this;
  }, E.ByteStringBuffer.prototype.toHex = function() {
    for (var s = "", F = this.read; F < this.data.length; ++F) {
      var u = this.data.charCodeAt(F);
      u < 16 && (s += "0"), s += u.toString(16);
    }
    return s;
  }, E.ByteStringBuffer.prototype.toString = function() {
    return E.decodeUtf8(this.bytes());
  }, E.DataBuffer = function(s, F) {
    F = F || {}, this.read = F.readOffset || 0, this.growSize = F.growSize || 1024;
    var u = E.isArrayBuffer(s), U = E.isArrayBufferView(s);
    if (u || U) return this.data = u ? new DataView(s) : new DataView(s.buffer, s.byteOffset, s.byteLength), void (this.write = "writeOffset" in F ? F.writeOffset : this.data.byteLength);
    this.data = new DataView(new ArrayBuffer(0)), this.write = 0, s != null && this.putBytes(s), "writeOffset" in F && (this.write = F.writeOffset);
  }, E.DataBuffer.prototype.length = function() {
    return this.write - this.read;
  }, E.DataBuffer.prototype.isEmpty = function() {
    return this.length() <= 0;
  }, E.DataBuffer.prototype.accommodate = function(s, F) {
    if (this.length() >= s) return this;
    F = Math.max(F || this.growSize, s);
    var u = new Uint8Array(this.data.buffer, this.data.byteOffset, this.data.byteLength), U = new Uint8Array(this.length() + F);
    return U.set(u), this.data = new DataView(U.buffer), this;
  }, E.DataBuffer.prototype.putByte = function(s) {
    return this.accommodate(1), this.data.setUint8(this.write++, s), this;
  }, E.DataBuffer.prototype.fillWithByte = function(s, F) {
    this.accommodate(F);
    for (var u = 0; u < F; ++u) this.data.setUint8(s);
    return this;
  }, E.DataBuffer.prototype.putBytes = function(s, F) {
    if (E.isArrayBufferView(s)) {
      var u = (U = new Uint8Array(s.buffer, s.byteOffset, s.byteLength)).byteLength - U.byteOffset;
      return this.accommodate(u), new Uint8Array(this.data.buffer, this.write).set(U), this.write += u, this;
    }
    if (E.isArrayBuffer(s)) {
      var U = new Uint8Array(s);
      return this.accommodate(U.byteLength), new Uint8Array(this.data.buffer).set(U, this.write), this.write += U.byteLength, this;
    }
    if (s instanceof E.DataBuffer || typeof s == "object" && typeof s.read == "number" && typeof s.write == "number" && E.isArrayBufferView(s.data)) return U = new Uint8Array(s.data.byteLength, s.read, s.length()), this.accommodate(U.byteLength), new Uint8Array(s.data.byteLength, this.write).set(U), this.write += U.byteLength, this;
    if (s instanceof E.ByteStringBuffer && (s = s.data, F = "binary"), F = F || "binary", typeof s == "string") {
      var J;
      if (F === "hex") return this.accommodate(Math.ceil(s.length / 2)), J = new Uint8Array(this.data.buffer, this.write), this.write += E.binary.hex.decode(s, J, this.write), this;
      if (F === "base64") return this.accommodate(3 * Math.ceil(s.length / 4)), J = new Uint8Array(this.data.buffer, this.write), this.write += E.binary.base64.decode(s, J, this.write), this;
      if (F === "utf8" && (s = E.encodeUtf8(s), F = "binary"), F === "binary" || F === "raw") return this.accommodate(s.length), J = new Uint8Array(this.data.buffer, this.write), this.write += E.binary.raw.decode(J), this;
      if (F === "utf16") return this.accommodate(2 * s.length), J = new Uint16Array(this.data.buffer, this.write), this.write += E.text.utf16.encode(J), this;
      throw new Error("Invalid encoding: " + F);
    }
    throw Error("Invalid parameter: " + s);
  }, E.DataBuffer.prototype.putBuffer = function(s) {
    return this.putBytes(s), s.clear(), this;
  }, E.DataBuffer.prototype.putString = function(s) {
    return this.putBytes(s, "utf16");
  }, E.DataBuffer.prototype.putInt16 = function(s) {
    return this.accommodate(2), this.data.setInt16(this.write, s), this.write += 2, this;
  }, E.DataBuffer.prototype.putInt24 = function(s) {
    return this.accommodate(3), this.data.setInt16(this.write, s >> 8 & 65535), this.data.setInt8(this.write, s >> 16 & 255), this.write += 3, this;
  }, E.DataBuffer.prototype.putInt32 = function(s) {
    return this.accommodate(4), this.data.setInt32(this.write, s), this.write += 4, this;
  }, E.DataBuffer.prototype.putInt16Le = function(s) {
    return this.accommodate(2), this.data.setInt16(this.write, s, !0), this.write += 2, this;
  }, E.DataBuffer.prototype.putInt24Le = function(s) {
    return this.accommodate(3), this.data.setInt8(this.write, s >> 16 & 255), this.data.setInt16(this.write, s >> 8 & 65535, !0), this.write += 3, this;
  }, E.DataBuffer.prototype.putInt32Le = function(s) {
    return this.accommodate(4), this.data.setInt32(this.write, s, !0), this.write += 4, this;
  }, E.DataBuffer.prototype.putInt = function(s, F) {
    C(F), this.accommodate(F / 8);
    do
      F -= 8, this.data.setInt8(this.write++, s >> F & 255);
    while (F > 0);
    return this;
  }, E.DataBuffer.prototype.putSignedInt = function(s, F) {
    return C(F), this.accommodate(F / 8), s < 0 && (s += 2 << F - 1), this.putInt(s, F);
  }, E.DataBuffer.prototype.getByte = function() {
    return this.data.getInt8(this.read++);
  }, E.DataBuffer.prototype.getInt16 = function() {
    var s = this.data.getInt16(this.read);
    return this.read += 2, s;
  }, E.DataBuffer.prototype.getInt24 = function() {
    var s = this.data.getInt16(this.read) << 8 ^ this.data.getInt8(this.read + 2);
    return this.read += 3, s;
  }, E.DataBuffer.prototype.getInt32 = function() {
    var s = this.data.getInt32(this.read);
    return this.read += 4, s;
  }, E.DataBuffer.prototype.getInt16Le = function() {
    var s = this.data.getInt16(this.read, !0);
    return this.read += 2, s;
  }, E.DataBuffer.prototype.getInt24Le = function() {
    var s = this.data.getInt8(this.read) ^ this.data.getInt16(this.read + 1, !0) << 8;
    return this.read += 3, s;
  }, E.DataBuffer.prototype.getInt32Le = function() {
    var s = this.data.getInt32(this.read, !0);
    return this.read += 4, s;
  }, E.DataBuffer.prototype.getInt = function(s) {
    C(s);
    var F = 0;
    do
      F = (F << 8) + this.data.getInt8(this.read++), s -= 8;
    while (s > 0);
    return F;
  }, E.DataBuffer.prototype.getSignedInt = function(s) {
    var F = this.getInt(s), u = 2 << s - 2;
    return F >= u && (F -= u << 1), F;
  }, E.DataBuffer.prototype.getBytes = function(s) {
    var F;
    return s ? (s = Math.min(this.length(), s), F = this.data.slice(this.read, this.read + s), this.read += s) : s === 0 ? F = "" : (F = this.read === 0 ? this.data : this.data.slice(this.read), this.clear()), F;
  }, E.DataBuffer.prototype.bytes = function(s) {
    return s === void 0 ? this.data.slice(this.read) : this.data.slice(this.read, this.read + s);
  }, E.DataBuffer.prototype.at = function(s) {
    return this.data.getUint8(this.read + s);
  }, E.DataBuffer.prototype.setAt = function(s, F) {
    return this.data.setUint8(s, F), this;
  }, E.DataBuffer.prototype.last = function() {
    return this.data.getUint8(this.write - 1);
  }, E.DataBuffer.prototype.copy = function() {
    return new E.DataBuffer(this);
  }, E.DataBuffer.prototype.compact = function() {
    if (this.read > 0) {
      var s = new Uint8Array(this.data.buffer, this.read), F = new Uint8Array(s.byteLength);
      F.set(s), this.data = new DataView(F), this.write -= this.read, this.read = 0;
    }
    return this;
  }, E.DataBuffer.prototype.clear = function() {
    return this.data = new DataView(new ArrayBuffer(0)), this.read = this.write = 0, this;
  }, E.DataBuffer.prototype.truncate = function(s) {
    return this.write = Math.max(0, this.length() - s), this.read = Math.min(this.read, this.write), this;
  }, E.DataBuffer.prototype.toHex = function() {
    for (var s = "", F = this.read; F < this.data.byteLength; ++F) {
      var u = this.data.getUint8(F);
      u < 16 && (s += "0"), s += u.toString(16);
    }
    return s;
  }, E.DataBuffer.prototype.toString = function(s) {
    var F = new Uint8Array(this.data, this.read, this.length());
    if ((s = s || "utf8") === "binary" || s === "raw") return E.binary.raw.encode(F);
    if (s === "hex") return E.binary.hex.encode(F);
    if (s === "base64") return E.binary.base64.encode(F);
    if (s === "utf8") return E.text.utf8.decode(F);
    if (s === "utf16") return E.text.utf16.decode(F);
    throw new Error("Invalid encoding: " + s);
  }, E.createBuffer = function(s, F) {
    return F = F || "raw", s !== void 0 && F === "utf8" && (s = E.encodeUtf8(s)), new E.ByteBuffer(s);
  }, E.fillString = function(s, F) {
    for (var u = ""; F > 0; ) 1 & F && (u += s), (F >>>= 1) > 0 && (s += s);
    return u;
  }, E.xorBytes = function(s, F, u) {
    for (var U = "", J = "", L = "", f = 0, d = 0; u > 0; --u, ++f) J = s.charCodeAt(f) ^ F.charCodeAt(f), d >= 10 && (U += L, L = "", d = 0), L += String.fromCharCode(J), ++d;
    return U + L;
  }, E.hexToBytes = function(s) {
    var F = "", u = 0;
    for (!0 & s.length && (u = 1, F += String.fromCharCode(parseInt(s[0], 16))); u < s.length; u += 2) F += String.fromCharCode(parseInt(s.substr(u, 2), 16));
    return F;
  }, E.bytesToHex = function(s) {
    return E.createBuffer(s).toHex();
  }, E.int32ToBytes = function(s) {
    return String.fromCharCode(s >> 24 & 255) + String.fromCharCode(s >> 16 & 255) + String.fromCharCode(s >> 8 & 255) + String.fromCharCode(255 & s);
  };
  var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", e = [62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 64, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], i = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
  E.encode64 = function(s, F) {
    for (var u, U, J, L = "", f = "", d = 0; d < s.length; ) u = s.charCodeAt(d++), U = s.charCodeAt(d++), J = s.charCodeAt(d++), L += t.charAt(u >> 2), L += t.charAt((3 & u) << 4 | U >> 4), isNaN(U) ? L += "==" : (L += t.charAt((15 & U) << 2 | J >> 6), L += isNaN(J) ? "=" : t.charAt(63 & J)), F && L.length > F && (f += L.substr(0, F) + `\r
`, L = L.substr(F));
    return f + L;
  }, E.decode64 = function(s) {
    s = s.replace(/[^A-Za-z0-9\+\/\=]/g, "");
    for (var F, u, U, J, L = "", f = 0; f < s.length; ) F = e[s.charCodeAt(f++) - 43], u = e[s.charCodeAt(f++) - 43], U = e[s.charCodeAt(f++) - 43], J = e[s.charCodeAt(f++) - 43], L += String.fromCharCode(F << 2 | u >> 4), U !== 64 && (L += String.fromCharCode((15 & u) << 4 | U >> 2), J !== 64 && (L += String.fromCharCode((3 & U) << 6 | J)));
    return L;
  }, E.encodeUtf8 = function(s) {
    return unescape(encodeURIComponent(s));
  }, E.decodeUtf8 = function(s) {
    return decodeURIComponent(escape(s));
  }, E.binary = { raw: {}, hex: {}, base64: {}, base58: {}, baseN: { encode: Q.encode, decode: Q.decode } }, E.binary.raw.encode = function(s) {
    return String.fromCharCode.apply(null, s);
  }, E.binary.raw.decode = function(s, F, u) {
    var U = F;
    U || (U = new Uint8Array(s.length));
    for (var J = u = u || 0, L = 0; L < s.length; ++L) U[J++] = s.charCodeAt(L);
    return F ? J - u : U;
  }, E.binary.hex.encode = E.bytesToHex, E.binary.hex.decode = function(s, F, u) {
    var U = F;
    U || (U = new Uint8Array(Math.ceil(s.length / 2)));
    var J = 0, L = u = u || 0;
    for (1 & s.length && (J = 1, U[L++] = parseInt(s[0], 16)); J < s.length; J += 2) U[L++] = parseInt(s.substr(J, 2), 16);
    return F ? L - u : U;
  }, E.binary.base64.encode = function(s, F) {
    for (var u, U, J, L = "", f = "", d = 0; d < s.byteLength; ) u = s[d++], U = s[d++], J = s[d++], L += t.charAt(u >> 2), L += t.charAt((3 & u) << 4 | U >> 4), isNaN(U) ? L += "==" : (L += t.charAt((15 & U) << 2 | J >> 6), L += isNaN(J) ? "=" : t.charAt(63 & J)), F && L.length > F && (f += L.substr(0, F) + `\r
`, L = L.substr(F));
    return f + L;
  }, E.binary.base64.decode = function(s, F, u) {
    var U, J, L, f, d = F;
    d || (d = new Uint8Array(3 * Math.ceil(s.length / 4))), s = s.replace(/[^A-Za-z0-9\+\/\=]/g, "");
    for (var p = 0, x = u = u || 0; p < s.length; ) U = e[s.charCodeAt(p++) - 43], J = e[s.charCodeAt(p++) - 43], L = e[s.charCodeAt(p++) - 43], f = e[s.charCodeAt(p++) - 43], d[x++] = U << 2 | J >> 4, L !== 64 && (d[x++] = (15 & J) << 4 | L >> 2, f !== 64 && (d[x++] = (3 & L) << 6 | f));
    return F ? x - u : d.subarray(0, x);
  }, E.binary.base58.encode = function(s, F) {
    return E.binary.baseN.encode(s, i, F);
  }, E.binary.base58.decode = function(s, F) {
    return E.binary.baseN.decode(s, i, F);
  }, E.text = { utf8: {}, utf16: {} }, E.text.utf8.encode = function(s, F, u) {
    s = E.encodeUtf8(s);
    var U = F;
    U || (U = new Uint8Array(s.length));
    for (var J = u = u || 0, L = 0; L < s.length; ++L) U[J++] = s.charCodeAt(L);
    return F ? J - u : U;
  }, E.text.utf8.decode = function(s) {
    return E.decodeUtf8(String.fromCharCode.apply(null, s));
  }, E.text.utf16.encode = function(s, F, u) {
    var U = F;
    U || (U = new Uint8Array(2 * s.length));
    for (var J = new Uint16Array(U.buffer), L = u = u || 0, f = u, d = 0; d < s.length; ++d) J[f++] = s.charCodeAt(d), L += 2;
    return F ? L - u : U;
  }, E.text.utf16.decode = function(s) {
    return String.fromCharCode.apply(null, new Uint16Array(s.buffer));
  }, E.deflate = function(s, F, u) {
    if (F = E.decode64(s.deflate(E.encode64(F)).rval), u) {
      var U = 2;
      32 & F.charCodeAt(1) && (U = 6), F = F.substring(U, F.length - 4);
    }
    return F;
  }, E.inflate = function(s, F, u) {
    var U = s.inflate(E.encode64(F)).rval;
    return U === null ? null : E.decode64(U);
  };
  var a = function(s, F, u) {
    if (!s) throw new Error("WebStorage not available.");
    var U;
    if (u === null ? U = s.removeItem(F) : (u = E.encode64(JSON.stringify(u)), U = s.setItem(F, u)), U !== void 0 && U.rval !== !0) {
      var J = new Error(U.error.message);
      throw J.id = U.error.id, J.name = U.error.name, J;
    }
  }, r = function(s, F) {
    if (!s) throw new Error("WebStorage not available.");
    var u = s.getItem(F);
    if (s.init) if (u.rval === null) {
      if (u.error) {
        var U = new Error(u.error.message);
        throw U.id = u.error.id, U.name = u.error.name, U;
      }
      u = null;
    } else u = u.rval;
    return u !== null && (u = JSON.parse(E.decode64(u))), u;
  }, h = function(s, F, u, U) {
    var J = r(s, F);
    J === null && (J = {}), J[u] = U, a(s, F, J);
  }, n = function(s, F, u) {
    var U = r(s, F);
    return U !== null && (U = u in U ? U[u] : null), U;
  }, l = function(s, F, u) {
    var U = r(s, F);
    if (U !== null && u in U) {
      delete U[u];
      var J = !0;
      for (var L in U) {
        J = !1;
        break;
      }
      J && (U = null), a(s, F, U);
    }
  }, y = function(s, F) {
    a(s, F, null);
  }, N = function(s, F, u) {
    var U, J = null;
    u === void 0 && (u = ["web", "flash"]);
    var L = !1, f = null;
    for (var d in u) {
      U = u[d];
      try {
        if (U === "flash" || U === "both") {
          if (F[0] === null) throw new Error("Flash local storage not available.");
          J = s.apply(this, F), L = U === "flash";
        }
        U !== "web" && U !== "both" || (F[0] = localStorage, J = s.apply(this, F), L = !0);
      } catch (p) {
        f = p;
      }
      if (L) break;
    }
    if (!L) throw f;
    return J;
  };
  E.setItem = function(s, F, u, U, J) {
    N(h, arguments, J);
  }, E.getItem = function(s, F, u, U) {
    return N(n, arguments, U);
  }, E.removeItem = function(s, F, u, U) {
    N(l, arguments, U);
  }, E.clearItems = function(s, F, u) {
    N(y, arguments, u);
  }, E.isEmpty = function(s) {
    for (var F in s) if (s.hasOwnProperty(F)) return !1;
    return !0;
  }, E.format = function(s) {
    for (var F, u, U = /%./g, J = 0, L = [], f = 0; F = U.exec(s); ) {
      (u = s.substring(f, U.lastIndex - 2)).length > 0 && L.push(u), f = U.lastIndex;
      var d = F[0][1];
      switch (d) {
        case "s":
        case "o":
          J < arguments.length ? L.push(arguments[1 + J++]) : L.push("<?>");
          break;
        case "%":
          L.push("%");
          break;
        default:
          L.push("<%" + d + "?>");
      }
    }
    return L.push(s.substring(f)), L.join("");
  }, E.formatNumber = function(s, F, u, U) {
    var J = s, L = isNaN(F = Math.abs(F)) ? 2 : F, f = u === void 0 ? "," : u, d = U === void 0 ? "." : U, p = J < 0 ? "-" : "", x = parseInt(J = Math.abs(+J || 0).toFixed(L), 10) + "", M = x.length > 3 ? x.length % 3 : 0;
    return p + (M ? x.substr(0, M) + d : "") + x.substr(M).replace(/(\d{3})(?=\d)/g, "$1" + d) + (L ? f + Math.abs(J - x).toFixed(L).slice(2) : "");
  }, E.formatSize = function(s) {
    return s >= 1073741824 ? E.formatNumber(s / 1073741824, 2, ".", "") + " GiB" : s >= 1048576 ? E.formatNumber(s / 1048576, 2, ".", "") + " MiB" : s >= 1024 ? E.formatNumber(s / 1024, 0) + " KiB" : E.formatNumber(s, 0) + " bytes";
  }, E.bytesFromIP = function(s) {
    return s.indexOf(".") !== -1 ? E.bytesFromIPv4(s) : s.indexOf(":") !== -1 ? E.bytesFromIPv6(s) : null;
  }, E.bytesFromIPv4 = function(s) {
    if ((s = s.split(".")).length !== 4) return null;
    for (var F = E.createBuffer(), u = 0; u < s.length; ++u) {
      var U = parseInt(s[u], 10);
      if (isNaN(U)) return null;
      F.putByte(U);
    }
    return F.getBytes();
  }, E.bytesFromIPv6 = function(s) {
    for (var F = 0, u = 2 * (8 - (s = s.split(":").filter(function(f) {
      return f.length === 0 && ++F, !0;
    })).length + F), U = E.createBuffer(), J = 0; J < 8; ++J) if (s[J] && s[J].length !== 0) {
      var L = E.hexToBytes(s[J]);
      L.length < 2 && U.putByte(0), U.putBytes(L);
    } else U.fillWithByte(0, u), u = 0;
    return U.getBytes();
  }, E.bytesToIP = function(s) {
    return s.length === 4 ? E.bytesToIPv4(s) : s.length === 16 ? E.bytesToIPv6(s) : null;
  }, E.bytesToIPv4 = function(s) {
    if (s.length !== 4) return null;
    for (var F = [], u = 0; u < s.length; ++u) F.push(s.charCodeAt(u));
    return F.join(".");
  }, E.bytesToIPv6 = function(s) {
    if (s.length !== 16) return null;
    for (var F = [], u = [], U = 0, J = 0; J < s.length; J += 2) {
      for (var L = E.bytesToHex(s[J] + s[J + 1]); L[0] === "0" && L !== "0"; ) L = L.substr(1);
      if (L === "0") {
        var f = u[u.length - 1], d = F.length;
        f && d === f.end + 1 ? (f.end = d, f.end - f.start > u[U].end - u[U].start && (U = u.length - 1)) : u.push({ start: d, end: d });
      }
      F.push(L);
    }
    if (u.length > 0) {
      var p = u[U];
      p.end - p.start > 0 && (F.splice(p.start, p.end - p.start + 1, ""), p.start === 0 && F.unshift(""), p.end === 7 && F.push(""));
    }
    return F.join(":");
  }, E.estimateCores = function(s, F) {
    if (typeof s == "function" && (F = s, s = {}), s = s || {}, "cores" in E && !s.update) return F(null, E.cores);
    if (typeof navigator < "u" && "hardwareConcurrency" in navigator && navigator.hardwareConcurrency > 0) return E.cores = navigator.hardwareConcurrency, F(null, E.cores);
    if (typeof Worker > "u") return E.cores = 1, F(null, E.cores);
    if (typeof Blob > "u") return E.cores = 2, F(null, E.cores);
    var u = URL.createObjectURL(new Blob(["(", (function() {
      self.addEventListener("message", function(U) {
        for (var J = Date.now(), L = J + 4; Date.now() < L; ) ;
        self.postMessage({ st: J, et: L });
      });
    }).toString(), ")()"], { type: "application/javascript" }));
    (function U(J, L, f) {
      if (L === 0) {
        var d = Math.floor(J.reduce(function(p, x) {
          return p + x;
        }, 0) / J.length);
        return E.cores = Math.max(1, d), URL.revokeObjectURL(u), F(null, E.cores);
      }
      (function(p, x) {
        for (var M = [], S = [], k = 0; k < p; ++k) {
          var v = new Worker(u);
          v.addEventListener("message", function(m) {
            if (S.push(m.data), S.length === p) {
              for (var T = 0; T < p; ++T) M[T].terminate();
              x(0, S);
            }
          }), M.push(v);
        }
        for (k = 0; k < p; ++k) M[k].postMessage(k);
      })(f, function(p, x) {
        J.push(function(M, S) {
          for (var k = [], v = 0; v < M; ++v) for (var m = S[v], T = k[v] = [], $ = 0; $ < M; ++$) if (v !== $) {
            var AA = S[$];
            (m.st > AA.st && m.st < AA.et || AA.st > m.st && AA.st < m.et) && T.push($);
          }
          return k.reduce(function(lA, FA) {
            return Math.max(lA, FA.length);
          }, 0);
        }(f, x)), U(J, L - 1, f);
      });
    })([], 5, 16);
  };
}, 414: (A, g, I) => {
  var B = I(832);
  I(925), I(68), I(480), I(991), I(971), I(270), I(953), I(7), I(95), I(116);
  var Q = B.asn1, E = A.exports = B.pki = B.pki || {}, C = E.oids, o = {};
  o.CN = C.commonName, o.commonName = "CN", o.C = C.countryName, o.countryName = "C", o.L = C.localityName, o.localityName = "L", o.ST = C.stateOrProvinceName, o.stateOrProvinceName = "ST", o.O = C.organizationName, o.organizationName = "O", o.OU = C.organizationalUnitName, o.organizationalUnitName = "OU", o.E = C.emailAddress, o.emailAddress = "E";
  var t = B.pki.rsa.publicKeyValidator, e = { name: "Certificate", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "Certificate.TBSCertificate", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "tbsCertificate", value: [{ name: "Certificate.TBSCertificate.version", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 0, constructed: !0, optional: !0, value: [{ name: "Certificate.TBSCertificate.version.integer", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "certVersion" }] }, { name: "Certificate.TBSCertificate.serialNumber", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "certSerialNumber" }, { name: "Certificate.TBSCertificate.signature", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "Certificate.TBSCertificate.signature.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "certinfoSignatureOid" }, { name: "Certificate.TBSCertificate.signature.parameters", tagClass: Q.Class.UNIVERSAL, optional: !0, captureAsn1: "certinfoSignatureParams" }] }, { name: "Certificate.TBSCertificate.issuer", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "certIssuer" }, { name: "Certificate.TBSCertificate.validity", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "Certificate.TBSCertificate.validity.notBefore (utc)", tagClass: Q.Class.UNIVERSAL, type: Q.Type.UTCTIME, constructed: !1, optional: !0, capture: "certValidity1UTCTime" }, { name: "Certificate.TBSCertificate.validity.notBefore (generalized)", tagClass: Q.Class.UNIVERSAL, type: Q.Type.GENERALIZEDTIME, constructed: !1, optional: !0, capture: "certValidity2GeneralizedTime" }, { name: "Certificate.TBSCertificate.validity.notAfter (utc)", tagClass: Q.Class.UNIVERSAL, type: Q.Type.UTCTIME, constructed: !1, optional: !0, capture: "certValidity3UTCTime" }, { name: "Certificate.TBSCertificate.validity.notAfter (generalized)", tagClass: Q.Class.UNIVERSAL, type: Q.Type.GENERALIZEDTIME, constructed: !1, optional: !0, capture: "certValidity4GeneralizedTime" }] }, { name: "Certificate.TBSCertificate.subject", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "certSubject" }, t, { name: "Certificate.TBSCertificate.issuerUniqueID", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 1, constructed: !0, optional: !0, value: [{ name: "Certificate.TBSCertificate.issuerUniqueID.id", tagClass: Q.Class.UNIVERSAL, type: Q.Type.BITSTRING, constructed: !1, captureBitStringValue: "certIssuerUniqueId" }] }, { name: "Certificate.TBSCertificate.subjectUniqueID", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 2, constructed: !0, optional: !0, value: [{ name: "Certificate.TBSCertificate.subjectUniqueID.id", tagClass: Q.Class.UNIVERSAL, type: Q.Type.BITSTRING, constructed: !1, captureBitStringValue: "certSubjectUniqueId" }] }, { name: "Certificate.TBSCertificate.extensions", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 3, constructed: !0, captureAsn1: "certExtensions", optional: !0 }] }, { name: "Certificate.signatureAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "Certificate.signatureAlgorithm.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "certSignatureOid" }, { name: "Certificate.TBSCertificate.signature.parameters", tagClass: Q.Class.UNIVERSAL, optional: !0, captureAsn1: "certSignatureParams" }] }, { name: "Certificate.signatureValue", tagClass: Q.Class.UNIVERSAL, type: Q.Type.BITSTRING, constructed: !1, captureBitStringValue: "certSignature" }] }, i = { name: "rsapss", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "rsapss.hashAlgorithm", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 0, constructed: !0, value: [{ name: "rsapss.hashAlgorithm.AlgorithmIdentifier", tagClass: Q.Class.UNIVERSAL, type: Q.Class.SEQUENCE, constructed: !0, optional: !0, value: [{ name: "rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "hashOid" }] }] }, { name: "rsapss.maskGenAlgorithm", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 1, constructed: !0, value: [{ name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier", tagClass: Q.Class.UNIVERSAL, type: Q.Class.SEQUENCE, constructed: !0, optional: !0, value: [{ name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "maskGenOid" }, { name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "maskGenHashOid" }] }] }] }, { name: "rsapss.saltLength", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 2, optional: !0, value: [{ name: "rsapss.saltLength.saltLength", tagClass: Q.Class.UNIVERSAL, type: Q.Class.INTEGER, constructed: !1, capture: "saltLength" }] }, { name: "rsapss.trailerField", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 3, optional: !0, value: [{ name: "rsapss.trailer.trailer", tagClass: Q.Class.UNIVERSAL, type: Q.Class.INTEGER, constructed: !1, capture: "trailer" }] }] }, a = { name: "CertificationRequestInfo", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "certificationRequestInfo", value: [{ name: "CertificationRequestInfo.integer", tagClass: Q.Class.UNIVERSAL, type: Q.Type.INTEGER, constructed: !1, capture: "certificationRequestInfoVersion" }, { name: "CertificationRequestInfo.subject", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "certificationRequestInfoSubject" }, t, { name: "CertificationRequestInfo.attributes", tagClass: Q.Class.CONTEXT_SPECIFIC, type: 0, constructed: !0, optional: !0, capture: "certificationRequestInfoAttributes", value: [{ name: "CertificationRequestInfo.attributes", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "CertificationRequestInfo.attributes.type", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1 }, { name: "CertificationRequestInfo.attributes.value", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SET, constructed: !0 }] }] }] }, r = { name: "CertificationRequest", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, captureAsn1: "csr", value: [a, { name: "CertificationRequest.signatureAlgorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.SEQUENCE, constructed: !0, value: [{ name: "CertificationRequest.signatureAlgorithm.algorithm", tagClass: Q.Class.UNIVERSAL, type: Q.Type.OID, constructed: !1, capture: "csrSignatureOid" }, { name: "CertificationRequest.signatureAlgorithm.parameters", tagClass: Q.Class.UNIVERSAL, optional: !0, captureAsn1: "csrSignatureParams" }] }, { name: "CertificationRequest.signature", tagClass: Q.Class.UNIVERSAL, type: Q.Type.BITSTRING, constructed: !1, captureBitStringValue: "csrSignature" }] };
  function h(d, p) {
    typeof p == "string" && (p = { shortName: p });
    for (var x, M = null, S = 0; M === null && S < d.attributes.length; ++S) x = d.attributes[S], (p.type && p.type === x.type || p.name && p.name === x.name || p.shortName && p.shortName === x.shortName) && (M = x);
    return M;
  }
  E.RDNAttributesAsArray = function(d, p) {
    for (var x, M, S, k = [], v = 0; v < d.value.length; ++v) {
      x = d.value[v];
      for (var m = 0; m < x.value.length; ++m) S = {}, M = x.value[m], S.type = Q.derToOid(M.value[0].value), S.value = M.value[1].value, S.valueTagClass = M.value[1].type, S.type in C && (S.name = C[S.type], S.name in o && (S.shortName = o[S.name])), p && (p.update(S.type), p.update(S.value)), k.push(S);
    }
    return k;
  }, E.CRIAttributesAsArray = function(d) {
    for (var p = [], x = 0; x < d.length; ++x) for (var M = d[x], S = Q.derToOid(M.value[0].value), k = M.value[1].value, v = 0; v < k.length; ++v) {
      var m = {};
      if (m.type = S, m.value = k[v].value, m.valueTagClass = k[v].type, m.type in C && (m.name = C[m.type], m.name in o && (m.shortName = o[m.name])), m.type === C.extensionRequest) {
        m.extensions = [];
        for (var T = 0; T < m.value.length; ++T) m.extensions.push(E.certificateExtensionFromAsn1(m.value[T]));
      }
      p.push(m);
    }
    return p;
  };
  var n = function(d, p, x) {
    var M = {};
    if (d !== C["RSASSA-PSS"]) return M;
    x && (M = { hash: { algorithmOid: C.sha1 }, mgf: { algorithmOid: C.mgf1, hash: { algorithmOid: C.sha1 } }, saltLength: 20 });
    var S = {}, k = [];
    if (!Q.validate(p, i, S, k)) {
      var v = new Error("Cannot read RSASSA-PSS parameter block.");
      throw v.errors = k, v;
    }
    return S.hashOid !== void 0 && (M.hash = M.hash || {}, M.hash.algorithmOid = Q.derToOid(S.hashOid)), S.maskGenOid !== void 0 && (M.mgf = M.mgf || {}, M.mgf.algorithmOid = Q.derToOid(S.maskGenOid), M.mgf.hash = M.mgf.hash || {}, M.mgf.hash.algorithmOid = Q.derToOid(S.maskGenHashOid)), S.saltLength !== void 0 && (M.saltLength = S.saltLength.charCodeAt(0)), M;
  }, l = function(d) {
    switch (C[d.signatureOid]) {
      case "sha1WithRSAEncryption":
      case "sha1WithRSASignature":
        return B.md.sha1.create();
      case "md5WithRSAEncryption":
        return B.md.md5.create();
      case "sha256WithRSAEncryption":
      case "RSASSA-PSS":
        return B.md.sha256.create();
      case "sha384WithRSAEncryption":
        return B.md.sha384.create();
      case "sha512WithRSAEncryption":
        return B.md.sha512.create();
      default:
        var p = new Error("Could not compute " + d.type + " digest. Unknown signature OID.");
        throw p.signatureOid = d.signatureOid, p;
    }
  }, y = function(d) {
    var p, x = d.certificate;
    switch (x.signatureOid) {
      case C.sha1WithRSAEncryption:
      case C.sha1WithRSASignature:
        break;
      case C["RSASSA-PSS"]:
        var M, S, k;
        if ((M = C[x.signatureParameters.mgf.hash.algorithmOid]) === void 0 || B.md[M] === void 0) throw (k = new Error("Unsupported MGF hash function.")).oid = x.signatureParameters.mgf.hash.algorithmOid, k.name = M, k;
        if ((S = C[x.signatureParameters.mgf.algorithmOid]) === void 0 || B.mgf[S] === void 0) throw (k = new Error("Unsupported MGF function.")).oid = x.signatureParameters.mgf.algorithmOid, k.name = S, k;
        if (S = B.mgf[S].create(B.md[M].create()), (M = C[x.signatureParameters.hash.algorithmOid]) === void 0 || B.md[M] === void 0) throw (k = new Error("Unsupported RSASSA-PSS hash function.")).oid = x.signatureParameters.hash.algorithmOid, k.name = M, k;
        p = B.pss.create(B.md[M].create(), S, x.signatureParameters.saltLength);
    }
    return x.publicKey.verify(d.md.digest().getBytes(), d.signature, p);
  };
  function N(d) {
    for (var p, x, M = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []), S = d.attributes, k = 0; k < S.length; ++k) {
      var v = (p = S[k]).value, m = Q.Type.PRINTABLESTRING;
      "valueTagClass" in p && (m = p.valueTagClass) === Q.Type.UTF8 && (v = B.util.encodeUtf8(v)), x = Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(p.type).getBytes()), Q.create(Q.Class.UNIVERSAL, m, !1, v)])]), M.value.push(x);
    }
    return M;
  }
  function s(d) {
    for (var p, x = 0; x < d.length; ++x) {
      if ((p = d[x]).name === void 0 && (p.type && p.type in E.oids ? p.name = E.oids[p.type] : p.shortName && p.shortName in o && (p.name = E.oids[o[p.shortName]])), p.type === void 0) {
        if (!p.name || !(p.name in E.oids)) throw (S = new Error("Attribute type not specified.")).attribute = p, S;
        p.type = E.oids[p.name];
      }
      if (p.shortName === void 0 && p.name && p.name in o && (p.shortName = o[p.name]), p.type === C.extensionRequest && (p.valueConstructed = !0, p.valueTagClass = Q.Type.SEQUENCE, !p.value && p.extensions)) {
        p.value = [];
        for (var M = 0; M < p.extensions.length; ++M) p.value.push(E.certificateExtensionToAsn1(F(p.extensions[M])));
      }
      var S;
      if (p.value === void 0) throw (S = new Error("Attribute value not specified.")).attribute = p, S;
    }
  }
  function F(d, p) {
    if (p = p || {}, d.name === void 0 && d.id && d.id in E.oids && (d.name = E.oids[d.id]), d.id === void 0) {
      if (!d.name || !(d.name in E.oids)) throw (eA = new Error("Extension ID not specified.")).extension = d, eA;
      d.id = E.oids[d.name];
    }
    if (d.value !== void 0) return d;
    if (d.name === "keyUsage") {
      var x = 0, M = 0, S = 0;
      d.digitalSignature && (M |= 128, x = 7), d.nonRepudiation && (M |= 64, x = 6), d.keyEncipherment && (M |= 32, x = 5), d.dataEncipherment && (M |= 16, x = 4), d.keyAgreement && (M |= 8, x = 3), d.keyCertSign && (M |= 4, x = 2), d.cRLSign && (M |= 2, x = 1), d.encipherOnly && (M |= 1, x = 0), d.decipherOnly && (S |= 128, x = 7);
      var k = String.fromCharCode(x);
      S !== 0 ? k += String.fromCharCode(M) + String.fromCharCode(S) : M !== 0 && (k += String.fromCharCode(M)), d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.BITSTRING, !1, k);
    } else if (d.name === "basicConstraints") d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []), d.cA && d.value.value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.BOOLEAN, !1, "ÿ")), "pathLenConstraint" in d && d.value.value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(d.pathLenConstraint).getBytes()));
    else if (d.name === "extKeyUsage") {
      d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []);
      var v = d.value.value;
      for (var m in d) d[m] === !0 && (m in C ? v.push(Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(C[m]).getBytes())) : m.indexOf(".") !== -1 && v.push(Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(m).getBytes())));
    } else if (d.name === "nsCertType") x = 0, M = 0, d.client && (M |= 128, x = 7), d.server && (M |= 64, x = 6), d.email && (M |= 32, x = 5), d.objsign && (M |= 16, x = 4), d.reserved && (M |= 8, x = 3), d.sslCA && (M |= 4, x = 2), d.emailCA && (M |= 2, x = 1), d.objCA && (M |= 1, x = 0), k = String.fromCharCode(x), M !== 0 && (k += String.fromCharCode(M)), d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.BITSTRING, !1, k);
    else if (d.name === "subjectAltName" || d.name === "issuerAltName") {
      d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []);
      for (var T = 0; T < d.altNames.length; ++T) {
        if (k = (cA = d.altNames[T]).value, cA.type === 7 && cA.ip) {
          if ((k = B.util.bytesFromIP(cA.ip)) === null) throw (eA = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = d, eA;
        } else cA.type === 8 && (k = cA.oid ? Q.oidToDer(Q.oidToDer(cA.oid)) : Q.oidToDer(k));
        d.value.value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, cA.type, !1, k));
      }
    } else if (d.name === "nsComment" && p.cert) {
      if (!/^[\x00-\x7F]*$/.test(d.comment) || d.comment.length < 1 || d.comment.length > 128) throw new Error('Invalid "nsComment" content.');
      d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.IA5STRING, !1, d.comment);
    } else if (d.name === "subjectKeyIdentifier" && p.cert) {
      var $ = p.cert.generateSubjectKeyIdentifier();
      d.subjectKeyIdentifier = $.toHex(), d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, $.getBytes());
    } else if (d.name === "authorityKeyIdentifier" && p.cert) {
      if (d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []), v = d.value.value, d.keyIdentifier) {
        var AA = d.keyIdentifier === !0 ? p.cert.generateSubjectKeyIdentifier().getBytes() : d.keyIdentifier;
        v.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !1, AA));
      }
      if (d.authorityCertIssuer) {
        var lA = [Q.create(Q.Class.CONTEXT_SPECIFIC, 4, !0, [N(d.authorityCertIssuer === !0 ? p.cert.issuer : d.authorityCertIssuer)])];
        v.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 1, !0, lA));
      }
      if (d.serialNumber) {
        var FA = B.util.hexToBytes(d.serialNumber === !0 ? p.cert.serialNumber : d.serialNumber);
        v.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 2, !1, FA));
      }
    } else if (d.name === "cRLDistributionPoints") {
      d.value = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []), v = d.value.value;
      var cA, yA = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []), aA = Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, []);
      for (T = 0; T < d.altNames.length; ++T) {
        if (k = (cA = d.altNames[T]).value, cA.type === 7 && cA.ip) {
          if ((k = B.util.bytesFromIP(cA.ip)) === null) throw (eA = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = d, eA;
        } else cA.type === 8 && (k = cA.oid ? Q.oidToDer(Q.oidToDer(cA.oid)) : Q.oidToDer(k));
        aA.value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, cA.type, !1, k));
      }
      yA.value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [aA])), v.push(yA);
    }
    var eA;
    if (d.value === void 0) throw (eA = new Error("Extension value not specified.")).extension = d, eA;
    return d;
  }
  function u(d, p) {
    if (d === C["RSASSA-PSS"]) {
      var x = [];
      return p.hash.algorithmOid !== void 0 && x.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(p.hash.algorithmOid).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "")])])), p.mgf.algorithmOid !== void 0 && x.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 1, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(p.mgf.algorithmOid).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(p.mgf.hash.algorithmOid).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "")])])])), p.saltLength !== void 0 && x.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 2, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(p.saltLength).getBytes())])), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, x);
    }
    return Q.create(Q.Class.UNIVERSAL, Q.Type.NULL, !1, "");
  }
  function U(d) {
    var p = Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, []);
    if (d.attributes.length === 0) return p;
    for (var x = d.attributes, M = 0; M < x.length; ++M) {
      var S = x[M], k = S.value, v = Q.Type.UTF8;
      "valueTagClass" in S && (v = S.valueTagClass), v === Q.Type.UTF8 && (k = B.util.encodeUtf8(k));
      var m = !1;
      "valueConstructed" in S && (m = S.valueConstructed);
      var T = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(S.type).getBytes()), Q.create(Q.Class.UNIVERSAL, Q.Type.SET, !0, [Q.create(Q.Class.UNIVERSAL, v, m, k)])]);
      p.value.push(T);
    }
    return p;
  }
  E.certificateFromPem = function(d, p, x) {
    var M = B.pem.decode(d)[0];
    if (M.type !== "CERTIFICATE" && M.type !== "X509 CERTIFICATE" && M.type !== "TRUSTED CERTIFICATE") {
      var S = new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
      throw S.headerType = M.type, S;
    }
    if (M.procType && M.procType.type === "ENCRYPTED") throw new Error("Could not convert certificate from PEM; PEM is encrypted.");
    var k = Q.fromDer(M.body, x);
    return E.certificateFromAsn1(k, p);
  }, E.certificateToPem = function(d, p) {
    var x = { type: "CERTIFICATE", body: Q.toDer(E.certificateToAsn1(d)).getBytes() };
    return B.pem.encode(x, { maxline: p });
  }, E.publicKeyFromPem = function(d) {
    var p = B.pem.decode(d)[0];
    if (p.type !== "PUBLIC KEY" && p.type !== "RSA PUBLIC KEY") {
      var x = new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');
      throw x.headerType = p.type, x;
    }
    if (p.procType && p.procType.type === "ENCRYPTED") throw new Error("Could not convert public key from PEM; PEM is encrypted.");
    var M = Q.fromDer(p.body);
    return E.publicKeyFromAsn1(M);
  }, E.publicKeyToPem = function(d, p) {
    var x = { type: "PUBLIC KEY", body: Q.toDer(E.publicKeyToAsn1(d)).getBytes() };
    return B.pem.encode(x, { maxline: p });
  }, E.publicKeyToRSAPublicKeyPem = function(d, p) {
    var x = { type: "RSA PUBLIC KEY", body: Q.toDer(E.publicKeyToRSAPublicKey(d)).getBytes() };
    return B.pem.encode(x, { maxline: p });
  }, E.getPublicKeyFingerprint = function(d, p) {
    var x, M = (p = p || {}).md || B.md.sha1.create();
    switch (p.type || "RSAPublicKey") {
      case "RSAPublicKey":
        x = Q.toDer(E.publicKeyToRSAPublicKey(d)).getBytes();
        break;
      case "SubjectPublicKeyInfo":
        x = Q.toDer(E.publicKeyToAsn1(d)).getBytes();
        break;
      default:
        throw new Error('Unknown fingerprint type "' + p.type + '".');
    }
    M.start(), M.update(x);
    var S = M.digest();
    if (p.encoding === "hex") {
      var k = S.toHex();
      return p.delimiter ? k.match(/.{2}/g).join(p.delimiter) : k;
    }
    if (p.encoding === "binary") return S.getBytes();
    if (p.encoding) throw new Error('Unknown encoding "' + p.encoding + '".');
    return S;
  }, E.certificationRequestFromPem = function(d, p, x) {
    var M = B.pem.decode(d)[0];
    if (M.type !== "CERTIFICATE REQUEST") {
      var S = new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');
      throw S.headerType = M.type, S;
    }
    if (M.procType && M.procType.type === "ENCRYPTED") throw new Error("Could not convert certification request from PEM; PEM is encrypted.");
    var k = Q.fromDer(M.body, x);
    return E.certificationRequestFromAsn1(k, p);
  }, E.certificationRequestToPem = function(d, p) {
    var x = { type: "CERTIFICATE REQUEST", body: Q.toDer(E.certificationRequestToAsn1(d)).getBytes() };
    return B.pem.encode(x, { maxline: p });
  }, E.createCertificate = function() {
    var d = { version: 2, serialNumber: "00", signatureOid: null, signature: null, siginfo: {} };
    return d.siginfo.algorithmOid = null, d.validity = {}, d.validity.notBefore = /* @__PURE__ */ new Date(), d.validity.notAfter = /* @__PURE__ */ new Date(), d.issuer = {}, d.issuer.getField = function(p) {
      return h(d.issuer, p);
    }, d.issuer.addField = function(p) {
      s([p]), d.issuer.attributes.push(p);
    }, d.issuer.attributes = [], d.issuer.hash = null, d.subject = {}, d.subject.getField = function(p) {
      return h(d.subject, p);
    }, d.subject.addField = function(p) {
      s([p]), d.subject.attributes.push(p);
    }, d.subject.attributes = [], d.subject.hash = null, d.extensions = [], d.publicKey = null, d.md = null, d.setSubject = function(p, x) {
      s(p), d.subject.attributes = p, delete d.subject.uniqueId, x && (d.subject.uniqueId = x), d.subject.hash = null;
    }, d.setIssuer = function(p, x) {
      s(p), d.issuer.attributes = p, delete d.issuer.uniqueId, x && (d.issuer.uniqueId = x), d.issuer.hash = null;
    }, d.setExtensions = function(p) {
      for (var x = 0; x < p.length; ++x) F(p[x], { cert: d });
      d.extensions = p;
    }, d.getExtension = function(p) {
      typeof p == "string" && (p = { name: p });
      for (var x, M = null, S = 0; M === null && S < d.extensions.length; ++S) x = d.extensions[S], (p.id && x.id === p.id || p.name && x.name === p.name) && (M = x);
      return M;
    }, d.sign = function(p, x) {
      d.md = x || B.md.sha1.create();
      var M = C[d.md.algorithm + "WithRSAEncryption"];
      if (!M) {
        var S = new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");
        throw S.algorithm = d.md.algorithm, S;
      }
      d.signatureOid = d.siginfo.algorithmOid = M, d.tbsCertificate = E.getTBSCertificate(d);
      var k = Q.toDer(d.tbsCertificate);
      d.md.update(k.getBytes()), d.signature = p.sign(d.md);
    }, d.verify = function(p) {
      var x = !1;
      if (!d.issued(p)) {
        var M = p.issuer, S = d.subject, k = new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.");
        throw k.expectedIssuer = S.attributes, k.actualIssuer = M.attributes, k;
      }
      var v = p.md;
      if (v === null) {
        v = l({ signatureOid: p.signatureOid, type: "certificate" });
        var m = p.tbsCertificate || E.getTBSCertificate(p), T = Q.toDer(m);
        v.update(T.getBytes());
      }
      return v !== null && (x = y({ certificate: d, md: v, signature: p.signature })), x;
    }, d.isIssuer = function(p) {
      var x = !1, M = d.issuer, S = p.subject;
      if (M.hash && S.hash) x = M.hash === S.hash;
      else if (M.attributes.length === S.attributes.length) {
        var k, v;
        x = !0;
        for (var m = 0; x && m < M.attributes.length; ++m) k = M.attributes[m], v = S.attributes[m], k.type === v.type && k.value === v.value || (x = !1);
      }
      return x;
    }, d.issued = function(p) {
      return p.isIssuer(d);
    }, d.generateSubjectKeyIdentifier = function() {
      return E.getPublicKeyFingerprint(d.publicKey, { type: "RSAPublicKey" });
    }, d.verifySubjectKeyIdentifier = function() {
      for (var p = C.subjectKeyIdentifier, x = 0; x < d.extensions.length; ++x) {
        var M = d.extensions[x];
        if (M.id === p) {
          var S = d.generateSubjectKeyIdentifier().getBytes();
          return B.util.hexToBytes(M.subjectKeyIdentifier) === S;
        }
      }
      return !1;
    }, d;
  }, E.certificateFromAsn1 = function(d, p) {
    var x = {}, M = [];
    if (!Q.validate(d, e, x, M)) {
      var S = new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.");
      throw S.errors = M, S;
    }
    if (Q.derToOid(x.publicKeyOid) !== E.oids.rsaEncryption) throw new Error("Cannot read public key. OID is not RSA.");
    var k = E.createCertificate();
    k.version = x.certVersion ? x.certVersion.charCodeAt(0) : 0;
    var v = B.util.createBuffer(x.certSerialNumber);
    k.serialNumber = v.toHex(), k.signatureOid = B.asn1.derToOid(x.certSignatureOid), k.signatureParameters = n(k.signatureOid, x.certSignatureParams, !0), k.siginfo.algorithmOid = B.asn1.derToOid(x.certinfoSignatureOid), k.siginfo.parameters = n(k.siginfo.algorithmOid, x.certinfoSignatureParams, !1), k.signature = x.certSignature;
    var m = [];
    if (x.certValidity1UTCTime !== void 0 && m.push(Q.utcTimeToDate(x.certValidity1UTCTime)), x.certValidity2GeneralizedTime !== void 0 && m.push(Q.generalizedTimeToDate(x.certValidity2GeneralizedTime)), x.certValidity3UTCTime !== void 0 && m.push(Q.utcTimeToDate(x.certValidity3UTCTime)), x.certValidity4GeneralizedTime !== void 0 && m.push(Q.generalizedTimeToDate(x.certValidity4GeneralizedTime)), m.length > 2) throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");
    if (m.length < 2) throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");
    if (k.validity.notBefore = m[0], k.validity.notAfter = m[1], k.tbsCertificate = x.tbsCertificate, p) {
      k.md = l({ signatureOid: k.signatureOid, type: "certificate" });
      var T = Q.toDer(k.tbsCertificate);
      k.md.update(T.getBytes());
    }
    var $ = B.md.sha1.create(), AA = Q.toDer(x.certIssuer);
    $.update(AA.getBytes()), k.issuer.getField = function(cA) {
      return h(k.issuer, cA);
    }, k.issuer.addField = function(cA) {
      s([cA]), k.issuer.attributes.push(cA);
    }, k.issuer.attributes = E.RDNAttributesAsArray(x.certIssuer), x.certIssuerUniqueId && (k.issuer.uniqueId = x.certIssuerUniqueId), k.issuer.hash = $.digest().toHex();
    var lA = B.md.sha1.create(), FA = Q.toDer(x.certSubject);
    return lA.update(FA.getBytes()), k.subject.getField = function(cA) {
      return h(k.subject, cA);
    }, k.subject.addField = function(cA) {
      s([cA]), k.subject.attributes.push(cA);
    }, k.subject.attributes = E.RDNAttributesAsArray(x.certSubject), x.certSubjectUniqueId && (k.subject.uniqueId = x.certSubjectUniqueId), k.subject.hash = lA.digest().toHex(), x.certExtensions ? k.extensions = E.certificateExtensionsFromAsn1(x.certExtensions) : k.extensions = [], k.publicKey = E.publicKeyFromAsn1(x.subjectPublicKeyInfo), k;
  }, E.certificateExtensionsFromAsn1 = function(d) {
    for (var p = [], x = 0; x < d.value.length; ++x) for (var M = d.value[x], S = 0; S < M.value.length; ++S) p.push(E.certificateExtensionFromAsn1(M.value[S]));
    return p;
  }, E.certificateExtensionFromAsn1 = function(d) {
    var p = {};
    if (p.id = Q.derToOid(d.value[0].value), p.critical = !1, d.value[1].type === Q.Type.BOOLEAN ? (p.critical = d.value[1].value.charCodeAt(0) !== 0, p.value = d.value[2].value) : p.value = d.value[1].value, p.id in C) if (p.name = C[p.id], p.name === "keyUsage") {
      var x = 0, M = 0;
      (k = Q.fromDer(p.value)).value.length > 1 && (x = k.value.charCodeAt(1), M = k.value.length > 2 ? k.value.charCodeAt(2) : 0), p.digitalSignature = (128 & x) == 128, p.nonRepudiation = (64 & x) == 64, p.keyEncipherment = (32 & x) == 32, p.dataEncipherment = (16 & x) == 16, p.keyAgreement = (8 & x) == 8, p.keyCertSign = (4 & x) == 4, p.cRLSign = (2 & x) == 2, p.encipherOnly = (1 & x) == 1, p.decipherOnly = (128 & M) == 128;
    } else if (p.name === "basicConstraints") {
      (k = Q.fromDer(p.value)).value.length > 0 && k.value[0].type === Q.Type.BOOLEAN ? p.cA = k.value[0].value.charCodeAt(0) !== 0 : p.cA = !1;
      var S = null;
      k.value.length > 0 && k.value[0].type === Q.Type.INTEGER ? S = k.value[0].value : k.value.length > 1 && (S = k.value[1].value), S !== null && (p.pathLenConstraint = Q.derToInteger(S));
    } else if (p.name === "extKeyUsage") for (var k = Q.fromDer(p.value), v = 0; v < k.value.length; ++v) {
      var m = Q.derToOid(k.value[v].value);
      m in C ? p[C[m]] = !0 : p[m] = !0;
    }
    else if (p.name === "nsCertType") x = 0, (k = Q.fromDer(p.value)).value.length > 1 && (x = k.value.charCodeAt(1)), p.client = (128 & x) == 128, p.server = (64 & x) == 64, p.email = (32 & x) == 32, p.objsign = (16 & x) == 16, p.reserved = (8 & x) == 8, p.sslCA = (4 & x) == 4, p.emailCA = (2 & x) == 2, p.objCA = (1 & x) == 1;
    else if (p.name === "subjectAltName" || p.name === "issuerAltName") {
      var T;
      p.altNames = [], k = Q.fromDer(p.value);
      for (var $ = 0; $ < k.value.length; ++$) {
        var AA = { type: (T = k.value[$]).type, value: T.value };
        switch (p.altNames.push(AA), T.type) {
          case 1:
          case 2:
          case 6:
            break;
          case 7:
            AA.ip = B.util.bytesToIP(T.value);
            break;
          case 8:
            AA.oid = Q.derToOid(T.value);
        }
      }
    } else p.name === "subjectKeyIdentifier" && (k = Q.fromDer(p.value), p.subjectKeyIdentifier = B.util.bytesToHex(k.value));
    return p;
  }, E.certificationRequestFromAsn1 = function(d, p) {
    var x = {}, M = [];
    if (!Q.validate(d, r, x, M)) {
      var S = new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.");
      throw S.errors = M, S;
    }
    if (Q.derToOid(x.publicKeyOid) !== E.oids.rsaEncryption) throw new Error("Cannot read public key. OID is not RSA.");
    var k = E.createCertificationRequest();
    if (k.version = x.csrVersion ? x.csrVersion.charCodeAt(0) : 0, k.signatureOid = B.asn1.derToOid(x.csrSignatureOid), k.signatureParameters = n(k.signatureOid, x.csrSignatureParams, !0), k.siginfo.algorithmOid = B.asn1.derToOid(x.csrSignatureOid), k.siginfo.parameters = n(k.siginfo.algorithmOid, x.csrSignatureParams, !1), k.signature = x.csrSignature, k.certificationRequestInfo = x.certificationRequestInfo, p) {
      k.md = l({ signatureOid: k.signatureOid, type: "certification request" });
      var v = Q.toDer(k.certificationRequestInfo);
      k.md.update(v.getBytes());
    }
    var m = B.md.sha1.create();
    return k.subject.getField = function(T) {
      return h(k.subject, T);
    }, k.subject.addField = function(T) {
      s([T]), k.subject.attributes.push(T);
    }, k.subject.attributes = E.RDNAttributesAsArray(x.certificationRequestInfoSubject, m), k.subject.hash = m.digest().toHex(), k.publicKey = E.publicKeyFromAsn1(x.subjectPublicKeyInfo), k.getAttribute = function(T) {
      return h(k, T);
    }, k.addAttribute = function(T) {
      s([T]), k.attributes.push(T);
    }, k.attributes = E.CRIAttributesAsArray(x.certificationRequestInfoAttributes || []), k;
  }, E.createCertificationRequest = function() {
    var d = { version: 0, signatureOid: null, signature: null, siginfo: {} };
    return d.siginfo.algorithmOid = null, d.subject = {}, d.subject.getField = function(p) {
      return h(d.subject, p);
    }, d.subject.addField = function(p) {
      s([p]), d.subject.attributes.push(p);
    }, d.subject.attributes = [], d.subject.hash = null, d.publicKey = null, d.attributes = [], d.getAttribute = function(p) {
      return h(d, p);
    }, d.addAttribute = function(p) {
      s([p]), d.attributes.push(p);
    }, d.md = null, d.setSubject = function(p) {
      s(p), d.subject.attributes = p, d.subject.hash = null;
    }, d.setAttributes = function(p) {
      s(p), d.attributes = p;
    }, d.sign = function(p, x) {
      d.md = x || B.md.sha1.create();
      var M = C[d.md.algorithm + "WithRSAEncryption"];
      if (!M) {
        var S = new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");
        throw S.algorithm = d.md.algorithm, S;
      }
      d.signatureOid = d.siginfo.algorithmOid = M, d.certificationRequestInfo = E.getCertificationRequestInfo(d);
      var k = Q.toDer(d.certificationRequestInfo);
      d.md.update(k.getBytes()), d.signature = p.sign(d.md);
    }, d.verify = function() {
      var p = !1, x = d.md;
      if (x === null) {
        x = l({ signatureOid: d.signatureOid, type: "certification request" });
        var M = d.certificationRequestInfo || E.getCertificationRequestInfo(d), S = Q.toDer(M);
        x.update(S.getBytes());
      }
      return x !== null && (p = y({ certificate: d, md: x, signature: d.signature })), p;
    }, d;
  };
  var J = /* @__PURE__ */ new Date("1950-01-01T00:00:00Z"), L = /* @__PURE__ */ new Date("2050-01-01T00:00:00Z");
  function f(d) {
    return d >= J && d < L ? Q.create(Q.Class.UNIVERSAL, Q.Type.UTCTIME, !1, Q.dateToUtcTime(d)) : Q.create(Q.Class.UNIVERSAL, Q.Type.GENERALIZEDTIME, !1, Q.dateToGeneralizedTime(d));
  }
  E.getTBSCertificate = function(d) {
    var p = f(d.validity.notBefore), x = f(d.validity.notAfter), M = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.CONTEXT_SPECIFIC, 0, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(d.version).getBytes())]), Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, B.util.hexToBytes(d.serialNumber)), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(d.siginfo.algorithmOid).getBytes()), u(d.siginfo.algorithmOid, d.siginfo.parameters)]), N(d.issuer), Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [p, x]), N(d.subject), E.publicKeyToAsn1(d.publicKey)]);
    return d.issuer.uniqueId && M.value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 1, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.BITSTRING, !1, "\0" + d.issuer.uniqueId)])), d.subject.uniqueId && M.value.push(Q.create(Q.Class.CONTEXT_SPECIFIC, 2, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.BITSTRING, !1, "\0" + d.subject.uniqueId)])), d.extensions.length > 0 && M.value.push(E.certificateExtensionsToAsn1(d.extensions)), M;
  }, E.getCertificationRequestInfo = function(d) {
    return Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.INTEGER, !1, Q.integerToDer(d.version).getBytes()), N(d.subject), E.publicKeyToAsn1(d.publicKey), U(d)]);
  }, E.distinguishedNameToAsn1 = function(d) {
    return N(d);
  }, E.certificateToAsn1 = function(d) {
    var p = d.tbsCertificate || E.getTBSCertificate(d);
    return Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [p, Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(d.signatureOid).getBytes()), u(d.signatureOid, d.signatureParameters)]), Q.create(Q.Class.UNIVERSAL, Q.Type.BITSTRING, !1, "\0" + d.signature)]);
  }, E.certificateExtensionsToAsn1 = function(d) {
    var p = Q.create(Q.Class.CONTEXT_SPECIFIC, 3, !0, []), x = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []);
    p.value.push(x);
    for (var M = 0; M < d.length; ++M) x.value.push(E.certificateExtensionToAsn1(d[M]));
    return p;
  }, E.certificateExtensionToAsn1 = function(d) {
    var p = Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, []);
    p.value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(d.id).getBytes())), d.critical && p.value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.BOOLEAN, !1, "ÿ"));
    var x = d.value;
    return typeof d.value != "string" && (x = Q.toDer(x).getBytes()), p.value.push(Q.create(Q.Class.UNIVERSAL, Q.Type.OCTETSTRING, !1, x)), p;
  }, E.certificationRequestToAsn1 = function(d) {
    var p = d.certificationRequestInfo || E.getCertificationRequestInfo(d);
    return Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [p, Q.create(Q.Class.UNIVERSAL, Q.Type.SEQUENCE, !0, [Q.create(Q.Class.UNIVERSAL, Q.Type.OID, !1, Q.oidToDer(d.signatureOid).getBytes()), u(d.signatureOid, d.signatureParameters)]), Q.create(Q.Class.UNIVERSAL, Q.Type.BITSTRING, !1, "\0" + d.signature)]);
  }, E.createCaStore = function(d) {
    var p = { certs: {} };
    function x(v) {
      return M(v), p.certs[v.hash] || null;
    }
    function M(v) {
      if (!v.hash) {
        var m = B.md.sha1.create();
        v.attributes = E.RDNAttributesAsArray(N(v), m), v.hash = m.digest().toHex();
      }
    }
    if (p.getIssuer = function(v) {
      return x(v.issuer);
    }, p.addCertificate = function(v) {
      if (typeof v == "string" && (v = B.pki.certificateFromPem(v)), M(v.subject), !p.hasCertificate(v)) if (v.subject.hash in p.certs) {
        var m = p.certs[v.subject.hash];
        B.util.isArray(m) || (m = [m]), m.push(v), p.certs[v.subject.hash] = m;
      } else p.certs[v.subject.hash] = v;
    }, p.hasCertificate = function(v) {
      typeof v == "string" && (v = B.pki.certificateFromPem(v));
      var m = x(v.subject);
      if (!m) return !1;
      B.util.isArray(m) || (m = [m]);
      for (var T = Q.toDer(E.certificateToAsn1(v)).getBytes(), $ = 0; $ < m.length; ++$) if (T === Q.toDer(E.certificateToAsn1(m[$])).getBytes()) return !0;
      return !1;
    }, p.listAllCertificates = function() {
      var v = [];
      for (var m in p.certs) if (p.certs.hasOwnProperty(m)) {
        var T = p.certs[m];
        if (B.util.isArray(T)) for (var $ = 0; $ < T.length; ++$) v.push(T[$]);
        else v.push(T);
      }
      return v;
    }, p.removeCertificate = function(v) {
      var m;
      if (typeof v == "string" && (v = B.pki.certificateFromPem(v)), M(v.subject), !p.hasCertificate(v)) return null;
      var T = x(v.subject);
      if (!B.util.isArray(T)) return m = p.certs[v.subject.hash], delete p.certs[v.subject.hash], m;
      for (var $ = Q.toDer(E.certificateToAsn1(v)).getBytes(), AA = 0; AA < T.length; ++AA) $ === Q.toDer(E.certificateToAsn1(T[AA])).getBytes() && (m = T[AA], T.splice(AA, 1));
      return T.length === 0 && delete p.certs[v.subject.hash], m;
    }, d) for (var S = 0; S < d.length; ++S) {
      var k = d[S];
      p.addCertificate(k);
    }
    return p;
  }, E.certificateError = { bad_certificate: "forge.pki.BadCertificate", unsupported_certificate: "forge.pki.UnsupportedCertificate", certificate_revoked: "forge.pki.CertificateRevoked", certificate_expired: "forge.pki.CertificateExpired", certificate_unknown: "forge.pki.CertificateUnknown", unknown_ca: "forge.pki.UnknownCertificateAuthority" }, E.verifyCertificateChain = function(d, p, x) {
    typeof x == "function" && (x = { verify: x }), x = x || {};
    var M = (p = p.slice(0)).slice(0), S = x.validityCheckDate;
    S === void 0 && (S = /* @__PURE__ */ new Date());
    var k = !0, v = null, m = 0;
    do {
      var T = p.shift(), $ = null, AA = !1;
      if (S && (S < T.validity.notBefore || S > T.validity.notAfter) && (v = { message: "Certificate is not valid yet or has expired.", error: E.certificateError.certificate_expired, notBefore: T.validity.notBefore, notAfter: T.validity.notAfter, now: S }), v === null) {
        if (($ = p[0] || d.getIssuer(T)) === null && T.isIssuer(T) && (AA = !0, $ = T), $) {
          var lA = $;
          B.util.isArray(lA) || (lA = [lA]);
          for (var FA = !1; !FA && lA.length > 0; ) {
            $ = lA.shift();
            try {
              FA = $.verify(T);
            } catch {
            }
          }
          FA || (v = { message: "Certificate signature is invalid.", error: E.certificateError.bad_certificate });
        }
        v !== null || $ && !AA || d.hasCertificate(T) || (v = { message: "Certificate is not trusted.", error: E.certificateError.unknown_ca });
      }
      if (v === null && $ && !T.isIssuer($) && (v = { message: "Certificate issuer is invalid.", error: E.certificateError.bad_certificate }), v === null) for (var cA = { keyUsage: !0, basicConstraints: !0 }, yA = 0; v === null && yA < T.extensions.length; ++yA) {
        var aA = T.extensions[yA];
        aA.critical && !(aA.name in cA) && (v = { message: "Certificate has an unsupported critical extension.", error: E.certificateError.unsupported_certificate });
      }
      if (v === null && (!k || p.length === 0 && (!$ || AA))) {
        var eA = T.getExtension("basicConstraints"), CA = T.getExtension("keyUsage");
        CA !== null && (CA.keyCertSign && eA !== null || (v = { message: "Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.", error: E.certificateError.bad_certificate })), v !== null || eA === null || eA.cA || (v = { message: "Certificate basicConstraints indicates the certificate is not a CA.", error: E.certificateError.bad_certificate }), v === null && CA !== null && "pathLenConstraint" in eA && m - 1 > eA.pathLenConstraint && (v = { message: "Certificate basicConstraints pathLenConstraint violated.", error: E.certificateError.bad_certificate });
      }
      var b = v === null || v.error, Y = x.verify ? x.verify(b, m, M) : b;
      if (Y !== !0) throw b === !0 && (v = { message: "The application rejected the certificate.", error: E.certificateError.bad_certificate }), (Y || Y === 0) && (typeof Y != "object" || B.util.isArray(Y) ? typeof Y == "string" && (v.error = Y) : (Y.message && (v.message = Y.message), Y.error && (v.error = Y.error))), v;
      v = null, k = !1, ++m;
    } while (p.length > 0);
    return !0;
  };
}, 358: (A) => {
  A.exports = "data:application/wasm;base64,";
}, 819: () => {
}, 97: () => {
} }, mn = {};
function UI(A) {
  var g = mn[A];
  if (g !== void 0) return g.exports;
  var I = mn[A] = { exports: {} };
  return r0[A](I, I.exports, UI), I.exports;
}
UI.m = r0, UI.d = (A, g) => {
  for (var I in g) UI.o(g, I) && !UI.o(A, I) && Object.defineProperty(A, I, { enumerable: !0, get: g[I] });
}, UI.g = function() {
  if (typeof globalThis == "object") return globalThis;
  try {
    return this || new Function("return this")();
  } catch {
    if (typeof window == "object") return window;
  }
}(), UI.o = (A, g) => Object.prototype.hasOwnProperty.call(A, g), UI.b = document.baseURI || self.location.href;
var EI = {};
(() => {
  var Us, ks, Hs;
  UI.d(EI, { fj: () => us, LF: () => my, $_: () => g, uz: () => Jy, y7: () => vy, pD: () => Ss, qF: () => xy, IB: () => B, ag: () => I, yS: () => Vy, lC: () => zy, We: () => Xy, zW: () => Ty, $l: () => Ly, XQ: () => qy, i8: () => Zy });
  const A = { UNKNOWN_ERROR: 100, PROCESS_ALREADY_RUNNING: 101, INVALID_CERTIFICATE: 102, INVALID_MPC_MESSAGE: 103, FAILED_MPC_BROADCAST: 104, UNEXPECTED_MPC_MESSAGE: 105, MISSING_ALGORITHMS: 106, MISSING_PRIVATE_KEYS: 107, INCOMPLETE_DEVICE: 108, INSTANCE_ALREADY_INITIALIZED: 109, INVALID_PHYSICAL_DEVICE_ID: 110, MAX_DEVICES_PER_WALLET_REACHED: 111, NO_FIRST_MESSAGE_TIMEOUT: 200, UNKNOWN_ALGORITHM: 201, MISSING_KEY_ON_DEVICE: 202, KEY_CREATION_TIMEOUT: 203, FAILED_TO_SEND_PUBLIC_KEY: 204, FAILED_TO_REQUEST_KEY: 205, FAILED_TO_ENROLL_PLAYER: 206, FAILED_TO_CREATE_KEY: 207, FAILED_TO_CONFIRM_KEY: 208, FAILED_TO_REQUEST_END_USER_TAKEOVER: 300, FAILED_TO_TAKEOVER_KEYS: 301, KEY_TAKEOVER_TIMEOUT: 302, FAILED_TO_EXPORT_KEYS: 400, MISSING_PUBLIC_KEYS: 401, MISSING_PUBLIC_KEY: 402, FAILED_TO_DERIVE_ASSET_KEY: 403, MISSING_CLOUD_PRIVATE_KEYS: 404, MISSING_CHAIN_CODE: 405, MISSING_PRIVATE_KEY: 406, PUBLIC_KEYS_DISCREPANCY_ERROR: 407, FAILED_TO_EXPORT_KEY: 408, UNKNOWN_TX_ID: 500, NO_FIRST_TX_SIGNING_MESSAGE: 501, FAILED_TO_SIGN_TRANSACTION: 502, TRANSACTION_SIGNING_TIMEOUT: 503, SIGNING_STOPPED: 504, TRANSACTION_STATUS_FAILURE: 505, BACKUP_NOT_AVAILABLE_ERROR: 600, FAILED_TO_RECOVER_KEYS: 601, UNKNOWN_BACKUP_ALGORITHM: 602, WRONG_RECOVERY_PASSPHRASE: 603, FAILED_TO_GET_KEY_IDS: 700, MISSING_KEY_IDS_FOR_BACKUP: 701, KEYS_DISCREPANCY_BACKUP_ERROR: 702, MISSING_KEYS_BACKUP_ERROR: 703, FAILED_TO_BACKUP_KEY: 704, INVALID_PASSPHRASE_ERROR: 705, INVALID_ADD_DEVICE_SETUP_DATA: 800, MPC_SETUP_ALREADY_STARTED: 801, FAILED_TO_JOIN_WALLET: 900, JOIN_WALLET_TIMEOUT: 901, JOIN_WALLET_STOPPED: 902, FAILED_TO_APPROVE_JOIN_WALLET: 1e3, APPROVE_JOIN_WALLET_TIMEOUT: 1001, NO_KEYS_TO_PROVISION: 1002, APPROVE_JOIN_WALLET_STOPPED: 1003 };
  class g extends Error {
    constructor(R, G) {
      super(R);
      DA(this, "_key");
      this._key = G;
    }
    get key() {
      return this._key;
    }
    get code() {
      return A[this._key];
    }
  }
  class I extends g {
    constructor(R, G) {
      super("Signing in progress", G);
      DA(this, "txId");
      this.txId = R, this.name = "SigningInProgressError";
    }
  }
  class B extends g {
    constructor(c) {
      super("MPC setup already in progress", c), this.name = "SetupInProgressError";
    }
  }
  var Q, E = (Q = "file:///home/runner/work/ncw-js-sdk/ncw-js-sdk/node_modules/@fireblocks/ncw-js-infra/dist/cosigner.esm.mjs", function(tA = {}) {
    var c, R, G = tA;
    G.ready = new Promise((D, w) => {
      c = D, R = w;
    });
    var Z, W, V = Object.assign({}, G), oA = "./this.program", hA = "";
    typeof document < "u" && document.currentScript && (hA = document.currentScript.src), Q && (hA = Q), hA = hA.indexOf("blob:") !== 0 ? hA.substr(0, hA.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", Z = (D) => {
      var w = new XMLHttpRequest();
      return w.open("GET", D, !1), w.send(null), w.responseText;
    }, W = (D, w, H) => {
      var K = new XMLHttpRequest();
      K.open("GET", D, !0), K.responseType = "arraybuffer", K.onload = () => {
        K.status == 200 || K.status == 0 && K.response ? w(K.response) : H();
      }, K.onerror = H, K.send(null);
    };
    var UA, LA = G.print || console.log.bind(console), bA = G.printErr || console.error.bind(console);
    Object.assign(G, V), V = null, G.arguments && G.arguments, G.thisProgram && (oA = G.thisProgram), G.quit && G.quit, G.wasmBinary && (UA = G.wasmBinary), typeof WebAssembly != "object" && FQ("no native wasm support detected");
    var ZA, Eg, Lg, SB, Cg, dg, wI, XB, ps, Et, Ys = !1, Js = [], Ls = [], Ks = [], cE = 0, Ee = null;
    function Wi(D) {
      cE++, G.monitorRunDependencies && G.monitorRunDependencies(cE);
    }
    function Ct(D) {
      if (cE--, G.monitorRunDependencies && G.monitorRunDependencies(cE), cE == 0 && Ee) {
        var w = Ee;
        Ee = null, w();
      }
    }
    function FQ(D) {
      G.onAbort && G.onAbort(D), bA(D = "Aborted(" + D + ")"), Ys = !0, D += ". Build with -sASSERTIONS for more info.";
      var w = new WebAssembly.RuntimeError(D);
      throw R(w), w;
    }
    var $E, Oi, ms = (D) => D.startsWith("data:application/octet-stream;base64,");
    function xs(D) {
      if (D == $E && UA) return new Uint8Array(UA);
      throw "both async and sync fetching of the wasm failed";
    }
    function vs(D, w, H) {
      return function(K) {
        return UA || typeof fetch != "function" ? Promise.resolve().then(() => xs(K)) : fetch(K, { credentials: "same-origin" }).then((X) => {
          if (!X.ok) throw "failed to load wasm binary file at '" + K + "'";
          return X.arrayBuffer();
        }).catch(() => xs(K));
      }(D).then((K) => WebAssembly.instantiate(K, w)).then((K) => K).then(H, (K) => {
        bA(`failed to asynchronously prepare wasm: ${K}`), FQ(K);
      });
    }
    G.locateFile ? ms($E = "cosigner.esm.wasm") || (Oi = $E, $E = G.locateFile ? G.locateFile(Oi, hA) : hA + Oi) : $E = new URL(UI(358), UI.b).href;
    var ji = (D) => {
      for (; D.length > 0; ) D.shift()(G);
    };
    G.noExitRuntime;
    var et = [], tt = 0, DE = 0;
    function _i(D) {
      this.excPtr = D, this.ptr = D - 24, this.set_type = function(w) {
        dg[this.ptr + 4 >> 2] = w;
      }, this.get_type = function() {
        return dg[this.ptr + 4 >> 2];
      }, this.set_destructor = function(w) {
        dg[this.ptr + 8 >> 2] = w;
      }, this.get_destructor = function() {
        return dg[this.ptr + 8 >> 2];
      }, this.set_caught = function(w) {
        w = w ? 1 : 0, ZA[this.ptr + 12 >> 0] = w;
      }, this.get_caught = function() {
        return ZA[this.ptr + 12 >> 0] != 0;
      }, this.set_rethrown = function(w) {
        w = w ? 1 : 0, ZA[this.ptr + 13 >> 0] = w;
      }, this.get_rethrown = function() {
        return ZA[this.ptr + 13 >> 0] != 0;
      }, this.init = function(w, H) {
        this.set_adjusted_ptr(0), this.set_type(w), this.set_destructor(H);
      }, this.set_adjusted_ptr = function(w) {
        dg[this.ptr + 16 >> 2] = w;
      }, this.get_adjusted_ptr = function() {
        return dg[this.ptr + 16 >> 2];
      }, this.get_exception_ptr = function() {
        if (Mn(this.get_type())) return dg[this.excPtr >> 2];
        var w = this.get_adjusted_ptr();
        return w !== 0 ? w : this.excPtr;
      };
    }
    var bs = (D) => {
      var w = DE;
      if (!w) return ce(0), 0;
      var H = new _i(w);
      H.set_adjusted_ptr(w);
      var K = H.get_type();
      if (!K) return ce(0), w;
      for (var X in D) {
        var O = D[X];
        if (O === 0 || O === K) break;
        var gA = H.ptr + 16;
        if (Gn(O, K, gA)) return ce(O), w;
      }
      return ce(K), w;
    }, aB = { isAbs: (D) => D.charAt(0) === "/", splitPath: (D) => /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(D).slice(1), normalizeArray: (D, w) => {
      for (var H = 0, K = D.length - 1; K >= 0; K--) {
        var X = D[K];
        X === "." ? D.splice(K, 1) : X === ".." ? (D.splice(K, 1), H++) : H && (D.splice(K, 1), H--);
      }
      if (w) for (; H; H--) D.unshift("..");
      return D;
    }, normalize: (D) => {
      var w = aB.isAbs(D), H = D.substr(-1) === "/";
      return (D = aB.normalizeArray(D.split("/").filter((K) => !!K), !w).join("/")) || w || (D = "."), D && H && (D += "/"), (w ? "/" : "") + D;
    }, dirname: (D) => {
      var w = aB.splitPath(D), H = w[0], K = w[1];
      return H || K ? (K && (K = K.substr(0, K.length - 1)), H + K) : ".";
    }, basename: (D) => {
      if (D === "/") return "/";
      var w = (D = (D = aB.normalize(D)).replace(/\/$/, "")).lastIndexOf("/");
      return w === -1 ? D : D.substr(w + 1);
    }, join: function() {
      var D = Array.prototype.slice.call(arguments);
      return aB.normalize(D.join("/"));
    }, join2: (D, w) => aB.normalize(D + "/" + w) }, Zs = (D) => (Zs = (() => {
      if (typeof crypto == "object" && typeof crypto.getRandomValues == "function") return (w) => crypto.getRandomValues(w);
      FQ("initRandomDevice");
    })())(D), RQ = { resolve: function() {
      for (var D = "", w = !1, H = arguments.length - 1; H >= -1 && !w; H--) {
        var K = H >= 0 ? arguments[H] : z.cwd();
        if (typeof K != "string") throw new TypeError("Arguments to path.resolve must be strings");
        if (!K) return "";
        D = K + "/" + D, w = aB.isAbs(K);
      }
      return (w ? "/" : "") + (D = aB.normalizeArray(D.split("/").filter((X) => !!X), !w).join("/")) || ".";
    }, relative: (D, w) => {
      function H(RA) {
        for (var SA = 0; SA < RA.length && RA[SA] === ""; SA++) ;
        for (var YA = RA.length - 1; YA >= 0 && RA[YA] === ""; YA--) ;
        return SA > YA ? [] : RA.slice(SA, YA - SA + 1);
      }
      D = RQ.resolve(D).substr(1), w = RQ.resolve(w).substr(1);
      for (var K = H(D.split("/")), X = H(w.split("/")), O = Math.min(K.length, X.length), gA = O, EA = 0; EA < O; EA++) if (K[EA] !== X[EA]) {
        gA = EA;
        break;
      }
      var wA = [];
      for (EA = gA; EA < K.length; EA++) wA.push("..");
      return (wA = wA.concat(X.slice(gA))).join("/");
    } }, Ts = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0, AC = (D, w, H) => {
      for (var K = w + H, X = w; D[X] && !(X >= K); ) ++X;
      if (X - w > 16 && D.buffer && Ts) return Ts.decode(D.subarray(w, X));
      for (var O = ""; w < X; ) {
        var gA = D[w++];
        if (128 & gA) {
          var EA = 63 & D[w++];
          if ((224 & gA) != 192) {
            var wA = 63 & D[w++];
            if ((gA = (240 & gA) == 224 ? (15 & gA) << 12 | EA << 6 | wA : (7 & gA) << 18 | EA << 12 | wA << 6 | 63 & D[w++]) < 65536) O += String.fromCharCode(gA);
            else {
              var RA = gA - 65536;
              O += String.fromCharCode(55296 | RA >> 10, 56320 | 1023 & RA);
            }
          } else O += String.fromCharCode((31 & gA) << 6 | EA);
        } else O += String.fromCharCode(gA);
      }
      return O;
    }, $i = [], gC = (D) => {
      for (var w = 0, H = 0; H < D.length; ++H) {
        var K = D.charCodeAt(H);
        K <= 127 ? w++ : K <= 2047 ? w += 2 : K >= 55296 && K <= 57343 ? (w += 4, ++H) : w += 3;
      }
      return w;
    }, Ao = (D, w, H, K) => {
      if (!(K > 0)) return 0;
      for (var X = H, O = H + K - 1, gA = 0; gA < D.length; ++gA) {
        var EA = D.charCodeAt(gA);
        if (EA >= 55296 && EA <= 57343 && (EA = 65536 + ((1023 & EA) << 10) | 1023 & D.charCodeAt(++gA)), EA <= 127) {
          if (H >= O) break;
          w[H++] = EA;
        } else if (EA <= 2047) {
          if (H + 1 >= O) break;
          w[H++] = 192 | EA >> 6, w[H++] = 128 | 63 & EA;
        } else if (EA <= 65535) {
          if (H + 2 >= O) break;
          w[H++] = 224 | EA >> 12, w[H++] = 128 | EA >> 6 & 63, w[H++] = 128 | 63 & EA;
        } else {
          if (H + 3 >= O) break;
          w[H++] = 240 | EA >> 18, w[H++] = 128 | EA >> 12 & 63, w[H++] = 128 | EA >> 6 & 63, w[H++] = 128 | 63 & EA;
        }
      }
      return w[H] = 0, H - X;
    };
    function go(D, w, H) {
      var K = gC(D) + 1, X = new Array(K), O = Ao(D, X, 0, X.length);
      return w && (X.length = O), X;
    }
    var hE = { ttys: [], init() {
    }, shutdown() {
    }, register(D, w) {
      hE.ttys[D] = { input: [], output: [], ops: w }, z.registerDevice(D, hE.stream_ops);
    }, stream_ops: { open(D) {
      var w = hE.ttys[D.node.rdev];
      if (!w) throw new z.ErrnoError(43);
      D.tty = w, D.seekable = !1;
    }, close(D) {
      D.tty.ops.fsync(D.tty);
    }, fsync(D) {
      D.tty.ops.fsync(D.tty);
    }, read(D, w, H, K, X) {
      if (!D.tty || !D.tty.ops.get_char) throw new z.ErrnoError(60);
      for (var O = 0, gA = 0; gA < K; gA++) {
        var EA;
        try {
          EA = D.tty.ops.get_char(D.tty);
        } catch {
          throw new z.ErrnoError(29);
        }
        if (EA === void 0 && O === 0) throw new z.ErrnoError(6);
        if (EA == null) break;
        O++, w[H + gA] = EA;
      }
      return O && (D.node.timestamp = Date.now()), O;
    }, write(D, w, H, K, X) {
      if (!D.tty || !D.tty.ops.put_char) throw new z.ErrnoError(60);
      try {
        for (var O = 0; O < K; O++) D.tty.ops.put_char(D.tty, w[H + O]);
      } catch {
        throw new z.ErrnoError(29);
      }
      return K && (D.node.timestamp = Date.now()), O;
    } }, default_tty_ops: { get_char: (D) => (() => {
      if (!$i.length) {
        var w = null;
        if (typeof window < "u" && typeof window.prompt == "function" ? (w = window.prompt("Input: ")) !== null && (w += `
`) : typeof readline == "function" && (w = readline()) !== null && (w += `
`), !w) return null;
        $i = go(w, !0);
      }
      return $i.shift();
    })(), put_char(D, w) {
      w === null || w === 10 ? (LA(AC(D.output, 0)), D.output = []) : w != 0 && D.output.push(w);
    }, fsync(D) {
      D.output && D.output.length > 0 && (LA(AC(D.output, 0)), D.output = []);
    }, ioctl_tcgets: (D) => ({ c_iflag: 25856, c_oflag: 5, c_cflag: 191, c_lflag: 35387, c_cc: [3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }), ioctl_tcsets: (D, w, H) => 0, ioctl_tiocgwinsz: (D) => [24, 80] }, default_tty1_ops: { put_char(D, w) {
      w === null || w === 10 ? (bA(AC(D.output, 0)), D.output = []) : w != 0 && D.output.push(w);
    }, fsync(D) {
      D.output && D.output.length > 0 && (bA(AC(D.output, 0)), D.output = []);
    } } }, Xs = (D) => {
      D = ((H, K) => 65536 * Math.ceil(H / 65536))(D);
      var w = Fn(65536, D);
      return w ? ((H, K) => (Eg.fill(0, H, H + K), H))(w, D) : 0;
    }, ug = { ops_table: null, mount: (D) => ug.createNode(null, "/", 16895, 0), createNode(D, w, H, K) {
      if (z.isBlkdev(H) || z.isFIFO(H)) throw new z.ErrnoError(63);
      ug.ops_table || (ug.ops_table = { dir: { node: { getattr: ug.node_ops.getattr, setattr: ug.node_ops.setattr, lookup: ug.node_ops.lookup, mknod: ug.node_ops.mknod, rename: ug.node_ops.rename, unlink: ug.node_ops.unlink, rmdir: ug.node_ops.rmdir, readdir: ug.node_ops.readdir, symlink: ug.node_ops.symlink }, stream: { llseek: ug.stream_ops.llseek } }, file: { node: { getattr: ug.node_ops.getattr, setattr: ug.node_ops.setattr }, stream: { llseek: ug.stream_ops.llseek, read: ug.stream_ops.read, write: ug.stream_ops.write, allocate: ug.stream_ops.allocate, mmap: ug.stream_ops.mmap, msync: ug.stream_ops.msync } }, link: { node: { getattr: ug.node_ops.getattr, setattr: ug.node_ops.setattr, readlink: ug.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: ug.node_ops.getattr, setattr: ug.node_ops.setattr }, stream: z.chrdev_stream_ops } });
      var X = z.createNode(D, w, H, K);
      return z.isDir(X.mode) ? (X.node_ops = ug.ops_table.dir.node, X.stream_ops = ug.ops_table.dir.stream, X.contents = {}) : z.isFile(X.mode) ? (X.node_ops = ug.ops_table.file.node, X.stream_ops = ug.ops_table.file.stream, X.usedBytes = 0, X.contents = null) : z.isLink(X.mode) ? (X.node_ops = ug.ops_table.link.node, X.stream_ops = ug.ops_table.link.stream) : z.isChrdev(X.mode) && (X.node_ops = ug.ops_table.chrdev.node, X.stream_ops = ug.ops_table.chrdev.stream), X.timestamp = Date.now(), D && (D.contents[w] = X, D.timestamp = X.timestamp), X;
    }, getFileDataAsTypedArray: (D) => D.contents ? D.contents.subarray ? D.contents.subarray(0, D.usedBytes) : new Uint8Array(D.contents) : new Uint8Array(0), expandFileStorage(D, w) {
      var H = D.contents ? D.contents.length : 0;
      if (!(H >= w)) {
        w = Math.max(w, H * (H < 1048576 ? 2 : 1.125) >>> 0), H != 0 && (w = Math.max(w, 256));
        var K = D.contents;
        D.contents = new Uint8Array(w), D.usedBytes > 0 && D.contents.set(K.subarray(0, D.usedBytes), 0);
      }
    }, resizeFileStorage(D, w) {
      if (D.usedBytes != w) if (w == 0) D.contents = null, D.usedBytes = 0;
      else {
        var H = D.contents;
        D.contents = new Uint8Array(w), H && D.contents.set(H.subarray(0, Math.min(w, D.usedBytes))), D.usedBytes = w;
      }
    }, node_ops: { getattr(D) {
      var w = {};
      return w.dev = z.isChrdev(D.mode) ? D.id : 1, w.ino = D.id, w.mode = D.mode, w.nlink = 1, w.uid = 0, w.gid = 0, w.rdev = D.rdev, z.isDir(D.mode) ? w.size = 4096 : z.isFile(D.mode) ? w.size = D.usedBytes : z.isLink(D.mode) ? w.size = D.link.length : w.size = 0, w.atime = new Date(D.timestamp), w.mtime = new Date(D.timestamp), w.ctime = new Date(D.timestamp), w.blksize = 4096, w.blocks = Math.ceil(w.size / w.blksize), w;
    }, setattr(D, w) {
      w.mode !== void 0 && (D.mode = w.mode), w.timestamp !== void 0 && (D.timestamp = w.timestamp), w.size !== void 0 && ug.resizeFileStorage(D, w.size);
    }, lookup(D, w) {
      throw z.genericErrors[44];
    }, mknod: (D, w, H, K) => ug.createNode(D, w, H, K), rename(D, w, H) {
      if (z.isDir(D.mode)) {
        var K;
        try {
          K = z.lookupNode(w, H);
        } catch {
        }
        if (K) for (var X in K.contents) throw new z.ErrnoError(55);
      }
      delete D.parent.contents[D.name], D.parent.timestamp = Date.now(), D.name = H, w.contents[H] = D, w.timestamp = D.parent.timestamp, D.parent = w;
    }, unlink(D, w) {
      delete D.contents[w], D.timestamp = Date.now();
    }, rmdir(D, w) {
      var H = z.lookupNode(D, w);
      for (var K in H.contents) throw new z.ErrnoError(55);
      delete D.contents[w], D.timestamp = Date.now();
    }, readdir(D) {
      var w = [".", ".."];
      for (var H in D.contents) D.contents.hasOwnProperty(H) && w.push(H);
      return w;
    }, symlink(D, w, H) {
      var K = ug.createNode(D, w, 41471, 0);
      return K.link = H, K;
    }, readlink(D) {
      if (!z.isLink(D.mode)) throw new z.ErrnoError(28);
      return D.link;
    } }, stream_ops: { read(D, w, H, K, X) {
      var O = D.node.contents;
      if (X >= D.node.usedBytes) return 0;
      var gA = Math.min(D.node.usedBytes - X, K);
      if (gA > 8 && O.subarray) w.set(O.subarray(X, X + gA), H);
      else for (var EA = 0; EA < gA; EA++) w[H + EA] = O[X + EA];
      return gA;
    }, write(D, w, H, K, X, O) {
      if (!K) return 0;
      var gA = D.node;
      if (gA.timestamp = Date.now(), w.subarray && (!gA.contents || gA.contents.subarray)) {
        if (O) return gA.contents = w.subarray(H, H + K), gA.usedBytes = K, K;
        if (gA.usedBytes === 0 && X === 0) return gA.contents = w.slice(H, H + K), gA.usedBytes = K, K;
        if (X + K <= gA.usedBytes) return gA.contents.set(w.subarray(H, H + K), X), K;
      }
      if (ug.expandFileStorage(gA, X + K), gA.contents.subarray && w.subarray) gA.contents.set(w.subarray(H, H + K), X);
      else for (var EA = 0; EA < K; EA++) gA.contents[X + EA] = w[H + EA];
      return gA.usedBytes = Math.max(gA.usedBytes, X + K), K;
    }, llseek(D, w, H) {
      var K = w;
      if (H === 1 ? K += D.position : H === 2 && z.isFile(D.node.mode) && (K += D.node.usedBytes), K < 0) throw new z.ErrnoError(28);
      return K;
    }, allocate(D, w, H) {
      ug.expandFileStorage(D.node, w + H), D.node.usedBytes = Math.max(D.node.usedBytes, w + H);
    }, mmap(D, w, H, K, X) {
      if (!z.isFile(D.node.mode)) throw new z.ErrnoError(43);
      var O, gA, EA = D.node.contents;
      if (2 & X || EA.buffer !== ZA.buffer) {
        if ((H > 0 || H + w < EA.length) && (EA = EA.subarray ? EA.subarray(H, H + w) : Array.prototype.slice.call(EA, H, H + w)), gA = !0, !(O = Xs(w))) throw new z.ErrnoError(48);
        ZA.set(EA, O);
      } else gA = !1, O = EA.byteOffset;
      return { ptr: O, allocated: gA };
    }, msync: (D, w, H, K, X) => (ug.stream_ops.write(D, w, 0, K, H, !1), 0) } }, Py = G.preloadPlugins || [], Bo = (D, w) => {
      var H = 0;
      return D && (H |= 365), w && (H |= 146), H;
    }, z = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: !1, ignorePermissions: !0, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath(D, w = {}) {
      if (!(D = RQ.resolve(D))) return { path: "", node: null };
      if ((w = Object.assign({ follow_mount: !0, recurse_count: 0 }, w)).recurse_count > 8) throw new z.ErrnoError(32);
      for (var H = D.split("/").filter((RA) => !!RA), K = z.root, X = "/", O = 0; O < H.length; O++) {
        var gA = O === H.length - 1;
        if (gA && w.parent) break;
        if (K = z.lookupNode(K, H[O]), X = aB.join2(X, H[O]), z.isMountpoint(K) && (!gA || gA && w.follow_mount) && (K = K.mounted.root), !gA || w.follow) for (var EA = 0; z.isLink(K.mode); ) {
          var wA = z.readlink(X);
          if (X = RQ.resolve(aB.dirname(X), wA), K = z.lookupPath(X, { recurse_count: w.recurse_count + 1 }).node, EA++ > 40) throw new z.ErrnoError(32);
        }
      }
      return { path: X, node: K };
    }, getPath(D) {
      for (var w; ; ) {
        if (z.isRoot(D)) {
          var H = D.mount.mountpoint;
          return w ? H[H.length - 1] !== "/" ? `${H}/${w}` : H + w : H;
        }
        w = w ? `${D.name}/${w}` : D.name, D = D.parent;
      }
    }, hashName(D, w) {
      for (var H = 0, K = 0; K < w.length; K++) H = (H << 5) - H + w.charCodeAt(K) | 0;
      return (D + H >>> 0) % z.nameTable.length;
    }, hashAddNode(D) {
      var w = z.hashName(D.parent.id, D.name);
      D.name_next = z.nameTable[w], z.nameTable[w] = D;
    }, hashRemoveNode(D) {
      var w = z.hashName(D.parent.id, D.name);
      if (z.nameTable[w] === D) z.nameTable[w] = D.name_next;
      else for (var H = z.nameTable[w]; H; ) {
        if (H.name_next === D) {
          H.name_next = D.name_next;
          break;
        }
        H = H.name_next;
      }
    }, lookupNode(D, w) {
      var H = z.mayLookup(D);
      if (H) throw new z.ErrnoError(H, D);
      for (var K = z.hashName(D.id, w), X = z.nameTable[K]; X; X = X.name_next) {
        var O = X.name;
        if (X.parent.id === D.id && O === w) return X;
      }
      return z.lookup(D, w);
    }, createNode(D, w, H, K) {
      var X = new z.FSNode(D, w, H, K);
      return z.hashAddNode(X), X;
    }, destroyNode(D) {
      z.hashRemoveNode(D);
    }, isRoot: (D) => D === D.parent, isMountpoint: (D) => !!D.mounted, isFile: (D) => (61440 & D) == 32768, isDir: (D) => (61440 & D) == 16384, isLink: (D) => (61440 & D) == 40960, isChrdev: (D) => (61440 & D) == 8192, isBlkdev: (D) => (61440 & D) == 24576, isFIFO: (D) => (61440 & D) == 4096, isSocket: (D) => (49152 & D) == 49152, flagsToPermissionString(D) {
      var w = ["r", "w", "rw"][3 & D];
      return 512 & D && (w += "w"), w;
    }, nodePermissions: (D, w) => z.ignorePermissions || (!w.includes("r") || 292 & D.mode) && (!w.includes("w") || 146 & D.mode) && (!w.includes("x") || 73 & D.mode) ? 0 : 2, mayLookup: (D) => z.nodePermissions(D, "x") || (D.node_ops.lookup ? 0 : 2), mayCreate(D, w) {
      try {
        return z.lookupNode(D, w), 20;
      } catch {
      }
      return z.nodePermissions(D, "wx");
    }, mayDelete(D, w, H) {
      var K;
      try {
        K = z.lookupNode(D, w);
      } catch (O) {
        return O.errno;
      }
      var X = z.nodePermissions(D, "wx");
      if (X) return X;
      if (H) {
        if (!z.isDir(K.mode)) return 54;
        if (z.isRoot(K) || z.getPath(K) === z.cwd()) return 10;
      } else if (z.isDir(K.mode)) return 31;
      return 0;
    }, mayOpen: (D, w) => D ? z.isLink(D.mode) ? 32 : z.isDir(D.mode) && (z.flagsToPermissionString(w) !== "r" || 512 & w) ? 31 : z.nodePermissions(D, z.flagsToPermissionString(w)) : 44, MAX_OPEN_FDS: 4096, nextfd() {
      for (var D = 0; D <= z.MAX_OPEN_FDS; D++) if (!z.streams[D]) return D;
      throw new z.ErrnoError(33);
    }, getStreamChecked(D) {
      var w = z.getStream(D);
      if (!w) throw new z.ErrnoError(8);
      return w;
    }, getStream: (D) => z.streams[D], createStream: (D, w = -1) => (z.FSStream || (z.FSStream = function() {
      this.shared = {};
    }, z.FSStream.prototype = {}, Object.defineProperties(z.FSStream.prototype, { object: { get() {
      return this.node;
    }, set(H) {
      this.node = H;
    } }, isRead: { get() {
      return (2097155 & this.flags) != 1;
    } }, isWrite: { get() {
      return (2097155 & this.flags) != 0;
    } }, isAppend: { get() {
      return 1024 & this.flags;
    } }, flags: { get() {
      return this.shared.flags;
    }, set(H) {
      this.shared.flags = H;
    } }, position: { get() {
      return this.shared.position;
    }, set(H) {
      this.shared.position = H;
    } } })), D = Object.assign(new z.FSStream(), D), w == -1 && (w = z.nextfd()), D.fd = w, z.streams[w] = D, D), closeStream(D) {
      z.streams[D] = null;
    }, chrdev_stream_ops: { open(D) {
      var w = z.getDevice(D.node.rdev);
      D.stream_ops = w.stream_ops, D.stream_ops.open && D.stream_ops.open(D);
    }, llseek() {
      throw new z.ErrnoError(70);
    } }, major: (D) => D >> 8, minor: (D) => 255 & D, makedev: (D, w) => D << 8 | w, registerDevice(D, w) {
      z.devices[D] = { stream_ops: w };
    }, getDevice: (D) => z.devices[D], getMounts(D) {
      for (var w = [], H = [D]; H.length; ) {
        var K = H.pop();
        w.push(K), H.push.apply(H, K.mounts);
      }
      return w;
    }, syncfs(D, w) {
      typeof D == "function" && (w = D, D = !1), z.syncFSRequests++, z.syncFSRequests > 1 && bA(`warning: ${z.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);
      var H = z.getMounts(z.root.mount), K = 0;
      function X(gA) {
        return z.syncFSRequests--, w(gA);
      }
      function O(gA) {
        if (gA) return O.errored ? void 0 : (O.errored = !0, X(gA));
        ++K >= H.length && X(null);
      }
      H.forEach((gA) => {
        if (!gA.type.syncfs) return O(null);
        gA.type.syncfs(gA, D, O);
      });
    }, mount(D, w, H) {
      var K, X = H === "/", O = !H;
      if (X && z.root) throw new z.ErrnoError(10);
      if (!X && !O) {
        var gA = z.lookupPath(H, { follow_mount: !1 });
        if (H = gA.path, K = gA.node, z.isMountpoint(K)) throw new z.ErrnoError(10);
        if (!z.isDir(K.mode)) throw new z.ErrnoError(54);
      }
      var EA = { type: D, opts: w, mountpoint: H, mounts: [] }, wA = D.mount(EA);
      return wA.mount = EA, EA.root = wA, X ? z.root = wA : K && (K.mounted = EA, K.mount && K.mount.mounts.push(EA)), wA;
    }, unmount(D) {
      var w = z.lookupPath(D, { follow_mount: !1 });
      if (!z.isMountpoint(w.node)) throw new z.ErrnoError(28);
      var H = w.node, K = H.mounted, X = z.getMounts(K);
      Object.keys(z.nameTable).forEach((gA) => {
        for (var EA = z.nameTable[gA]; EA; ) {
          var wA = EA.name_next;
          X.includes(EA.mount) && z.destroyNode(EA), EA = wA;
        }
      }), H.mounted = null;
      var O = H.mount.mounts.indexOf(K);
      H.mount.mounts.splice(O, 1);
    }, lookup: (D, w) => D.node_ops.lookup(D, w), mknod(D, w, H) {
      var K = z.lookupPath(D, { parent: !0 }).node, X = aB.basename(D);
      if (!X || X === "." || X === "..") throw new z.ErrnoError(28);
      var O = z.mayCreate(K, X);
      if (O) throw new z.ErrnoError(O);
      if (!K.node_ops.mknod) throw new z.ErrnoError(63);
      return K.node_ops.mknod(K, X, w, H);
    }, create: (D, w) => (w = w !== void 0 ? w : 438, w &= 4095, w |= 32768, z.mknod(D, w, 0)), mkdir: (D, w) => (w = w !== void 0 ? w : 511, w &= 1023, w |= 16384, z.mknod(D, w, 0)), mkdirTree(D, w) {
      for (var H = D.split("/"), K = "", X = 0; X < H.length; ++X) if (H[X]) {
        K += "/" + H[X];
        try {
          z.mkdir(K, w);
        } catch (O) {
          if (O.errno != 20) throw O;
        }
      }
    }, mkdev: (D, w, H) => (H === void 0 && (H = w, w = 438), w |= 8192, z.mknod(D, w, H)), symlink(D, w) {
      if (!RQ.resolve(D)) throw new z.ErrnoError(44);
      var H = z.lookupPath(w, { parent: !0 }).node;
      if (!H) throw new z.ErrnoError(44);
      var K = aB.basename(w), X = z.mayCreate(H, K);
      if (X) throw new z.ErrnoError(X);
      if (!H.node_ops.symlink) throw new z.ErrnoError(63);
      return H.node_ops.symlink(H, K, D);
    }, rename(D, w) {
      var H, K, X = aB.dirname(D), O = aB.dirname(w), gA = aB.basename(D), EA = aB.basename(w);
      if (H = z.lookupPath(D, { parent: !0 }).node, K = z.lookupPath(w, { parent: !0 }).node, !H || !K) throw new z.ErrnoError(44);
      if (H.mount !== K.mount) throw new z.ErrnoError(75);
      var wA, RA = z.lookupNode(H, gA), SA = RQ.relative(D, O);
      if (SA.charAt(0) !== ".") throw new z.ErrnoError(28);
      if ((SA = RQ.relative(w, X)).charAt(0) !== ".") throw new z.ErrnoError(55);
      try {
        wA = z.lookupNode(K, EA);
      } catch {
      }
      if (RA !== wA) {
        var YA = z.isDir(RA.mode), pA = z.mayDelete(H, gA, YA);
        if (pA) throw new z.ErrnoError(pA);
        if (pA = wA ? z.mayDelete(K, EA, YA) : z.mayCreate(K, EA)) throw new z.ErrnoError(pA);
        if (!H.node_ops.rename) throw new z.ErrnoError(63);
        if (z.isMountpoint(RA) || wA && z.isMountpoint(wA)) throw new z.ErrnoError(10);
        if (K !== H && (pA = z.nodePermissions(H, "w"))) throw new z.ErrnoError(pA);
        z.hashRemoveNode(RA);
        try {
          H.node_ops.rename(RA, K, EA);
        } catch (xA) {
          throw xA;
        } finally {
          z.hashAddNode(RA);
        }
      }
    }, rmdir(D) {
      var w = z.lookupPath(D, { parent: !0 }).node, H = aB.basename(D), K = z.lookupNode(w, H), X = z.mayDelete(w, H, !0);
      if (X) throw new z.ErrnoError(X);
      if (!w.node_ops.rmdir) throw new z.ErrnoError(63);
      if (z.isMountpoint(K)) throw new z.ErrnoError(10);
      w.node_ops.rmdir(w, H), z.destroyNode(K);
    }, readdir(D) {
      var w = z.lookupPath(D, { follow: !0 }).node;
      if (!w.node_ops.readdir) throw new z.ErrnoError(54);
      return w.node_ops.readdir(w);
    }, unlink(D) {
      var w = z.lookupPath(D, { parent: !0 }).node;
      if (!w) throw new z.ErrnoError(44);
      var H = aB.basename(D), K = z.lookupNode(w, H), X = z.mayDelete(w, H, !1);
      if (X) throw new z.ErrnoError(X);
      if (!w.node_ops.unlink) throw new z.ErrnoError(63);
      if (z.isMountpoint(K)) throw new z.ErrnoError(10);
      w.node_ops.unlink(w, H), z.destroyNode(K);
    }, readlink(D) {
      var w = z.lookupPath(D).node;
      if (!w) throw new z.ErrnoError(44);
      if (!w.node_ops.readlink) throw new z.ErrnoError(28);
      return RQ.resolve(z.getPath(w.parent), w.node_ops.readlink(w));
    }, stat(D, w) {
      var H = z.lookupPath(D, { follow: !w }).node;
      if (!H) throw new z.ErrnoError(44);
      if (!H.node_ops.getattr) throw new z.ErrnoError(63);
      return H.node_ops.getattr(H);
    }, lstat: (D) => z.stat(D, !0), chmod(D, w, H) {
      var K;
      if (!(K = typeof D == "string" ? z.lookupPath(D, { follow: !H }).node : D).node_ops.setattr) throw new z.ErrnoError(63);
      K.node_ops.setattr(K, { mode: 4095 & w | -4096 & K.mode, timestamp: Date.now() });
    }, lchmod(D, w) {
      z.chmod(D, w, !0);
    }, fchmod(D, w) {
      var H = z.getStreamChecked(D);
      z.chmod(H.node, w);
    }, chown(D, w, H, K) {
      var X;
      if (!(X = typeof D == "string" ? z.lookupPath(D, { follow: !K }).node : D).node_ops.setattr) throw new z.ErrnoError(63);
      X.node_ops.setattr(X, { timestamp: Date.now() });
    }, lchown(D, w, H) {
      z.chown(D, w, H, !0);
    }, fchown(D, w, H) {
      var K = z.getStreamChecked(D);
      z.chown(K.node, w, H);
    }, truncate(D, w) {
      if (w < 0) throw new z.ErrnoError(28);
      var H;
      if (!(H = typeof D == "string" ? z.lookupPath(D, { follow: !0 }).node : D).node_ops.setattr) throw new z.ErrnoError(63);
      if (z.isDir(H.mode)) throw new z.ErrnoError(31);
      if (!z.isFile(H.mode)) throw new z.ErrnoError(28);
      var K = z.nodePermissions(H, "w");
      if (K) throw new z.ErrnoError(K);
      H.node_ops.setattr(H, { size: w, timestamp: Date.now() });
    }, ftruncate(D, w) {
      var H = z.getStreamChecked(D);
      if (!(2097155 & H.flags)) throw new z.ErrnoError(28);
      z.truncate(H.node, w);
    }, utime(D, w, H) {
      var K = z.lookupPath(D, { follow: !0 }).node;
      K.node_ops.setattr(K, { timestamp: Math.max(w, H) });
    }, open(D, w, H) {
      if (D === "") throw new z.ErrnoError(44);
      var K;
      if (H = H === void 0 ? 438 : H, H = 64 & (w = typeof w == "string" ? ((EA) => {
        var wA = { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 }[EA];
        if (wA === void 0) throw new Error(`Unknown file open mode: ${EA}`);
        return wA;
      })(w) : w) ? 4095 & H | 32768 : 0, typeof D == "object") K = D;
      else {
        D = aB.normalize(D);
        try {
          K = z.lookupPath(D, { follow: !(131072 & w) }).node;
        } catch {
        }
      }
      var X = !1;
      if (64 & w) if (K) {
        if (128 & w) throw new z.ErrnoError(20);
      } else K = z.mknod(D, H, 0), X = !0;
      if (!K) throw new z.ErrnoError(44);
      if (z.isChrdev(K.mode) && (w &= -513), 65536 & w && !z.isDir(K.mode)) throw new z.ErrnoError(54);
      if (!X) {
        var O = z.mayOpen(K, w);
        if (O) throw new z.ErrnoError(O);
      }
      512 & w && !X && z.truncate(K, 0), w &= -131713;
      var gA = z.createStream({ node: K, path: z.getPath(K), flags: w, seekable: !0, position: 0, stream_ops: K.stream_ops, ungotten: [], error: !1 });
      return gA.stream_ops.open && gA.stream_ops.open(gA), !G.logReadFiles || 1 & w || (z.readFiles || (z.readFiles = {}), D in z.readFiles || (z.readFiles[D] = 1)), gA;
    }, close(D) {
      if (z.isClosed(D)) throw new z.ErrnoError(8);
      D.getdents && (D.getdents = null);
      try {
        D.stream_ops.close && D.stream_ops.close(D);
      } catch (w) {
        throw w;
      } finally {
        z.closeStream(D.fd);
      }
      D.fd = null;
    }, isClosed: (D) => D.fd === null, llseek(D, w, H) {
      if (z.isClosed(D)) throw new z.ErrnoError(8);
      if (!D.seekable || !D.stream_ops.llseek) throw new z.ErrnoError(70);
      if (H != 0 && H != 1 && H != 2) throw new z.ErrnoError(28);
      return D.position = D.stream_ops.llseek(D, w, H), D.ungotten = [], D.position;
    }, read(D, w, H, K, X) {
      if (K < 0 || X < 0) throw new z.ErrnoError(28);
      if (z.isClosed(D)) throw new z.ErrnoError(8);
      if ((2097155 & D.flags) == 1) throw new z.ErrnoError(8);
      if (z.isDir(D.node.mode)) throw new z.ErrnoError(31);
      if (!D.stream_ops.read) throw new z.ErrnoError(28);
      var O = X !== void 0;
      if (O) {
        if (!D.seekable) throw new z.ErrnoError(70);
      } else X = D.position;
      var gA = D.stream_ops.read(D, w, H, K, X);
      return O || (D.position += gA), gA;
    }, write(D, w, H, K, X, O) {
      if (K < 0 || X < 0) throw new z.ErrnoError(28);
      if (z.isClosed(D)) throw new z.ErrnoError(8);
      if (!(2097155 & D.flags)) throw new z.ErrnoError(8);
      if (z.isDir(D.node.mode)) throw new z.ErrnoError(31);
      if (!D.stream_ops.write) throw new z.ErrnoError(28);
      D.seekable && 1024 & D.flags && z.llseek(D, 0, 2);
      var gA = X !== void 0;
      if (gA) {
        if (!D.seekable) throw new z.ErrnoError(70);
      } else X = D.position;
      var EA = D.stream_ops.write(D, w, H, K, X, O);
      return gA || (D.position += EA), EA;
    }, allocate(D, w, H) {
      if (z.isClosed(D)) throw new z.ErrnoError(8);
      if (w < 0 || H <= 0) throw new z.ErrnoError(28);
      if (!(2097155 & D.flags)) throw new z.ErrnoError(8);
      if (!z.isFile(D.node.mode) && !z.isDir(D.node.mode)) throw new z.ErrnoError(43);
      if (!D.stream_ops.allocate) throw new z.ErrnoError(138);
      D.stream_ops.allocate(D, w, H);
    }, mmap(D, w, H, K, X) {
      if (2 & K && !(2 & X) && (2097155 & D.flags) != 2) throw new z.ErrnoError(2);
      if ((2097155 & D.flags) == 1) throw new z.ErrnoError(2);
      if (!D.stream_ops.mmap) throw new z.ErrnoError(43);
      return D.stream_ops.mmap(D, w, H, K, X);
    }, msync: (D, w, H, K, X) => D.stream_ops.msync ? D.stream_ops.msync(D, w, H, K, X) : 0, munmap: (D) => 0, ioctl(D, w, H) {
      if (!D.stream_ops.ioctl) throw new z.ErrnoError(59);
      return D.stream_ops.ioctl(D, w, H);
    }, readFile(D, w = {}) {
      if (w.flags = w.flags || 0, w.encoding = w.encoding || "binary", w.encoding !== "utf8" && w.encoding !== "binary") throw new Error(`Invalid encoding type "${w.encoding}"`);
      var H, K = z.open(D, w.flags), X = z.stat(D).size, O = new Uint8Array(X);
      return z.read(K, O, 0, X, 0), w.encoding === "utf8" ? H = AC(O, 0) : w.encoding === "binary" && (H = O), z.close(K), H;
    }, writeFile(D, w, H = {}) {
      H.flags = H.flags || 577;
      var K = z.open(D, H.flags, H.mode);
      if (typeof w == "string") {
        var X = new Uint8Array(gC(w) + 1), O = Ao(w, X, 0, X.length);
        z.write(K, X, 0, O, void 0, H.canOwn);
      } else {
        if (!ArrayBuffer.isView(w)) throw new Error("Unsupported data type");
        z.write(K, w, 0, w.byteLength, void 0, H.canOwn);
      }
      z.close(K);
    }, cwd: () => z.currentPath, chdir(D) {
      var w = z.lookupPath(D, { follow: !0 });
      if (w.node === null) throw new z.ErrnoError(44);
      if (!z.isDir(w.node.mode)) throw new z.ErrnoError(54);
      var H = z.nodePermissions(w.node, "x");
      if (H) throw new z.ErrnoError(H);
      z.currentPath = w.path;
    }, createDefaultDirectories() {
      z.mkdir("/tmp"), z.mkdir("/home"), z.mkdir("/home/web_user");
    }, createDefaultDevices() {
      z.mkdir("/dev"), z.registerDevice(z.makedev(1, 3), { read: () => 0, write: (K, X, O, gA, EA) => gA }), z.mkdev("/dev/null", z.makedev(1, 3)), hE.register(z.makedev(5, 0), hE.default_tty_ops), hE.register(z.makedev(6, 0), hE.default_tty1_ops), z.mkdev("/dev/tty", z.makedev(5, 0)), z.mkdev("/dev/tty1", z.makedev(6, 0));
      var D = new Uint8Array(1024), w = 0, H = () => (w === 0 && (w = Zs(D).byteLength), D[--w]);
      z.createDevice("/dev", "random", H), z.createDevice("/dev", "urandom", H), z.mkdir("/dev/shm"), z.mkdir("/dev/shm/tmp");
    }, createSpecialDirectories() {
      z.mkdir("/proc");
      var D = z.mkdir("/proc/self");
      z.mkdir("/proc/self/fd"), z.mount({ mount() {
        var w = z.createNode(D, "fd", 16895, 73);
        return w.node_ops = { lookup(H, K) {
          var X = +K, O = z.getStreamChecked(X), gA = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: () => O.path } };
          return gA.parent = gA, gA;
        } }, w;
      } }, {}, "/proc/self/fd");
    }, createStandardStreams() {
      G.stdin ? z.createDevice("/dev", "stdin", G.stdin) : z.symlink("/dev/tty", "/dev/stdin"), G.stdout ? z.createDevice("/dev", "stdout", null, G.stdout) : z.symlink("/dev/tty", "/dev/stdout"), G.stderr ? z.createDevice("/dev", "stderr", null, G.stderr) : z.symlink("/dev/tty1", "/dev/stderr"), z.open("/dev/stdin", 0), z.open("/dev/stdout", 1), z.open("/dev/stderr", 1);
    }, ensureErrnoError() {
      z.ErrnoError || (z.ErrnoError = function(D, w) {
        this.name = "ErrnoError", this.node = w, this.setErrno = function(H) {
          this.errno = H;
        }, this.setErrno(D), this.message = "FS error";
      }, z.ErrnoError.prototype = new Error(), z.ErrnoError.prototype.constructor = z.ErrnoError, [44].forEach((D) => {
        z.genericErrors[D] = new z.ErrnoError(D), z.genericErrors[D].stack = "<generic error, no stack>";
      }));
    }, staticInit() {
      z.ensureErrnoError(), z.nameTable = new Array(4096), z.mount(ug, {}, "/"), z.createDefaultDirectories(), z.createDefaultDevices(), z.createSpecialDirectories(), z.filesystems = { MEMFS: ug };
    }, init(D, w, H) {
      z.init.initialized = !0, z.ensureErrnoError(), G.stdin = D || G.stdin, G.stdout = w || G.stdout, G.stderr = H || G.stderr, z.createStandardStreams();
    }, quit() {
      z.init.initialized = !1;
      for (var D = 0; D < z.streams.length; D++) {
        var w = z.streams[D];
        w && z.close(w);
      }
    }, findObject(D, w) {
      var H = z.analyzePath(D, w);
      return H.exists ? H.object : null;
    }, analyzePath(D, w) {
      try {
        D = (K = z.lookupPath(D, { follow: !w })).path;
      } catch {
      }
      var H = { isRoot: !1, exists: !1, error: 0, name: null, path: null, object: null, parentExists: !1, parentPath: null, parentObject: null };
      try {
        var K = z.lookupPath(D, { parent: !0 });
        H.parentExists = !0, H.parentPath = K.path, H.parentObject = K.node, H.name = aB.basename(D), K = z.lookupPath(D, { follow: !w }), H.exists = !0, H.path = K.path, H.object = K.node, H.name = K.node.name, H.isRoot = K.path === "/";
      } catch (X) {
        H.error = X.errno;
      }
      return H;
    }, createPath(D, w, H, K) {
      D = typeof D == "string" ? D : z.getPath(D);
      for (var X = w.split("/").reverse(); X.length; ) {
        var O = X.pop();
        if (O) {
          var gA = aB.join2(D, O);
          try {
            z.mkdir(gA);
          } catch {
          }
          D = gA;
        }
      }
      return gA;
    }, createFile(D, w, H, K, X) {
      var O = aB.join2(typeof D == "string" ? D : z.getPath(D), w), gA = Bo(K, X);
      return z.create(O, gA);
    }, createDataFile(D, w, H, K, X, O) {
      var gA = w;
      D && (D = typeof D == "string" ? D : z.getPath(D), gA = w ? aB.join2(D, w) : D);
      var EA = Bo(K, X), wA = z.create(gA, EA);
      if (H) {
        if (typeof H == "string") {
          for (var RA = new Array(H.length), SA = 0, YA = H.length; SA < YA; ++SA) RA[SA] = H.charCodeAt(SA);
          H = RA;
        }
        z.chmod(wA, 146 | EA);
        var pA = z.open(wA, 577);
        z.write(pA, H, 0, H.length, 0, O), z.close(pA), z.chmod(wA, EA);
      }
    }, createDevice(D, w, H, K) {
      var X = aB.join2(typeof D == "string" ? D : z.getPath(D), w), O = Bo(!!H, !!K);
      z.createDevice.major || (z.createDevice.major = 64);
      var gA = z.makedev(z.createDevice.major++, 0);
      return z.registerDevice(gA, { open(EA) {
        EA.seekable = !1;
      }, close(EA) {
        K && K.buffer && K.buffer.length && K(10);
      }, read(EA, wA, RA, SA, YA) {
        for (var pA = 0, xA = 0; xA < SA; xA++) {
          var WA;
          try {
            WA = H();
          } catch {
            throw new z.ErrnoError(29);
          }
          if (WA === void 0 && pA === 0) throw new z.ErrnoError(6);
          if (WA == null) break;
          pA++, wA[RA + xA] = WA;
        }
        return pA && (EA.node.timestamp = Date.now()), pA;
      }, write(EA, wA, RA, SA, YA) {
        for (var pA = 0; pA < SA; pA++) try {
          K(wA[RA + pA]);
        } catch {
          throw new z.ErrnoError(29);
        }
        return SA && (EA.node.timestamp = Date.now()), pA;
      } }), z.mkdev(X, O, gA);
    }, forceLoadFile(D) {
      if (D.isDevice || D.isFolder || D.link || D.contents) return !0;
      if (typeof XMLHttpRequest < "u") throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
      if (!Z) throw new Error("Cannot load without read() or XMLHttpRequest.");
      try {
        D.contents = go(Z(D.url), !0), D.usedBytes = D.contents.length;
      } catch {
        throw new z.ErrnoError(29);
      }
    }, createLazyFile(D, w, H, K, X) {
      var O;
      if (typeof XMLHttpRequest < "u") throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
      O = { isDevice: !1, url: H };
      var gA = z.createFile(D, w, O, K, X);
      O.contents ? gA.contents = O.contents : O.url && (gA.contents = null, gA.url = O.url), Object.defineProperties(gA, { usedBytes: { get: function() {
        return this.contents.length;
      } } });
      var EA = {};
      function wA(RA, SA, YA, pA, xA) {
        var WA = RA.node.contents;
        if (xA >= WA.length) return 0;
        var Fg = Math.min(WA.length - xA, pA);
        if (WA.slice) for (var fg = 0; fg < Fg; fg++) SA[YA + fg] = WA[xA + fg];
        else for (fg = 0; fg < Fg; fg++) SA[YA + fg] = WA.get(xA + fg);
        return Fg;
      }
      return Object.keys(gA.stream_ops).forEach((RA) => {
        var SA = gA.stream_ops[RA];
        EA[RA] = function() {
          return z.forceLoadFile(gA), SA.apply(null, arguments);
        };
      }), EA.read = (RA, SA, YA, pA, xA) => (z.forceLoadFile(gA), wA(RA, SA, YA, pA, xA)), EA.mmap = (RA, SA, YA, pA, xA) => {
        z.forceLoadFile(gA);
        var WA = Xs(SA);
        if (!WA) throw new z.ErrnoError(48);
        return wA(RA, ZA, WA, SA, YA), { ptr: WA, allocated: !0 };
      }, gA.stream_ops = EA, gA;
    } }, BC = (D, w) => D ? AC(Eg, D, w) : "", qg = { DEFAULT_POLLMASK: 5, calculateAt(D, w, H) {
      if (aB.isAbs(w)) return w;
      var K;
      if (K = D === -100 ? z.cwd() : qg.getStreamFromFD(D).path, w.length == 0) {
        if (!H) throw new z.ErrnoError(44);
        return K;
      }
      return aB.join2(K, w);
    }, doStat(D, w, H) {
      try {
        var K = D(w);
      } catch (EA) {
        if (EA && EA.node && aB.normalize(w) !== aB.normalize(z.getPath(EA.node))) return -54;
        throw EA;
      }
      Cg[H >> 2] = K.dev, Cg[H + 4 >> 2] = K.mode, dg[H + 8 >> 2] = K.nlink, Cg[H + 12 >> 2] = K.uid, Cg[H + 16 >> 2] = K.gid, Cg[H + 20 >> 2] = K.rdev, XB[H + 24 >> 3] = BigInt(K.size), Cg[H + 32 >> 2] = 4096, Cg[H + 36 >> 2] = K.blocks;
      var X = K.atime.getTime(), O = K.mtime.getTime(), gA = K.ctime.getTime();
      return XB[H + 40 >> 3] = BigInt(Math.floor(X / 1e3)), dg[H + 48 >> 2] = X % 1e3 * 1e3, XB[H + 56 >> 3] = BigInt(Math.floor(O / 1e3)), dg[H + 64 >> 2] = O % 1e3 * 1e3, XB[H + 72 >> 3] = BigInt(Math.floor(gA / 1e3)), dg[H + 80 >> 2] = gA % 1e3 * 1e3, XB[H + 88 >> 3] = BigInt(K.ino), 0;
    }, doMsync(D, w, H, K, X) {
      if (!z.isFile(w.node.mode)) throw new z.ErrnoError(43);
      if (2 & K) return 0;
      var O = Eg.slice(D, D + H);
      z.msync(w, O, X, H, K);
    }, varargs: void 0, get() {
      var D = Cg[+qg.varargs >> 2];
      return qg.varargs += 4, D;
    }, getp: () => qg.get(), getStr: (D) => BC(D), getStreamFromFD: (D) => z.getStreamChecked(D) }, Ce = (D, w, H) => Ao(D, Eg, w, H), it = {}, Io = (D) => {
      for (; D.length; ) {
        var w = D.pop();
        D.pop()(w);
      }
    };
    function Qo(D) {
      return this.fromWireType(Cg[D >> 2]);
    }
    var zs, Vs, IC, QC = {}, lE = {}, ot = {}, at = (D) => {
      throw new zs(D);
    }, KQ = (D, w, H) => {
      function K(EA) {
        var wA = H(EA);
        wA.length !== D.length && at("Mismatched type converter count");
        for (var RA = 0; RA < D.length; ++RA) qI(D[RA], wA[RA]);
      }
      D.forEach(function(EA) {
        ot[EA] = w;
      });
      var X = new Array(w.length), O = [], gA = 0;
      w.forEach((EA, wA) => {
        lE.hasOwnProperty(EA) ? X[wA] = lE[EA] : (O.push(EA), QC.hasOwnProperty(EA) || (QC[EA] = []), QC[EA].push(() => {
          X[wA] = lE[EA], ++gA === O.length && K(X);
        }));
      }), O.length === 0 && K(X);
    }, ee = (D) => {
      if (D === null) return "null";
      var w = typeof D;
      return w === "object" || w === "array" || w === "function" ? D.toString() : "" + D;
    }, vB = (D) => {
      for (var w = "", H = D; Eg[H]; ) w += Vs[Eg[H++]];
      return w;
    }, QB = (D) => {
      throw new IC(D);
    };
    function qI(D, w, H = {}) {
      if (!("argPackAdvance" in w)) throw new TypeError("registerType registeredInstance requires argPackAdvance");
      return function(K, X, O = {}) {
        var gA = X.name;
        if (K || QB(`type "${gA}" must have a positive integer typeid pointer`), lE.hasOwnProperty(K)) {
          if (O.ignoreDuplicateRegistrations) return;
          QB(`Cannot register type '${gA}' twice`);
        }
        if (lE[K] = X, delete ot[K], QC.hasOwnProperty(K)) {
          var EA = QC[K];
          delete QC[K], EA.forEach((wA) => wA());
        }
      }(D, w, H);
    }
    var te, qs = (D, w, H) => {
      switch (w) {
        case 1:
          return H ? (K) => ZA[K >> 0] : (K) => Eg[K >> 0];
        case 2:
          return H ? (K) => Lg[K >> 1] : (K) => SB[K >> 1];
        case 4:
          return H ? (K) => Cg[K >> 2] : (K) => dg[K >> 2];
        case 8:
          return H ? (K) => XB[K >> 3] : (K) => ps[K >> 3];
        default:
          throw new TypeError(`invalid integer width (${w}): ${D}`);
      }
    }, Eo = (D) => {
      QB(D.$$.ptrType.registeredClass.name + " instance already deleted");
    }, Co = !1, Ps = (D) => {
    }, Ws = (D) => {
      D.count.value -= 1, D.count.value === 0 && ((w) => {
        w.smartPtr ? w.smartPtrType.rawDestructor(w.smartPtr) : w.ptrType.registeredClass.rawDestructor(w.ptr);
      })(D);
    }, Os = (D, w, H) => {
      if (w === H) return D;
      if (H.baseClass === void 0) return null;
      var K = Os(D, w, H.baseClass);
      return K === null ? null : H.downcast(K);
    }, js = {}, ie = [], eo = () => {
      for (; ie.length; ) {
        var D = ie.pop();
        D.$$.deleteScheduled = !1, D.delete();
      }
    }, oe = {}, rt = (D, w) => (w.ptrType && w.ptr || at("makeClassHandle requires ptr and ptrType"), !!w.smartPtrType != !!w.smartPtr && at("Both smartPtrType and smartPtr must be specified"), w.count = { value: 1 }, ae(Object.create(D, { $$: { value: w } }))), ae = (D) => typeof FinalizationRegistry > "u" ? (ae = (w) => w, D) : (Co = new FinalizationRegistry((w) => {
      Ws(w.$$);
    }), ae = (w) => {
      var H = w.$$;
      if (H.smartPtr) {
        var K = { $$: H };
        Co.register(w, K, w);
      }
      return w;
    }, Ps = (w) => Co.unregister(w), ae(D));
    function st() {
    }
    var EC = (D, w) => Object.defineProperty(w, "name", { value: D }), _s = (D, w, H) => {
      if (D[w].overloadTable === void 0) {
        var K = D[w];
        D[w] = function() {
          return D[w].overloadTable.hasOwnProperty(arguments.length) || QB(`Function '${H}' called with an invalid number of arguments (${arguments.length}) - expects one of (${D[w].overloadTable})!`), D[w].overloadTable[arguments.length].apply(this, arguments);
        }, D[w].overloadTable = [], D[w].overloadTable[K.argCount] = K;
      }
    }, to = (D, w, H) => {
      G.hasOwnProperty(D) ? ((H === void 0 || G[D].overloadTable !== void 0 && G[D].overloadTable[H] !== void 0) && QB(`Cannot register public name '${D}' twice`), _s(G, D, D), G.hasOwnProperty(H) && QB(`Cannot register multiple overloads of a function with the same number of arguments (${H})!`), G[D].overloadTable[H] = w) : (G[D] = w, H !== void 0 && (G[D].numArguments = H));
    };
    function Wy(D, w, H, K, X, O, gA, EA) {
      this.name = D, this.constructor = w, this.instancePrototype = H, this.rawDestructor = K, this.baseClass = X, this.getActualType = O, this.upcast = gA, this.downcast = EA, this.pureVirtualFunctions = [];
    }
    var io = (D, w, H) => {
      for (; w !== H; ) w.upcast || QB(`Expected null or instance of ${H.name}, got an instance of ${w.name}`), D = w.upcast(D), w = w.baseClass;
      return D;
    };
    function Oy(D, w) {
      if (w === null) return this.isReference && QB(`null is not a valid ${this.name}`), 0;
      w.$$ || QB(`Cannot pass "${ee(w)}" as a ${this.name}`), w.$$.ptr || QB(`Cannot pass deleted object as a pointer of type ${this.name}`);
      var H = w.$$.ptrType.registeredClass;
      return io(w.$$.ptr, H, this.registeredClass);
    }
    function jy(D, w) {
      var H;
      if (w === null) return this.isReference && QB(`null is not a valid ${this.name}`), this.isSmartPointer ? (H = this.rawConstructor(), D !== null && D.push(this.rawDestructor, H), H) : 0;
      w.$$ || QB(`Cannot pass "${ee(w)}" as a ${this.name}`), w.$$.ptr || QB(`Cannot pass deleted object as a pointer of type ${this.name}`), !this.isConst && w.$$.ptrType.isConst && QB(`Cannot convert argument of type ${w.$$.smartPtrType ? w.$$.smartPtrType.name : w.$$.ptrType.name} to parameter type ${this.name}`);
      var K = w.$$.ptrType.registeredClass;
      if (H = io(w.$$.ptr, K, this.registeredClass), this.isSmartPointer) switch (w.$$.smartPtr === void 0 && QB("Passing raw pointer to smart pointer is illegal"), this.sharingPolicy) {
        case 0:
          w.$$.smartPtrType === this ? H = w.$$.smartPtr : QB(`Cannot convert argument of type ${w.$$.smartPtrType ? w.$$.smartPtrType.name : w.$$.ptrType.name} to parameter type ${this.name}`);
          break;
        case 1:
          H = w.$$.smartPtr;
          break;
        case 2:
          if (w.$$.smartPtrType === this) H = w.$$.smartPtr;
          else {
            var X = w.clone();
            H = this.rawShare(H, UB.toHandle(() => X.delete())), D !== null && D.push(this.rawDestructor, H);
          }
          break;
        default:
          QB("Unsupporting sharing policy");
      }
      return H;
    }
    function _y(D, w) {
      if (w === null) return this.isReference && QB(`null is not a valid ${this.name}`), 0;
      w.$$ || QB(`Cannot pass "${ee(w)}" as a ${this.name}`), w.$$.ptr || QB(`Cannot pass deleted object as a pointer of type ${this.name}`), w.$$.ptrType.isConst && QB(`Cannot convert argument of type ${w.$$.ptrType.name} to parameter type ${this.name}`);
      var H = w.$$.ptrType.registeredClass;
      return io(w.$$.ptr, H, this.registeredClass);
    }
    function $s(D) {
      return this.fromWireType(dg[D >> 2]);
    }
    function re(D, w, H, K, X, O, gA, EA, wA, RA, SA) {
      this.name = D, this.registeredClass = w, this.isReference = H, this.isConst = K, this.isSmartPointer = X, this.pointeeType = O, this.sharingPolicy = gA, this.rawGetPointee = EA, this.rawConstructor = wA, this.rawShare = RA, this.rawDestructor = SA, X || w.baseClass !== void 0 ? this.toWireType = jy : K ? (this.toWireType = Oy, this.destructorFunction = null) : (this.toWireType = _y, this.destructorFunction = null);
    }
    var CC, An, gn = (D, w, H) => {
      G.hasOwnProperty(D) || at("Replacing nonexistant public symbol"), G[D].overloadTable !== void 0 && H !== void 0 ? G[D].overloadTable[H] = w : (G[D] = w, G[D].argCount = H);
    }, pg = (D) => CC.get(D), oI = (D, w) => {
      D = vB(D);
      var H = pg(w);
      return typeof H != "function" && QB(`unknown function pointer with signature ${D}: ${w}`), H;
    }, Bn = (D) => {
      var w = dn(D), H = vB(w);
      return fQ(w), H;
    }, nt = (D, w) => {
      var H = [], K = {};
      throw w.forEach(function X(O) {
        K[O] || lE[O] || (ot[O] ? ot[O].forEach(X) : (H.push(O), K[O] = !0));
      }), new An(`${D}: ` + H.map(Bn).join([", "]));
    }, oo = (D, w) => {
      for (var H = [], K = 0; K < D; K++) H.push(dg[w + 4 * K >> 2]);
      return H;
    };
    function In(D, w) {
      if (!(D instanceof Function)) throw new TypeError(`new_ called with constructor type ${typeof D} which is not a function`);
      var H = EC(D.name || "unknownFunctionName", function() {
      });
      H.prototype = D.prototype;
      var K = new H(), X = D.apply(K, w);
      return X instanceof Object ? X : K;
    }
    function ao(D, w, H, K, X, O) {
      var gA = w.length;
      gA < 2 && QB("argTypes array size mismatch! Must at least get return value and 'this' types!");
      for (var EA = w[1] !== null && H !== null, wA = !1, RA = 1; RA < w.length; ++RA) if (w[RA] !== null && w[RA].destructorFunction === void 0) {
        wA = !0;
        break;
      }
      var SA = w[0].name !== "void", YA = "", pA = "";
      for (RA = 0; RA < gA - 2; ++RA) YA += (RA !== 0 ? ", " : "") + "arg" + RA, pA += (RA !== 0 ? ", " : "") + "arg" + RA + "Wired";
      var xA = `
        return function (${YA}) {
        if (arguments.length !== ${gA - 2}) {
          throwBindingError('function ${D} called with ' + arguments.length + ' arguments, expected ${gA - 2}');
        }`;
      wA && (xA += `var destructors = [];
`);
      var WA = wA ? "destructors" : "null", Fg = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"], fg = [QB, K, X, Io, w[0], w[1]];
      for (EA && (xA += "var thisWired = classParam.toWireType(" + WA + `, this);
`), RA = 0; RA < gA - 2; ++RA) xA += "var arg" + RA + "Wired = argType" + RA + ".toWireType(" + WA + ", arg" + RA + "); // " + w[RA + 2].name + `
`, Fg.push("argType" + RA), fg.push(w[RA + 2]);
      if (EA && (pA = "thisWired" + (pA.length > 0 ? ", " : "") + pA), xA += (SA || O ? "var rv = " : "") + "invoker(fn" + (pA.length > 0 ? ", " : "") + pA + `);
`, wA) xA += `runDestructors(destructors);
`;
      else for (RA = EA ? 1 : 2; RA < w.length; ++RA) {
        var vg = RA === 1 ? "thisWired" : "arg" + (RA - 2) + "Wired";
        w[RA].destructorFunction !== null && (xA += vg + "_dtor(" + vg + "); // " + w[RA].name + `
`, Fg.push(vg + "_dtor"), fg.push(w[RA].destructorFunction));
      }
      SA && (xA += `var ret = retType.fromWireType(rv);
return ret;
`), xA += `}
`, Fg.push(xA);
      var kB = In(Function, Fg).apply(null, fg);
      return EC(D, kB);
    }
    var Qn = (D) => {
      const w = (D = D.trim()).indexOf("(");
      return w !== -1 ? D.substr(0, w) : D;
    };
    function En() {
      this.allocated = [void 0], this.freelist = [];
    }
    var Cn, JI = new En(), ro = (D) => {
      D >= JI.reserved && --JI.get(D).refcount == 0 && JI.free(D);
    }, UB = { toValue: (D) => (D || QB("Cannot use deleted val. handle = " + D), JI.get(D).value), toHandle: (D) => {
      switch (D) {
        case void 0:
          return 1;
        case null:
          return 2;
        case !0:
          return 3;
        case !1:
          return 4;
        default:
          return JI.allocate({ refcount: 1, value: D });
      }
    } }, $y = (D, w, H) => {
      switch (w) {
        case 1:
          return H ? function(K) {
            return this.fromWireType(ZA[K >> 0]);
          } : function(K) {
            return this.fromWireType(Eg[K >> 0]);
          };
        case 2:
          return H ? function(K) {
            return this.fromWireType(Lg[K >> 1]);
          } : function(K) {
            return this.fromWireType(SB[K >> 1]);
          };
        case 4:
          return H ? function(K) {
            return this.fromWireType(Cg[K >> 2]);
          } : function(K) {
            return this.fromWireType(dg[K >> 2]);
          };
        default:
          throw new TypeError(`invalid integer width (${w}): ${D}`);
      }
    }, ct = (D, w) => {
      var H = lE[D];
      return H === void 0 && QB(w + " has unknown type " + Bn(D)), H;
    }, Aw = (D, w) => {
      switch (w) {
        case 4:
          return function(H) {
            return this.fromWireType(wI[H >> 2]);
          };
        case 8:
          return function(H) {
            return this.fromWireType(Et[H >> 3]);
          };
        default:
          throw new TypeError(`invalid float width (${w}): ${D}`);
      }
    }, en = typeof TextDecoder < "u" ? new TextDecoder("utf-16le") : void 0, gw = (D, w) => {
      for (var H = D, K = H >> 1, X = K + w / 2; !(K >= X) && SB[K]; ) ++K;
      if ((H = K << 1) - D > 32 && en) return en.decode(Eg.subarray(D, H));
      for (var O = "", gA = 0; !(gA >= w / 2); ++gA) {
        var EA = Lg[D + 2 * gA >> 1];
        if (EA == 0) break;
        O += String.fromCharCode(EA);
      }
      return O;
    }, Bw = (D, w, H) => {
      if (H === void 0 && (H = 2147483647), H < 2) return 0;
      for (var K = w, X = (H -= 2) < 2 * D.length ? H / 2 : D.length, O = 0; O < X; ++O) {
        var gA = D.charCodeAt(O);
        Lg[w >> 1] = gA, w += 2;
      }
      return Lg[w >> 1] = 0, w - K;
    }, Iw = (D) => 2 * D.length, Qw = (D, w) => {
      for (var H = 0, K = ""; !(H >= w / 4); ) {
        var X = Cg[D + 4 * H >> 2];
        if (X == 0) break;
        if (++H, X >= 65536) {
          var O = X - 65536;
          K += String.fromCharCode(55296 | O >> 10, 56320 | 1023 & O);
        } else K += String.fromCharCode(X);
      }
      return K;
    }, Ew = (D, w, H) => {
      if (H === void 0 && (H = 2147483647), H < 4) return 0;
      for (var K = w, X = K + H - 4, O = 0; O < D.length; ++O) {
        var gA = D.charCodeAt(O);
        if (gA >= 55296 && gA <= 57343 && (gA = 65536 + ((1023 & gA) << 10) | 1023 & D.charCodeAt(++O)), Cg[w >> 2] = gA, (w += 4) + 4 > X) break;
      }
      return Cg[w >> 2] = 0, w - K;
    }, Cw = (D) => {
      for (var w = 0, H = 0; H < D.length; ++H) {
        var K = D.charCodeAt(H);
        K >= 55296 && K <= 57343 && ++H, w += 4;
      }
      return w;
    }, tn = (D, w, H) => {
      var K = [], X = D.toWireType(K, H);
      return K.length && (dg[w >> 2] = UB.toHandle(K)), X;
    }, Dt = [], ew = {}, so = (D) => {
      var w = ew[D];
      return w === void 0 ? vB(D) : w;
    }, on = () => typeof globalThis == "object" ? globalThis : Function("return this")(), an = (D) => D < -9007199254740992 || D > 9007199254740992 ? NaN : Number(D);
    Cn = () => performance.now();
    var yE, rn, se, no = {}, ne = () => {
      if (!ne.strings) {
        var D = { USER: "web_user", LOGNAME: "web_user", PATH: "/", PWD: "/", HOME: "/home/web_user", LANG: (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", _: oA || "./this.program" };
        for (var w in no) no[w] === void 0 ? delete D[w] : D[w] = no[w];
        var H = [];
        for (var w in D) H.push(`${w}=${D[w]}`);
        ne.strings = H;
      }
      return ne.strings;
    }, ht = (D) => D % 4 == 0 && (D % 100 != 0 || D % 400 == 0), sn = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], nn = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], cn = (D, w) => {
      ZA.set(D, w);
    }, Dn = (D) => G["_" + D], hn = (D, w, H, K, X) => {
      var O = { string: (pA) => {
        var xA = 0;
        return pA != null && pA !== 0 && (xA = ((WA) => {
          var Fg = gC(WA) + 1, fg = ho(Fg);
          return Ce(WA, fg, Fg), fg;
        })(pA)), xA;
      }, array: (pA) => {
        var xA = ho(pA.length);
        return cn(pA, xA), xA;
      } }, gA = Dn(D), EA = [], wA = 0;
      if (K) for (var RA = 0; RA < K.length; RA++) {
        var SA = O[H[RA]];
        SA ? (wA === 0 && (wA = mg()), EA[RA] = SA(K[RA])) : EA[RA] = K[RA];
      }
      var YA = gA.apply(null, EA);
      return function(pA) {
        return wA !== 0 && xg(wA), function(xA) {
          return w === "string" ? BC(xA) : w === "boolean" ? !!xA : xA;
        }(pA);
      }(YA);
    }, ln = (D, w) => {
      D < 128 ? w.push(D) : w.push(D % 128 | 128, D >> 7);
    }, co = [], Do = (D, w) => CC.set(D, w), yn = function(D, w, H, K) {
      D || (D = this), this.parent = D, this.mount = D.mount, this.mounted = null, this.id = z.nextInode++, this.name = w, this.mode = H, this.node_ops = {}, this.stream_ops = {}, this.rdev = K;
    };
    Object.defineProperties(yn.prototype, { read: { get: function() {
      return (365 & this.mode) == 365;
    }, set: function(D) {
      D ? this.mode |= 365 : this.mode &= -366;
    } }, write: { get: function() {
      return (146 & this.mode) == 146;
    }, set: function(D) {
      D ? this.mode |= 146 : this.mode &= -147;
    } }, isFolder: { get: function() {
      return z.isDir(this.mode);
    } }, isDevice: { get: function() {
      return z.isChrdev(this.mode);
    } } }), z.FSNode = yn, z.createPreloadedFile = (D, w, H, K, X, O, gA, EA, wA, RA) => {
      var SA = w ? RQ.resolve(aB.join2(D, w)) : D;
      function YA(pA) {
        function xA(WA) {
          RA && RA(), EA || ((Fg, fg, vg, kB, HB, eC) => {
            z.createDataFile(Fg, fg, vg, kB, HB, eC);
          })(D, w, WA, K, X, wA), O && O(), Ct();
        }
        ((WA, Fg, fg, vg) => {
          typeof Browser < "u" && Browser.init();
          var kB = !1;
          return Py.forEach((HB) => {
            kB || HB.canHandle(Fg) && (HB.handle(WA, Fg, fg, vg), kB = !0);
          }), kB;
        })(pA, SA, xA, () => {
          gA && gA(), Ct();
        }) || xA(pA);
      }
      Wi(), typeof H == "string" ? ((pA, xA, WA, Fg) => {
        var fg = `al ${pA}`;
        W(pA, (vg) => {
          vg || FQ(`Loading data file "${pA}" failed (no arrayBuffer).`), xA(new Uint8Array(vg)), fg && Ct();
        }, (vg) => {
          if (!WA) throw `Loading data file "${pA}" failed.`;
          WA();
        }), fg && Wi();
      })(H, (pA) => YA(pA), gA) : YA(H);
    }, z.staticInit(), zs = G.InternalError = class extends Error {
      constructor(D) {
        super(D), this.name = "InternalError";
      }
    }, (() => {
      for (var D = new Array(256), w = 0; w < 256; ++w) D[w] = String.fromCharCode(w);
      Vs = D;
    })(), IC = G.BindingError = class extends Error {
      constructor(D) {
        super(D), this.name = "BindingError";
      }
    }, Object.assign(st.prototype, { isAliasOf(D) {
      if (!(this instanceof st) || !(D instanceof st)) return !1;
      var w = this.$$.ptrType.registeredClass, H = this.$$.ptr;
      D.$$ = D.$$;
      for (var K = D.$$.ptrType.registeredClass, X = D.$$.ptr; w.baseClass; ) H = w.upcast(H), w = w.baseClass;
      for (; K.baseClass; ) X = K.upcast(X), K = K.baseClass;
      return w === K && H === X;
    }, clone() {
      if (this.$$.ptr || Eo(this), this.$$.preservePointerOnDelete) return this.$$.count.value += 1, this;
      var D, w = ae(Object.create(Object.getPrototypeOf(this), { $$: { value: (D = this.$$, { count: D.count, deleteScheduled: D.deleteScheduled, preservePointerOnDelete: D.preservePointerOnDelete, ptr: D.ptr, ptrType: D.ptrType, smartPtr: D.smartPtr, smartPtrType: D.smartPtrType }) } }));
      return w.$$.count.value += 1, w.$$.deleteScheduled = !1, w;
    }, delete() {
      this.$$.ptr || Eo(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && QB("Object already scheduled for deletion"), Ps(this), Ws(this.$$), this.$$.preservePointerOnDelete || (this.$$.smartPtr = void 0, this.$$.ptr = void 0);
    }, isDeleted() {
      return !this.$$.ptr;
    }, deleteLater() {
      return this.$$.ptr || Eo(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && QB("Object already scheduled for deletion"), ie.push(this), ie.length === 1 && te && te(eo), this.$$.deleteScheduled = !0, this;
    } }), G.getInheritedInstanceCount = () => Object.keys(oe).length, G.getLiveInheritedInstances = () => {
      var D = [];
      for (var w in oe) oe.hasOwnProperty(w) && D.push(oe[w]);
      return D;
    }, G.flushPendingDeletes = eo, G.setDelayFunction = (D) => {
      te = D, ie.length && te && te(eo);
    }, Object.assign(re.prototype, { getPointee(D) {
      return this.rawGetPointee && (D = this.rawGetPointee(D)), D;
    }, destructor(D) {
      this.rawDestructor && this.rawDestructor(D);
    }, argPackAdvance: 8, readValueFromPointer: $s, deleteObject(D) {
      D !== null && D.delete();
    }, fromWireType: function(D) {
      var w = this.getPointee(D);
      if (!w) return this.destructor(D), null;
      var H = ((RA, SA) => (SA = ((YA, pA) => {
        for (pA === void 0 && QB("ptr should not be undefined"); YA.baseClass; ) pA = YA.upcast(pA), YA = YA.baseClass;
        return pA;
      })(RA, SA), oe[SA]))(this.registeredClass, w);
      if (H !== void 0) {
        if (H.$$.count.value === 0) return H.$$.ptr = w, H.$$.smartPtr = D, H.clone();
        var K = H.clone();
        return this.destructor(D), K;
      }
      function X() {
        return this.isSmartPointer ? rt(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: w, smartPtrType: this, smartPtr: D }) : rt(this.registeredClass.instancePrototype, { ptrType: this, ptr: D });
      }
      var O, gA = this.registeredClass.getActualType(w), EA = js[gA];
      if (!EA) return X.call(this);
      O = this.isConst ? EA.constPointerType : EA.pointerType;
      var wA = Os(w, this.registeredClass, O.registeredClass);
      return wA === null ? X.call(this) : this.isSmartPointer ? rt(O.registeredClass.instancePrototype, { ptrType: O, ptr: wA, smartPtrType: this, smartPtr: D }) : rt(O.registeredClass.instancePrototype, { ptrType: O, ptr: wA });
    } }), An = G.UnboundTypeError = (rn = Error, (se = EC("UnboundTypeError", function(D) {
      this.name = "UnboundTypeError", this.message = D;
      var w = new Error(D).stack;
      w !== void 0 && (this.stack = this.toString() + `
` + w.replace(/^Error(:[^\n]*)?\n/, ""));
    })).prototype = Object.create(rn.prototype), se.prototype.constructor = se, se.prototype.toString = function() {
      return this.message === void 0 ? this.name : `${this.name}: ${this.message}`;
    }, se), Object.assign(En.prototype, { get(D) {
      return this.allocated[D];
    }, has(D) {
      return this.allocated[D] !== void 0;
    }, allocate(D) {
      var w = this.freelist.pop() || this.allocated.length;
      return this.allocated[w] = D, w;
    }, free(D) {
      this.allocated[D] = void 0, this.freelist.push(D);
    } }), JI.allocated.push({ value: void 0 }, { value: null }, { value: !0 }, { value: !1 }), JI.reserved = JI.allocated.length, G.count_emval_handles = () => {
      for (var D = 0, w = JI.reserved; w < JI.allocated.length; ++w) JI.allocated[w] !== void 0 && ++D;
      return D;
    };
    var lt, tw = { y: (D) => {
      var w = new _i(D);
      return w.get_caught() || (w.set_caught(!0), tt--), w.set_rethrown(!1), et.push(w), fn(w.excPtr), w.get_exception_ptr();
    }, G: () => {
      Kg(0, 0);
      var D = et.pop();
      Rn(D.excPtr), DE = 0;
    }, a: () => bs([]), j: (D) => bs([D]), da: () => {
      var D = et.pop();
      D || FQ("no exception to throw");
      var w = D.excPtr;
      throw D.get_rethrown() || (et.push(D), D.set_rethrown(!0), D.set_caught(!1), tt++), DE = w;
    }, k: (D, w, H) => {
      throw new _i(D).init(w, H), tt++, DE = D;
    }, sa: () => tt, b: (D) => {
      throw DE || (DE = D), DE;
    }, X: function(D, w, H) {
      qg.varargs = H;
      try {
        var K = qg.getStreamFromFD(D);
        switch (w) {
          case 0:
            if ((X = qg.get()) < 0) return -28;
            for (; z.streams[X]; ) X++;
            return z.createStream(K, X).fd;
          case 1:
          case 2:
          case 6:
          case 7:
            return 0;
          case 3:
            return K.flags;
          case 4:
            var X = qg.get();
            return K.flags |= X, 0;
          case 5:
            return X = qg.getp(), Lg[X + 0 >> 1] = 2, 0;
          case 16:
          case 8:
          default:
            return -28;
          case 9:
            return Cg[wn() >> 2] = 28, -1;
        }
      } catch (O) {
        if (z === void 0 || O.name !== "ErrnoError") throw O;
        return -O.errno;
      }
    }, Ca: function(D, w) {
      try {
        var H = qg.getStreamFromFD(D);
        return qg.doStat(z.stat, H.path, w);
      } catch (K) {
        if (z === void 0 || K.name !== "ErrnoError") throw K;
        return -K.errno;
      }
    }, ua: function(D, w, H) {
      try {
        var K = qg.getStreamFromFD(D);
        K.getdents || (K.getdents = z.readdir(K.path));
        for (var X = 280, O = 0, gA = z.llseek(K, 0, 1), EA = Math.floor(gA / X); EA < K.getdents.length && O + X <= H; ) {
          var wA, RA, SA = K.getdents[EA];
          if (SA === ".") wA = K.node.id, RA = 4;
          else if (SA === "..") wA = z.lookupPath(K.path, { parent: !0 }).node.id, RA = 4;
          else {
            var YA = z.lookupNode(K.node, SA);
            wA = YA.id, RA = z.isChrdev(YA.mode) ? 2 : z.isDir(YA.mode) ? 4 : z.isLink(YA.mode) ? 10 : 8;
          }
          XB[w + O >> 3] = BigInt(wA), XB[w + O + 8 >> 3] = BigInt((EA + 1) * X), Lg[w + O + 16 >> 1] = 280, ZA[w + O + 18 >> 0] = RA, Ce(SA, w + O + 19, 256), O += X, EA += 1;
        }
        return z.llseek(K, EA * X, 0), O;
      } catch (pA) {
        if (z === void 0 || pA.name !== "ErrnoError") throw pA;
        return -pA.errno;
      }
    }, W: function(D, w, H) {
      qg.varargs = H;
      try {
        var K = qg.getStreamFromFD(D);
        switch (w) {
          case 21509:
          case 21510:
          case 21511:
          case 21512:
          case 21524:
          case 21515:
            return K.tty ? 0 : -59;
          case 21505:
            if (!K.tty) return -59;
            if (K.tty.ops.ioctl_tcgets) {
              var X = K.tty.ops.ioctl_tcgets(K), O = qg.getp();
              Cg[O >> 2] = X.c_iflag || 0, Cg[O + 4 >> 2] = X.c_oflag || 0, Cg[O + 8 >> 2] = X.c_cflag || 0, Cg[O + 12 >> 2] = X.c_lflag || 0;
              for (var gA = 0; gA < 32; gA++) ZA[O + gA + 17 >> 0] = X.c_cc[gA] || 0;
              return 0;
            }
            return 0;
          case 21506:
          case 21507:
          case 21508:
            if (!K.tty) return -59;
            if (K.tty.ops.ioctl_tcsets) {
              O = qg.getp();
              var EA = Cg[O >> 2], wA = Cg[O + 4 >> 2], RA = Cg[O + 8 >> 2], SA = Cg[O + 12 >> 2], YA = [];
              for (gA = 0; gA < 32; gA++) YA.push(ZA[O + gA + 17 >> 0]);
              return K.tty.ops.ioctl_tcsets(K.tty, w, { c_iflag: EA, c_oflag: wA, c_cflag: RA, c_lflag: SA, c_cc: YA });
            }
            return 0;
          case 21519:
            return K.tty ? (O = qg.getp(), Cg[O >> 2] = 0, 0) : -59;
          case 21520:
            return K.tty ? -28 : -59;
          case 21531:
            return O = qg.getp(), z.ioctl(K, w, O);
          case 21523:
            if (!K.tty) return -59;
            if (K.tty.ops.ioctl_tiocgwinsz) {
              var pA = K.tty.ops.ioctl_tiocgwinsz(K.tty);
              O = qg.getp(), Lg[O >> 1] = pA[0], Lg[O + 2 >> 1] = pA[1];
            }
            return 0;
          default:
            return -28;
        }
      } catch (xA) {
        if (z === void 0 || xA.name !== "ErrnoError") throw xA;
        return -xA.errno;
      }
    }, Aa: function(D, w) {
      try {
        return D = qg.getStr(D), qg.doStat(z.lstat, D, w);
      } catch (H) {
        if (z === void 0 || H.name !== "ErrnoError") throw H;
        return -H.errno;
      }
    }, za: function(D, w, H, K) {
      try {
        w = qg.getStr(w);
        var X = 256 & K, O = 4096 & K;
        return K &= -6401, w = qg.calculateAt(D, w, O), qg.doStat(X ? z.lstat : z.stat, w, H);
      } catch (gA) {
        if (z === void 0 || gA.name !== "ErrnoError") throw gA;
        return -gA.errno;
      }
    }, Y: function(D, w, H, K) {
      qg.varargs = K;
      try {
        w = qg.getStr(w), w = qg.calculateAt(D, w);
        var X = K ? qg.get() : 0;
        return z.open(w, H, X).fd;
      } catch (O) {
        if (z === void 0 || O.name !== "ErrnoError") throw O;
        return -O.errno;
      }
    }, Ba: function(D, w) {
      try {
        return D = qg.getStr(D), qg.doStat(z.stat, D, w);
      } catch (H) {
        if (z === void 0 || H.name !== "ErrnoError") throw H;
        return -H.errno;
      }
    }, Ta: (D) => {
      var w = it[D];
      delete it[D];
      var H = w.rawConstructor, K = w.rawDestructor, X = w.fields, O = X.map((gA) => gA.getterReturnType).concat(X.map((gA) => gA.setterArgumentType));
      KQ([D], O, (gA) => {
        var EA = {};
        return X.forEach((wA, RA) => {
          var SA = wA.fieldName, YA = gA[RA], pA = wA.getter, xA = wA.getterContext, WA = gA[RA + X.length], Fg = wA.setter, fg = wA.setterContext;
          EA[SA] = { read: (vg) => YA.fromWireType(pA(xA, vg)), write: (vg, kB) => {
            var HB = [];
            Fg(fg, vg, WA.toWireType(HB, kB)), Io(HB);
          } };
        }), [{ name: w.name, fromWireType: (wA) => {
          var RA = {};
          for (var SA in EA) RA[SA] = EA[SA].read(wA);
          return K(wA), RA;
        }, toWireType: (wA, RA) => {
          for (var SA in EA) if (!(SA in RA)) throw new TypeError(`Missing field: "${SA}"`);
          var YA = H();
          for (SA in EA) EA[SA].write(YA, RA[SA]);
          return wA !== null && wA.push(K, YA), YA;
        }, argPackAdvance: 8, readValueFromPointer: Qo, destructorFunction: K }];
      });
    }, _: (D, w, H, K, X) => {
      var O = (w = vB(w)).indexOf("u") != -1;
      O && (X = (1n << 64n) - 1n), qI(D, { name: w, fromWireType: (gA) => gA, toWireType: function(gA, EA) {
        if (typeof EA != "bigint" && typeof EA != "number") throw new TypeError(`Cannot convert "${ee(EA)}" to ${this.name}`);
        if (EA < K || EA > X) throw new TypeError(`Passing a number "${ee(EA)}" from JS side to C/C++ side to an argument of type "${w}", which is outside the valid range [${K}, ${X}]!`);
        return EA;
      }, argPackAdvance: 8, readValueFromPointer: qs(w, H, !O), destructorFunction: null });
    }, Ga: (D, w, H, K) => {
      qI(D, { name: w = vB(w), fromWireType: function(X) {
        return !!X;
      }, toWireType: function(X, O) {
        return O ? H : K;
      }, argPackAdvance: 8, readValueFromPointer: function(X) {
        return this.fromWireType(Eg[X]);
      }, destructorFunction: null });
    }, u: (D, w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA) => {
      SA = vB(SA), O = oI(X, O), EA && (EA = oI(gA, EA)), RA && (RA = oI(wA, RA)), pA = oI(YA, pA);
      var xA = ((WA) => {
        if (WA === void 0) return "_unknown";
        var Fg = (WA = WA.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
        return Fg >= 48 && Fg <= 57 ? `_${WA}` : WA;
      })(SA);
      to(xA, function() {
        nt(`Cannot construct ${SA} due to unbound types`, [K]);
      }), KQ([D, w, H], K ? [K] : [], function(WA) {
        var Fg, fg;
        WA = WA[0], fg = K ? (Fg = WA.registeredClass).instancePrototype : st.prototype;
        var vg = EC(SA, function() {
          if (Object.getPrototypeOf(this) !== kB) throw new IC("Use 'new' to construct " + SA);
          if (HB.constructor_body === void 0) throw new IC(SA + " has no accessible constructor");
          var TA = HB.constructor_body[arguments.length];
          if (TA === void 0) throw new IC(`Tried to invoke ctor of ${SA} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(HB.constructor_body).toString()}) parameters instead!`);
          return TA.apply(this, arguments);
        }), kB = Object.create(fg, { constructor: { value: vg } });
        vg.prototype = kB;
        var HB = new Wy(SA, vg, kB, pA, Fg, O, EA, RA);
        HB.baseClass && (HB.baseClass.__derivedClasses === void 0 && (HB.baseClass.__derivedClasses = []), HB.baseClass.__derivedClasses.push(HB));
        var eC = new re(SA, HB, !0, !1, !1), De = new re(SA + "*", HB, !1, !1, !1), tC = new re(SA + " const*", HB, !1, !0, !1);
        return js[D] = { pointerType: De, constPointerType: tC }, gn(xA, vg), [eC, De, tC];
      });
    }, t: (D, w, H, K, X, O) => {
      var gA = oo(w, H);
      X = oI(K, X), KQ([], [D], function(EA) {
        var wA = `constructor ${(EA = EA[0]).name}`;
        if (EA.registeredClass.constructor_body === void 0 && (EA.registeredClass.constructor_body = []), EA.registeredClass.constructor_body[w - 1] !== void 0) throw new IC(`Cannot register multiple constructors with identical number of parameters (${w - 1}) for class '${EA.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);
        return EA.registeredClass.constructor_body[w - 1] = () => {
          nt(`Cannot construct ${EA.name} due to unbound types`, gA);
        }, KQ([], gA, (RA) => (RA.splice(1, 0, null), EA.registeredClass.constructor_body[w - 1] = ao(wA, RA, null, X, O), [])), [];
      });
    }, g: (D, w, H, K, X, O, gA, EA, wA) => {
      var RA = oo(H, K);
      w = vB(w), w = Qn(w), O = oI(X, O), KQ([], [D], function(SA) {
        var YA = `${(SA = SA[0]).name}.${w}`;
        function pA() {
          nt(`Cannot call ${YA} due to unbound types`, RA);
        }
        w.startsWith("@@") && (w = Symbol[w.substring(2)]), EA && SA.registeredClass.pureVirtualFunctions.push(w);
        var xA = SA.registeredClass.instancePrototype, WA = xA[w];
        return WA === void 0 || WA.overloadTable === void 0 && WA.className !== SA.name && WA.argCount === H - 2 ? (pA.argCount = H - 2, pA.className = SA.name, xA[w] = pA) : (_s(xA, w, YA), xA[w].overloadTable[H - 2] = pA), KQ([], RA, function(Fg) {
          var fg = ao(YA, Fg, SA, O, gA, wA);
          return xA[w].overloadTable === void 0 ? (fg.argCount = H - 2, xA[w] = fg) : xA[w].overloadTable[H - 2] = fg, [];
        }), [];
      });
    }, Fa: (D, w) => {
      qI(D, { name: w = vB(w), fromWireType: (H) => {
        var K = UB.toValue(H);
        return ro(H), K;
      }, toWireType: (H, K) => UB.toHandle(K), argPackAdvance: 8, readValueFromPointer: Qo, destructorFunction: null });
    }, fa: (D, w, H, K) => {
      function X() {
      }
      w = vB(w), X.values = {}, qI(D, { name: w, constructor: X, fromWireType: function(O) {
        return this.constructor.values[O];
      }, toWireType: (O, gA) => gA.value, argPackAdvance: 8, readValueFromPointer: $y(w, H, K), destructorFunction: null }), to(w, X);
    }, ea: (D, w, H) => {
      var K = ct(D, "enum");
      w = vB(w);
      var X = K.constructor, O = Object.create(K.constructor.prototype, { value: { value: H }, constructor: { value: EC(`${K.name}_${w}`, function() {
      }) } });
      X.values[H] = O, X[w] = O;
    }, Z: (D, w, H) => {
      qI(D, { name: w = vB(w), fromWireType: (K) => K, toWireType: (K, X) => X, argPackAdvance: 8, readValueFromPointer: Aw(w, H), destructorFunction: null });
    }, Qa: (D, w, H, K, X, O, gA) => {
      var EA = oo(w, H);
      D = vB(D), D = Qn(D), X = oI(K, X), to(D, function() {
        nt(`Cannot call ${D} due to unbound types`, EA);
      }, w - 1), KQ([], EA, function(wA) {
        var RA = [wA[0], null].concat(wA.slice(1));
        return gn(D, ao(D, RA, null, X, O, gA), w - 1), [];
      });
    }, D: (D, w, H, K, X) => {
      w = vB(w);
      var O = (wA) => wA;
      if (K === 0) {
        var gA = 32 - 8 * H;
        O = (wA) => wA << gA >>> gA;
      }
      var EA = w.includes("unsigned");
      qI(D, { name: w, fromWireType: O, toWireType: EA ? function(wA, RA) {
        return this.name, RA >>> 0;
      } : function(wA, RA) {
        return this.name, RA;
      }, argPackAdvance: 8, readValueFromPointer: qs(w, H, K !== 0), destructorFunction: null });
    }, x: (D, w, H) => {
      var K = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, BigInt64Array, BigUint64Array][w];
      function X(O) {
        var gA = dg[O >> 2], EA = dg[O + 4 >> 2];
        return new K(ZA.buffer, EA, gA);
      }
      qI(D, { name: H = vB(H), fromWireType: X, argPackAdvance: 8, readValueFromPointer: X }, { ignoreDuplicateRegistrations: !0 });
    }, Sa: (D, w, H, K, X, O, gA, EA, wA, RA, SA, YA) => {
      H = vB(H), O = oI(X, O), EA = oI(gA, EA), RA = oI(wA, RA), YA = oI(SA, YA), KQ([D], [w], function(pA) {
        return pA = pA[0], [new re(H, pA.registeredClass, !1, !1, !0, pA, K, O, EA, RA, YA)];
      });
    }, $: (D, w) => {
      var H = (w = vB(w)) === "std::string";
      qI(D, { name: w, fromWireType(K) {
        var X, O = dg[K >> 2], gA = K + 4;
        if (H) for (var EA = gA, wA = 0; wA <= O; ++wA) {
          var RA = gA + wA;
          if (wA == O || Eg[RA] == 0) {
            var SA = BC(EA, RA - EA);
            X === void 0 ? X = SA : (X += "\0", X += SA), EA = RA + 1;
          }
        }
        else {
          var YA = new Array(O);
          for (wA = 0; wA < O; ++wA) YA[wA] = String.fromCharCode(Eg[gA + wA]);
          X = YA.join("");
        }
        return fQ(K), X;
      }, toWireType(K, X) {
        var O;
        X instanceof ArrayBuffer && (X = new Uint8Array(X));
        var gA = typeof X == "string";
        gA || X instanceof Uint8Array || X instanceof Uint8ClampedArray || X instanceof Int8Array || QB("Cannot pass non-string to std::string"), O = H && gA ? gC(X) : X.length;
        var EA = yt(4 + O + 1), wA = EA + 4;
        if (dg[EA >> 2] = O, H && gA) Ce(X, wA, O + 1);
        else if (gA) for (var RA = 0; RA < O; ++RA) {
          var SA = X.charCodeAt(RA);
          SA > 255 && (fQ(wA), QB("String has UTF-16 code units that do not fit in 8 bits")), Eg[wA + RA] = SA;
        }
        else for (RA = 0; RA < O; ++RA) Eg[wA + RA] = X[RA];
        return K !== null && K.push(fQ, EA), EA;
      }, argPackAdvance: 8, readValueFromPointer: $s, destructorFunction(K) {
        fQ(K);
      } });
    }, P: (D, w, H) => {
      var K, X, O, gA, EA;
      H = vB(H), w === 2 ? (K = gw, X = Bw, gA = Iw, O = () => SB, EA = 1) : w === 4 && (K = Qw, X = Ew, gA = Cw, O = () => dg, EA = 2), qI(D, { name: H, fromWireType: (wA) => {
        for (var RA, SA = dg[wA >> 2], YA = O(), pA = wA + 4, xA = 0; xA <= SA; ++xA) {
          var WA = wA + 4 + xA * w;
          if (xA == SA || YA[WA >> EA] == 0) {
            var Fg = K(pA, WA - pA);
            RA === void 0 ? RA = Fg : (RA += "\0", RA += Fg), pA = WA + w;
          }
        }
        return fQ(wA), RA;
      }, toWireType: (wA, RA) => {
        typeof RA != "string" && QB(`Cannot pass non-string to C++ string type ${H}`);
        var SA = gA(RA), YA = yt(4 + SA + w);
        return dg[YA >> 2] = SA >> EA, X(RA, YA + 4, SA + w), wA !== null && wA.push(fQ, YA), YA;
      }, argPackAdvance: 8, readValueFromPointer: Qo, destructorFunction(wA) {
        fQ(wA);
      } });
    }, p: (D, w, H, K, X, O) => {
      it[D] = { name: vB(w), rawConstructor: oI(H, K), rawDestructor: oI(X, O), fields: [] };
    }, l: (D, w, H, K, X, O, gA, EA, wA, RA) => {
      it[D].fields.push({ fieldName: vB(w), getterReturnType: H, getter: oI(K, X), getterContext: O, setterArgumentType: gA, setter: oI(EA, wA), setterContext: RA });
    }, Ha: (D, w) => {
      qI(D, { isVoid: !0, name: w = vB(w), argPackAdvance: 0, fromWireType: () => {
      }, toWireType: (H, K) => {
      } });
    }, Ea: () => 1, aa: (D, w, H) => (D = UB.toValue(D), w = ct(w, "emval::as"), tn(w, H, D)), ca: (D, w, H, K) => (D = Dt[D])(null, w = UB.toValue(w), H, K), Na: (D, w, H, K, X) => (D = Dt[D])(w = UB.toValue(w), w[H = so(H)], K, X), oa: ro, La: (D) => D === 0 ? UB.toHandle(on()) : (D = so(D), UB.toHandle(on()[D])), L: (D, w, H) => {
      var K = ((Fg, fg) => {
        for (var vg = new Array(Fg), kB = 0; kB < Fg; ++kB) vg[kB] = ct(dg[fg + 4 * kB >> 2], "parameter " + kB);
        return vg;
      })(D, w), X = K.shift();
      D--;
      var O = `return function (obj, func, destructorsRef, args) {
`, gA = 0, EA = [];
      H === 0 && EA.push("obj");
      for (var wA = ["retType"], RA = [X], SA = 0; SA < D; ++SA) EA.push("arg" + SA), wA.push("argType" + SA), RA.push(K[SA]), O += `  var arg${SA} = argType${SA}.readValueFromPointer(args${gA ? "+" + gA : ""});
`, gA += K[SA].argPackAdvance;
      for (O += `  var rv = ${H === 1 ? "new func" : "func.call"}(${EA.join(", ")});
`, SA = 0; SA < D; ++SA) K[SA].deleteObject && (O += `  argType${SA}.deleteObject(arg${SA});
`);
      X.isVoid || (wA.push("emval_returnValue"), RA.push(tn), O += `  return emval_returnValue(retType, destructorsRef, rv);
`), O += `};
`, wA.push(O);
      var YA, pA, xA = In(Function, wA).apply(null, RA), WA = `methodCaller<(${K.map((Fg) => Fg.name).join(", ")}) => ${X.name}>`;
      return YA = EC(WA, xA), pA = Dt.length, Dt.push(YA), pA;
    }, Ka: (D, w) => (D = UB.toValue(D), w = UB.toValue(w), UB.toHandle(D[w])), qa: (D) => {
      D > 4 && (JI.get(D).refcount += 1);
    }, Ma: (D, w) => (D = UB.toValue(D)) instanceof UB.toValue(w), Oa: () => UB.toHandle([]), Ja: (D) => UB.toHandle(so(D)), Pa: () => UB.toHandle({}), Ra: (D) => {
      var w = UB.toValue(D);
      Io(w), ro(D);
    }, Ia: (D, w, H) => {
      D = UB.toValue(D), w = UB.toValue(w), H = UB.toValue(H), D[w] = H;
    }, s: (D, w) => {
      var H = (D = ct(D, "_emval_take_value")).readValueFromPointer(w);
      return UB.toHandle(H);
    }, va: function(D, w, H, K, X, O) {
      O = an(O);
      try {
        if (isNaN(O)) return 61;
        var gA = qg.getStreamFromFD(X);
        2 & H && qg.doMsync(D, gA, w, K, O), z.munmap(gA);
      } catch (EA) {
        if (z === void 0 || EA.name !== "ErrnoError") throw EA;
        return -EA.errno;
      }
    }, K: () => {
      FQ("");
    }, O: () => Date.now(), ba: Cn, ta: (D) => {
      Eg.length, FQ("OOM");
    }, xa: (D, w) => {
      var H = 0;
      return ne().forEach((K, X) => {
        var O = w + H;
        dg[D + 4 * X >> 2] = O, ((gA, EA) => {
          for (var wA = 0; wA < gA.length; ++wA) ZA[EA++ >> 0] = gA.charCodeAt(wA);
          ZA[EA >> 0] = 0;
        })(K, O), H += K.length + 1;
      }), 0;
    }, ya: (D, w) => {
      var H = ne();
      dg[D >> 2] = H.length;
      var K = 0;
      return H.forEach((X) => K += X.length + 1), dg[w >> 2] = K, 0;
    }, J: function(D) {
      try {
        var w = qg.getStreamFromFD(D);
        return z.close(w), 0;
      } catch (H) {
        if (z === void 0 || H.name !== "ErrnoError") throw H;
        return H.errno;
      }
    }, V: function(D, w, H, K) {
      try {
        var X = ((O, gA, EA, wA) => {
          for (var RA = 0, SA = 0; SA < EA; SA++) {
            var YA = dg[gA >> 2], pA = dg[gA + 4 >> 2];
            gA += 8;
            var xA = z.read(O, ZA, YA, pA, wA);
            if (xA < 0) return -1;
            if (RA += xA, xA < pA) break;
            wA !== void 0 && (wA += xA);
          }
          return RA;
        })(qg.getStreamFromFD(D), w, H);
        return dg[K >> 2] = X, 0;
      } catch (O) {
        if (z === void 0 || O.name !== "ErrnoError") throw O;
        return O.errno;
      }
    }, wa: function(D, w, H, K) {
      w = an(w);
      try {
        if (isNaN(w)) return 61;
        var X = qg.getStreamFromFD(D);
        return z.llseek(X, w, H), XB[K >> 3] = BigInt(X.position), X.getdents && w === 0 && H === 0 && (X.getdents = null), 0;
      } catch (O) {
        if (z === void 0 || O.name !== "ErrnoError") throw O;
        return O.errno;
      }
    }, Da: function(D, w, H, K) {
      try {
        var X = ((O, gA, EA, wA) => {
          for (var RA = 0, SA = 0; SA < EA; SA++) {
            var YA = dg[gA >> 2], pA = dg[gA + 4 >> 2];
            gA += 8;
            var xA = z.write(O, ZA, YA, pA, wA);
            if (xA < 0) return -1;
            RA += xA, wA !== void 0 && (wA += xA);
          }
          return RA;
        })(qg.getStreamFromFD(D), w, H);
        return dg[K >> 2] = X, 0;
      } catch (O) {
        if (z === void 0 || O.name !== "ErrnoError") throw O;
        return O.errno;
      }
    }, Q: function(D, w, H, K) {
      var X = mg();
      try {
        return pg(D)(w, H, K);
      } catch (O) {
        if (xg(X), O !== O + 0) throw O;
        Kg(1, 0);
      }
    }, R: function(D, w, H, K) {
      var X = mg();
      try {
        return pg(D)(w, H, K);
      } catch (O) {
        if (xg(X), O !== O + 0) throw O;
        Kg(1, 0);
      }
    }, r: function(D) {
      var w = mg();
      try {
        return pg(D)();
      } catch (H) {
        if (xg(w), H !== H + 0) throw H;
        Kg(1, 0);
      }
    }, f: function(D, w) {
      var H = mg();
      try {
        return pg(D)(w);
      } catch (K) {
        if (xg(H), K !== K + 0) throw K;
        Kg(1, 0);
      }
    }, e: function(D, w, H) {
      var K = mg();
      try {
        return pg(D)(w, H);
      } catch (X) {
        if (xg(K), X !== X + 0) throw X;
        Kg(1, 0);
      }
    }, q: function(D, w, H, K) {
      var X = mg();
      try {
        return pg(D)(w, H, K);
      } catch (O) {
        if (xg(X), O !== O + 0) throw O;
        Kg(1, 0);
      }
    }, n: function(D, w, H, K, X) {
      var O = mg();
      try {
        return pg(D)(w, H, K, X);
      } catch (gA) {
        if (xg(O), gA !== gA + 0) throw gA;
        Kg(1, 0);
      }
    }, v: function(D, w, H, K, X, O) {
      var gA = mg();
      try {
        return pg(D)(w, H, K, X, O);
      } catch (EA) {
        if (xg(gA), EA !== EA + 0) throw EA;
        Kg(1, 0);
      }
    }, B: function(D, w, H, K, X, O, gA) {
      var EA = mg();
      try {
        return pg(D)(w, H, K, X, O, gA);
      } catch (wA) {
        if (xg(EA), wA !== wA + 0) throw wA;
        Kg(1, 0);
      }
    }, M: function(D, w, H, K, X, O, gA, EA) {
      var wA = mg();
      try {
        return pg(D)(w, H, K, X, O, gA, EA);
      } catch (RA) {
        if (xg(wA), RA !== RA + 0) throw RA;
        Kg(1, 0);
      }
    }, I: function(D, w, H, K, X, O, gA, EA, wA, RA, SA, YA) {
      var pA = mg();
      try {
        return pg(D)(w, H, K, X, O, gA, EA, wA, RA, SA, YA);
      } catch (xA) {
        if (xg(pA), xA !== xA + 0) throw xA;
        Kg(1, 0);
      }
    }, ma: function(D, w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA) {
      var xA = mg();
      try {
        return pg(D)(w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA);
      } catch (WA) {
        if (xg(xA), WA !== WA + 0) throw WA;
        Kg(1, 0);
      }
    }, ga: function(D, w, H, K) {
      var X = mg();
      try {
        return pg(D)(w, H, K);
      } catch (O) {
        if (xg(X), O !== O + 0) throw O;
        Kg(1, 0);
      }
    }, la: function(D, w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA) {
      var xA = mg();
      try {
        return pg(D)(w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA);
      } catch (WA) {
        if (xg(xA), WA !== WA + 0) throw WA;
        Kg(1, 0);
      }
    }, A: function(D, w, H, K) {
      var X = mg();
      try {
        return pg(D)(w, H, K);
      } catch (O) {
        if (xg(X), O !== O + 0) throw O;
        Kg(1, 0);
      }
    }, w: function(D, w) {
      var H = mg();
      try {
        return pg(D)(w);
      } catch (K) {
        if (xg(H), K !== K + 0) throw K;
        return Kg(1, 0), 0n;
      }
    }, Ua: function(D, w, H) {
      var K = mg();
      try {
        return pg(D)(w, H);
      } catch (X) {
        if (xg(K), X !== X + 0) throw X;
        return Kg(1, 0), 0n;
      }
    }, C: function(D, w, H, K, X) {
      var O = mg();
      try {
        return pg(D)(w, H, K, X);
      } catch (gA) {
        if (xg(O), gA !== gA + 0) throw gA;
        return Kg(1, 0), 0n;
      }
    }, S: function(D, w, H, K, X, O) {
      var gA = mg();
      try {
        return pg(D)(w, H, K, X, O);
      } catch (EA) {
        if (xg(gA), EA !== EA + 0) throw EA;
        return Kg(1, 0), 0n;
      }
    }, i: function(D) {
      var w = mg();
      try {
        pg(D)();
      } catch (H) {
        if (xg(w), H !== H + 0) throw H;
        Kg(1, 0);
      }
    }, h: function(D, w) {
      var H = mg();
      try {
        pg(D)(w);
      } catch (K) {
        if (xg(H), K !== K + 0) throw K;
        Kg(1, 0);
      }
    }, U: function(D, w, H) {
      var K = mg();
      try {
        pg(D)(w, H);
      } catch (X) {
        if (xg(K), X !== X + 0) throw X;
        Kg(1, 0);
      }
    }, c: function(D, w, H) {
      var K = mg();
      try {
        pg(D)(w, H);
      } catch (X) {
        if (xg(K), X !== X + 0) throw X;
        Kg(1, 0);
      }
    }, d: function(D, w, H, K) {
      var X = mg();
      try {
        pg(D)(w, H, K);
      } catch (O) {
        if (xg(X), O !== O + 0) throw O;
        Kg(1, 0);
      }
    }, o: function(D, w, H, K, X) {
      var O = mg();
      try {
        pg(D)(w, H, K, X);
      } catch (gA) {
        if (xg(O), gA !== gA + 0) throw gA;
        Kg(1, 0);
      }
    }, N: function(D, w, H, K, X, O) {
      var gA = mg();
      try {
        pg(D)(w, H, K, X, O);
      } catch (EA) {
        if (xg(gA), EA !== EA + 0) throw EA;
        Kg(1, 0);
      }
    }, m: function(D, w, H, K, X, O, gA) {
      var EA = mg();
      try {
        pg(D)(w, H, K, X, O, gA);
      } catch (wA) {
        if (xg(EA), wA !== wA + 0) throw wA;
        Kg(1, 0);
      }
    }, z: function(D, w, H, K, X, O, gA, EA) {
      var wA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA);
      } catch (RA) {
        if (xg(wA), RA !== RA + 0) throw RA;
        Kg(1, 0);
      }
    }, T: function(D, w, H, K, X, O, gA, EA, wA) {
      var RA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA);
      } catch (SA) {
        if (xg(RA), SA !== SA + 0) throw SA;
        Kg(1, 0);
      }
    }, ia: function(D, w, H, K, X, O, gA, EA, wA, RA) {
      var SA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA, RA);
      } catch (YA) {
        if (xg(SA), YA !== YA + 0) throw YA;
        Kg(1, 0);
      }
    }, F: function(D, w, H, K, X, O, gA, EA, wA, RA, SA) {
      var YA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA, RA, SA);
      } catch (pA) {
        if (xg(YA), pA !== pA + 0) throw pA;
        Kg(1, 0);
      }
    }, na: function(D, w, H, K, X, O, gA, EA, wA, RA, SA, YA) {
      var pA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA, RA, SA, YA);
      } catch (xA) {
        if (xg(pA), xA !== xA + 0) throw xA;
        Kg(1, 0);
      }
    }, pa: function(D, w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA) {
      var xA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA);
      } catch (WA) {
        if (xg(xA), WA !== WA + 0) throw WA;
        Kg(1, 0);
      }
    }, H: function(D, w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA, xA, WA, Fg) {
      var fg = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA, RA, SA, YA, pA, xA, WA, Fg);
      } catch (vg) {
        if (xg(fg), vg !== vg + 0) throw vg;
        Kg(1, 0);
      }
    }, ja: function(D, w, H, K, X, O, gA, EA, wA) {
      var RA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA);
      } catch (SA) {
        if (xg(RA), SA !== SA + 0) throw SA;
        Kg(1, 0);
      }
    }, ka: function(D, w, H, K, X, O, gA, EA, wA, RA) {
      var SA = mg();
      try {
        pg(D)(w, H, K, X, O, gA, EA, wA, RA);
      } catch (YA) {
        if (xg(SA), YA !== YA + 0) throw YA;
        Kg(1, 0);
      }
    }, E: function(D, w, H) {
      var K = mg();
      try {
        pg(D)(w, H);
      } catch (X) {
        if (xg(K), X !== X + 0) throw X;
        Kg(1, 0);
      }
    }, ha: (D) => D, ra: (D, w, H, K, X) => ((O, gA, EA, wA) => {
      var RA = dg[wA + 40 >> 2], SA = { tm_sec: Cg[wA >> 2], tm_min: Cg[wA + 4 >> 2], tm_hour: Cg[wA + 8 >> 2], tm_mday: Cg[wA + 12 >> 2], tm_mon: Cg[wA + 16 >> 2], tm_year: Cg[wA + 20 >> 2], tm_wday: Cg[wA + 24 >> 2], tm_yday: Cg[wA + 28 >> 2], tm_isdst: Cg[wA + 32 >> 2], tm_gmtoff: Cg[wA + 36 >> 2], tm_zone: RA ? BC(RA) : "" }, YA = BC(EA), pA = { "%c": "%a %b %d %H:%M:%S %Y", "%D": "%m/%d/%y", "%F": "%Y-%m-%d", "%h": "%b", "%r": "%I:%M:%S %p", "%R": "%H:%M", "%T": "%H:%M:%S", "%x": "%m/%d/%y", "%X": "%H:%M:%S", "%Ec": "%c", "%EC": "%C", "%Ex": "%m/%d/%y", "%EX": "%H:%M:%S", "%Ey": "%y", "%EY": "%Y", "%Od": "%d", "%Oe": "%e", "%OH": "%H", "%OI": "%I", "%Om": "%m", "%OM": "%M", "%OS": "%S", "%Ou": "%u", "%OU": "%U", "%OV": "%V", "%Ow": "%w", "%OW": "%W", "%Oy": "%y" };
      for (var xA in pA) YA = YA.replace(new RegExp(xA, "g"), pA[xA]);
      var WA = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], Fg = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
      function fg(TA, Sg, dI) {
        for (var $B = typeof TA == "number" ? TA.toString() : TA || ""; $B.length < Sg; ) $B = dI[0] + $B;
        return $B;
      }
      function vg(TA, Sg) {
        return fg(TA, Sg, "0");
      }
      function kB(TA, Sg) {
        function dI(wE) {
          return wE < 0 ? -1 : wE > 0 ? 1 : 0;
        }
        var $B;
        return ($B = dI(TA.getFullYear() - Sg.getFullYear())) === 0 && ($B = dI(TA.getMonth() - Sg.getMonth())) === 0 && ($B = dI(TA.getDate() - Sg.getDate())), $B;
      }
      function HB(TA) {
        switch (TA.getDay()) {
          case 0:
            return new Date(TA.getFullYear() - 1, 11, 29);
          case 1:
            return TA;
          case 2:
            return new Date(TA.getFullYear(), 0, 3);
          case 3:
            return new Date(TA.getFullYear(), 0, 2);
          case 4:
            return new Date(TA.getFullYear(), 0, 1);
          case 5:
            return new Date(TA.getFullYear() - 1, 11, 31);
          case 6:
            return new Date(TA.getFullYear() - 1, 11, 30);
        }
      }
      function eC(TA) {
        var Sg = ((ow, wt) => {
          for (var MI = new Date(ow.getTime()); wt > 0; ) {
            var aw = ht(MI.getFullYear()), lo = MI.getMonth(), un = (aw ? sn : nn)[lo];
            if (!(wt > un - MI.getDate())) return MI.setDate(MI.getDate() + wt), MI;
            wt -= un - MI.getDate() + 1, MI.setDate(1), lo < 11 ? MI.setMonth(lo + 1) : (MI.setMonth(0), MI.setFullYear(MI.getFullYear() + 1));
          }
          return MI;
        })(new Date(TA.tm_year + 1900, 0, 1), TA.tm_yday), dI = new Date(Sg.getFullYear(), 0, 4), $B = new Date(Sg.getFullYear() + 1, 0, 4), wE = HB(dI), iw = HB($B);
        return kB(wE, Sg) <= 0 ? kB(iw, Sg) <= 0 ? Sg.getFullYear() + 1 : Sg.getFullYear() : Sg.getFullYear() - 1;
      }
      var De = { "%a": (TA) => WA[TA.tm_wday].substring(0, 3), "%A": (TA) => WA[TA.tm_wday], "%b": (TA) => Fg[TA.tm_mon].substring(0, 3), "%B": (TA) => Fg[TA.tm_mon], "%C": (TA) => vg((TA.tm_year + 1900) / 100 | 0, 2), "%d": (TA) => vg(TA.tm_mday, 2), "%e": (TA) => fg(TA.tm_mday, 2, " "), "%g": (TA) => eC(TA).toString().substring(2), "%G": (TA) => eC(TA), "%H": (TA) => vg(TA.tm_hour, 2), "%I": (TA) => {
        var Sg = TA.tm_hour;
        return Sg == 0 ? Sg = 12 : Sg > 12 && (Sg -= 12), vg(Sg, 2);
      }, "%j": (TA) => vg(TA.tm_mday + ((Sg, dI) => {
        for (var $B = 0, wE = 0; wE <= dI; $B += Sg[wE++]) ;
        return $B;
      })(ht(TA.tm_year + 1900) ? sn : nn, TA.tm_mon - 1), 3), "%m": (TA) => vg(TA.tm_mon + 1, 2), "%M": (TA) => vg(TA.tm_min, 2), "%n": () => `
`, "%p": (TA) => TA.tm_hour >= 0 && TA.tm_hour < 12 ? "AM" : "PM", "%S": (TA) => vg(TA.tm_sec, 2), "%t": () => "	", "%u": (TA) => TA.tm_wday || 7, "%U": (TA) => {
        var Sg = TA.tm_yday + 7 - TA.tm_wday;
        return vg(Math.floor(Sg / 7), 2);
      }, "%V": (TA) => {
        var Sg = Math.floor((TA.tm_yday + 7 - (TA.tm_wday + 6) % 7) / 7);
        if ((TA.tm_wday + 371 - TA.tm_yday - 2) % 7 <= 2 && Sg++, Sg) {
          if (Sg == 53) {
            var dI = (TA.tm_wday + 371 - TA.tm_yday) % 7;
            dI == 4 || dI == 3 && ht(TA.tm_year) || (Sg = 1);
          }
        } else {
          Sg = 52;
          var $B = (TA.tm_wday + 7 - TA.tm_yday - 1) % 7;
          ($B == 4 || $B == 5 && ht(TA.tm_year % 400 - 1)) && Sg++;
        }
        return vg(Sg, 2);
      }, "%w": (TA) => TA.tm_wday, "%W": (TA) => {
        var Sg = TA.tm_yday + 7 - (TA.tm_wday + 6) % 7;
        return vg(Math.floor(Sg / 7), 2);
      }, "%y": (TA) => (TA.tm_year + 1900).toString().substring(2), "%Y": (TA) => TA.tm_year + 1900, "%z": (TA) => {
        var Sg = TA.tm_gmtoff, dI = Sg >= 0;
        return Sg = (Sg = Math.abs(Sg) / 60) / 60 * 100 + Sg % 60, (dI ? "+" : "-") + ("0000" + Sg).slice(-4);
      }, "%Z": (TA) => TA.tm_zone, "%%": () => "%" };
      for (var xA in YA = YA.replace(/%%/g, "\0\0"), De) YA.includes(xA) && (YA = YA.replace(new RegExp(xA, "g"), De[xA](SA)));
      var tC = go(YA = YA.replace(/\0\0/g, "%"), !1);
      return tC.length > gA ? 0 : (cn(tC, O), tC.length - 1);
    })(D, w, H, K) }, zB = function() {
      var D, w, H, K, X = { a: tw };
      function O(gA, EA) {
        var wA, RA;
        return zB = gA.exports, wA = zB.Va.buffer, G.HEAP8 = ZA = new Int8Array(wA), G.HEAP16 = Lg = new Int16Array(wA), G.HEAPU8 = Eg = new Uint8Array(wA), G.HEAPU16 = SB = new Uint16Array(wA), G.HEAP32 = Cg = new Int32Array(wA), G.HEAPU32 = dg = new Uint32Array(wA), G.HEAPF32 = wI = new Float32Array(wA), G.HEAPF64 = Et = new Float64Array(wA), G.HEAP64 = XB = new BigInt64Array(wA), G.HEAPU64 = ps = new BigUint64Array(wA), CC = zB.Ya, RA = zB.Wa, Ls.unshift(RA), Ct(), zB;
      }
      if (Wi(), G.instantiateWasm) try {
        return G.instantiateWasm(X, O);
      } catch (gA) {
        bA(`Module.instantiateWasm callback failed with error: ${gA}`), R(gA);
      }
      return (D = UA, w = $E, H = X, K = function(gA) {
        O(gA.instance);
      }, D || typeof WebAssembly.instantiateStreaming != "function" || ms(w) || typeof fetch != "function" ? vs(w, H, K) : fetch(w, { credentials: "same-origin" }).then((gA) => WebAssembly.instantiateStreaming(gA, H).then(K, function(EA) {
        return bA(`wasm streaming compile failed: ${EA}`), bA("falling back to ArrayBuffer instantiation"), vs(w, H, K);
      }))).catch(R), {};
    }(), yt = (D) => (yt = zB.Xa)(D), fQ = (D) => (fQ = zB.Za)(D), wn = () => (wn = zB._a)(), dn = (D) => (dn = zB.$a)(D), Fn = (D, w) => (Fn = zB.ab)(D, w), Kg = (D, w) => (Kg = zB.bb)(D, w), ce = (D) => (ce = zB.cb)(D), mg = () => (mg = zB.db)(), xg = (D) => (xg = zB.eb)(D), ho = (D) => (ho = zB.fb)(D), Rn = (D) => (Rn = zB.gb)(D), fn = (D) => (fn = zB.hb)(D), Gn = (D, w, H) => (Gn = zB.ib)(D, w, H), Mn = (D) => (Mn = zB.jb)(D);
    function Nn() {
      function D() {
        lt || (lt = !0, G.calledRun = !0, Ys || (G.noFSInit || z.init.initialized || z.init(), z.ignorePermissions = !1, ji(Ls), c(G), G.onRuntimeInitialized && G.onRuntimeInitialized(), function() {
          if (G.postRun) for (typeof G.postRun == "function" && (G.postRun = [G.postRun]); G.postRun.length; ) w = G.postRun.shift(), Ks.unshift(w);
          var w;
          ji(Ks);
        }()));
      }
      cE > 0 || (function() {
        if (G.preRun) for (typeof G.preRun == "function" && (G.preRun = [G.preRun]); G.preRun.length; ) w = G.preRun.shift(), Js.unshift(w);
        var w;
        ji(Js);
      }(), cE > 0 || (G.setStatus ? (G.setStatus("Running..."), setTimeout(function() {
        setTimeout(function() {
          G.setStatus("");
        }, 1), D();
      }, 1)) : D()));
    }
    if (G.ccall = hn, G.cwrap = (D, w, H, K) => {
      var X = !H || H.every((O) => O === "number" || O === "boolean");
      return w !== "string" && X && !K ? Dn(D) : function() {
        return hn(D, w, H, arguments);
      };
    }, G.addFunction = (D, w) => {
      var H = ((O) => (yE || (yE = /* @__PURE__ */ new WeakMap(), ((gA, EA) => {
        if (yE) for (var wA = 0; wA < 0 + EA; wA++) {
          var RA = pg(wA);
          RA && yE.set(RA, wA);
        }
      })(0, CC.length)), yE.get(O) || 0))(D);
      if (H) return H;
      var K = (() => {
        if (co.length) return co.pop();
        try {
          CC.grow(1);
        } catch (O) {
          throw O instanceof RangeError ? "Unable to grow wasm table. Set ALLOW_TABLE_GROWTH." : O;
        }
        return CC.length - 1;
      })();
      try {
        Do(K, D);
      } catch (O) {
        if (!(O instanceof TypeError)) throw O;
        var X = ((gA, EA) => {
          if (typeof WebAssembly.Function == "function") return new WebAssembly.Function(((YA) => {
            for (var pA = { i: "i32", j: "i64", f: "f32", d: "f64", e: "externref", p: "i32" }, xA = { parameters: [], results: YA[0] == "v" ? [] : [pA[YA[0]]] }, WA = 1; WA < YA.length; ++WA) xA.parameters.push(pA[YA[WA]]);
            return xA;
          })(EA), gA);
          var wA = [1];
          ((YA, pA) => {
            var xA = YA.slice(0, 1), WA = YA.slice(1), Fg = { i: 127, p: 127, j: 126, f: 125, d: 124, e: 111 };
            pA.push(96), ln(WA.length, pA);
            for (var fg = 0; fg < WA.length; ++fg) pA.push(Fg[WA[fg]]);
            xA == "v" ? pA.push(0) : pA.push(1, Fg[xA]);
          })(EA, wA);
          var RA = [0, 97, 115, 109, 1, 0, 0, 0, 1];
          ln(wA.length, RA), RA.push.apply(RA, wA), RA.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);
          var SA = new WebAssembly.Module(new Uint8Array(RA));
          return new WebAssembly.Instance(SA, { e: { f: gA } }).exports.f;
        })(D, w);
        Do(K, X);
      }
      return yE.set(D, K), K;
    }, G.removeFunction = (D) => {
      yE.delete(pg(D)), Do(D, null), co.push(D);
    }, G.setValue = function(D, w, H = "i8") {
      switch (H.endsWith("*") && (H = "*"), H) {
        case "i1":
        case "i8":
          ZA[D >> 0] = w;
          break;
        case "i16":
          Lg[D >> 1] = w;
          break;
        case "i32":
          Cg[D >> 2] = w;
          break;
        case "i64":
          XB[D >> 3] = BigInt(w);
          break;
        case "float":
          wI[D >> 2] = w;
          break;
        case "double":
          Et[D >> 3] = w;
          break;
        case "*":
          dg[D >> 2] = w;
          break;
        default:
          FQ(`invalid type for setValue: ${H}`);
      }
    }, G.getValue = function(D, w = "i8") {
      switch (w.endsWith("*") && (w = "*"), w) {
        case "i1":
        case "i8":
          return ZA[D >> 0];
        case "i16":
          return Lg[D >> 1];
        case "i32":
          return Cg[D >> 2];
        case "i64":
          return XB[D >> 3];
        case "float":
          return wI[D >> 2];
        case "double":
          return Et[D >> 3];
        case "*":
          return dg[D >> 2];
        default:
          FQ(`invalid type for getValue: ${w}`);
      }
    }, G.UTF8ToString = BC, G.stringToUTF8 = Ce, G.lengthBytesUTF8 = gC, G.stringToNewUTF8 = (D) => {
      var w = gC(D) + 1, H = yt(w);
      return H && Ce(D, H, w), H;
    }, Ee = function D() {
      lt || Nn(), lt || (Ee = D);
    }, G.preInit) for (typeof G.preInit == "function" && (G.preInit = [G.preInit]); G.preInit.length > 0; ) G.preInit.pop()();
    return Nn(), tA.ready;
  });
  const C = E;
  function o(tA) {
    return `${tA}:end`;
  }
  function t(tA) {
  }
  function e(tA, c, R) {
  }
  function i(tA) {
    return (c, R, G) => {
      const Z = G.value;
      G.value = async function(...W) {
        const V = tA ? tA(Z, ...W) : R, oA = void 0;
        try {
          return await Z.apply(this, W);
        } finally {
          const hA = performance.mark(o(V));
          oA == null || oA.name, hA == null || hA.name;
        }
      };
    };
  }
  function a(tA) {
    return (c, R, G) => {
      const Z = G.value;
      G.value = function(...W) {
        const V = R, oA = void 0;
        try {
          return Z.apply(this, W);
        } finally {
          const hA = performance.mark(o(V));
          oA == null || oA.name, hA == null || hA.name;
        }
      };
    };
  }
  async function r(tA, c, ...R) {
    const G = void 0;
    try {
      return await c.apply(this, R);
    } finally {
      const Z = void 0;
      G == null || G.name, Z == null || Z.name;
    }
  }
  const h = BigInt(0);
  function n(tA) {
    const c = new ArrayBuffer(8), R = new DataView(c);
    return R.setBigUint64(0, tA, !0), R.getBigUint64(0, !1);
  }
  function l(tA) {
    return BigInt("0x" + tA.replace(/-/g, ""));
  }
  function y(tA, c) {
    const R = l(tA) >> BigInt(96), G = l(c) >> BigInt(96), Z = n(R), W = n(G) >> BigInt(32);
    return BigInt.asIntN(64, Z | W).toString();
  }
  function N(tA) {
    const c = "0x" + tA.replace(/-/g, "").slice(0, 12);
    return BigInt(c).toString();
  }
  function s(tA) {
    const c = l(tA.id);
    if (["MOBILE", "ENDUSER"].includes(tA.type)) return (c >> BigInt(80)).toString();
    if (tA.type === "CLOUD") return (n(c >> BigInt(96)) >> BigInt(32)).toString();
    throw new Error(`Unexpected player type ${tA.type}`);
  }
  function F(tA, c) {
    if (tA.type !== "CLOUD") throw new Error(`wrong player type: ${tA.type}`);
    const R = s(tA);
    let G = BigInt(c) >> BigInt(32);
    return G < h && (G += BigInt(1) << BigInt(32)), R === G.toString();
  }
  function u(tA) {
    return (BigInt(tA) + (BigInt(1) << BigInt(64))).toString();
  }
  var U, J, L = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  (function(tA) {
    tA[tA.ECDSA_SECP256K1 = 0] = "ECDSA_SECP256K1", tA[tA.EDDSA_ED25519 = 1] = "EDDSA_ED25519", tA[tA.ECDSA_SECP256R1 = 2] = "ECDSA_SECP256R1";
  })(U || (U = {})), function(tA) {
    tA[tA.SECRET_SERVICE_STATUS_SUCCESS = 0] = "SECRET_SERVICE_STATUS_SUCCESS", tA[tA.SECRET_SERVICE_STATUS_ERROR_NO_SECRET = 1] = "SECRET_SERVICE_STATUS_ERROR_NO_SECRET", tA[tA.SECRET_SERVICE_STATUS_ERROR_UNEXPECTED = 2] = "SECRET_SERVICE_STATUS_ERROR_UNEXPECTED", tA[tA.SECRET_SERVICE_STATUS_ERROR_INVALID_PARAMETER = 3] = "SECRET_SERVICE_STATUS_ERROR_INVALID_PARAMETER", tA[tA.SECRET_SERVICE_STATUS_ERROR_OUT_OF_MEMORY = 4] = "SECRET_SERVICE_STATUS_ERROR_OUT_OF_MEMORY", tA[tA.SECRET_SERVICE_STATUS_INSUFFICIENT_BUFFER = 5] = "SECRET_SERVICE_STATUS_INSUFFICIENT_BUFFER", tA[tA.SECRET_SERVICE_STATUS_ERROR_INVALID_STATE = 6] = "SECRET_SERVICE_STATUS_ERROR_INVALID_STATE", tA[tA.SECRET_SERVICE_STATUS_ERROR_IO_ERROR = 7] = "SECRET_SERVICE_STATUS_ERROR_IO_ERROR", tA[tA.SECRET_SERVICE_STATUS_ERROR_NO_KEY = 8] = "SECRET_SERVICE_STATUS_ERROR_NO_KEY", tA[tA.SECRET_SERVICE_STATUS_ERROR_BAD_KEY = 9] = "SECRET_SERVICE_STATUS_ERROR_BAD_KEY", tA[tA.SECRET_SERVICE_STATUS_ERROR_TAMPERED_DATA = 10] = "SECRET_SERVICE_STATUS_ERROR_TAMPERED_DATA";
  }(J || (J = {}));
  class f {
    constructor(c) {
      DA(this, "_extern_do_log_bridge", 0);
      DA(this, "_extern_rdrand_bytes", 0);
      DA(this, "_extern_random_fn", 0);
      DA(this, "_extern_secret_service_store", 0);
      DA(this, "_extern_secret_service_load", 0);
      DA(this, "_extern_secret_service_delete", 0);
      DA(this, "tenantId");
      DA(this, "playerId");
      DA(this, "_cosignerStorage");
      DA(this, "logFunc");
      DA(this, "randomFunc");
      DA(this, "getPrivateKeyFunc");
      DA(this, "getPlayerPublicKeyFunc");
      DA(this, "jsCosignerPtr");
      DA(this, "jsCosigner");
      DA(this, "wasmModule");
      this.tenantId = c.tenantId, this.playerId = c.playerId, this.logFunc = c.logFunc, this._cosignerStorage = c.cosignerStorage, this.randomFunc = c.randomFunc, this.getPrivateKeyFunc = c.getPrivateKeyFunc, this.getPlayerPublicKeyFunc = c.getPlayerPublicKeyFunc, this.jsCosignerPtr = -1;
    }
    async load() {
      this.wasmModule = await C({}), this.createJsCosigner();
    }
    createJsCosigner() {
      try {
        this._extern_do_log_bridge = this.wasmModule.addFunction(this._do_log_bridge.bind(this), "viiiii"), this._extern_rdrand_bytes = this.wasmModule.addFunction(this.rdrand_bytes.bind(this), "iii"), this._extern_random_fn = this.wasmModule.addFunction(this.random_fn.bind(this), "iii"), this._extern_secret_service_store = this.wasmModule.addFunction(this.secret_service_store.bind(this), "iiiii"), this._extern_secret_service_load = this.wasmModule.addFunction(this.secret_service_load.bind(this), "iiiiii"), this._extern_secret_service_delete = this.wasmModule.addFunction(this.secret_service_delete.bind(this), "iii"), this.jsCosigner = new this.wasmModule.CosignerService(this.tenantId, BigInt(this.playerId), this._extern_do_log_bridge, this._extern_rdrand_bytes, this._extern_random_fn, this._extern_secret_service_store, this._extern_secret_service_load, this._extern_secret_service_delete, this.getPrivateKeyFunc.bind(this), this.getPlayerPublicKeyFunc.bind(this), this.fill_signature_data.bind(this)), this.jsCosignerPtr = this.jsCosigner.$$.ptr;
      } catch (c) {
        throw console.error(c), c;
      }
    }
    _do_log_bridge(c, R, G, Z, W) {
      const V = this.wasmModule.UTF8ToString(R), oA = this.wasmModule.UTF8ToString(G), hA = this.wasmModule.UTF8ToString(W);
      let UA;
      switch (c) {
        case 5e3:
        default:
          UA = "TRACE";
          break;
        case 1e4:
          UA = "DEBUG";
          break;
        case 2e4:
          UA = "INFO";
          break;
        case 3e4:
          UA = "WARN";
          break;
        case 4e4:
          UA = "ERROR";
          break;
        case 5e4:
          UA = "FATAL";
      }
      this.logFunc(hA, UA, V, oA, Z);
    }
    random_fn(c, R) {
      return this.rdrand_bytes(R, c);
    }
    rdrand_bytes(c, R) {
      const G = this.randomFunc(R);
      return this.wasmModule.HEAPU8.set(G, c), 1;
    }
    secret_service_store(c, R, G, Z) {
      const W = this.wasmModule.UTF8ToString(c), V = this.wasmModule.UTF8ToString(R), oA = this.wasmModule.HEAPU8.subarray(G, G + Z);
      this.logFunc(`secret_service_store ${W}:${V} size: ${oA.length}`);
      try {
        this._cosignerStorage.storeData(String(W), String(V), new Uint8Array(oA));
      } catch {
        return J.SECRET_SERVICE_STATUS_ERROR_UNEXPECTED;
      }
      return J.SECRET_SERVICE_STATUS_SUCCESS;
    }
    secret_service_load(c, R, G, Z, W) {
      const V = this.wasmModule.UTF8ToString(c), oA = this.wasmModule.UTF8ToString(R);
      this.logFunc(`secret_service_load [${V}-${oA}]`);
      try {
        const hA = this._cosignerStorage.loadData(V, oA);
        if (!hA) return J.SECRET_SERVICE_STATUS_ERROR_NO_SECRET;
        if (this.wasmModule.setValue(Z, hA.length, "i32"), W < hA.length) return J.SECRET_SERVICE_STATUS_INSUFFICIENT_BUFFER;
        this.wasmModule.HEAPU8.set(hA, G);
      } catch {
        return J.SECRET_SERVICE_STATUS_ERROR_UNEXPECTED;
      }
      return J.SECRET_SERVICE_STATUS_SUCCESS;
    }
    secret_service_delete(c, R) {
      const G = this.wasmModule.UTF8ToString(c), Z = this.wasmModule.UTF8ToString(R);
      this.logFunc(`secret_service_delete ${G}:${Z}`);
      try {
        this._cosignerStorage.deleteData(G, Z);
      } catch {
        return J.SECRET_SERVICE_STATUS_ERROR_UNEXPECTED;
      }
      return J.SECRET_SERVICE_STATUS_SUCCESS;
    }
    fill_signature_data(c, R) {
      var Z;
      const G = JSON.parse(c);
      return ((Z = G == null ? void 0 : G.signInfo) == null ? void 0 : Z.length) === R ? G.signInfo.map((W) => {
        let V = 0;
        return W.positiveR && (V |= this.wasmModule.SigningFlags.POSITIVE_R.value), W.useKeccak && (V |= this.wasmModule.SigningFlags.EDDSA_KECCAK.value), V;
      }) : [];
    }
    generateSetupCommitments(c, R, G, Z, W, V = h) {
      return this.jsCosigner.generateSetupCommitments({ keyId: c, tenantId: R, algo: this._toCosignerAlgo(G), playerIds: this._toVecString(Z), threshold: W, ttl: V });
    }
    storeSetupCommitments(c, R) {
      const G = new this.wasmModule.MapPlayerCommitment();
      for (const [Z, W] of R.entries()) G.set(Z, W);
      return this.jsCosigner.storeSetupCommitments({ keyId: c, commitments: G });
    }
    generateSetupProofs(c, R) {
      const G = new this.wasmModule.MapPlayerSetupDecomitments();
      for (const [Z, W] of R.entries()) G.set(Z, W);
      return this.jsCosigner.generateSetupProofs({ keyId: c, decommitments: G });
    }
    verifySetupProofs(c, R) {
      const G = new this.wasmModule.MapPlayerSetupProofs();
      for (const [oA, hA] of R.entries()) G.set(oA, hA);
      const Z = this.jsCosigner.verifySetupProofs({ keyId: c, proofs: G }), W = {}, V = Z.large_factors_proofs.keys();
      for (let oA = 0; oA < V.size(); oA++) {
        const hA = V.get(oA);
        W[hA] = Z.large_factors_proofs.get(hA);
      }
      return { keyid: Z.keyid, large_factors_proofs: W };
    }
    createCMPSecret(c, R) {
      const G = new this.wasmModule.MapStringRecord();
      for (const [W, V] of R.entries()) {
        const oA = Object.keys(V).reduce((hA, UA) => (hA.set(UA, V[UA]), hA), new this.wasmModule.MapStringString());
        G.set(W, oA);
      }
      const Z = this.jsCosigner.createCmpSecret({ keyId: c, large_factors_proofs: G });
      return { ...Z, algorithm: Z.algorithm.value };
    }
    async startSigning(c, R, G, Z, W, V, oA, hA, UA) {
      const LA = this._toVecString(hA), bA = this._toVecString(UA), ZA = this._toVecString(W), Eg = await this._runInSyncStorage(() => this.jsCosigner.generateSignatureCommitment(c, R, this._toCosignerAlgo(G), Z, ZA, oA, V, LA, bA));
      switch (G) {
        case U.EDDSA_ED25519:
          if (!Eg.commitments) throw new Error("commitments is null");
          return { keyid: c, txid: Eg.txid, commitments: Eg.commitments };
        case U.ECDSA_SECP256K1:
          if (!Eg.mta_requests) throw new Error("mta_requests is null");
          return { keyid: c, txid: Eg.txid, mta_requests: Eg.mta_requests };
        default:
          throw new g(`Unexpected algorithm ${G}`, "UNKNOWN_ALGORITHM");
      }
    }
    async onCmpMtaMessage(c, R) {
      const G = new this.wasmModule.MapPlayerCmpMtaRequests();
      for (const [Z, W] of R.entries()) {
        const V = new this.wasmModule.VecCmpMtaRequest();
        for (const oA of W) {
          const hA = this._recordToMapStringString(oA.proofs), UA = { A: oA.A, B: oA.B, Z: oA.Z, message: oA.message, commitment: oA.commitment, proofs: hA };
          V.push_back(UA);
        }
        G.set(Z, V);
      }
      return await this._runInSyncStorage(() => this.jsCosigner.onCmpMtaMessage(c, G));
    }
    async onCmpMtaMessageReply(c, R) {
      const G = new this.wasmModule.MapPlayerCmpMtaResponses();
      for (const [Z, W] of R.entries()) {
        const V = new this.wasmModule.VecCmpMtaResponse();
        for (const hA of W.mta_responses) {
          const UA = new this.wasmModule.MapPlayerCmpMtaMessage();
          for (const [ZA, Eg] of Object.entries(hA.k_gamma)) UA.set(ZA, Eg);
          const LA = new this.wasmModule.MapPlayerCmpMtaMessage();
          for (const [ZA, Eg] of Object.entries(hA.k_x)) LA.set(ZA, Eg);
          const bA = { k_gamma: UA, k_x: LA, GAMMA: hA.GAMMA, gamma_proofs: this._recordToMapStringString(hA.gamma_proofs) };
          V.push_back(bA);
        }
        const oA = { ack: W.ack, response: V };
        G.set(Z, oA);
      }
      return await this._runInSyncStorage(() => this.jsCosigner.onCmpMtaMessageReply(c, G));
    }
    async onCmpMtaMessageVerify(c, R) {
      const G = new this.wasmModule.MapPlayerCmpMtaDeltas();
      for (const [Z, W] of R.entries()) {
        const V = new this.wasmModule.VecCmpMtaDeltas();
        for (const oA of W.deltas) V.push_back(oA);
        G.set(Z, V);
      }
      return await this._runInSyncStorage(() => this.jsCosigner.getSis(c, G));
    }
    async getCMPSignature(c, R) {
      const G = new this.wasmModule.MapPlayerSis();
      for (const [Z, W] of R.entries()) {
        const V = new this.wasmModule.VecString();
        for (const oA of W.sis) V.push_back(oA);
        G.set(Z, V);
      }
      return await this._runInSyncStorage(() => this.jsCosigner.getCmpSignature(c, G));
    }
    async storeEddsaSignatureCommitments(c, R) {
      const G = new this.wasmModule.MapPlayerCommitments();
      for (const [Z, W] of R.entries()) {
        const V = new this.wasmModule.VecCommitment();
        for (const oA of W) V.push_back(oA);
        G.set(Z, V);
      }
      return await this._runInSyncStorage(() => this.jsCosigner.storeEddsaSignatureCommitments(c, G));
    }
    async onRBroadcast(c, R) {
      const G = new this.wasmModule.MapPlayerSis();
      for (const [Z, W] of R.entries()) {
        const V = new this.wasmModule.VecString();
        for (const oA of W.Rs) V.push_back(oA);
        G.set(Z, V);
      }
      return await this._runInSyncStorage(() => this.jsCosigner.onRBroadcast(c, G));
    }
    async getEddsaSignature(c, R) {
      const G = new this.wasmModule.MapPlayerSis();
      for (const [Z, W] of R.entries()) {
        const V = new this.wasmModule.VecString();
        for (const oA of W.si) V.push_back(oA);
        G.set(Z, V);
      }
      return await this._runInSyncStorage(() => this.jsCosigner.getEddsaSignature(c, G));
    }
    stringifyJwtPayload(c) {
      return this.wasmModule.parseJwtPayload(c);
    }
    recoverAdditiveMpcKey(c, R, G) {
      const Z = new this.wasmModule.VecString();
      for (const W of G) Z.push_back(W);
      return this.jsCosigner.recoverAdditiveMpcKey(this._toCosignerAlgo(c), R, Z);
    }
    encodeExtendedPrivateKey(c, R, G) {
      return this.jsCosigner.encodeExtendedPrivateKey(R, G, this._toCosignerAlgo(c));
    }
    encodeExtendedPublicKey(c, R, G) {
      return this.jsCosigner.encodeExtendedPublicKey(R, G, this._toCosignerAlgo(c));
    }
    decodeExtendedPrivateKey(c) {
      return this.jsCosigner.decodeExtendedPrivateKey(c);
    }
    deriveAssetKey(c, R, G, Z) {
      return this.jsCosigner.deriveAssetKey(c, R, this._toCosignerAlgo(G), Z);
    }
    async addDeviceRequest(c, R, G, Z, W, V, oA, hA) {
      const UA = new this.wasmModule.MapStringBool();
      for (const [SB, Cg] of V.entries()) UA.set(SB, Cg);
      const LA = { keyId: R, algorithm: this._toCosignerAlgo(G), newKeyId: W, playersIds: UA, t: oA }, { encryptedShares: bA, publicKey: ZA } = await this._runInSyncStorage(() => this.jsCosigner.addDeviceRequest(LA)), Eg = {}, Lg = bA.keys();
      for (let SB = 0; SB < Lg.size(); SB++) {
        const Cg = Lg.get(SB);
        Eg[Cg] = bA.get(Cg);
      }
      return { keyid: W, algorithm: Z, public_key: ZA, shares: Eg, t: oA, ttl: hA };
    }
    addUser(c, R, G, Z, W, V, oA) {
      const hA = new Map(Object.entries(W)), UA = new this.wasmModule.MapStringRecord();
      for (const [ZA, Eg] of hA.entries()) {
        const Lg = Object.keys(Eg).reduce((SB, Cg) => (SB.set(Cg, Eg[Cg]), SB), new this.wasmModule.MapStringString());
        UA.set(ZA, Lg);
      }
      const LA = { tenantId: c, keyid: R, publicKey: Z, algorithm: this._toCosignerAlgo(G), t: V, ttl: oA, shares: UA }, bA = this.jsCosigner.addUser(LA);
      return { keyid: bA.keyid, commitment: bA.commitment };
    }
    dispose() {
      this.jsCosigner.isDeleted() || (this.jsCosigner.delete(), this.jsCosignerPtr = -1, this._extern_do_log_bridge !== 0 && this.wasmModule.removeFunction(this._extern_do_log_bridge), this._extern_secret_service_store !== 0 && this.wasmModule.removeFunction(this._extern_secret_service_store), this._extern_secret_service_load !== 0 && this.wasmModule.removeFunction(this._extern_secret_service_load), this._extern_secret_service_delete !== 0 && this.wasmModule.removeFunction(this._extern_secret_service_delete), this._extern_random_fn !== 0 && this.wasmModule.removeFunction(this._extern_random_fn), this._extern_rdrand_bytes !== 0 && this.wasmModule.removeFunction(this._extern_rdrand_bytes));
    }
    async _runInSyncStorage(c) {
      await this._cosignerStorage.prepareForSyncWork();
      const R = c();
      return await this._cosignerStorage.completeSyncWork(!0), R;
    }
    _recordToMapStringString(c) {
      const R = new this.wasmModule.MapStringString();
      for (const [G, Z] of Object.entries(c)) R.set(G, Z);
      return R;
    }
    _toVecString(c) {
      return c.reduce((R, G) => (R.push_back(G), R), new this.wasmModule.VecString());
    }
    _toCosignerAlgo(c) {
      switch (c) {
        case U.ECDSA_SECP256K1:
          return this.wasmModule.CosignerAlgo.ECDSA_SECP256K1;
        case U.EDDSA_ED25519:
          return this.wasmModule.CosignerAlgo.EDDSA_ED25519;
        case U.ECDSA_SECP256R1:
          return this.wasmModule.CosignerAlgo.ECDSA_SECP256R1;
        default:
          throw new Error(`Unknown algorithm ${c}`);
      }
    }
  }
  L([i()], f.prototype, "load", null), L([a()], f.prototype, "generateSetupCommitments", null), L([a()], f.prototype, "storeSetupCommitments", null), L([a()], f.prototype, "generateSetupProofs", null), L([a()], f.prototype, "verifySetupProofs", null), L([a()], f.prototype, "createCMPSecret", null), L([i()], f.prototype, "startSigning", null), L([i()], f.prototype, "onCmpMtaMessage", null), L([i()], f.prototype, "onCmpMtaMessageReply", null), L([i()], f.prototype, "onCmpMtaMessageVerify", null), L([i()], f.prototype, "getCMPSignature", null), L([i()], f.prototype, "addDeviceRequest", null);
  const d = new TextEncoder().encode("0123456789abcdef"), p = Uint8Array.from({ length: 256 }, (tA, c) => d.findIndex((R) => R == c));
  function x(tA) {
    if (!tA.length) throw new Error("cannot converting empty hex string");
    return function(c) {
      const R = new TextEncoder().encode(c), G = new Uint8Array(R.length / 2);
      for (let Z = 0; Z < G.length; Z++) {
        const W = p[R[2 * Z + 0]] << 4, V = p[R[2 * Z + 1]];
        G[Z] = W + V;
      }
      return G;
    }(tA);
  }
  function M(tA) {
    return function(c) {
      const R = new Uint8Array(2 * c.length);
      for (let G = 0; G < c.length; G++) {
        const Z = c[G];
        R[2 * G + 0] = d[(240 & Z) >> 4], R[2 * G + 1] = d[15 & Z];
      }
      return new TextDecoder().decode(R);
    }(new Uint8Array(tA));
  }
  function S(tA) {
    return Uint8Array.from((c = tA, typeof atob == "function" ? atob(c) : FB.from(c, "base64").toString("latin1")), (R) => R.charCodeAt(0));
    var c;
  }
  function k() {
    return typeof globalThis.window == "object" && typeof globalThis.window.crypto == "object" ? globalThis.window.crypto : UI(97).webcrypto;
  }
  function v(tA, c) {
    return tA instanceof g ? tA : c;
  }
  const m = (tA, c) => {
    if (((R) => R && R.stack && R.message && typeof R.stack == "string" && typeof R.message == "string")(c)) {
      let R = {};
      return Object.getOwnPropertyNames(c).forEach(function(G) {
        const Z = c[G];
        Z && (R[G] = Z);
      }), R;
    }
    return c;
  }, T = k(), $ = (tA) => {
    const c = new Uint8Array(tA);
    return T.getRandomValues(c), c;
  }, AA = "12.5.3", lA = typeof PA < "u" && ((Us = PA) != null && Us.versions) && ((Hs = (ks = PA) == null ? void 0 : ks.versions) != null && Hs.node) ? "NodeJS" : "Web";
  class FA {
    constructor(c, R) {
      DA(this, "_logger");
      DA(this, "_messagesHandler");
      DA(this, "_physicalDeviceId", null);
      this._logger = c, this._messagesHandler = R;
    }
    setPhysicalDeviceId(c) {
      this._physicalDeviceId = c;
    }
    getServiceCertificates(c) {
      return this._callApi("get_service_certificates", { names: c });
    }
    async getCloudCosignerCertificate() {
      return await this._callApi("get_cloud_cosigner_certificate");
    }
    async pollMpcMessage(c, R = 3) {
      return await this._callApi("poll_mpc_msg", { txId: c }, R);
    }
    async pollAddDeviceMessage(c) {
      return await this._callApi("poll_add_device_msg", { txId: c });
    }
    async pollKeyConfirmationMessage(c) {
      return await this._callApi("poll_key_confirmation", { txIds: c });
    }
    async ackMpcMessage(c) {
      return (await this._callApi("ack_mpc_msg", { txId: c })).success;
    }
    async enrollPlayer(c, R) {
      return await this._callApi("enroll_player", { playerId: c, csr: R });
    }
    async requestMpcSetup(c) {
      const R = Array.from(c);
      return (await this._callApi("request_mpc_setup", { algorithms: R })).status;
    }
    async stopMpcDeviceSetup() {
      return (await this._callApi("stop_mpc_device_setup")).success;
    }
    async stopMpcKeySetup(c) {
      return (await this._callApi("stop_mpc_key_setup", { keyId: c })).success;
    }
    async sendMpcPublicKeys(c, R = 3) {
      return (await this._callApi("send_mpc_public_keys", { keys: c }, R)).keyState;
    }
    async backupKeys(c, R) {
      return (await this._callApi("backup_keys", { keys: c, passphraseId: R })).success;
    }
    async getBackup() {
      return await this._callApi("get_backup");
    }
    async broadcastMpcMessage(c, R) {
      const { poll: G = !0, retries: Z = 3 } = R ?? {};
      return await this._callApi("broadcast_mpc_msg", { msg: c, ack: !0, poll: G }, Z);
    }
    async getPlayerCertificate(c) {
      return await this._callApi("get_player_certificate", c);
    }
    async enterRecoveryState() {
      return (await this._callApi("enter_recovery_state")).success;
    }
    async getBackedUpKeys() {
      return this._callApi("get_backed_up_keys");
    }
    async requestEndUserTakeover(c, R) {
      return this._callApi("request_end_user_takeover", { requestParamsJson: c, paramSignature: R });
    }
    async sendClientVersion() {
      return (await this._callApi("send_client_version", {})).success;
    }
    async getAllKeys() {
      return this._callApi("get_all_keys");
    }
    async requestAddDeviceSetup() {
      return await this._callApi("request_add_device_setup");
    }
    async requestProvisionAddDeviceSetup(c, R) {
      const G = Array.from(c);
      return (await this._callApi("request_provision_add_device_setup", { algorithms: G, requestId: R })).success;
    }
    async requestMPCAddDevice(c, R, G) {
      const Z = Array.from(c);
      return (await this._callApi("request_mpc_add_device", { srcDeviceId: R, algorithms: Z, requestId: G })).status;
    }
    async reportEvent(c) {
      return (await this._callApi("report_event", c)).success;
    }
    async _callApi(c, R, G = 0) {
      if (!this._physicalDeviceId) throw new Error("Physical device id is not set");
      this._logger.log("INFO", "Calling API", { method: c });
      const Z = JSON.stringify({ method: c, headers: { sdkVersion: AA, mpcVersion: 6, physicalDeviceId: this._physicalDeviceId, platformType: lA }, params: R ? [R] : void 0 }, m), W = await this._handleOutgoingMessage(Z, G), V = W;
      if (V.error) throw this._logger.log("ERROR", "API call failed", { method: c, error: V.error }), new cA(V, c, R);
      const oA = W;
      return this._logger.log("INFO", "API call completed", { method: c }), oA.result;
    }
    async _handleOutgoingMessage(c, R) {
      for (let G = 0; G <= R; G++) try {
        return await this._messagesHandler.handleOutgoingMessage(c);
      } catch (Z) {
        if (G === R) throw Z;
        this._logger.log("WARN", "Failed to handle outgoing message, retrying", { attempt: G, retries: R }), await this._sleep(this._getRetryDelayMs(G));
      }
    }
    _getRetryDelayMs(c) {
      const R = 2e3 * c + 250;
      return Math.min(R, 5e3);
    }
    async _sleep(c) {
      return new Promise((R) => setTimeout(R, c));
    }
  }
  (function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    W > 3 && V && Object.defineProperty(c, R, V);
  })([i((tA, ...c) => `RPC:${c[0]}`)], FA.prototype, "_callApi", null);
  class cA extends Error {
    constructor(R, G, Z) {
      super("Fireblocks API returned an error: " + R.error.message);
      DA(this, "errorResponse");
      DA(this, "method");
      DA(this, "extraParams");
      this.errorResponse = R, this.method = G, this.extraParams = Z;
    }
    static isInstance(R) {
      return R instanceof cA;
    }
    static isCode(R, G) {
      return cA.isInstance(R) && R.errorResponse.error.code === G;
    }
  }
  class yA {
    constructor(c) {
      DA(this, "_fireblocksServerApi");
      DA(this, "_messagesSubscriptions", /* @__PURE__ */ new Map());
      DA(this, "_pollingMessagesActive", /* @__PURE__ */ new Map());
      DA(this, "_disposed", !1);
      this._fireblocksServerApi = c;
    }
    listenToMessages(c, R, G) {
      let Z = this._messagesSubscriptions.get(c);
      return Z || (Z = [], this._messagesSubscriptions.set(c, Z)), Z.push(G), this._startPollingMessages(c, R), () => {
        if (this._stopPollingMessages(c), Z) {
          const W = Z.indexOf(G);
          W !== -1 && (Z.splice(W, 1), Z.length === 0 && this._messagesSubscriptions.delete(c));
        }
      };
    }
    pollSingleMessage(c) {
      let R = () => {
      };
      return { pollingPromise: new Promise((G, Z) => {
        const W = { handler: async (V) => {
          R(), G(V);
        }, onError: (V) => {
          R(), Z(V);
        } };
        R = this.listenToMessages(c, !1, W);
      }), unsubscribe: R };
    }
    dispose() {
      this._disposed = !0, this._messagesSubscriptions.clear(), this._pollingMessagesActive.clear();
    }
    _stopPollingMessages(c) {
      this._pollingMessagesActive.delete(c);
    }
    _errorPolling(c, R) {
      this._stopPollingMessages(c);
      for (const G of this._messagesSubscriptions.get(c) || []) G.onError(R);
    }
    _handleException(c, R) {
      const G = R instanceof Error ? R : new Error("Unknown Error while processing MPC messages");
      this._errorPolling(c, G);
    }
    async _publishMessageToSubscribers(c, R, G) {
      if (G) try {
        const Z = this._messagesSubscriptions.get(c);
        if (Z) for (const W of Z) {
          if (this._disposed || !this._pollingMessagesActive.get(c)) break;
          try {
            await W.handler(G);
          } catch (V) {
            return void this._handleException(c, V);
          }
        }
      } finally {
        R && await this._fireblocksServerApi.ackMpcMessage(c);
      }
    }
    async _startPollingMessages(c, R) {
      if (!this._pollingMessagesActive.get(c)) for (this._pollingMessagesActive.set(c, !0); !this._disposed && this._pollingMessagesActive.get(c); ) {
        let G;
        try {
          G = await this.getMessage(c), await this._publishMessageToSubscribers(c, R, G);
        } catch (Z) {
          this._handleException(c, Z);
        }
      }
    }
  }
  class aA extends yA {
    constructor(R, G) {
      super(R);
      DA(this, "_mpcMessagesVerifier");
      this._mpcMessagesVerifier = G;
    }
    async getMessage(R) {
      const G = await this._fireblocksServerApi.pollMpcMessage(R);
      return G ? this._mpcMessagesVerifier.verifyMessageContainer(G) : null;
    }
  }
  class eA extends yA {
    constructor(c) {
      super(c);
    }
    getMessage(c) {
      return this._fireblocksServerApi.pollAddDeviceMessage(c);
    }
  }
  class CA {
    log(c, R, G) {
    }
  }
  const b = k(), Y = 16;
  async function QA(tA, c, R) {
    const G = new TextEncoder().encode(c), Z = await b.subtle.importKey("raw", G, "PBKDF2", !1, ["deriveKey"]);
    return await b.subtle.deriveKey({ name: "PBKDF2", hash: "SHA-1", salt: new TextEncoder().encode(R), iterations: 1e4 }, Z, { name: tA, length: 256 }, !0, ["encrypt", "decrypt"]);
  }
  async function BA(tA, c, R) {
    const G = await QA("AES-GCM", c, R), Z = x(tA), W = Z.slice(0, Y), V = Z.slice(Y), oA = await b.subtle.decrypt({ name: "AES-GCM", iv: W }, G, V);
    return new TextDecoder().decode(oA);
  }
  class iA {
    constructor(c, R, G, Z, W, V) {
      DA(this, "_logger");
      DA(this, "_fireblocksServerApi");
      DA(this, "_cosignerStorage");
      DA(this, "_sdkStorage");
      DA(this, "_deviceId");
      DA(this, "_eventsHandler");
      DA(this, "_backupStatus", "IDEL");
      this._logger = c, this._fireblocksServerApi = R, this._cosignerStorage = G, this._sdkStorage = Z, this._deviceId = W, this._eventsHandler = V;
    }
    async backupKeys(c, R) {
      if (this._backupStatus === "IN_PROGRESS") throw new g("Backup is already in progress", "PROCESS_ALREADY_RUNNING");
      const G = await this._sdkStorage.getAllKeysForBackup();
      if (G.length === 0) throw new g("No keys to backup, you must generate keys and immediately backup them", "MISSING_KEY_IDS_FOR_BACKUP");
      if (!(c = c.trim()) || !R) throw new g("Passphrase cannot be empty", "INVALID_PASSPHRASE_ERROR");
      const Z = await this._sdkStorage.getSecureStoreAccess();
      try {
        const W = [];
        this._backupStatus = "IN_PROGRESS";
        const V = [], oA = await this._sdkStorage.getAllKeyDescriptors();
        for (const hA of G) {
          const UA = oA[hA.algorithm];
          if ((UA == null ? void 0 : UA.keyStatus) !== "READY") continue;
          const LA = await this._encryptBackupKey(hA.keyId, c), bA = { keyId: hA.keyId, algorithm: hA.algorithm, publicKey: hA.publicKey, encryptedKeys: [LA] };
          V.push(bA);
        }
        if (V.length === 0) throw new g("No backup data", "FAILED_TO_BACKUP_KEY");
        await this._fireblocksServerApi.backupKeys(V, R);
        for (const hA of V) W.push({ keyId: hA.keyId, keyBackupStatus: "SUCCESS" });
        return this._backupStatus = "COMPLETED", this._fireKeysBackupCompleted(W), this._logger.log("INFO", "Key backup completed", { passphraseId: R, algorithms: V.map((hA) => hA.algorithm) }), W;
      } catch (W) {
        throw this._logger.log("ERROR", "backupKeys returned an error", { error: W }), this._backupStatus = "FAILED", this._fireKeysBackupFailed(), v(W, new g("Failed to backup keys", "FAILED_TO_BACKUP_KEY"));
      } finally {
        await Z();
      }
    }
    async _encryptBackupKey(c, R) {
      const G = await this._cosignerStorage.getDataForBackup(c), Z = M(b.getRandomValues(new Uint8Array(Y)));
      return { encryptedKey: await async function(V, oA, hA, UA) {
        const LA = await QA("AES-CBC", oA, hA), bA = new TextEncoder().encode(V), ZA = x(UA), Eg = await b.subtle.encrypt({ name: "AES-CBC", iv: ZA }, LA, bA);
        return M(new Uint8Array(Eg));
      }(G, R, this._deviceId, Z), encryptionAlgorithm: "AES-CBC", iv: Z };
    }
    storeKeyForBackup(c) {
      return this._sdkStorage.setKeyForBackup(c);
    }
    clearAllKeysForBackup() {
      return this._sdkStorage.clearAllKeysForBackup();
    }
    clearKeysForBackup(c) {
      return this._sdkStorage.clearKeysForBackup(c);
    }
    _fireKeysBackupCompleted(c) {
      this._eventsHandler.handleEvent({ type: "keys_backup", keysBackup: c });
    }
    _fireKeysBackupFailed() {
      this._eventsHandler.handleEvent({ type: "keys_backup", keysBackup: [{ keyId: "", keyBackupStatus: "ERROR" }] });
    }
  }
  var rA = UI(79);
  const GA = k(), _ = { name: "RSASSA-PKCS1-v1_5", hash: "SHA-256" };
  async function uA(tA, c) {
    tA.md = rA.md.sha1.create();
    const R = rA.pki.oids[tA.md.algorithm + "WithRSAEncryption"];
    if (!R) throw new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");
    tA.signatureOid = tA.siginfo.algorithmOid = R;
    const G = rA.asn1.toDer(rA.pki.certificationRequestToAsn1(tA));
    tA.md.update(G.data), tA.signature = await Ig(c, tA.md.digest().data, "raw");
  }
  async function HA(tA, c, R) {
    const G = rA.pki.createCertificationRequest(), Z = rA.pki.publicKeyFromPem(R);
    return G.publicKey = Z, G.setSubject([{ shortName: "C", value: "CA" }, { shortName: "ST", value: "BC" }, { shortName: "L", value: "Vancouver" }, { shortName: "O", value: "Dynamsoft" }, { shortName: "CN", value: tA }]), await r("csrSign", uA, G, c), rA.pki.certificationRequestToPem(G);
  }
  async function JA() {
    return r("generateRSAKeyPair", async () => new Promise((tA, c) => {
      rA.pki.rsa.generateKeyPair({ bits: 4096, workers: 2 }, (R, G) => {
        if (R) return c(R);
        const Z = rA.pki.privateKeyToPem(G.privateKey), W = rA.pki.publicKeyToPem(G.publicKey);
        return tA({ privateKeyPem: Z, publicKeyPem: W });
      });
    }));
  }
  function VA(tA, c) {
    const R = rA.pki.privateKeyFromPem(tA), G = rA.util.binary.hex.decode(c), Z = rA.util.binary.raw.encode(G), W = R.decrypt(Z, "RSA-OAEP"), V = rA.util.binary.raw.decode(W);
    return rA.util.binary.hex.encode(V);
  }
  async function $A(tA) {
    const { privateKeyPem: c, publicKeyPem: R } = await JA();
    return { csrPem: await HA(tA, c, R), privateKeyPem: c, publicKeyPem: R };
  }
  async function XA(tA, c, R) {
    return { csrPem: await HA(tA, c, R), privateKeyPem: c, publicKeyPem: R };
  }
  async function Ig(tA, c, R = "hex") {
    return r("signRSA", async () => {
      const G = rA.pki.privateKeyToAsn1(rA.pki.privateKeyFromPem(tA)), Z = rA.pki.wrapRsaPrivateKey(G), W = rA.util.binary.raw.decode(rA.asn1.toDer(Z).getBytes()), V = await GA.subtle.importKey("pkcs8", W, _, !1, ["sign"]), oA = await GA.subtle.sign(_, V, new TextEncoder().encode(c));
      return R === "hex" ? M(oA) : rA.util.binary.raw.encode(new Uint8Array(oA));
    });
  }
  async function jA(tA, c, R) {
    try {
      const G = c.match(/-----BEGIN CERTIFICATE-----[^-]+-----END CERTIFICATE-----[^-]*/gm);
      if (!G || G.length === 0) return R.log("ERROR", "no certs found"), !1;
      if (tA.length === 0) return !1;
      const Z = G.map((oA) => rA.pki.certificateFromPem(oA)), W = tA.map((oA) => rA.pki.certificateFromPem(oA)), V = rA.pki.createCaStore(W);
      return rA.pki.verifyCertificateChain(V, Z);
    } catch (G) {
      return R.log("ERROR", "Verify certificate failed", G), !1;
    }
  }
  async function ag(tA, c, R, G) {
    try {
      const Z = rA.pki.certificateFromPem(R), W = rA.pki.publicKeyToPem(Z.publicKey);
      return await async function(V, oA, hA, UA) {
        const LA = await GA.subtle.importKey("spki", S((bA = hA, bA.replace(/(-----.*-----)?(\n?)/g, ""))), { name: "RSASSA-PKCS1-v1_5", hash: "SHA-256" }, !1, ["verify"]);
        var bA;
        const ZA = UA === "base64" ? function(Eg) {
          const Lg = Eg.length % 4;
          return S(Eg.replace(/-/g, "+").replace(/_/g, "/").padEnd(Eg.length + (Lg === 0 ? 0 : 4 - Lg), "="));
        }(oA) : x(oA);
        return GA.subtle.verify({ name: "RSASSA-PKCS1-v1_5", hash: "SHA-256" }, LA, ZA, new TextEncoder().encode(V));
      }(tA, c, W, G);
    } catch {
      return !1;
    }
  }
  class ng extends g {
    constructor(c, R) {
      super(c, R), this.name = "TimeoutError";
    }
  }
  class lg extends g {
    constructor(R, G) {
      super(`Setup failed with reason: ${R}`, G);
      DA(this, "reason");
      this.reason = R, this.name = "SetupFailedError";
    }
  }
  var BB, rB, eg;
  (function(tA) {
    tA.PENDING_PROVISIONER = "PENDING_PROVISIONER", tA.PROVISIONER_FOUND = "PROVISIONER_FOUND", tA.MPC_SETUP_REQUESTED = "MPC_SETUP_REQUESTED", tA.STOPPED = "STOPPED";
  })(BB || (BB = {})), function(tA) {
    tA[tA.INCOMPLETE_WALLET_SETUP = 1e3] = "INCOMPLETE_WALLET_SETUP", tA[tA.INCOMPLETE_DEVICE_SETUP = 1001] = "INCOMPLETE_DEVICE_SETUP", tA[tA.INCOMPLETE_BACKUP = 1002] = "INCOMPLETE_BACKUP", tA[tA.MAX_DEVICES_PER_WALLET_REACHED = 1006] = "MAX_DEVICES_PER_WALLET_REACHED";
  }(rB || (rB = {})), function(tA) {
    tA.configurationManager = "configuration_manager", tA.vaultService = "vault_service", tA.signingService = "signing_service", tA.zService = "zona_service", tA.policyService = "policy_service", tA.offExchange = "off_exchange", tA.nckms = "nckms", tA.ncwService = "ncw-service";
  }(eg || (eg = {}));
  const yg = { dev9: { trusted: `-----BEGIN CERTIFICATE-----
MIIF0zCCA7ugAwIBAgIULJ0rd/UJ8qkUxAnOIGSPp53MMMcwDQYJKoZIhvcNAQEL
BQAweTELMAkGA1UEBhMCSUwxDzANBgNVBAgMBklzcmFlbDERMA8GA1UEBwwIVGVs
IEF2aXYxIDAeBgNVBAoMF0ZpcmVibG9ja3MgREVWWCBSb290IENBMQ8wDQYDVQQL
DAZEZXZPcHMxEzARBgNVBAMMCnRydXN0ZWRfY2EwHhcNMjExMjA5MDkxNjQzWhcN
MzAwMjI1MDkxNjQzWjB5MQswCQYDVQQGEwJJTDEPMA0GA1UECAwGSXNyYWVsMREw
DwYDVQQHDAhUZWwgQXZpdjEgMB4GA1UECgwXRmlyZWJsb2NrcyBERVZYIFJvb3Qg
Q0ExDzANBgNVBAsMBkRldk9wczETMBEGA1UEAwwKdHJ1c3RlZF9jYTCCAiIwDQYJ
KoZIhvcNAQEBBQADggIPADCCAgoCggIBANH80Sy5+RZDVRqrKXb7uc1vflFA+Q/1
6ejZF3GuJyr8IkITevEwi2qYEwt0vRYc1pQ9fqRMIRNChNWjE/mxMGPgdyPWi2xB
4bA2jCj9qdAIoMbgNO8ZnH0VWk5YMyuMq1cCYmBoQ/DPqQjkNlH/Na1C0rEe8U7T
ZmW3yOB1HNZLeL6vzNyR+k30gJ7MZT59YCZAFDLgEHP/rIeNKOci2Baz/iYv+9bf
fKVxTStzazGZ5W3utGicZYm4Otfp8gOEG/bhq0UAPaibMubVI2VzOFvxJiRdS0ya
gjt9x95JIOYM8LUUIWML+EnE/N3j1wUt8Sa9M9Ewo5SMNz2rCBRfNgK3e0j25s8D
EIWT/k9mU3twizaCV3/IyXq9pgSVFayvEHd+fPUERCy6aZC2USMf/hjHNrzjlzeb
pnLbhiAnDH/kDjVD7pDtY6Qlw/NGG8EdiYDQesuGeZ4+D2hLMFPJNllQvkD8YuJA
3+Hnw6f2BaJxtTlfLqFrFwR56zlHOAFpEAHoX2y4EP8b2ffEwbwal0fpEnDQXpfO
nSTZqWWrFyjtb4+dHnIMIeWC1cggFE41t5Ah2dKKtn76QjIiJsrj5M16UObshltW
jkLMX8vqdPuuoEHQphbGwOOZzGK6OK2RUPjlONA/wxdp/vbAkHeT7dpT3ENKXv34
8IJFDlPIrZ+zAgMBAAGjUzBRMB0GA1UdDgQWBBRyhfEg9QYR6wzPey4TamWX0KAC
NjAfBgNVHSMEGDAWgBRyhfEg9QYR6wzPey4TamWX0KACNjAPBgNVHRMBAf8EBTAD
AQH/MA0GCSqGSIb3DQEBCwUAA4ICAQAkP1GqhlA9RDzX/ysGf8c+j0Q5ifLcAGwy
36LLcy3+BZLdN3Rl6OyPpUZx7T3wLSL7X/gDFcNfpoE7iAfgFebecN8bx3mgnkry
VB98u/ZrMa/6r6cI7/jm40hn21VufjPqkWZiFowIk3XWEr0QZHWSQf0ZWcFN9gpJ
Ku5gaMKJhPWnf4RZQ6gJuXeE1qHLCPqla3TZwq7Kqp/4tBgyXsb1JSh9pwi5aRgv
5g7qn0S3VwkuVHiWEtZTuEjLvg6ZVZYTaIPT+ju4cglV8Jkk+y8uMvoM8QArcFS7
2zk9+Q4sWH+sY4ehZX1RBCIu119IhJgvIGAnCMOAVllAJR8EhjRnrZeUrWKhHBxL
2IzKvaw9H9rH1uWlT6aeD3V7a9Ghe0Im1mAAgciw6o2MNMkvpTp3z4zFaWBIMrUA
rTQeAfgvWoqKDdiCApyYbwA6sENqbAxJKxqRrj9PVzKbyqMypG2+9bRdBRl1E8YI
8mt1MIqTENMI6EtOrxCG8yPY/J9Ev6lSkVeW4iJhXcrh0KvYSYI7q1GCeKnRlTcb
DMTYDq+VazF6XplVKgUhljM5VE9Zzr/cYonrkoSN/tOCBpCrCGXG+lSUTzyLtsqQ
c1FJmwpltmasAYdzM7MRTLNVFQfecv68tiAweJWIz8g30mDL12vIvcmvG9k/95tq
kop/tNXO7w==
-----END CERTIFICATE-----`, untrusted: `-----BEGIN CERTIFICATE-----
MIIF7TCCA9WgAwIBAgIUUGG9WoUjVuHzv4Dh0x0kaaJq/2YwDQYJKoZIhvcNAQEL
BQAwgYUxCzAJBgNVBAYTAklMMQ8wDQYDVQQIDAZJc3JhZWwxETAPBgNVBAcMCFRl
bCBBdml2MSowKAYDVQQKDCFGaXJlYmxvY2tzIERFVlggdW50cnVzdGVkIFJvb3Qg
Q0ExDzANBgNVBAsMBkRldk9wczEVMBMGA1UEAwwMdW50cnVzdGVkX2NhMB4XDTIx
MTIwOTA5MTY0OFoXDTMwMDIyNTA5MTY0OFowgYUxCzAJBgNVBAYTAklMMQ8wDQYD
VQQIDAZJc3JhZWwxETAPBgNVBAcMCFRlbCBBdml2MSowKAYDVQQKDCFGaXJlYmxv
Y2tzIERFVlggdW50cnVzdGVkIFJvb3QgQ0ExDzANBgNVBAsMBkRldk9wczEVMBMG
A1UEAwwMdW50cnVzdGVkX2NhMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC
AgEAyyVXQlsDbwBem0DNb1wNDQDMg9Al+yGOMxZ2UhQrbZUJKZSDVTIET5C22Cs9
MO7v/KjYfBwlrV9NGkUI4BT7eXcwVwmMH4fH+FlpV0O7RQ8HgbN5r+RHyjo9gV5R
na+jcvUUdRfOBJSrcT9sP0B+1JXDnnftTzvw9fRrcvJSgc2CadmFpGRzYOU65sq8
XlJw7vCyg2LIiU6riMwJmnyrOrV5FNLlQWqYnimTl/Qo0cJbqazo1K5afKmxFXrN
Iwjp0wMBQDwoWDytMubT2nt3ioc+WM0ADKCN8F4PYMkAJgnmSyqmnB5ePRvBZLOQ
fJG3Ff773uu0XvVieOMJcQBNrF9jMKG6LfGyiRNu2Wcoi7Hxg24Y/+jUkD9kHFCS
zmqy8djIIVF6AjeIjvwjI2PlA6PXwnWMG0cpf1uhEubnLJiURFI24AGIJfBsRO1S
2jDUMqlRZLfUg3/CnkgF1PNl/REip2yBUJnxbxP2xDxAtUZVg5MVjD/Hxs+09bg2
fGuPpYh22yRuGnZxoJdRjr3ijkgPQZYVTOzkaQzrEilXADJ5H9LB8lEUyVyYOTMH
LEw9LC4X5IN1k5JRrV9Ro23yN9hQ4MC1KvYs3ov41W6Oc8Og30Yur58AD8giOcHV
gFeykqr+sEkKZgNVf1tlPhOmdqGuu0mWoP7eTRGxnM5Xhj8CAwEAAaNTMFEwHQYD
VR0OBBYEFGW4ZGHmItgAQU8/h9//zg+Wew2BMB8GA1UdIwQYMBaAFGW4ZGHmItgA
QU8/h9//zg+Wew2BMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIB
ALNJKECDhr1WNfJc7n50Wy1vGbH0jnQK5G3zidZ7A2W9qvDFoRcJv+M0asAq0ROA
0STb8nnwgpmG3tz+tCDcw7Mj4j6fnxeBOwKOtV/PxQRKTHWao4KickjEYBvmnJ/v
aTmsc+nwv44j3nJ3KFiuj9AicXYB0CudkMKtvzWb4rAh1rCfpIBonuGSioyNL8AM
xSEvHj7VnBlgM7FZEt2zMe+4L3xfL9bLaCJtkQOl6lVP1svbuqGg6UaGX29s3hHZ
ts2Dx4BEIigJgrNqp0jrBFyQRheOQfvP3rgbBxmhV9wMgpoyqPElrOxVcgxgOuUV
y7Kin/Y+RwnQjHgEXhqONqE7bT9DeGuSxMnS095iWIrqx5H5JDZWPKJ9bpm8JtAq
RcJHzlet3Wq3Ealx0rhZ2VuGgXYYQ/C1vKQomdm55ZhuMh1prn7iUsZ8atOwY6GV
KLi5RjDIkMrelfJZD6BZ6i117diSyOmIUigyH2C+rkMREmeRIDsaUSsY/IY76F/T
tIKQjZD5HqYpopOd2eg3gI5dU+o48ESGl/HHIgqrLWy9UjuIEqrjokZolTaiCRpK
V9b0y/a9ofxBrPMCTRtQsnLkO8b68+QL1BWHBYFWt74XCgJQNDoXvllohvz+PxzR
Y4IAOHvo+YPU25h8bWH0KcFytVr9uorMLAqE2BTmqJvE
-----END CERTIFICATE-----` }, sandbox: { trusted: `-----BEGIN CERTIFICATE-----
MIIF2TCCA8GgAwIBAgIUWuz/X2fXveLG4H4pT4WIJ/sX16UwDQYJKoZIhvcNAQEL
BQAwfDELMAkGA1UEBhMCSUwxDzANBgNVBAgMBklzcmFlbDERMA8GA1UEBwwIVGVs
IEF2aXYxIzAhBgNVBAoMGkZpcmVibG9ja3Mgc2FuZGJveCBSb290IENBMQ8wDQYD
VQQLDAZEZXZPcHMxEzARBgNVBAMMCnRydXN0ZWRfY2EwHhcNMjIxMjI4MTEzODMw
WhcNMzEwMzE2MTEzODMwWjB8MQswCQYDVQQGEwJJTDEPMA0GA1UECAwGSXNyYWVs
MREwDwYDVQQHDAhUZWwgQXZpdjEjMCEGA1UECgwaRmlyZWJsb2NrcyBzYW5kYm94
IFJvb3QgQ0ExDzANBgNVBAsMBkRldk9wczETMBEGA1UEAwwKdHJ1c3RlZF9jYTCC
AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALw7pGawxQTspWy1B8V+jGtj
tgv+H6DJaXMP+VED0GTJMHCWMj5L8ugjJmcF9AoaWT5nMVSCblGw+U7e6E0XaNA6
+AWJb1QTgqlgKJQY1JjMw65BAxLQnC8XeKD3ELFzdO2yPkp/JEn8E1ddy+FyTTOH
SL5hSrlWtxc/6h5GROq5UiSfnGmrHrr3hl6rTOT1laBoF9c8iltGBuH41jyF7OFB
d68Fv4Gtq5KYDahlYygPlJ1LnsRdIQjoqpi3W0UbclYFi6jSdnmpa8shLGzWu32G
JxSd7mythsM+OsZ1huIlZSPrtMgbtgkqe0ZF3+mgc4y5Lw5sfYhSrhgtGLDl6KyL
Cjo8KrB6ZtZ8wtlCoeyBdSBBmHIBKPAvaqFUjVJ+WfuL5gMjo9wXvXdiRF2YIcn1
1FU/uxXZ6OocoIcGFxD5Wx6RJ4/k61Xdf5PIOkD61UBp7u9RjTigV9Y9NpK5B+cL
oo2AJVpbxYO4l4iz+xSfHKEdQZCEFvrAKq5M3kRj2n19ecC9eQKShYm8ny8ujX0g
nDpOmghWoHBj254mhC1ZoZdODhkhrvozTejyBDxWN/8nv6RrOBgAGpcqGD0CgwZE
YAouNIV/rY8l5ZcNEoItPFovV/LblAWxgZBEZZx+Iz6LOhedtOEKJmnN8DHEfUhu
S4aX2AkM2npR4hl2VAeJAgMBAAGjUzBRMB0GA1UdDgQWBBQuVBp8NM7EXdAH/u3b
2ZBr5RyBIjAfBgNVHSMEGDAWgBQuVBp8NM7EXdAH/u3b2ZBr5RyBIjAPBgNVHRMB
Af8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4ICAQBGrR2ul2IAUZplMpk1IlzrGx6s
j9Fk5ccgnOS39F85DJPx0tN6YXeAbsWNYhaAKR7G0O06N1PtvG3+Ph1jfgidDVIs
VtaCIwXKYFHB/9mXUXOXJeOw5M4KPpC6GyMK9SguTABhFiw6WGKGmH+ueqqKJ6z+
+UQyFu0zIvWQFVZcbhFwf1MZUXn/t81poKq5NkzfjDalA5Vjmr3ZPpW8B2qGr+EN
iu+Ncj9t0q4YomIMiRoZxWbdMgEze2ObY8oetAlYTppbtkl9Y7ZWI+lnzoLmrL+W
dUH831PVDXyiG5Mag/USd4ypBf/CmRAXcS0JG0e//2gOM0RLMYtTsJ82/4gfFqkO
7ORKNQ9jOkcGO7V6KUwbC00NFthjl+Kap6CCpQgcfKsg/dsKHmsZvDQtzDL/UVc/
DEkLwGb4GuDVJyXx3eW60036zWo23YKZFzJ04O9IQbyvl+LhuLrB0pmJyOIuRzqZ
rb3rEn4tsNnBbB8hoSx+I7oh0mMH2pCYNWq/JPYoNYfC8ZrN09wtpbWyXVJqYojK
+5o+z8LXqfo1PlhgyOf263He/YeyBlpSNZx3Wp9qygvvzRXzJLlzHTguTvfTlEd/
w09M8iCsamXm27E8xuDq3yz8+ear9QzGmni6CQ0Ge5ExnK6E3a9sodXw9c4+i5qI
md5/tcPgomwiTtboYg==
-----END CERTIFICATE-----`, untrusted: `-----BEGIN CERTIFICATE-----
MIIF8zCCA9ugAwIBAgIUdf7KAJXiMjs2yTqaLMynrEc30O0wDQYJKoZIhvcNAQEL
BQAwgYgxCzAJBgNVBAYTAklMMQ8wDQYDVQQIDAZJc3JhZWwxETAPBgNVBAcMCFRl
bCBBdml2MS0wKwYDVQQKDCRGaXJlYmxvY2tzIHNhbmRib3ggdW50cnVzdGVkIFJv
b3QgQ0ExDzANBgNVBAsMBkRldk9wczEVMBMGA1UEAwwMdW50cnVzdGVkX2NhMB4X
DTIyMTIyODExMzgzNVoXDTMxMDMxNjExMzgzNVowgYgxCzAJBgNVBAYTAklMMQ8w
DQYDVQQIDAZJc3JhZWwxETAPBgNVBAcMCFRlbCBBdml2MS0wKwYDVQQKDCRGaXJl
YmxvY2tzIHNhbmRib3ggdW50cnVzdGVkIFJvb3QgQ0ExDzANBgNVBAsMBkRldk9w
czEVMBMGA1UEAwwMdW50cnVzdGVkX2NhMIICIjANBgkqhkiG9w0BAQEFAAOCAg8A
MIICCgKCAgEA+F/aQW/ZW/fD8MrJr+GYUbMmpJz85njDrADUEYPPqAIeEFBN0SSN
DZsfdL9pQmO2rYedkqiZ5e/7hcPPnIZ4oZp6QhSI8t5sfd2eHvfs1k7kYyH6HbvN
LkZ8HSl0FgSXsmLcs4qMtAtgIaFCfedizMaU+rrvgPjIIqA8lpUaiv00X1xu7NWx
ldreO/6eYqSxh/gy+9QGHAjt/ok9DUPfyr09U2IAJiwiKGRkUJawbNqxQTxeVA3u
6NFnDJNPJjHeDH29NqSdYaaIDC2EY75zZ8BhkuNNBLe+/khiO/UwLJXceR3HAzkG
lJ0ohLWReu/islT9rzGA+oHSWAa9BAeURx97L2Dxhm1TFdIqKqmJBj68/P1qXECx
Yq0TEd75QQA6EaE89HXjgsQHbyBLi9nl2ZbVXRvL2SwS6lCYiIk0QL9Lp4lbYpZf
iDKOnekotEYAoED1nYyAlY47miNBB4xzlAm6MgLjBNL2kQYn2c1Ed8zddw2OH/jX
C6RjMtLg+paIdTc0k36nncZmg/L/js72TdRQpy5UeNUeaVqqOdSohHdYYmo8ooDj
YV7iVXGWddjG4TxKVTYSmbkGztSKAWA9em4H2Z/XK/O0wugoN0dWGGTPv6b8F3va
9TsilkYe4QT43s/JorYu2Uiyv836oV9FVamtf1Z+pXGrQtpaw5oP4KECAwEAAaNT
MFEwHQYDVR0OBBYEFFnU3eq/EkS7ZH33ldhwMZ79R/t7MB8GA1UdIwQYMBaAFFnU
3eq/EkS7ZH33ldhwMZ79R/t7MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEL
BQADggIBADuXE7OxyHOe/jVTb0ph59ZndKZoFsN98Yl5MsPlvKT10XYf2RM2z1Il
pv1SmcEZoMcpah21Rud5orMSWVYprNOzyhU6gysR1dxBKDvoRZ7mAK7p9oK846Ra
p6z8Teh85BTphi+NbFa9mzvmuux4HMVm+1m7SPOWJ+FItNbfHoAu46i2/E4Anwf+
VquMfFlEL1fLrEFeEUsDQmjd1/BmCM6HMxrHhZqkAcbzfp+uyAhsr00ny1m6d8ra
1VeTrZfuERC9gu8B5rnyPHPZylVIElykMY0Y9ItRYuVxZAWvKwcOPD8YU4KQHnRF
wJIqq7XnlRyMGFdNC0EbDYON7iYt0CRgUp67GDUle3FBRBuqi9zjf2TZ7PWT/bGt
jV3j9LDWOdknw1vfqTfS/T/PoEScievTWBCy12prO2kyxSXzRm/8y44Ek1UrjWQx
JopJAV5wTyLcBeNweahEWQuWMWI2lwoKpUOEtyVnpdPoXacsQlbzufWcRVPVn6L9
GngiMJ3B2pZRpxzgvIc0rGz9VL8zPRfuyuAGKH3FyVY0FFtRgOADi8n/Zqm0WKAU
PHiCyCXgFp5W0n1edICrPCqCVnoZRX00E9zslO7P1WjMIVj3Dtp3JPttFZJuKi46
LPQfBVERcqQ17Rt0+EOn8rDMvRsn8hvSYFyKlIAPBhoAo8JQ8qoz
-----END CERTIFICATE-----` }, rentblocks: { trusted: `-----BEGIN CERTIFICATE-----
MIIF3zCCA8egAwIBAgIUL459KXYmrjlxVnPdbHGc5asySM0wDQYJKoZIhvcNAQEL
BQAwfzELMAkGA1UEBhMCSUwxDzANBgNVBAgMBklzcmFlbDERMA8GA1UEBwwIVGVs
IEF2aXYxJjAkBgNVBAoMHUZpcmVibG9ja3MgTE9DQUxTVEFDSyBSb290IENBMQ8w
DQYDVQQLDAZEZXZPcHMxEzARBgNVBAMMCnRydXN0ZWRfY2EwHhcNMjMwMjE0MTI0
NDE5WhcNNDUwMTA5MTI0NDE5WjB/MQswCQYDVQQGEwJJTDEPMA0GA1UECAwGSXNy
YWVsMREwDwYDVQQHDAhUZWwgQXZpdjEmMCQGA1UECgwdRmlyZWJsb2NrcyBMT0NB
TFNUQUNLIFJvb3QgQ0ExDzANBgNVBAsMBkRldk9wczETMBEGA1UEAwwKdHJ1c3Rl
ZF9jYTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKuWDSkLDoeW1aat
XVtz8d/K0JoAZ2PcSB0BAidf1UPkIMqBhiz+N9vQuEWJO+AtXb6kyWwnYhhS+0jN
gyvRG3xt7468CXVmPt8kVjyE80bonRMepMEljtEtxpW6sYyhVjqgpk9QV+/FWrn7
Q1JGUm4pYPpn0NkGoojPyUGTFSvguOpSMPz31tQEMvpn/Q561NO/YG8TXpNIQyMD
E/pkYAJP/bJtCBhUY8DKJv+H+pRIbdWg3lgV/VD9S5b87PX/PWugBh7kBQjTvfR7
06+5YB7kuMeg1W/ks4krUaj6rlIojE3Eqsy+oKrnRVbZ79YbFrJ7XIoz/iwphxs9
vlz6C6y09IXTITp202NHLqYBI7GrUY4H4bP2/jBX4qTVZKjO7Jx/JTI1r3UkxPWa
YtmUs9WnpnSrs/wOvlNA7TSq0b6j5Y6EeXfU8kuXFJRnS6jYsWc+SyXX4uR7aoCs
uxoZuAz3yTV7yvHVsMZ0dMM16jXPIrqVm8HErzYcS5NK+mAjWaBZvdW+ejBCO/qX
PrpkuW2zDcGk0pLyoVOlqEOQ3mCeXjqtxt6DbET++gDsSHNh4tu85qtUO0opQXer
P0q2gsonnfmUSPYIdAhoOuhRSIZocc06naCvofxA2adDn6w870dr+uzNZ1jKqxoA
s4a7LiMR1s8JS6LhqCaK4GFd9ZojAgMBAAGjUzBRMB0GA1UdDgQWBBTRaTsB7HOn
+W8GU29AWE4EhZ7KRjAfBgNVHSMEGDAWgBTRaTsB7HOn+W8GU29AWE4EhZ7KRjAP
BgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4ICAQAfaTEO1mo27gYQZeYJ
fzwZnT5Ejd784DuIZ5GXdRPP5tgxCcGT0yHfSeBzlvMymrdLBttwqcWsWaKtsRPQ
lnwKb33u2Tq8HakzIfKoY/pH9szujifPFPXVpK5+8a5BKwfzlHA73VMm5YRrwMcZ
0mpCObLWBc+lGtopKuve5yTU6/s+df9WhW8aaCoubg+g93KLIOIj6Fw7UgqFG3tb
aV5vgNiacSQT6mQqY62X31e+qvB2URVmCF7lu3z7bOiSja+FGH5+UWji8r/t6Nm3
2y995PPMn1QhVZ5ivFe6e8QuKmFs4gq0s/ih+aup7kOMYGO1Da4tQX5sU/aO3Nde
gL1Ui3Y2R4JBW7LmeqmpKwL61/CNj+r4Kmrc/lg2QjtVGHQsF0kmq2HS6tGUKGAz
0/EMFwERg+aQHsiHVOTIA02Z6KYM3rL0WjXhH7T+2tsdIGm7AsZZpp/aUHQRFzm7
yGyqHUEAux/9F9inXofilZS3Rmde6e5gurfpg1eHAbHE48jZH/2PG08elrhy+6zI
0OhHK0Gewqc4xtLvmUCNkKCBoaXefDUAkEoGtamTcJ/bLf3fIYzanQFJPmoe9/Fk
CPE4NRdY3Aaxao/7jCxUMBWHwtTITrhOgf+dKPlKyY6RbyKfQzHttNKJ6o1Rlq2v
dGMlpWXctqBPxcRANDTJiuSknQ==
-----END CERTIFICATE-----`, untrusted: `-----BEGIN CERTIFICATE-----
MIIF+TCCA+GgAwIBAgIUX6sp08uVtYQh172uXStVpJbjcSMwDQYJKoZIhvcNAQEL
BQAwgYsxCzAJBgNVBAYTAklMMQ8wDQYDVQQIDAZJc3JhZWwxETAPBgNVBAcMCFRl
bCBBdml2MTAwLgYDVQQKDCdGaXJlYmxvY2tzIExPQ0FMU1RBQ0sgdW50cnVzdGVk
IFJvb3QgQ0ExDzANBgNVBAsMBkRldk9wczEVMBMGA1UEAwwMdW50cnVzdGVkX2Nh
MB4XDTIzMDIxNDEyNDYzN1oXDTQ1MDEwOTEyNDYzN1owgYsxCzAJBgNVBAYTAklM
MQ8wDQYDVQQIDAZJc3JhZWwxETAPBgNVBAcMCFRlbCBBdml2MTAwLgYDVQQKDCdG
aXJlYmxvY2tzIExPQ0FMU1RBQ0sgdW50cnVzdGVkIFJvb3QgQ0ExDzANBgNVBAsM
BkRldk9wczEVMBMGA1UEAwwMdW50cnVzdGVkX2NhMIICIjANBgkqhkiG9w0BAQEF
AAOCAg8AMIICCgKCAgEAtkLGIDxz7Bj8oR5ApgSSkARc0eDi3KEtL6otkLS1M84K
6csKrJuJWK/Gd/JPXHeJa2bmJ+AoNf+IXY8auK/GS3gTNnYEchQk5iWJvLYxlBgq
Ji66yDj/kDBz8EPV3ptlWzzP/mmenmQxwpB1nKEGMXK2rSziIw0aHJ0dviRaABrc
4HKVfzZi+V9JegxZZjSRM1IyMG2Bh81rKwmp5oOve49vVlqRAYuvuSuO48Qk/wmT
smgRAuxvQzWDm6V05cApZ5yQN5b1BR62zhRYzG0pYvzgP+0/sMTypRyY3XGa8Yy5
pdaWkE2kZ+mGykyHBV5v7rBx6PSq+BQ+oBDz68cwPXu60Gqn9kfJ7ogeAAPDBMkX
6IJe+UoaGtmBUEv58NQl9cFxj59P71vsFrXEZ67sngLoA7HOIA0JdEx60bXO/Yif
jQx7u4MGY3app3+kWrIhy/P4NT8Uydg7jkbobFx5mV8psOn2Exd5hQCsq60ZbpzQ
zMgzkoOAaQz93zyIJ/SbuV0CT9A7cYFw/aXRSbtIwoHVXsM8u+WlMGhhi0mZgOG7
dxcTDHd1OI1Q/zsHR/RmQJNib+2YQiXy9YR/eIHZCMq4kXfoe4n8MytMOBgbbavL
ydAVY1shc7kpGYD4m/UmXuhtniMDEatlb6/pIL07tRyLyq1mRqTQxio1fzO93oEC
AwEAAaNTMFEwHQYDVR0OBBYEFKQUXiBx9vP3CX7AdB2EzUThJugDMB8GA1UdIwQY
MBaAFKQUXiBx9vP3CX7AdB2EzUThJugDMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZI
hvcNAQELBQADggIBAJGBsqGrOcYSvZ5FSPNzf3v03P5uoB4b9HTeg/aQhwUXkQ8J
drFLR+cTOovpReOA+qotwGstOuyLV+4EZ7lxFqDiPVw8rfEWteWPf/mSL86KST6l
/IpPZPoET7Hxhtk1kOsbtRfRWWuhipgaY6R82evlTHo3bJjG2ITAYt5BI6sFlAzd
+BH/mdGu9FMV4Dz1cPzpgFtfyPfDfFDPGBdJFOupaOAoaMZJQvy+jkbfC3tTF2Qo
NhV2FZPTQ1jHwrBA+P6QeWlsO3v/fHugXOOVDxPisuYcHzSR58Amp6YM/pByX7lj
uSR+oIJDIP9KEtmNey51Ju5XWsDL7Kn2BV+TyNFOAK5VMqN8J1obwvUcS0TjecQD
QuLqfUxPDk90x9uwIQrun9F1ll6p5NoWVZL6W0VG51ZMud9gbjufTmZOI2F84Zz4
adAXnK2tP3ISp0491fFaSSRzw/d29G6SLbv0lrvw91nl/hPWfJWQAzGoKc0JTzBe
O2JCRgOl6FIbKEo3unMUGvU0C9FHrwSyLoUObZoStLlZDZwMAXcXObtK9tqU8Gle
5iTIQ8YHfsVLGohqxArWadfDgFAhOpvNDOdt01B+wEMYePYYrtm6QyikHmnLm3mN
WTiDPX8UhwiksN9Uh96U2OIMTNIy9rx5fZQf7nlpN7x8lqYyxI6aCofyKBa4
-----END CERTIFICATE-----` }, production: { trusted: `-----BEGIN CERTIFICATE-----
MIIF1DCCA7ygAwIBAgIJAJHFOrg39glQMA0GCSqGSIb3DQEBCwUAMH8xCzAJBgNV
BAYTAklMMQ8wDQYDVQQIDAZJc3JhZWwxETAPBgNVBAcMCFRlbCBBdml2MSYwJAYD
VQQKDB1GaXJlYmxvY2tzIFByb2R1Y3Rpb24gUm9vdCBDQTEPMA0GA1UECwwGRGV2
T3BzMRMwEQYDVQQDDAp0cnVzdGVkX2NhMB4XDTE4MTIyNzExMTIwNloXDTI3MDMx
NTExMTIwNlowfzELMAkGA1UEBhMCSUwxDzANBgNVBAgMBklzcmFlbDERMA8GA1UE
BwwIVGVsIEF2aXYxJjAkBgNVBAoMHUZpcmVibG9ja3MgUHJvZHVjdGlvbiBSb290
IENBMQ8wDQYDVQQLDAZEZXZPcHMxEzARBgNVBAMMCnRydXN0ZWRfY2EwggIiMA0G
CSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDV34aiQsC4dlNyyTh1XbSnEg/b/v1q
pGbfpcwDoGrxfa1CmOgmsoNEpPAt9HfcxuwsMmhgzxJBA0qeLFkuN56CI4S4syUT
DAOq3JLhHdCX8gwalCG+JnhtWMKc+kLNDAdwhNIN5yCFBVzaqdDBS+Mxc+zu8u4O
ZFTBe4k0eSAVnwNQtHSpgkpuYTaQvmVV2ZrxfOMlzsMA0y+3ZO/rXqZV2JT5jYKG
sWtqKhw1ZWkuaKsaGqt7SC8b/bn+55CND/KRR7J7vQiU+iVJVEuWFMlszQH0brPj
DaGE8jhIjno1sNZin/k3v0Ol4abhSxmKah0qVniHfhUB9TO8LpQHuw2TR+nNH7YG
PN88Zlu5h97PkO1/2FhJDx2ZGqr3bhkkYfiTqlWxsvuu2vhmC64WjwMCO3HDAL5e
rKkDgI/3ll3+LkEZiMo4C3TIcGHHBEDJzHXU2Dy1OeoGKcVZdSluEvDMVpuwC3sQ
OCz5fxmabFRwozD3s/5lqslMPVG4nC+bfskXaMWsuIsFcIqUSuD+qZkxQb9XMDIl
pvXpvNIN7OOQUj8SlNyJ97M26IP8sgBTYRVe/35wGG0hJpFJEpSMOvT41eGvWQWH
HLj7z42U0KMWNUei4QsYUI1XX7hlnJb83dSATLs+q8diaTfwAu4W0SO206DYXIry
4NokacuaS06cSwIDAQABo1MwUTAdBgNVHQ4EFgQUaj2wU+0HH28tLhgLpdEGR/Bt
aMYwHwYDVR0jBBgwFoAUaj2wU+0HH28tLhgLpdEGR/BtaMYwDwYDVR0TAQH/BAUw
AwEB/zANBgkqhkiG9w0BAQsFAAOCAgEApmwjStcKzUapabgZ6E2TJHQjzYaN93IC
vIl1uCNrGwY26bZ/jbK/iNtE03Q2NAdk2rlxRf2JXLQLOv6oh7yx9BCMggdn6BpT
zX50lE1CKK2NtW15zft+emVb9nVAp5d7Nyj3aDgUnPgfATrcd0xY45N+RxOEpTrz
haEyca2DHUOn92dEnYEsPc14jpltu4xuVORrWxAfKdQfAHtxRMKfcekhBviTPn30
rXMS1d/qo0GRCoq3/TIy3fFXaEXujoZqlILp5XkUJQIapptqfUukuk/389+QpC4z
b7vwRe30eYjEkBvbdl91GpvymRJWo84RpqtVIsUyGD/2NFCxIlS72ZWFGn58hAQ+
0bSRJM7s9HIar+C0TliGHi5Id58VkVjhfsDMbLKPkcMn3Akk0lYyAB4w8gAzovD+
6hZlIy0I3csqGpboPiJHUKU1784BkIr01Ncce1hchLnDv0Hl6N26XzR7d2yBspkE
nPNrmaj6/t4jaOHcLCIk4yK2+Svs4EDLeStqCA9LADCqHclY+yWAtNlSX9H9pDw1
iDQ5BysefQCwB7jSEunYet/f+/Ilx2CPkpDSS16oedDXmcexTT8BoNOWRUFs9nM7
QkjYqHKn0Z492pYJ/I2ESh8VHe7Zmx2QoSaHUA0Is9S8IMUiybWZjVmA2k+1gUvq
yruRdtMoXEE=
-----END CERTIFICATE-----`, untrusted: `-----BEGIN CERTIFICATE-----
MIIF7jCCA9agAwIBAgIJAOoLV/jZnVsbMA0GCSqGSIb3DQEBCwUAMIGLMQswCQYD
VQQGEwJJTDEPMA0GA1UECAwGSXNyYWVsMREwDwYDVQQHDAhUZWwgQXZpdjEwMC4G
A1UECgwnRmlyZWJsb2NrcyBQcm9kdWN0aW9uIHVudHJ1c3RlZCBSb290IENBMQ8w
DQYDVQQLDAZEZXZPcHMxFTATBgNVBAMMDHVudHJ1c3RlZF9jYTAeFw0xODEyMjcx
MTEyMDZaFw0yNzAzMTUxMTEyMDZaMIGLMQswCQYDVQQGEwJJTDEPMA0GA1UECAwG
SXNyYWVsMREwDwYDVQQHDAhUZWwgQXZpdjEwMC4GA1UECgwnRmlyZWJsb2NrcyBQ
cm9kdWN0aW9uIHVudHJ1c3RlZCBSb290IENBMQ8wDQYDVQQLDAZEZXZPcHMxFTAT
BgNVBAMMDHVudHJ1c3RlZF9jYTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBANwPGVMWRt8YXMU0udVFX6sMGa1cMf77QJudw+rMR6HbNURGSYdHDJQDnb37
9oB7l902j2H2ccL2qzYvYrvVhomm9rUpnoVCRYWjfFW6FMtwqmYR6Eu6e8GVmixR
LCtkp1tFcj+S3CUzvsfruGL13y4RKf3nRoPXHwhNBiUwQUnIYJJ0EDmFYVOge260
iz8sm8EXOCy3NEhJ1iO/gdmioMefGG6lNiwqJ7ZH3ssYZ5TjMToqgIIiVbrN50mu
kDmunjBNCVEIJS50yYbKC8ju4SgBCqtDR+/TwtXftcfHpO84s+5OnHeOeOkkPb7P
N+22Ktd7CbqUy5SO2ts6H3fcXeB4uacG7KmZbolSjcv7d08L3e5mEj1hyabDQCbh
bj0LPX6c/XwuAsE1v4IZZWaCLlRI2No5CjtcIkJsJ++8v3Ud7Zh0Xyz/lNELwxrA
4l6P9wNgF46HMsUw98s9r3E4gGzlg71wuj4C0Abm7aKmHrtqLZ2qlLwggfMy5CvT
o63BZ4LKq8FNkrub/F8umA1s60x9rtY8nibGBAL06S2u5FykNd5Dlctb5Zk0RAYA
rfWGaE4PTKY9SrKrR0kpEsMdQjpU3WpiknC8VehpUeo0dXTsK/vQHw43T8X1qoxt
oGXmGw6cXhcT4WUqZiA1vvZr3mCMQvshYa264kRy/dVGsEtlAgMBAAGjUzBRMB0G
A1UdDgQWBBRiYxv9EdkgHmAN53dLRsLsMwbarjAfBgNVHSMEGDAWgBRiYxv9Edkg
HmAN53dLRsLsMwbarjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IC
AQC5g0qMwcp5OyFSwbs+a0XHFU+Z8gIheSMu/Ehk6wXkTQgxNSxAKzJrSfPIN1MB
ucNSc5EiuyIDzrF8UFgNRRwBvyF8EA8Px+iX5Bdnm7DmH1StVrRbKX8gQBkxb3Wm
2UjCP7BWVaZSfxT38fgm6gIKrCfcz5/Qm3hzsvjgyNzGmBz7of2l267NBn7Hfxdz
p2M7lVQ8rBudwhRG3OB0o4ogH6NCCz0L3zzmL96pXjt0pF+92W/IND7B/wgKYLvR
T9kv19DixX4dnbNNkkNKb+wWJhBz4/8AWMATiR4cgkSy3dzPGW9n222Xidaj0he4
fjO/EmIqZ9ZLA+cdH+4raUiq8mOUKQH5rW+6krU2L9gf0JcH6/dh5IQZJpJ3xaxI
Dq/i8lHaK3V891iOhm85AJcCsP5B43v+wBCVdTwEEHAvuy+jNyITszRbf7PbeAZs
XL0SuTH7qS+81wClrLW+AEA5N62pQL5fwaMZf1PqO8ZCEnaEPDs4p0R065oCDT0N
ge/ETix8D8vh73SJgjM+puuRlPvylvgvr4n96LD+Px2KkUFvT0a4PCA2iw2OYtDg
hEZYKbvemQJBupaSvFq9HZfbiBWuiARB8vaE6yAcLaIszqy22hZb8DcgeOyaaqZt
SZ7ScW8ILy1wX11/s7CZPKd9s7zXSY2UtYEqDK28iKEPYg==
-----END CERTIFICATE-----` } };
  var Wg, Mg = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  (function(tA) {
    tA.Trusted = "trusted", tA.Untrusted = "untrusted";
  })(Wg || (Wg = {}));
  const LB = { cm: Wg.Trusted, nckms: Wg.Trusted, oe: Wg.Trusted, ps: Wg.Trusted, ss: Wg.Trusted, vs: Wg.Trusted, zs: Wg.Trusted, ncw: Wg.Untrusted };
  class mB {
    constructor(c, R, G, Z) {
      DA(this, "_env");
      DA(this, "_logger");
      DA(this, "_fireblocksServerApi");
      DA(this, "_sdkStorage");
      DA(this, "_certificates");
      this._env = c, this._logger = R, this._fireblocksServerApi = G, this._sdkStorage = Z;
    }
    async initCertificates(c) {
      this._logger.log("DEBUG", "getServiceCertificates started");
      const R = c ? null : await this._sdkStorage.getDownloadedServiceCertificates();
      R ? (this._certificates = R, this._logger.log("INFO", "using cached service certificates")) : (this._certificates = await this._fireblocksServerApi.getServiceCertificates([eg.nckms, eg.signingService, eg.zService, eg.policyService, eg.ncwService]), this._logger.log("INFO", "using downloaded service certificates")), await this._initPlayerCertificates(), await this._verifyServiceCertificates(this._certificates), await this._sdkStorage.setDownloadedServiceCertificates(this._certificates), this._logger.log("DEBUG", "getServiceCertificates completed");
    }
    async getPlayerCertificate(c, R = !1) {
      if (!R) {
        const Z = await this._sdkStorage.getPlayerCertificate(c);
        if (Z) return Z;
      }
      const G = await this._fireblocksServerApi.getPlayerCertificate(c);
      return await this.updatePlayerCertificates(c, G), G;
    }
    async updatePlayerCertificates(c, R, G = Wg.Untrusted) {
      if (!await jA([this._rootCertificates[G]], R, this._logger)) throw new g("Invalid certificate", "INVALID_CERTIFICATE");
      await this._sdkStorage.setPlayerCertificate(c, R);
    }
    getServiceCertificate(c) {
      if (!this._certificates) throw new g("must load certificates before validating", "INVALID_CERTIFICATE");
      const R = this._certificates[c];
      if (!R) throw new g("certificate not found: " + c, "INVALID_CERTIFICATE");
      return R;
    }
    get _rootCertificates() {
      return { [Wg.Trusted]: yg[this._env].trusted, [Wg.Untrusted]: yg[this._env].untrusted };
    }
    async _verifyServiceCertificates(c) {
      if (!this._rootCertificates || !c) throw new g("must load certificates before validating", "INVALID_CERTIFICATE");
      await Promise.all(Object.entries(c).map(async ([R, G]) => {
        const Z = LB[R];
        if (!await jA([this._rootCertificates[Z]], G, this._logger)) throw this._logger.log("ERROR", "service certificate doesn't match root certificate", { serviceName: R, serviceCertificate: G }), new g("service certificate doesn't match root certificate", "INVALID_CERTIFICATE");
      }));
    }
    async _initPlayerCertificates() {
      const c = await this._fireblocksServerApi.getCloudCosignerCertificate();
      c && await this.updatePlayerCertificates(c.playerId, c.cert, Wg.Trusted);
    }
  }
  Mg([i()], mB.prototype, "initCertificates", null), Mg([i()], mB.prototype, "getPlayerCertificate", null), Mg([i()], mB.prototype, "updatePlayerCertificates", null), Mg([i()], mB.prototype, "_verifyServiceCertificates", null), Mg([i()], mB.prototype, "_initPlayerCertificates", null);
  var yI = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  class tI {
    constructor(c, R, G, Z, W, V) {
      DA(this, "_playerId");
      DA(this, "_deviceId");
      DA(this, "_logger");
      DA(this, "_fireblocksServerApi");
      DA(this, "_sdkStorage");
      DA(this, "_certificatesManager");
      DA(this, "_preRsaKey", null);
      this._playerId = c, this._deviceId = R, this._logger = G, this._fireblocksServerApi = Z, this._sdkStorage = W, this._certificatesManager = V;
    }
    async prapareKey() {
      const c = await this._sdkStorage.getPublicKeyForCSR();
      return c ? !function(R, G) {
        const Z = rA.pki.publicKeyFromPem(R), W = rA.pki.certificateFromPem(G);
        return rA.pki.getPublicKeyFingerprint(Z).data === rA.pki.getPublicKeyFingerprint(W.publicKey).data;
      }(c, await this._certificatesManager.getPlayerCertificate(this._playerId)) : (this._logger.log("DEBUG", "preparing key"), JA().then((R) => {
        this._preRsaKey = R;
      }).catch((R) => {
        this._logger.log("WARN", "failed to prepare key", R);
      }), !1);
    }
    async enrollPlayer() {
      try {
        if (this._logger.log("DEBUG", "enrollPlayer started", { playerId: this._playerId, deviceId: this._deviceId }), await this._sdkStorage.getEnrolledPlayer()) return void this._logger.log("WARN", "enrollPlayer already started", { playerId: this._playerId, deviceId: this._deviceId });
        let c = await this._sdkStorage.getCsrRequest(), R = await this._sdkStorage.getPrivateKeyForCSR(), G = await this._sdkStorage.getPublicKeyForCSR();
        if (!c || !R || !G) {
          let W;
          if (this._preRsaKey) {
            this._logger.log("DEBUG", "enrollPlayer using prepared key");
            const V = this._preRsaKey;
            this._preRsaKey = null, W = await r("createCSRRequestPre", XA, this._playerId, V.privateKeyPem, V.publicKeyPem);
          } else W = await r("createCSRRequest", $A, this._playerId);
          c = W.csrPem, R = W.privateKeyPem, G = W.publicKeyPem, await this._sdkStorage.setCsrRequest(c), await this._sdkStorage.setPublicKeyForCSR(G), await this._sdkStorage.setPrivateKeyForCSR(R);
        }
        const Z = await this._fireblocksServerApi.enrollPlayer(this._playerId, c);
        if (!Z.success) throw this._logger.log("ERROR", "enrollPlayer failed", { playerId: this._playerId, deviceId: this._deviceId }), new g("Failed to enroll player", "FAILED_TO_ENROLL_PLAYER");
        Z.cert && await this._certificatesManager.updatePlayerCertificates(this._playerId, Z.cert), await this._sdkStorage.setEnrolledPlayer(!0), this._logger.log("DEBUG", "enrollPlayer completed", { playerId: this._playerId, deviceId: this._deviceId });
      } catch (c) {
        throw this._logger.log("ERROR", "enrollPlayer failed", { error: c == null ? void 0 : c.message }), cA.isCode(c, rB.MAX_DEVICES_PER_WALLET_REACHED) ? new g("Max devices per wallet reached", "MAX_DEVICES_PER_WALLET_REACHED") : c;
      }
    }
  }
  function YI(tA) {
    this.message = tA;
  }
  yI([i()], tI.prototype, "prapareKey", null), yI([i()], tI.prototype, "enrollPlayer", null), YI.prototype = new Error(), YI.prototype.name = "InvalidCharacterError";
  var IQ = typeof window < "u" && window.atob && window.atob.bind(window) || function(tA) {
    var c = String(tA).replace(/=+$/, "");
    if (c.length % 4 == 1) throw new YI("'atob' failed: The string to be decoded is not correctly encoded.");
    for (var R, G, Z = 0, W = 0, V = ""; G = c.charAt(W++); ~G && (R = Z % 4 ? 64 * R + G : G, Z++ % 4) ? V += String.fromCharCode(255 & R >> (-2 * Z & 6)) : 0) G = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(G);
    return V;
  };
  function LQ(tA) {
    var c = tA.replace(/-/g, "+").replace(/_/g, "/");
    switch (c.length % 4) {
      case 0:
        break;
      case 2:
        c += "==";
        break;
      case 3:
        c += "=";
        break;
      default:
        throw "Illegal base64url string!";
    }
    try {
      return function(R) {
        return decodeURIComponent(IQ(R).replace(/(.)/g, function(G, Z) {
          var W = Z.charCodeAt(0).toString(16).toUpperCase();
          return W.length < 2 && (W = "0" + W), "%" + W;
        }));
      }(c);
    } catch {
      return IQ(c);
    }
  }
  function QQ(tA) {
    this.message = tA;
  }
  QQ.prototype = new Error(), QQ.prototype.name = "InvalidTokenError";
  const Bg = function(tA, c) {
    if (typeof tA != "string") throw new QQ("Invalid token specified");
    var R = (c = c || {}).header === !0 ? 0 : 1;
    try {
      return JSON.parse(LQ(tA.split(".")[R]));
    } catch (G) {
      throw new QQ("Invalid token specified: " + G.message);
    }
  };
  var rg = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  const Ug = { MPC_START_DERIVED_SETUP: "nckms", MPC_START_ADD_DEVICE: "nckms", MPC_START_SIGNERS_DISCOVERY: "ss", MPC_START_SIGNING: "ss", MPC_STOP_SIGNING: "ss", policy_service: "ps" };
  class IB {
    constructor(c, R) {
      DA(this, "_certificateManager");
      DA(this, "_cosignerWasmWrapper");
      this._certificateManager = c, this._cosignerWasmWrapper = R;
    }
    async verifyMessageContainer(c) {
      const R = this._getJwtVerifierCertificate(c.type), { mpcMessage: G, jwtInfo: Z } = await async function(W, V) {
        const oA = W.split(".");
        if (oA.length !== 3) throw new Error("invalid JWT");
        const hA = `${oA[0]}.${oA[1]}`, UA = oA[2], LA = UA.length > 0, bA = { rawPayload: oA[1], isSigned: LA };
        if (LA && !await ag(hA, UA, V, "base64")) throw new Error("invalid JWT signature");
        return { mpcMessage: Bg(hA), jwtInfo: bA };
      }(c.rawMessage, R);
      return await this._verifyMpcMessage(G, Z), G;
    }
    async _verifyMpcMessage(c, R) {
      const G = await this._getDataToVerify(c, R);
      await Promise.all(G.map(async (Z) => {
        if (!await ag(Z.payload, Z.signatureInfo.signature, Z.certificate, Z.signatureInfo.format)) throw new g("MPC message signature is invalid", "INVALID_MPC_MESSAGE");
      }));
    }
    async _getDataToVerify(c, R) {
      const G = [];
      switch (c.type) {
        case "MPC_START_SIGNERS_DISCOVERY":
        case "MPC_START_SIGNING":
          G.push(...this._buildVerifyDetailsForMessagesWithMetadata(c)), G.push(...this._buildVerifyDetailsForMessagesWithSignature(c, R));
          break;
        case "MPC_STOP_SIGNING":
        case "MPC_START_ADD_DEVICE":
        case "MPC_START_DERIVED_SETUP":
          G.push(...this._buildVerifyDetailsForMessagesWithSignature(c, R));
          break;
        case "CMP_ADD_USER":
        case "KEYS_TAKEOVER_SHARES":
        case "STORE_CMP_SETUP_COMMITMENTS":
        case "GENERATE_SETUP_PROOFS":
        case "VERIFY_SETUP_PROOFS":
        case "CREATE_CMP_SECRET":
        case "CMP_ONLINE_MTA_REQUEST":
        case "CMP_ONLINE_MTA_RESPONSE":
        case "CMP_ONLINE_MTA_VERIFY":
        case "STORE_EDDSA_SIGNING_COMMITMENTS":
        case "R_BROADCAST":
        case "S_BROADCAST":
        case "GET_CMP_SIGNATURE":
          G.push(...await this._buildVerifyDetailsForFlowMessages(c));
      }
      return G;
    }
    async _buildVerifyDetailsForFlowMessages(c) {
      this._validateMPCMessageStructure(c);
      const R = this._getRelevantPlayersFromPayload(c.payload), G = this._buildInnerMessageKeyToPlayerIdMap(c.payload.messages, R);
      return this._buildVerifyDetailsForMessagesWithInnerMessages(c, G);
    }
    _buildVerifyDetailsForMessagesWithSignature(c, R) {
      if (!R.isSigned) throw new g("missing signature for JWT message", "INVALID_MPC_MESSAGE");
      const G = Ug[c.type], Z = this._certificateManager.getServiceCertificate(G);
      return [{ payload: this._cosignerWasmWrapper.stringifyJwtPayload(R.rawPayload), certificate: Z, signatureInfo: { signature: c.signature, format: "hex" } }];
    }
    async _buildVerifyDetailsForMessagesWithInnerMessages(c, R) {
      return await Promise.all(Object.entries(c.payload.messages).map(async ([G, Z]) => {
        const W = R[G], V = await this._certificateManager.getPlayerCertificate(W);
        return { payload: Z.payload, certificate: V, signatureInfo: { signature: Z.sig, format: "hex" } };
      }));
    }
    _buildVerifyDetailsForMessagesWithMetadata(c) {
      const { metadata: R } = c.payload, G = Ug[R.txMetaDataSignatures[0].id], Z = this._certificateManager.getServiceCertificate(G);
      return [{ payload: R.txMetaData, certificate: Z, signatureInfo: { signature: R.txMetaDataSignatures[0].signature, format: "hex" } }];
    }
    _buildInnerMessageKeyToPlayerIdMap(c, R) {
      const G = Object.keys(c), Z = {};
      for (const W of R) if (W.type === "CLOUD") for (const V of Object.keys(c)) F(W, V) && (Z[V] = s(W));
      else {
        const V = s(W);
        G.includes(V) && (Z[V] = V);
      }
      if (Object.keys(Z).length !== G.length) throw new g("Player not found", "INVALID_MPC_MESSAGE");
      return Z;
    }
    _validateMPCMessageStructure(c) {
      const R = c.payload;
      if (!R) throw new g("MPC message payload is empty", "INVALID_MPC_MESSAGE");
      const { transaction: G } = R;
      if (!G) throw new g("MPC message transaction is empty", "INVALID_MPC_MESSAGE");
      const { messages: Z } = R;
      if (!Z || Object.keys(Z).length === 0) throw new g("MPC message missing messages", "INVALID_MPC_MESSAGE");
    }
    _getRelevantPlayersFromPayload(c) {
      switch (c.flow) {
        case "MPC_START_SIGNING":
        case "MPC_START_DERIVED_SETUP":
        case "START_KEYS_TAKEOVER":
          return c.players;
        case "MPC_START_ADD_DEVICE":
          return c.phase === "CMP_ADD_USER" ? c.players : c.newPlayers;
        default:
          throw new g(`unexpected message flow: ${c.flow}`, "UNKNOWN_ERROR");
      }
    }
    _getJwtVerifierCertificate(c) {
      return c === "TRANSACTION_FAILURE" ? this._certificateManager.getServiceCertificate("ncw") : this._certificateManager.getServiceCertificate("zs");
    }
  }
  var $g;
  function nB(tA, c) {
    return tA.reduce((R, G) => {
      switch (G.type) {
        case "MOBILE":
        case "ENDUSER":
          return [...R, N(G.id)];
        case "CLOUD":
          return [...R, y(G.id, c)];
        default:
          return R;
      }
    }, []);
  }
  function sB(tA) {
    switch (tA) {
      case $g.MPC_CMP_EDDSA_ED25519:
        return U.EDDSA_ED25519;
      case $g.MPC_CMP_ECDSA_SECP256K1:
        return U.ECDSA_SECP256K1;
      default:
        throw new Error(`Unknown algorithm ${tA}`);
    }
  }
  function wB(tA) {
    switch (tA) {
      case U.ECDSA_SECP256K1:
        return "MPC_CMP_ECDSA_SECP256K1";
      case U.EDDSA_ED25519:
        return "MPC_CMP_EDDSA_ED25519";
      case U.ECDSA_SECP256R1:
        throw new Error("EAlgoForCPP.ECDSA_SECP256R1 not supported");
      default:
        throw new Error(`Unknown algorithm ${tA}`);
    }
  }
  function xB(tA) {
    switch (tA) {
      case "MPC_CMP_ECDSA_SECP256K1":
        return U.ECDSA_SECP256K1;
      case "MPC_CMP_EDDSA_ED25519":
        return U.EDDSA_ED25519;
      default:
        throw new Error(`Unknown algorithm ${tA}`);
    }
  }
  rg([i()], IB.prototype, "verifyMessageContainer", null), rg([i()], IB.prototype, "_verifyMpcMessage", null), rg([i()], IB.prototype, "_getDataToVerify", null), function(tA) {
    tA[tA.MPC_CMP_ECDSA_SECP256K1 = 201] = "MPC_CMP_ECDSA_SECP256K1", tA[tA.MPC_CMP_EDDSA_ED25519 = 203] = "MPC_CMP_EDDSA_ED25519";
  }($g || ($g = {}));
  var Hg = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  const uB = 18e4;
  class dB {
    constructor(c, R, G, Z, W, V, oA, hA, UA, LA, bA) {
      DA(this, "_mpcSigner");
      DA(this, "_logger");
      DA(this, "_fireblocksServerApi");
      DA(this, "_enrollmentManager");
      DA(this, "_backupManager");
      DA(this, "_sdkStorage");
      DA(this, "_eventsHandler");
      DA(this, "_mpcMessagePollingManager");
      DA(this, "_asyncToSyncManager");
      DA(this, "_mpcMessagesVerifier");
      DA(this, "_cosignerStorage");
      DA(this, "_instantPollActive");
      DA(this, "_currentTimeout");
      DA(this, "_onSetupCompleteCb");
      DA(this, "_onSetupFailedCb");
      DA(this, "_unsubscribeFromPollingCbs");
      this._mpcSigner = c, this._logger = R, this._fireblocksServerApi = G, this._enrollmentManager = Z, this._backupManager = W, this._sdkStorage = V, this._eventsHandler = oA, this._mpcMessagePollingManager = hA, this._asyncToSyncManager = UA, this._mpcMessagesVerifier = LA, this._cosignerStorage = bA, this._onSetupCompleteCb = /* @__PURE__ */ new Map(), this._onSetupFailedCb = /* @__PURE__ */ new Map(), this._currentTimeout = /* @__PURE__ */ new Map(), this._unsubscribeFromPollingCbs = /* @__PURE__ */ new Map(), this._instantPollActive = /* @__PURE__ */ new Map();
    }
    async dispose() {
      for (const [c] of this._currentTimeout.entries()) this._stopTimeout(c, "SDK disposed"), this._stopPolling(c);
      this._onSetupCompleteCb.clear(), this._onSetupFailedCb.clear();
    }
    async generateMPCKeys(c) {
      if (this._logger.log("DEBUG", "generateMPCKeys started", { setupData: c }), c.algorithms.size === 0) throw new g("No algorithm provided for MPC setup", "MISSING_ALGORITHMS");
      const R = await this._sdkStorage.getSecureStoreAccess();
      try {
        const G = await this._handleExistingKeys(c);
        if (G.size === 0) return this._logger.log("DEBUG", "generateMPCKeys no setup required"), this._getAllKeysDescriptors();
        await this._preSetup(G);
        try {
          await this._startMPCSetup(c, G), await this._startPolling(c, G), await this._waitForAllMPCSetupsToComplete(G);
        } finally {
          await this._postSetup(G);
        }
        return this._getAllKeysDescriptors();
      } finally {
        await R(), this._logger.log("DEBUG", "generateMPCKeys ended", { setupData: c });
      }
    }
    async stopMpcDeviceSetup() {
      for (const [R] of this._currentTimeout.entries()) this._stopTimeout(R, "stopMpcDeviceSetup was called");
      const c = await this._fireblocksServerApi.stopMpcDeviceSetup();
      return this._logger.log("DEBUG", "stopMpcDeviceSetup", { success: c }), c;
    }
    async _handleExistingKeys(c) {
      const R = /* @__PURE__ */ new Set();
      this._logger.log("DEBUG", "MPCSetupManager _handleExistingKeys started", { inputAlgorithms: c.algorithms });
      const G = await this._fireblocksServerApi.getAllKeys();
      this._logger.log("DEBUG", `MPCSetupManager _handleExistingKeys found ${G.length} keys in the server`, { getAllServerKeysResponse: G });
      const Z = (oA, hA) => !oA.publicKey || !oA.confirmed && !hA, W = (oA, hA) => oA.confirmed && !hA, V = (oA) => G.find((hA) => hA.algorithm === oA) ?? null;
      for (const oA of c.algorithms) {
        const hA = V(oA);
        if (!hA) {
          R.add(oA);
          continue;
        }
        if (!hA.keyId) {
          R.add(oA);
          continue;
        }
        const UA = await this._sdkStorage.getKeyForBackup(hA.algorithm), LA = !!UA;
        if (Z(hA, LA)) await this._stopMpcSetup(oA, hA.keyId), R.add(oA);
        else if (W(hA, LA)) await this._failSetup(oA, "DEVICE_MISSING_KEYS");
        else {
          if (!LA) throw new g("Error while processing existing keys", "UNKNOWN_ERROR");
          await this._completeSetup(oA, UA);
        }
      }
      return R;
    }
    async _failSetup(c, R) {
      this._stopTimeout(c, `Setup failed for algorithm ${c}`), this._stopPolling(c), R === "TIMEOUT" ? await this._fireMpcSetupTimeout(c) : await this._fireMpcSetupFailed(c, R), await this._sdkStorage.clearInProgressSetupInfo(c), await this._sendFailedSetupToTheServer(R, c);
      const G = this._onSetupFailedCb.get(c);
      G && (G(new lg(R, this._toErrorKey(R))), this._onSetupFailedCb.set(c, null));
    }
    async _completeSetup(c, R) {
      this._stopTimeout(c, `Setup completed for algorithm ${c}`), this._stopPolling(c), await this._fireMpcSetupComplete(c);
      const G = await this._fireblocksServerApi.sendMpcPublicKeys([R]);
      await this._waitForKeyConfirmation(G, [R.keyId]), await this._backupManager.storeKeyForBackup(R), await this._fireMpcKeysSent(c), await this._sdkStorage.clearInProgressSetupInfo(c);
      const Z = this._onSetupCompleteCb.get(c);
      Z && (Z(), this._onSetupCompleteCb.set(c, null)), this._logger.log("INFO", "MPC setup completed", { algorithm: c });
    }
    async _stopMpcSetup(c, R) {
      await this._sdkStorage.clearKeyId(c), await this._fireblocksServerApi.stopMpcKeySetup(R);
    }
    _validateSetupInfo(c, R) {
      return c ? c.expectedMessageType.includes(R.type) ? Date.now() > c.messageTimeout ? "TIMEOUT" : null : "UNEXPECTED_MESSAGE_TYPE" : "SETUP_NOT_IN_PROGRESS";
    }
    async _handleMessage(c) {
      const R = function(G) {
        switch (G) {
          case $g.MPC_CMP_EDDSA_ED25519:
            return "MPC_CMP_EDDSA_ED25519";
          case $g.MPC_CMP_ECDSA_SECP256K1:
            return "MPC_CMP_ECDSA_SECP256K1";
          default:
            throw new Error(`Unknown algorithm ${G}`);
        }
      }(c.payload.algorithm);
      if (this._isPollingActive(R)) try {
        let G = null;
        this._logger.log("DEBUG", "_handleMessage", { mpcMessageType: c.type, algorithm: R });
        const Z = await this._sdkStorage.getInProgressSetupInfo(R), W = this._validateSetupInfo(Z, c);
        if (W) throw new lg(W, this._toErrorKey(W));
        const V = async (...hA) => {
          const UA = Date.now() + uB, LA = { expectedMessageType: hA, messageTimeout: UA };
          await this._sdkStorage.setInProgressSetupInfo(LA, R), this._startTimeout(`Waiting for message: ${hA}`, R, UA);
        }, oA = await this._sdkStorage.getSecureStoreAccess();
        try {
          switch (c.type) {
            case "CMP_ADD_USER":
              await this._fireMpcSetupBegin(R), await this._asyncToSyncManager.preparePrivateKeyForSyncWork(), G = await this._mpcSigner.cmpAddUser(c), await V("STORE_CMP_SETUP_COMMITMENTS");
              break;
            case "MPC_START_DERIVED_SETUP":
              await this._fireMpcSetupBegin(R), G = await this._mpcSigner.startDerivedSetup(c), await V("STORE_CMP_SETUP_COMMITMENTS");
              break;
            case "STORE_CMP_SETUP_COMMITMENTS":
              G = await this._mpcSigner.storeCMPSetupCommitments(c), await V("GENERATE_SETUP_PROOFS");
              break;
            case "GENERATE_SETUP_PROOFS":
              G = await this._mpcSigner.generateSetupProofs(c), await V("VERIFY_SETUP_PROOFS");
              break;
            case "VERIFY_SETUP_PROOFS":
              G = await this._mpcSigner.verifySetupProofs(c), await V("CREATE_CMP_SECRET");
              break;
            case "CREATE_CMP_SECRET": {
              const hA = await this._mpcSigner.createCMPSecret(c);
              await this._completeSetup(R, hA);
              break;
            }
            default:
              this._logger.log("WARN", `unexpected message type ${c.type}`, { mpcMessageType: c.type });
          }
        } finally {
          await oA();
        }
        if (G) {
          if (!this._isPollingActive(R)) return void this._logger.log("WARN", "Polling is not active", { algo: R });
          const { transaction: hA } = G;
          this._logger.log("DEBUG", "MPCSetupManager _handleMessage Broadcast", { payloadTransaction: hA });
          const UA = await this._fireblocksServerApi.broadcastMpcMessage({ payload: G }, { poll: !0 });
          if (!UA.success) throw new g("Failed to broadcast", "FAILED_MPC_BROADCAST");
          if (UA.response) {
            const LA = await this._mpcMessagesVerifier.verifyMessageContainer(UA.response);
            LA && await this._handleMessage(LA);
          } else if (this._isPollingActive(R)) {
            const LA = { handler: (Eg) => this._handleMessage(Eg), onError: (Eg) => {
              Eg instanceof lg ? this._failSetup(R, Eg.reason) : this._failSetup(R, "UNKNOWN_ERROR");
            } }, { unsubscribe: bA, pollingPromise: ZA } = this._mpcMessagePollingManager.pollSingleMessage(G.transaction);
            (this._unsubscribeFromPollingCbs.get(R) ?? []).push(bA), ZA.then((Eg) => LA.handler(Eg)).catch((Eg) => LA.onError(Eg));
          }
        }
      } catch (G) {
        throw this._logger.log("ERROR", "MPCSetupManager _handleMessage crashed", { error: G }), G instanceof lg ? G : new lg("UNKNOWN_ERROR", "UNKNOWN_ERROR");
      } finally {
        this._asyncToSyncManager.completeSyncWork();
      }
      else this._logger.log("WARN", "setup is inactive", { algo: R });
    }
    async _preSetup(c) {
      for (const R of c) {
        const G = await this._sdkStorage.getInProgressSetupInfo(R);
        if (G && Date.now() < G.messageTimeout) throw new B("PROCESS_ALREADY_RUNNING");
      }
      await this._backupManager.clearKeysForBackup(c), await this._cosignerStorage.prepareForSyncWork();
    }
    async _postSetup(c) {
      for (const R of c) this._stopPolling(R), await this._sdkStorage.clearInProgressSetupInfo(R);
      this._instantPollActive.clear(), await this._cosignerStorage.completeSyncWork(!0);
    }
    async _startFirstMessageTimer(c, R) {
      const G = (() => {
        switch (c.type) {
          case "ADD_DEVICE":
            return Date.now() + uB;
          case "GENERATE_KEYS":
            return Date.now() + 15e3;
          default:
            throw new g("unexpected mpc setup type", "UNKNOWN_ERROR");
        }
      })(), Z = { expectedMessageType: ["MPC_START_DERIVED_SETUP", "CMP_ADD_USER"], messageTimeout: G };
      for (const W of R) await this._sdkStorage.setInProgressSetupInfo(Z, W), this._startTimeout("_startFirstMessageTimer", W, G);
    }
    async _startPolling(c, R) {
      for (const Z of R) {
        this._instantPollActive.set(Z, !0);
        const W = this._unsubscribeFromPollingCbs.get(Z);
        W && W.length > 0 && this._stopPolling(Z);
      }
      this._startFirstMessageTimer(c, R);
      const G = await this._getKeysDescriptors(R);
      for (const Z of G) if (Z.keyId) {
        const W = { handler: (hA) => this._handleMessage(hA), onError: (hA) => {
          hA instanceof lg ? this._failSetup(Z.algorithm, hA.reason) : this._failSetup(Z.algorithm, "UNKNOWN_ERROR");
        } }, { unsubscribe: V, pollingPromise: oA } = this._mpcMessagePollingManager.pollSingleMessage(Z.keyId);
        (this._unsubscribeFromPollingCbs.get(Z.algorithm) ?? []).push(V), oA.then((hA) => W.handler(hA)).catch((hA) => W.onError(hA));
      } else this._failSetup(Z.algorithm, "UNKNOWN_KEY_ID");
    }
    _stopPolling(c) {
      (this._unsubscribeFromPollingCbs.get(c) ?? []).forEach((R) => R()), this._unsubscribeFromPollingCbs.set(c, []), this._instantPollActive.set(c, !1);
    }
    async _getKeysDescriptors(c) {
      const R = /* @__PURE__ */ new Set();
      for (const G of c) {
        const Z = await this._sdkStorage.getKeyDescriptor(G);
        if (!Z) throw new g(`Key descriptor not found for algorithm ${G}`, "MISSING_ALGORITHMS");
        R.add(Z);
      }
      return R;
    }
    async _getAllKeysDescriptors() {
      const c = /* @__PURE__ */ new Set(), R = await this._sdkStorage.getAllKeyDescriptors();
      for (const G of Object.values(R)) G && c.add(G);
      return c;
    }
    async _startMPCSetup(c, R) {
      await this._fireMpcSetupInitiated(R), this._shouldEnrollPlayer(c.type) && await this._enrollmentManager.enrollPlayer(), await this._requestMpcSetup(c, R);
    }
    async _requestMpcSetup(c, R) {
      if (this._logger.log("DEBUG", "_requestMpcSetup started", { algorithms: R }), R.size === 0) throw this._logger.log("ERROR", "_requestMpcSetup algorithms empty"), new g("No algorithms provided", "MISSING_ALGORITHMS");
      for (const Z of R) {
        const W = await this._sdkStorage.getKeyDescriptor(Z);
        W && (W.keyId && await this._fireblocksServerApi.stopMpcKeySetup(W.keyId), this._sdkStorage.clearKeyId(W.algorithm));
      }
      const G = await this._requestSetup(c, R);
      if (!G) {
        for (const Z of R) {
          const W = { keyId: null, algorithm: Z, keyStatus: "ERROR" };
          await this._sdkStorage.setKeyDescriptor(W);
        }
        throw new g("Failed to request MPC setup", "FAILED_TO_REQUEST_KEY");
      }
      for (const Z of R) {
        const W = G[Z];
        if (W) {
          const V = { keyId: W, algorithm: Z, keyStatus: "REQUESTED_SETUP" };
          await this._sdkStorage.setKeyDescriptor(V);
        }
      }
    }
    async _requestSetup(c, R) {
      switch (c.type) {
        case "GENERATE_KEYS":
          return await this._fireblocksServerApi.requestMpcSetup(R);
        case "ADD_DEVICE":
          return await this._fireblocksServerApi.requestMPCAddDevice(R, c.payload.srcDevice, c.payload.requestId);
        default:
          throw new g("Unsupported operation for setup", "FAILED_TO_REQUEST_KEY");
      }
    }
    _shouldEnrollPlayer(c) {
      return c !== "ADD_DEVICE";
    }
    async _sendFailedSetupToTheServer(c, R) {
      const G = await this._sdkStorage.getSecureStoreAccess();
      try {
        const Z = await this._sdkStorage.getKeyDescriptor(R), W = await this._mpcSigner.generateMPCMessage("", "MPC_ERROR_SETUP", { keyId: (Z == null ? void 0 : Z.keyId) ?? "", txId: "", reason: c }, []);
        await this._fireblocksServerApi.broadcastMpcMessage({ payload: W }, { retries: 0 });
      } catch (Z) {
        this._logger.log("ERROR", "Failed to send failed setup message to the server", { error: Z });
      } finally {
        await G();
      }
    }
    _waitForAllMPCSetupsToComplete(c) {
      const R = Array.from(c).map((G) => this._registerMPCSetupCallback(G));
      return Promise.allSettled(R);
    }
    async _waitForKeyConfirmation(c, R) {
      const G = Date.now() + 15e3, Z = new Set(c.filter((W) => W.confirmed).map((W) => W.keyId));
      for (; Z.size !== R.length && Date.now() < G; ) {
        const W = R.filter((oA) => !Z.has(oA)), V = (await this._fireblocksServerApi.pollKeyConfirmationMessage(W)).filter((oA) => oA.confirmed).map((oA) => oA.keyId);
        for (const oA of V) Z.add(oA);
      }
      if (Z.size !== R.length) throw new g("Failed to confirm keys", "FAILED_TO_CONFIRM_KEY");
    }
    async _registerMPCSetupCallback(c) {
      try {
        await new Promise((R, G) => {
          this._onSetupCompleteCb.set(c, R), this._onSetupFailedCb.set(c, G);
        });
      } catch (R) {
        this._logger.log("ERROR", `MPCSetupManager setup failed for ${c}`, R), await this._backupManager.clearKeysForBackup(/* @__PURE__ */ new Set([c])), this._stopTimeout(c, "generateMPCKeys failed");
      }
    }
    _startTimeout(c, R, G) {
      this._logger.log("DEBUG", `MPCSetupManager _startTimeout source: "${c}"`, { algorithm: R, messageTimeout: G });
      const Z = G - Date.now();
      this._stopTimeout(R, "Starting a new timer"), this._currentTimeout.set(R, setTimeout(() => {
        this._currentTimeout.set(R, null), this._failSetup(R, "TIMEOUT");
      }, Z));
    }
    _stopTimeout(c, R) {
      const G = this._currentTimeout.get(c);
      G && (this._logger.log("DEBUG", `MPCSetupManager _stopTimeout reason: "${R}"`), clearTimeout(G)), this._currentTimeout.set(c, null);
    }
    async _fireMpcSetupInitiated(c) {
      for (const R of c) {
        const G = await this._sdkStorage.updateKeyDescriptorStatus(R, "INITIATED");
        this._eventsHandler.handleEvent({ type: "key_descriptor_changed", keyDescriptor: G });
      }
    }
    async _fireMpcSetupBegin(c) {
      const R = await this._sdkStorage.updateKeyDescriptorStatus(c, "SETUP");
      this._eventsHandler.handleEvent({ type: "key_descriptor_changed", keyDescriptor: R });
    }
    async _fireMpcSetupComplete(c) {
      const R = await this._sdkStorage.updateKeyDescriptorStatus(c, "SETUP_COMPLETE");
      this._eventsHandler.handleEvent({ type: "key_descriptor_changed", keyDescriptor: R });
    }
    async _fireMpcSetupFailed(c, R) {
      const G = await this._sdkStorage.updateKeyDescriptorStatus(c, "ERROR");
      this._eventsHandler.handleEvent({ type: "key_descriptor_changed", keyDescriptor: G });
    }
    async _fireMpcSetupTimeout(c) {
      const R = await this._sdkStorage.updateKeyDescriptorStatus(c, "TIMEOUT");
      this._eventsHandler.handleEvent({ type: "key_descriptor_changed", keyDescriptor: R });
    }
    async _fireMpcKeysSent(c) {
      const R = await this._sdkStorage.updateKeyDescriptorStatus(c, "READY");
      this._eventsHandler.handleEvent({ type: "key_descriptor_changed", keyDescriptor: R });
    }
    _toErrorKey(c) {
      switch (c) {
        case "TIMEOUT":
          return "KEY_CREATION_TIMEOUT";
        case "SETUP_NOT_IN_PROGRESS":
        case "UNKNOWN_ERROR":
          return "UNKNOWN_ERROR";
        case "UNEXPECTED_MESSAGE_TYPE":
          return "UNEXPECTED_MPC_MESSAGE";
        case "UNEXPECTED_ALGORITHM":
          return "UNKNOWN_ALGORITHM";
        case "UNKNOWN_KEY_ID":
        case "DEVICE_MISSING_KEYS":
          return "MISSING_KEY_ON_DEVICE";
      }
    }
    _isPollingActive(c) {
      return !!this._instantPollActive.get(c);
    }
  }
  Hg([i()], dB.prototype, "dispose", null), Hg([i()], dB.prototype, "generateMPCKeys", null), Hg([i((tA, ...c) => `handle: ${c[0].type}`)], dB.prototype, "_handleMessage", null), Hg([i()], dB.prototype, "_startMPCSetup", null), Hg([i()], dB.prototype, "_requestMpcSetup", null);
  class Yg {
    constructor(c, R, G, Z, W, V, oA, hA) {
      DA(this, "_logger");
      DA(this, "_certificateManager");
      DA(this, "_enrollmentManager");
      DA(this, "_fireblocksServerApi");
      DA(this, "_cosignerStorage");
      DA(this, "_sdkStorage");
      DA(this, "_deviceId");
      DA(this, "_eventsHandler");
      DA(this, "_recoverStatus", "IDEL");
      this._logger = c, this._certificateManager = R, this._enrollmentManager = G, this._fireblocksServerApi = Z, this._cosignerStorage = W, this._sdkStorage = V, this._deviceId = oA, this._eventsHandler = hA;
    }
    async recoverBackup(c) {
      if (this._recoverStatus === "IN_PROGRESS") throw new g("Recovery is already in progress", "PROCESS_ALREADY_RUNNING");
      const R = await this._sdkStorage.getSecureStoreAccess();
      try {
        this._recoverStatus = "IN_PROGRESS";
        const G = await this._fireblocksServerApi.getBackup();
        if (!G) throw new g("Failed to get backed up keys", "BACKUP_NOT_AVAILABLE_ERROR");
        if (G.keys.length === 0) throw new g("No keys to recover", "BACKUP_NOT_AVAILABLE_ERROR");
        const Z = await c(G.passphraseId), W = await Promise.all(G.keys.map(async (V) => ({ ...V, decryptedData: await this._decryptBackup(V, Z) })));
        await this._sdkStorage.clearAllEnrollmentStorage(), await this._sdkStorage.clearDownloadedServiceCertificates(), await this._sdkStorage.clearCosignerData(), await this._sdkStorage.clearCosignerSecureData(), await this._sdkStorage.clearAllKeyDescriptors(), await this._sdkStorage.clearAllKeysForBackup(), await this._sdkStorage.clearPlayersCertificates(), await this._fireblocksServerApi.enterRecoveryState(), await this._enrollmentManager.enrollPlayer(), await this._certificateManager.initCertificates(!0);
        for (const V of W) {
          await this._cosignerStorage.restoreFromBackup(V.keyId, V.decryptedData, V.algorithm);
          const oA = { keyId: V.keyId, algorithm: V.algorithm, publicKey: V.publicKey };
          await this._sdkStorage.setKeyForBackup(oA);
          const hA = { keyId: V.keyId, keyStatus: "READY", algorithm: V.algorithm };
          await this._sdkStorage.setKeyDescriptor(hA), this._logger.log("INFO", "Key recovery completed", { keyId: V.keyId, algorithm: V.algorithm }), this._fireKeyRecoveryCompleted(hA);
        }
      } catch (G) {
        throw this._logger.log("ERROR", "recoverBackup returned an error", { error: G }), v(G, new g("Failed to recover keys", "FAILED_TO_RECOVER_KEYS"));
      } finally {
        this._recoverStatus = "COMPLETED", await R();
      }
    }
    async _decryptBackup(c, R) {
      try {
        if (c.encryptionAlgorithm === "AES-GCM") return await BA(c.encryptedKey, R, this._deviceId);
        if (!c.encryptionAlgorithm || c.encryptionAlgorithm === "AES" || c.encryptionAlgorithm === "AES-CBC") {
          const G = M(new Uint8Array(16));
          return await async function(Z, W, V, oA) {
            const hA = await QA("AES-CBC", W, V), UA = x(Z), LA = x(oA), bA = await b.subtle.decrypt({ name: "AES-CBC", iv: LA }, hA, UA);
            return new TextDecoder().decode(bA);
          }(c.encryptedKey, R, this._deviceId, c.iv ?? G);
        }
      } catch (G) {
        throw this._logger.log("ERROR", "decryptBackup returned an error", { name: G == null ? void 0 : G.name, message: G == null ? void 0 : G.message }), new g("Failed to recover keys - validate the recovery passphrase is correct", "WRONG_RECOVERY_PASSPHRASE");
      }
      throw new g("cannot decrypt backup, unsupported backup algorithm: " + c.encryptionAlgorithm, "UNKNOWN_BACKUP_ALGORITHM");
    }
    _fireKeyRecoveryCompleted(c) {
      this._eventsHandler.handleEvent({ type: "keys_recovery", keyDescriptor: c });
    }
  }
  class Vg {
    constructor(c, R, G, Z, W, V, oA, hA) {
      DA(this, "_deviceId");
      DA(this, "_logger");
      DA(this, "_fireblocksServiceApi");
      DA(this, "_sdkStorage");
      DA(this, "_mpcMessagePollingManager");
      DA(this, "_eventsHandler");
      DA(this, "_cosignerStorage");
      DA(this, "_cosignerWasmWrapper");
      DA(this, "_takeoverRunning", !1);
      DA(this, "_exportKeysRunning", !1);
      DA(this, "_deriveAssetKeyRunning", !1);
      DA(this, "_timedOut", !1);
      DA(this, "_currentTimeout", null);
      this._deviceId = c, this._logger = R, this._fireblocksServiceApi = G, this._sdkStorage = Z, this._mpcMessagePollingManager = W, this._eventsHandler = V, this._cosignerStorage = oA, this._cosignerWasmWrapper = hA;
    }
    async takeover() {
      if (this._takeoverRunning) throw new g("takeover has already started", "PROCESS_ALREADY_RUNNING");
      const c = await this._sdkStorage.getSecureStoreAccess();
      try {
        this._logger.log("INFO", "takeover started", { deviceId: this._deviceId }), this._takeoverRunning = !0, this._fireTakeoverKeyChanged("INITIATED"), this._logger.log("DEBUG", "generating RSA key");
        const R = await JA();
        this._logger.log("DEBUG", "RSA key generated");
        const { requestId: G, keys: Z } = await this._requestTakeover(R.publicKeyPem);
        this._checkTimeout();
        const W = await this._getSharesFromFireblocks(R.privateKeyPem, G);
        this._notifyCloudSharesVerified(Z), this._checkTimeout(), this._checkTimeout();
        const V = this._extractChainCode(W), oA = W.reduce((UA, LA) => {
          const { playerShares: bA } = LA;
          for (const ZA in bA) {
            const Eg = bA[ZA];
            let Lg = UA.get(ZA);
            Lg || (Lg = [], UA.set(ZA, Lg)), Lg.push(Eg);
          }
          return UA;
        }, /* @__PURE__ */ new Map()), hA = await this.exportFullKeys(V, oA);
        return this._logger.log("INFO", "takeover completed", { deviceId: this._deviceId }), hA;
      } catch (R) {
        throw this._logger.log("ERROR", "Takeover returned an error", { error: R }), R instanceof ng && this._fireTakeoverKeyChanged("TIMEOUT"), v(R, new g("Takeover failed", "FAILED_TO_TAKEOVER_KEYS"));
      } finally {
        this._takeoverRunning = !1, this._stopTimer(), await c();
      }
    }
    async exportFullKeys(c, R) {
      if (this._logger.log("INFO", "exportFullKeys started"), c.length === 0) throw new g("Missing chainCode", "MISSING_CHAIN_CODE");
      if (R.size === 0) throw new g("Missing cloudKeyShares", "MISSING_CLOUD_PRIVATE_KEYS");
      const G = await this._sdkStorage.getSecureStoreAccess();
      if (this._exportKeysRunning) throw new g("exportFullKeys has already started", "PROCESS_ALREADY_RUNNING");
      this._exportKeysRunning = !0;
      try {
        const Z = Array.from(R.keys()), W = await this._cosignerStorage.getKeysShares(Z);
        if (Object.keys(W).length === 0) throw new g("Empty keysShares", "MISSING_PRIVATE_KEYS");
        const V = /* @__PURE__ */ new Map(), oA = await this._sdkStorage.getAllKeyDescriptors();
        for (const bA of Object.values(oA)) bA.keyId && bA.keyStatus === "READY" && V.set(bA.keyId, bA.algorithm);
        const hA = await this._sdkStorage.getAllKeysForBackup(), UA = /* @__PURE__ */ new Map();
        for (const bA of hA) UA.set(bA.keyId, bA.publicKey);
        if (UA.size === 0) throw new g("Empty keysBackup", "MISSING_PUBLIC_KEYS");
        const LA = [];
        for (const bA of Z) try {
          const ZA = V.get(bA);
          if (!ZA) throw new g(`Missing algorithm for key ${bA}`, "MISSING_ALGORITHMS");
          const Eg = UA.get(bA);
          if (!Eg) throw new g(`Missing public key backup for key ${bA}`, "MISSING_PUBLIC_KEY");
          const Lg = R.get(bA);
          if (!Lg || Lg.length === 0) throw new g(`Missing cloud shares for key ${bA}`, "MISSING_CLOUD_PRIVATE_KEYS");
          const SB = W[bA];
          if (!SB) throw new g(`Missing my share for key ${bA}`, "MISSING_PRIVATE_KEY");
          const Cg = xB(ZA), dg = this._cosignerWasmWrapper.recoverAdditiveMpcKey(Cg, SB, Lg);
          if (dg.publicKey !== Eg) throw this._fireTakeoverKeyChanged("ERROR", bA, ZA), new g(`Recovered public key is not equal to the public key backup for key ${bA}`, "PUBLIC_KEYS_DISCREPANCY_ERROR");
          {
            const wI = this._cosignerWasmWrapper.encodeExtendedPrivateKey(Cg, dg.privateKey, c), XB = this._cosignerWasmWrapper.encodeExtendedPublicKey(Cg, dg.publicKey, c);
            if (!wI || !XB) throw new g("Failed to encode extended keys", "FAILED_TO_EXPORT_KEY");
            LA.push({ privateKey: wI, publicKey: XB, algorithm: ZA, keyId: bA }), this._fireTakeoverKeyChanged("SUCCESS", bA, ZA);
          }
        } catch (ZA) {
          throw this._logger.log("ERROR", "exportFullKeys returned an error", { error: ZA }), v(ZA, new g("exportFullKeys failed", "FAILED_TO_EXPORT_KEY"));
        }
        return this._logger.log("INFO", "exportFullKeys completed"), LA;
      } catch (Z) {
        throw this._logger.log("ERROR", "exportFullKeys returned an error", { error: Z }), v(Z, new g("exportFullKeys failed", "FAILED_TO_EXPORT_KEYS"));
      } finally {
        await G(), this._exportKeysRunning = !1;
      }
    }
    deriveAssetKey(c, R) {
      if (this._logger.log("INFO", "deriveAssetKey started"), this._deriveAssetKeyRunning) throw new g("deriveAssetKey has already started", "PROCESS_ALREADY_RUNNING");
      try {
        this._deriveAssetKeyRunning = !0;
        const { algorithm: G, chainCode: Z, privateKey: W } = this._cosignerWasmWrapper.decodeExtendedPrivateKey(c), { account: V, coinType: oA, change: hA = 0, index: UA = 0 } = R, LA = this._cosignerWasmWrapper.deriveAssetKey(W, Z, G, { account: V, coinType: oA, change: hA, index: UA });
        return this._logger.log("INFO", "deriveAssetKey completed"), LA;
      } catch (G) {
        throw this._logger.log("ERROR", "deriveAssetKey returned an error", { error: G }), v(G, new g("deriveAssetKey failed", "FAILED_TO_DERIVE_ASSET_KEY"));
      } finally {
        this._deriveAssetKeyRunning = !1;
      }
    }
    dispose() {
      this._stopTimer();
    }
    _extractChainCode(c) {
      for (const R of c) if (R.chaincode) return R.chaincode;
      throw new g("Missing chaincode", "MISSING_CHAIN_CODE");
    }
    async _requestTakeover(c) {
      const R = { publicKeyPem: c, expirationTimestamp: Math.floor(Date.now() / 1e3) + 45 }, G = JSON.stringify(R), Z = await this._sdkStorage.getPrivateKeyForCSR();
      if (!Z) throw new g("Failed to get private key for CSR", "FAILED_TO_REQUEST_END_USER_TAKEOVER");
      const W = await Ig(Z, G);
      this._startTimer();
      const V = await this._fireblocksServiceApi.requestEndUserTakeover(G, W);
      return this._validateTakeoverResponse(V), this._notifyCloudSharesRequested(V.keys), V;
    }
    _decryptShares(c, R) {
      return R.map((G) => {
        const { chaincode: Z, playerId: W, playerShares: V } = G, oA = {};
        for (const hA in V) {
          const UA = V[hA], LA = VA(c, UA);
          oA[hA] = LA;
        }
        return { chaincode: Z, playerId: W, playerShares: oA };
      });
    }
    _notifyCloudSharesRequested(c) {
      for (const R of c) this._fireTakeoverKeyChanged("CLOUD_SHARES_REQUESTED", R.keyId, R.algorithm);
    }
    _notifyCloudSharesVerified(c) {
      for (const R of c) this._fireTakeoverKeyChanged("CLOUD_SHARES_VERIFIED", R.keyId, R.algorithm);
    }
    _notifyCloudSharesSuccess(c) {
      for (const R of c) this._fireTakeoverKeyChanged("SUCCESS", R.keyId, R.algorithm);
    }
    _validateTakeoverResponse(c) {
      if (!c || !c.requestId || !c.keys || c.keys.length === 0) throw this._logger.log("ERROR", "Takeover failed calling requestEndUserTakeover"), new g("Request takeover failed", "FAILED_TO_REQUEST_END_USER_TAKEOVER");
    }
    _validateTakeoverMessage(c) {
      const { messages: R } = c.payload, G = [];
      for (const Z in R) {
        const W = R[Z], { payload: V, sig: oA } = W;
        if (!V) throw new g("Takeover message Missing payload", "INVALID_MPC_MESSAGE");
        const hA = JSON.parse(V);
        if (!hA.playerShares) throw new g("Takeover message missing playerShares", "INVALID_MPC_MESSAGE");
        if (!hA.chaincode) throw new g("Takeover message missing chaincode", "INVALID_MPC_MESSAGE");
        G.push(hA);
      }
      return G;
    }
    _checkTimeout() {
      if (this._timedOut) throw this._logger.log("ERROR", "Takeover timed out"), this._timedOut = !1, new ng("Takeover timed out", "KEY_TAKEOVER_TIMEOUT");
    }
    _startTimer() {
      if (this._currentTimeout) throw new g("Timer already started", "PROCESS_ALREADY_RUNNING");
      this._timedOut = !1, this._currentTimeout = setTimeout(() => {
        this._logger.log("ERROR", "Takeover timeout"), this._currentTimeout = null, this._timedOut = !0;
      }, 45e3);
    }
    _stopTimer() {
      this._timedOut = !1, this._currentTimeout && (clearTimeout(this._currentTimeout), this._currentTimeout = null);
    }
    async _getSharesFromFireblocks(c, R) {
      const G = await this._pollingToPromise(R), Z = this._validateTakeoverMessage(G);
      return this._decryptShares(c, Z);
    }
    _pollingToPromise(c) {
      return new Promise((R, G) => {
        let Z = null;
        const W = { handler: async (V) => {
          Z && Z(), V.type !== "KEYS_TAKEOVER_SHARES" ? G(new g("Unexpected MPC message for takeover", "UNEXPECTED_MPC_MESSAGE")) : R(V);
        }, onError: (V) => {
          Z && Z(), G(V);
        } };
        Z = this._mpcMessagePollingManager.listenToMessages(c, !0, W);
      });
    }
    _fireTakeoverKeyChanged(c, R = null, G = null) {
      this._eventsHandler.handleEvent({ type: "key_takeover_changed", keyTakeover: { algorithm: G, keyId: R, keyTakeoverStatus: c } });
    }
  }
  const EB = 18e4, CB = ["TRANSACTION_FAILURE", "MPC_STOP_SIGNING"];
  class sE extends Error {
    constructor(R) {
      super(`Signing failed with reason: ${R}`);
      DA(this, "reason");
      this.reason = R;
    }
  }
  class It {
    constructor(c, R, G, Z, W, V, oA) {
      DA(this, "_logger");
      DA(this, "_mpcSigner");
      DA(this, "_mpcMessagePollingManager");
      DA(this, "_mpcMessagesVerifier");
      DA(this, "_fireblocksServerApi");
      DA(this, "_eventsHandler");
      DA(this, "_sdkStorage");
      DA(this, "_instantPollActive", !1);
      DA(this, "_currentTimeout", null);
      DA(this, "_onSigningCompleteCb", null);
      DA(this, "_onSigningFailedCb", null);
      DA(this, "_unsubscribeFromPollingCb", null);
      this._logger = c, this._mpcSigner = R, this._mpcMessagePollingManager = G, this._mpcMessagesVerifier = Z, this._fireblocksServerApi = W, this._eventsHandler = V, this._sdkStorage = oA;
    }
    async dispose() {
      this._stopTimeout("SDK disposed"), this._onSigningCompleteCb = null, this._onSigningFailedCb = null, this._stopPolling();
    }
    async signTransaction(c) {
      this._logger.log("DEBUG", "signTransaction started", { txId: c });
      const R = await this._sdkStorage.getSecureStoreAccess();
      try {
        let G = "STARTED";
        await this._preSigning(c);
        try {
          this._fireTransactionPending(c), this._startPolling(c);
          try {
            G = await this._waitForSigningToComplete();
          } finally {
            this._postSigning();
          }
        } catch (Z) {
          throw this._logger.log("ERROR", "signTransaction returned an error", { error: Z }), await this._sdkStorage.clearInProgressSigningInfo(), this._stopTimeout("signTransaction failed"), v(Z, new g("Failed to sign transaction", "FAILED_TO_SIGN_TRANSACTION"));
        }
        return this._logger.log("INFO", "transaction signing completed", { txId: c }), { txId: c, transactionSignatureStatus: G };
      } finally {
        await R(), this._logger.log("DEBUG", "signTransaction ended", { txId: c });
      }
    }
    _postSigning() {
      this._stopPolling();
    }
    async stopInProgressSignTransaction(c) {
      this._stopTimeout("signTransaction failed"), await this._sdkStorage.clearInProgressSigningInfo(), this._onSigningFailedCb && (this._onSigningFailedCb(new g(c, this._toFireblocksErrorKey(c))), this._onSigningFailedCb = null);
    }
    async getInProgressSigningTxId() {
      const c = await this._sdkStorage.getInProgressSigningInfo();
      return c ? c.txId : null;
    }
    async _failSigning(c, R, G = !0) {
      this._stopTimeout(`Signing failed for txId ${c} with reason ${R}`), this._stopPolling(), await this._sdkStorage.clearInProgressSigningInfo(), G && await this._sendFailedSigningToTheServer(c, R), R === "TIMEOUT" ? this._fireTransactionSigningTimedout(c) : this._fireTransactionSigningFailed(c), this._onSigningFailedCb && (this._onSigningFailedCb(new g(R, this._toFireblocksErrorKey(R))), this._onSigningFailedCb = null);
    }
    async _completeSigning(c) {
      this._stopTimeout(`Signing completed for txId ${c}`), this._fireTransactionSigningCompleted(c), await this._sdkStorage.clearInProgressSigningInfo(), this._onSigningCompleteCb && (this._onSigningCompleteCb("COMPLETED"), this._onSigningCompleteCb = null);
    }
    async _preSigning(c) {
      const R = await this._sdkStorage.getInProgressSigningInfo();
      if (R && Date.now() < R.messageTimeout) throw new I(R.txId, "PROCESS_ALREADY_RUNNING");
      const G = Date.now() + EB, Z = { expectedMessageType: ["MPC_START_SIGNING", "MPC_START_SIGNERS_DISCOVERY", ...CB], messageTimeout: G, txId: c };
      await this._sdkStorage.setInProgressSigningInfo(Z), this._startTimeout("preSigning", c, G);
    }
    _startPolling(c) {
      this._instantPollActive = !0, this._unsubscribeFromPollingCb && this._stopPolling();
      const R = (V) => this._handleMessage(c, V), G = (V) => this._handleTxSigningError(V, c), { pollingPromise: Z, unsubscribe: W } = this._mpcMessagePollingManager.pollSingleMessage(c);
      this._unsubscribeFromPollingCb = W, Z.then((V) => R(V)).catch((V) => G(V));
    }
    _stopPolling() {
      this._instantPollActive = !1, this._unsubscribeFromPollingCb && (this._unsubscribeFromPollingCb(), this._unsubscribeFromPollingCb = null);
    }
    _validateSigningInfo(c, R) {
      if (!c) return "SIGNING_NOT_IN_PROGRESS";
      if (!c.expectedMessageType.includes(R.type)) return "UNEXPECTED_MESSAGE_TYPE";
      if (Date.now() > c.messageTimeout) return "TIMEOUT";
      const G = this._getMPCMessageTxId(R);
      return c.txId !== G ? "UNEXPECTED_TX_ID" : null;
    }
    async _handleMessage(c, R) {
      try {
        if (!this._instantPollActive) return void this._logger.log("WARN", "signing is inactive", { txId: c });
        let G = null;
        this._logger.log("DEBUG", "_handleMessage", { mpcMessageType: R.type });
        const Z = await this._sdkStorage.getInProgressSigningInfo(), W = this._validateSigningInfo(Z, R);
        if (W) throw this._logger.log("DEBUG", `validation failureReason: ${W}`), new g("Failed to sign transaction", this._toFireblocksErrorKey(W));
        const V = async (...hA) => {
          const UA = Date.now() + EB, LA = { expectedMessageType: [...hA, ...CB], messageTimeout: UA, txId: c };
          await this._sdkStorage.setInProgressSigningInfo(LA), this._startTimeout(`Waiting for message:${hA}`, c, UA);
        }, oA = await this._sdkStorage.getSecureStoreAccess();
        try {
          switch (R.type) {
            case "MPC_START_SIGNERS_DISCOVERY":
              G = await this._mpcSigner.startSignersDiscovery(c, R), this._fireTransactionSigningStarted(c), await V("MPC_START_SIGNING");
              break;
            case "MPC_START_SIGNING":
              G = await this._mpcSigner.startSigning(c, R), this._fireTransactionSigningStarted(c), await V("CMP_ONLINE_MTA_REQUEST", "STORE_EDDSA_SIGNING_COMMITMENTS");
              break;
            case "CMP_ONLINE_MTA_REQUEST":
              G = await this._mpcSigner.CMPOnlineMTARequest(c, R), await V("CMP_ONLINE_MTA_RESPONSE");
              break;
            case "CMP_ONLINE_MTA_RESPONSE":
              G = await this._mpcSigner.CMPOnlineMTAResponse(c, R), await V("CMP_ONLINE_MTA_VERIFY");
              break;
            case "CMP_ONLINE_MTA_VERIFY":
              G = await this._mpcSigner.CMPOnlineMTAVerify(c, R), await V("GET_CMP_SIGNATURE");
              break;
            case "GET_CMP_SIGNATURE":
              return G = await this._mpcSigner.getCMPSignature(c, R), await this._fireblocksServerApi.broadcastMpcMessage({ payload: G }, { poll: !1 }), void await this._completeSigning(c);
            case "STORE_EDDSA_SIGNING_COMMITMENTS":
              G = await this._mpcSigner.storeEddsaSigningCommitments(c, R), await V("R_BROADCAST");
              break;
            case "R_BROADCAST":
              G = await this._mpcSigner.onRBroadcast(c, R), await V("S_BROADCAST");
              break;
            case "S_BROADCAST":
              return G = await this._mpcSigner.onSBroadcast(c, R), await this._fireblocksServerApi.broadcastMpcMessage({ payload: G }, { poll: !1 }), void await this._completeSigning(c);
            case "MPC_STOP_SIGNING":
            case "TRANSACTION_FAILURE":
              return void await this._failSigning(c, "TRANSACTION_STATUS_FAILURE", !1);
            default:
              this._logger.log("WARN", `unexpected message type ${R.type}`, { mpcMessageType: R.type });
          }
        } finally {
          await oA();
        }
        if (G) {
          if (!this._instantPollActive) return void this._logger.log("WARN", "Polling is not active", { txId: c });
          this._logger.log("DEBUG", "TransactionsManager _handleMessage Broadcast", { payloadTransaction: G.transaction });
          const hA = await this._fireblocksServerApi.broadcastMpcMessage({ payload: G }, { poll: !0 });
          if (!hA.success) throw new Error("Failed to broadcast");
          if (hA.response && this._instantPollActive) {
            const UA = await this._mpcMessagesVerifier.verifyMessageContainer(hA.response);
            await this._handleMessage(c, UA);
          } else {
            const UA = { handler: (ZA) => this._handleMessage(c, ZA), onError: (ZA) => this._handleTxSigningError(ZA, c) }, { unsubscribe: LA, pollingPromise: bA } = this._mpcMessagePollingManager.pollSingleMessage(G.transaction);
            this._unsubscribeFromPollingCb = LA, bA.then((ZA) => UA.handler(ZA)).catch((ZA) => UA.onError(ZA));
          }
        }
      } catch (G) {
        throw this._logger.log("ERROR", "TransactionsManager _handleMessage crashed", { error: G }), G instanceof cA ? G : new sE("UNKNOWN_ERROR");
      }
    }
    async _sendFailedSigningToTheServer(c, R) {
      const G = await this._sdkStorage.getSecureStoreAccess();
      try {
        const Z = await this._mpcSigner.generateMPCMessage(c, "MPC_ERROR_SIGNING", { keyId: c, txId: c, reason: R }, []);
        await this._fireblocksServerApi.broadcastMpcMessage({ payload: Z }, { retries: 0 });
      } catch (Z) {
        this._logger.log("ERROR", "Failed to send signing error message to the server", { txId: c, error: Z });
      } finally {
        await G();
      }
    }
    async _waitForSigningToComplete() {
      return new Promise((c, R) => {
        this._onSigningCompleteCb = c, this._onSigningFailedCb = R;
      });
    }
    _startTimeout(c, R, G) {
      this._logger.log("DEBUG", `TransactionsManager _startTimeout source: "${c}"`, { txId: R, messageTimeout: G }), this._stopTimeout("Starting a new timer");
      const Z = G - Date.now();
      this._currentTimeout = setTimeout(() => {
        this._failSigning(R, "TIMEOUT"), this._currentTimeout = null;
      }, Z);
    }
    _stopTimeout(c) {
      this._currentTimeout && (this._logger.log("DEBUG", `TransactionsManager _stopTimeout reason: "${c}"`), clearTimeout(this._currentTimeout)), this._currentTimeout = null;
    }
    _getMPCMessageTxId(c) {
      return this._isStartSigningMessage(c) || c.type === "MPC_STOP_SIGNING" ? c.payload.txId : c.payload.transaction;
    }
    _isStartSigningMessage(c) {
      return ["MPC_START_SIGNING", "MPC_START_SIGNERS_DISCOVERY"].includes(c.type);
    }
    _fireTransactionPending(c) {
      this._eventsHandler.handleEvent({ type: "transaction_signature_changed", transactionSignature: { txId: c, transactionSignatureStatus: "PENDING" } });
    }
    _fireTransactionSigningStarted(c) {
      this._eventsHandler.handleEvent({ type: "transaction_signature_changed", transactionSignature: { txId: c, transactionSignatureStatus: "STARTED" } });
    }
    _fireTransactionSigningTimedout(c) {
      this._eventsHandler.handleEvent({ type: "transaction_signature_changed", transactionSignature: { txId: c, transactionSignatureStatus: "TIMEOUT" } });
    }
    _fireTransactionSigningCompleted(c) {
      this._eventsHandler.handleEvent({ type: "transaction_signature_changed", transactionSignature: { txId: c, transactionSignatureStatus: "COMPLETED" } });
    }
    _fireTransactionSigningFailed(c) {
      this._eventsHandler.handleEvent({ type: "transaction_signature_changed", transactionSignature: { txId: c, transactionSignatureStatus: "ERROR" } });
    }
    _toFireblocksErrorKey(c) {
      switch (c) {
        case "TIMEOUT":
          return "TRANSACTION_SIGNING_TIMEOUT";
        case "SIGNING_NOT_IN_PROGRESS":
          return "UNKNOWN_ERROR";
        case "UNEXPECTED_MESSAGE_TYPE":
          return "UNEXPECTED_MPC_MESSAGE";
        case "UNEXPECTED_TX_ID":
          return "UNKNOWN_TX_ID";
        case "INCOMPLETE_DEVICE":
          return "INCOMPLETE_DEVICE";
        case "TRANSACTION_STATUS_FAILURE":
          return "TRANSACTION_STATUS_FAILURE";
        default:
          return "FAILED_TO_SIGN_TRANSACTION";
      }
    }
    _handleTxSigningError(c, R) {
      c instanceof sE ? this._failSigning(R, c.reason, !0) : cA.isCode(c, rB.INCOMPLETE_DEVICE_SETUP) ? this._failSigning(R, "INCOMPLETE_DEVICE", !1) : this._failSigning(R, "UNKNOWN_ERROR", !0);
    }
  }
  (function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    W > 3 && V && Object.defineProperty(c, R, V);
  })([i()], It.prototype, "signTransaction", null);
  const ge = 18e4, jE = "NO_ALGORITHM";
  class Qt {
    constructor(c, R, G, Z, W, V, oA, hA, UA, LA) {
      DA(this, "_logger");
      DA(this, "_fireblocksServerApi");
      DA(this, "_mpcMessagePollingManager");
      DA(this, "_addDeviceMessagePollingManager");
      DA(this, "_mpcSetupManager");
      DA(this, "_mpcSigner");
      DA(this, "_sdkStorage");
      DA(this, "_enrollmentManager");
      DA(this, "_asyncToSyncManager");
      DA(this, "_eventsHandler");
      DA(this, "_isRunning", !1);
      DA(this, "_descriptors", {});
      DA(this, "_unsubscribeFromPollingCbs", []);
      DA(this, "_interruptCb", null);
      this._logger = c, this._fireblocksServerApi = R, this._mpcMessagePollingManager = G, this._addDeviceMessagePollingManager = Z, this._mpcSetupManager = W, this._mpcSigner = V, this._sdkStorage = oA, this._enrollmentManager = hA, this._asyncToSyncManager = UA, this._eventsHandler = LA;
    }
    async joinExistingWallet(c) {
      if (this._isRunning) throw new g("add device process has already started", "PROCESS_ALREADY_RUNNING");
      this._logger.log("DEBUG", "joinExistingWallet started");
      const R = await this._sdkStorage.getSecureStoreAccess();
      try {
        this._isRunning = !0, await this._startAddDeviceSetup();
        const { requestId: G, srcDevice: Z, algorithms: W } = await this._executeWithHelpers("joinExistingWallet", { promise: this._requestSetupAndWaitForProvisioner(c), helpers: { timeout: ge, stoppable: !0 } });
        return this._logger.log("DEBUG", "joinExistingWallet starting mpc setup", { requestId: G, srcDevice: Z, algorithms: W }), await this._mpcSetupManager.generateMPCKeys({ type: "ADD_DEVICE", algorithms: W, payload: { requestId: G, srcDevice: Z } });
      } catch (G) {
        throw this._logger.log("ERROR", "joinExistingWallet returned an error", { error: G }), v(G, new g("Failed to join wallet", "FAILED_TO_JOIN_WALLET"));
      } finally {
        await R(), this._postSetup();
      }
    }
    async approveJoinWallet(c) {
      if (this._isRunning) throw new g("add device process has already started", "PROCESS_ALREADY_RUNNING");
      this._logger.log("DEBUG", "approveJoinWallet started", { requestId: c });
      const R = await this._sdkStorage.getSecureStoreAccess();
      try {
        this._isRunning = !0, this._fireAddDeviceProvisionSetupInitiated(c);
        const { algorithms: G, provisionKeys: Z } = await this._executeWithHelpers("approveJoinWallet", { promise: this._provisionAddDeviceSetup(c), helpers: { timeout: ge, stoppable: !0 } });
        return this._fireProvisionSetupCompleted(c, G, Z), this._logger.log("INFO", "approve join wallet completed", { provisionKeys: Z }), this._getJoinDescriptors();
      } catch (G) {
        throw this._logger.log("ERROR", "approveJoinWallet returned an error", { error: G }), v(G, new g("Failed to approve join wallet", "FAILED_TO_APPROVE_JOIN_WALLET"));
      } finally {
        await R(), this._postSetup();
      }
    }
    stopJoinWallet() {
      if (this._logger.log("DEBUG", "stop add device setup called"), this._isRunning) {
        if (this._isMpcSetupStarted()) throw new g("mpc setup already started", "MPC_SETUP_ALREADY_STARTED");
        this._stopPolling(), this._interruptCb && this._interruptCb();
      }
    }
    async _requestSetupAndWaitForProvisioner(c) {
      const { onRequestId: R, onProvisionerFound: G } = c, { requestId: Z } = await this._requestAddDeviceSetup();
      this._logger.log("DEBUG", "_getProvisionerSetupData setup requested", { requestId: Z }), this._onSetupRequested(Z, R);
      const { algorithms: W, srcDevice: V } = await this._waitForSetupApprover(Z);
      return this._logger.log("INFO", "Add device setup provisioner found", { algorithms: W, srcDevice: V, requestId: Z }), this._onProvisionerFound(Z, W, G), { requestId: Z, srcDevice: V, algorithms: W };
    }
    async _provisionAddDeviceSetup(c) {
      const R = await this._getAlgorithmsOfReadyKeys();
      await this._requestToProvisionSetup(R, c), this._logger.log("DEBUG", "approveJoinWallet requested to provision", { algorithms: R }), this._fireAddDeviceProvisionSetupRequested(c, R);
      const G = await this._waitForProvisionMPCKeys(c);
      this._logger.log("DEBUG", "approveJoinWallet got provision keys", { provisionKeys: G }), this._fireAddDeviceProvisionKeysStarted(c, R, G);
      const Z = await this._waitForApprovingMPCSetupMessages(G);
      this._logger.log("DEBUG", "approveJoinWallet got mpc messages", { messageType: Z.map((W) => W.type) }), this._fireAddDeviceProvisionSetupStarted(c, R, G);
      for (const W of Z) await this._handleAddDeviceProvisionerSetup(W);
      return { algorithms: R, provisionKeys: G };
    }
    async _executeWithHelpers(c, R) {
      const { promise: G, helpers: Z } = R;
      this._logger.log("DEBUG", "_executeWithHelpers() started", Z);
      const W = [G], V = new Promise((LA) => {
        setTimeout(() => LA("TIMEOUT"), Z.timeout);
      }), oA = new Promise((LA) => {
        this._interruptCb = () => {
          this._logger.log("INFO", "add device setup interrupted"), LA("STOPPED");
        };
      });
      Z.stoppable && W.push(oA), Z.timeout && W.push(V);
      const hA = await Promise.race(W), UA = function() {
        switch (c) {
          case "joinExistingWallet":
            return { timeout: "JOIN_WALLET_TIMEOUT", stop: "JOIN_WALLET_STOPPED" };
          case "approveJoinWallet":
            return { timeout: "APPROVE_JOIN_WALLET_TIMEOUT", stop: "APPROVE_JOIN_WALLET_STOPPED" };
          default:
            throw new g("Invalid flow", "UNKNOWN_ERROR");
        }
      }();
      if (hA === "TIMEOUT") throw this._logger.log("ERROR", "Add device setup timeout"), this._fireAddDeviceSetupTimeout(), new g("Add device setup timed out", UA.timeout);
      if (hA === "STOPPED") throw this._logger.log("ERROR", "Add device setup stopped"), this._fireAddDeviceSetupStopped(), new g("Add device setup stopped", UA.stop);
      return hA;
    }
    async _waitForSetupApprover(c) {
      const R = Date.now(), { srcDevice: G, algorithms: Z, status: W } = await this._waitForQueueMsg(c);
      if (this._logWaitingTime(R, "_waitForSetupApprover"), !G || !Z || W !== BB.PROVISIONER_FOUND) throw this._logger.log("ERROR", "got invalid add device data for setup approver", { srcDevice: G, algorithms: Z, status: W }), new g("Got invalid add device data", "INVALID_ADD_DEVICE_SETUP_DATA");
      return { requestId: c, srcDevice: G, algorithms: new Set(Z) };
    }
    async _waitForProvisionMPCKeys(c) {
      const R = Date.now(), { status: G, newKeys: Z } = await this._waitForQueueMsg(c);
      if (this._logWaitingTime(R, "_waitForJoinerNewKeys"), G !== BB.MPC_SETUP_REQUESTED || !Z) throw this._logger.log("ERROR", "got invalid add device data for joiner keys", { newKeys: Z, status: G }), new g("Got invalid add device data", "INVALID_ADD_DEVICE_SETUP_DATA");
      return Z;
    }
    _requestAddDeviceSetup() {
      return this._fireblocksServerApi.requestAddDeviceSetup();
    }
    _requestToProvisionSetup(c, R) {
      return this._fireblocksServerApi.requestProvisionAddDeviceSetup(c, R);
    }
    _waitForApprovingMPCSetupMessages(c) {
      const R = [];
      for (const G of Object.values(c)) if (G) {
        const { pollingPromise: Z, unsubscribe: W } = this._mpcMessagePollingManager.pollSingleMessage(G);
        R.push(Z), this._unsubscribeFromPollingCbs.push(W);
      }
      return Promise.all(R);
    }
    async _waitForQueueMsg(c) {
      const { pollingPromise: R, unsubscribe: G } = this._addDeviceMessagePollingManager.pollSingleMessage(c);
      return this._unsubscribeFromPollingCbs.push(G), R;
    }
    _logWaitingTime(c, R) {
      const G = (Date.now() - c) / 1e3;
      this._logger.log("DEBUG", "waiting for operation completed", { operation: R, durationSeconds: G });
    }
    async _getAlgorithmsOfReadyKeys() {
      const c = await this._sdkStorage.getAllKeyDescriptors(), R = new Set(Object.values(c).filter((G) => G.keyStatus === "READY").map((G) => G.algorithm));
      if (R.size === 0) throw new g("Could not find any valid keys for provisioning", "NO_KEYS_TO_PROVISION");
      return R;
    }
    async _handleAddDeviceProvisionerSetup(c) {
      if (c.type !== "MPC_START_ADD_DEVICE") throw new g("Unexpected MPC message for add device", "UNEXPECTED_MPC_MESSAGE");
      try {
        await this._asyncToSyncManager.preparePlayerCertFotSyncWork(c.payload.newPlayers, c.payload.newKeyId);
        const R = await this._mpcSigner.addDeviceRequest(c);
        this._logger.log("DEBUG", "_handleAddDeviceProvisionerSetup Broadcast", { payloadTransaction: R.transaction }), await this._fireblocksServerApi.broadcastMpcMessage({ payload: R });
      } finally {
        this._asyncToSyncManager.completeSyncWork();
      }
    }
    _isMpcSetupStarted() {
      const c = ["JOIN_INITIATED", "ADD_DEVICE_SETUP_REQUESTED", "PROVISION_ADD_DEVICE_SETUP_REQUESTED", "PROVISION_INITIATED"], R = Object.values(this._descriptors);
      return !R.length || !R.every((G) => c.includes((G == null ? void 0 : G.status) ?? "ERROR"));
    }
    async _startAddDeviceSetup() {
      this._fireAddDeviceInitiated(), await this._enrollmentManager.enrollPlayer();
    }
    _postSetup() {
      this._stopPolling(), this._isRunning = !1, this._descriptors = {};
    }
    _stopPolling() {
      this._unsubscribeFromPollingCbs.forEach((c) => c()), this._unsubscribeFromPollingCbs = [];
    }
    _getJoinDescriptors() {
      const c = /* @__PURE__ */ new Set(), R = Object.values(this._descriptors);
      for (const G of R) G && c.add(G);
      return c;
    }
    _updateJoinDescriptors(c, R) {
      const { requestId: G = null, provisionKeys: Z = null, algorithms: W = null } = R, V = { status: c, requestId: G, algorithm: null, provisionKeyId: null };
      if (W) {
        this._descriptors[jE] = null;
        for (const oA of W) {
          const hA = { ...V, algorithm: oA, provisionKeyId: Z ? Z[oA] : null };
          this._descriptors[oA] = hA;
        }
      } else this._descriptors[jE] = V;
    }
    _onProvisionerFound(c, R, G) {
      if (this._fireAddDeviceProvisionerFound(c, R), G) try {
        G();
      } catch (Z) {
        this._logger.log("ERROR", "onProvisionerFound callback failed", { error: Z });
      }
    }
    _onSetupRequested(c, R) {
      this._fireAddDeviceSetupRequested(c);
      try {
        R(c);
      } catch (G) {
        this._logger.log("ERROR", "onRequestId callback failed", { error: G });
      }
    }
    _fireAddDeviceInitiated() {
      this._updateJoinDescriptors("JOIN_INITIATED", {}), this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceSetupRequested(c) {
      this._updateJoinDescriptors("ADD_DEVICE_SETUP_REQUESTED", { requestId: c }), this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceProvisionerFound(c, R) {
      this._updateJoinDescriptors("PROVISIONER_FOUND", { requestId: c, algorithms: R }), this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceProvisionSetupInitiated(c) {
      this._updateJoinDescriptors("PROVISION_INITIATED", { requestId: c }), this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceProvisionSetupRequested(c, R) {
      this._updateJoinDescriptors("PROVISION_ADD_DEVICE_SETUP_REQUESTED", { requestId: c, algorithms: R }), this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceProvisionKeysStarted(c, R, G) {
      this._updateJoinDescriptors("PROVISION_KEYS_SETUP_STARTED", { requestId: c, algorithms: R, provisionKeys: G }), this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceProvisionSetupStarted(c, R, G) {
      this._updateJoinDescriptors("PROVISION_SETUP_STARTED", { requestId: c, algorithms: R, provisionKeys: G }), this._fireJoinDescriptorEvents();
    }
    _fireProvisionSetupCompleted(c, R, G) {
      this._updateJoinDescriptors("PROVISION_SETUP_COMPLETED", { requestId: c, algorithms: R, provisionKeys: G }), this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceSetupStopped() {
      const c = Object.values(this._descriptors);
      for (const R of c) this._updateJoinDescriptors("STOPPED", R ?? {});
      this._fireJoinDescriptorEvents();
    }
    _fireAddDeviceSetupTimeout() {
      const c = Object.values(this._descriptors);
      for (const R of c) this._updateJoinDescriptors("TIMEOUT", R ?? {});
      this._fireJoinDescriptorEvents();
    }
    _fireJoinDescriptorEvents() {
      Object.values(this._descriptors).forEach((c) => {
        c && this._eventsHandler.handleEvent({ type: "join_wallet_descriptor", joinWalletDescriptor: c });
      });
    }
  }
  class Vi {
    constructor(c, R) {
      DA(this, "_fireblocksServerApi");
      DA(this, "_sdkStorage");
      DA(this, "playerCerts", {});
      DA(this, "privateKey", null);
      this._fireblocksServerApi = c, this._sdkStorage = R;
    }
    getCertificateForPlayer(c) {
      const R = this.playerCerts[c];
      if (!R) throw new Error("AsyncToSyncManager: certificate not found");
      return R;
    }
    getPrivateKey() {
      if (!this.privateKey) throw new Error("AsyncToSyncManager: private key not found");
      return this.privateKey;
    }
    async preparePlayerCertFotSyncWork(c, R) {
      for (const G of c) {
        let Z;
        const W = s(G), V = await this._fireblocksServerApi.getPlayerCertificate(W);
        if (!V) throw new Error("AsyncToSyncManager: failed fetching certificate");
        if (G.type === "CLOUD" ? (Z = y(G.id, R), BigInt(Z) < h && (Z = u(Z))) : Z = W, !Z) throw new Error("playerId not found");
        this.playerCerts[Z] = V;
      }
    }
    async preparePrivateKeyForSyncWork() {
      const c = await this._sdkStorage.getSecureStoreAccess();
      try {
        const R = await this._sdkStorage.getPrivateKeyForCSR();
        if (!R) throw new Error("private key not found");
        this.privateKey = R;
      } finally {
        await c();
      }
    }
    async completeSyncWork() {
      this.playerCerts = {}, this.privateKey = null;
    }
  }
  var qB = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  class TB {
    constructor(c, R, G, Z, W, V) {
      DA(this, "_tenantId");
      DA(this, "_playerId");
      DA(this, "_deviceId");
      DA(this, "_logger");
      DA(this, "_cosignerWasmWrapper");
      DA(this, "_sdkStorage");
      this._tenantId = c, this._playerId = R, this._deviceId = G, this._logger = Z, this._cosignerWasmWrapper = W, this._sdkStorage = V;
    }
    async startSignersDiscovery(c, R) {
      const G = [];
      if (!R.payload) throw new Error("MPC message payload is empty");
      if (!R.payload.signerCliques) throw new Error("start signers discovery message is missing cliques");
      for (const V of R.payload.signerCliques) for (const oA of V.players) oA.id === this._deviceId && G.push({ keyId: V.keyId, players: V.players });
      if (G.length === 0) throw new Error("no clique found for local device");
      const Z = { txId: c, discoveredKeys: G.map((V) => V.keyId) }, W = G.map((V) => nB(V.players, V.keyId));
      return this.generateMPCMessage(c, "SIGNER_DISCOVERY_RESPONSE", Z, W.flat());
    }
    async addDeviceRequest(c) {
      this._logger.log("DEBUG", "addDeviceRequest started", { mpcMessageType: c.type });
      const R = c.payload;
      if (!R) throw new Error("MPC message payload is empty");
      if (!(R.algorithm && R.keyId && R.newKeyId && R.newPlayers && "t" in R && "ttl" in R)) throw new Error("bad add device request");
      const { keyId: G, t: Z, algorithm: W, newKeyId: V, newPlayers: oA, ttl: hA } = R;
      if (!this._isAlgorithmFromPayloadSupported(W)) throw new Error(`Unsupported algorithm ${W}`);
      const UA = {};
      for (const ZA of oA) ZA.type === "CLOUD" ? UA[y(ZA.id, V)] = !1 : UA[s(ZA)] = ZA.type === "ENDUSER";
      const LA = sB(W);
      if (!this._isCMP(LA)) throw new Error("Not implemented");
      const bA = await this._cosignerWasmWrapper.addDeviceRequest(this._tenantId, G, LA, W, V, new Map(Object.entries(UA)), Z, hA);
      if (!bA) throw new Error("Failed to generate setup commitments");
      return this.generateMPCMessage(V, "CMP_ADD_USER", bA, nB(oA, V));
    }
    cmpAddUser(c) {
      const { transaction: R, messages: G, recipients: Z } = c.payload, W = Object.keys(G);
      if (W.length !== 2) throw new Error(`expected 2 but got ${W.length} inner messages`);
      const V = [JSON.parse(G[W[0]].payload), JSON.parse(G[W[1]].payload)];
      if (V[0].algorithm !== V[1].algorithm || V[0].keyid !== V[1].keyid || V[0].public_key !== V[1].public_key || V[0].t !== V[1].t || V[0].ttl !== V[1].ttl) throw new Error("cmp add user message data is invalid");
      const oA = sB(V[0].algorithm), hA = {};
      hA[W[0]] = V[0].shares, hA[W[1]] = V[1].shares;
      const UA = this._cosignerWasmWrapper.addUser(this._tenantId, V[0].keyid, oA, V[0].public_key, hA, V[0].t, BigInt(V[0].ttl));
      if (!UA) throw new Error("Failed to add user");
      return this.generateMPCMessage(R, "STORE_CMP_SETUP_COMMITMENTS", UA, Z);
    }
    startDerivedSetup(c) {
      this._logger.log("DEBUG", "startDerivedSetup started", { mpcMessageType: c.type });
      const R = c.payload;
      if (!R) throw new Error("MPC message payload is empty");
      const { keyId: G, t: Z, ttl: W, players: V, algorithm: oA } = R;
      if (!this._isAlgorithmFromPayloadSupported(oA)) throw new Error(`Unsupported algorithm ${oA}`);
      const hA = nB(V, G), UA = sB(oA);
      if (!this._isCMP(UA)) throw new Error("Not implemented");
      const LA = this._cosignerWasmWrapper.generateSetupCommitments(G, this._tenantId, UA, hA, Z, BigInt(W));
      if (!LA) throw new Error("Failed to generate setup commitments");
      return this.generateMPCMessage(G, "STORE_CMP_SETUP_COMMITMENTS", LA, hA);
    }
    storeCMPSetupCommitments(c) {
      this._logger.log("DEBUG", "storeCMPSetupCommitments started", { mpcMessageType: c.type });
      const { transaction: R, messages: G } = c.payload, Z = [], W = /* @__PURE__ */ new Map();
      for (const oA in G) {
        const hA = G[oA], { payload: UA, sig: LA } = hA;
        if (!UA) throw new Error("MPC message Missing payload");
        const bA = JSON.parse(UA);
        if (!bA.commitment || !bA.commitment.commitment || !bA.commitment.salt) throw new Error("MPC message bad commitment");
        W.set(oA, bA.commitment), Z.push(oA);
      }
      const V = this._cosignerWasmWrapper.storeSetupCommitments(R, W);
      if (!V) throw new Error("Failed to store setup commitments");
      return this.generateMPCMessage(R, "GENERATE_SETUP_PROOFS", V, Z);
    }
    generateSetupProofs(c) {
      this._logger.log("DEBUG", "generateSetupProofs started", { mpcMessageType: c.type });
      const { transaction: R, messages: G } = c.payload, Z = [], W = /* @__PURE__ */ new Map();
      for (const oA in G) {
        const hA = G[oA], { payload: UA, sig: LA } = hA;
        if (!UA) throw new Error("MPC message Missing payload");
        const bA = JSON.parse(UA);
        if (!(bA.decommitment && bA.decommitment.R && bA.decommitment.X && bA.decommitment.paillier_public_key && bA.decommitment.ring_pedersen_public_key && bA.decommitment.seed)) throw new Error("MPC message bad decommitments");
        W.set(oA, { ack: bA.ack, ...bA.decommitment }), Z.push(oA);
      }
      const V = this._cosignerWasmWrapper.generateSetupProofs(R, W);
      if (!V) throw new Error("Failed to generate setup proofs");
      return this.generateMPCMessage(R, "VERIFY_SETUP_PROOFS", V, Z);
    }
    async verifySetupProofs(c) {
      this._logger.log("DEBUG", "verifySetupProofs started", { mpcMessageType: c.type });
      const { transaction: R, messages: G } = c.payload, Z = [], W = /* @__PURE__ */ new Map();
      for (const oA in G) {
        const hA = G[oA], { payload: UA, sig: LA } = hA;
        if (!UA) throw new Error("MPC message Missing payload");
        const bA = JSON.parse(UA);
        if (!bA.proofs || !bA.proofs.paillier_blum_zkp || !bA.proofs.ring_pedersen_param_zkp) throw new Error("MPC message bad proofs");
        W.set(oA, bA.proofs), Z.push(oA);
      }
      const V = await this._cosignerWasmWrapper.verifySetupProofs(R, W);
      if (!V) throw new Error("Failed to generate setup proofs");
      return this.generateMPCMessage(R, "CREATE_CMP_SECRET", V, Z);
    }
    async createCMPSecret(c) {
      this._logger.log("DEBUG", "createCMPSecret started", { mpcMessageType: c.type });
      const { transaction: R, messages: G } = c.payload, Z = /* @__PURE__ */ new Map();
      for (const V in G) {
        const oA = G[V], { payload: hA, sig: UA } = oA;
        if (!hA) throw new Error("MPC message Missing payload");
        const LA = JSON.parse(hA);
        if (!LA.keyid || !LA.large_factors_proofs) throw new Error("MPC message bad verify proofs");
        Z.set(V, LA.large_factors_proofs);
      }
      const W = await this._cosignerWasmWrapper.createCMPSecret(R, Z);
      if (!W) throw new Error("Failed to create CMP secret");
      return { keyId: W.keyid, publicKey: W.public_key, algorithm: wB(W.algorithm) };
    }
    async startSigning(c, R) {
      this._logger.log("DEBUG", "startSigning started", { mpcMessageType: R.type });
      const G = R.payload;
      if (!G) throw new Error("MPC signing message payload is empty");
      const { keyId: Z, algorithm: W, metadata: V, players: oA } = G;
      if (!this._isAlgorithmFromPayloadSupported(W)) throw new Error("MPC signing message given algorithm is not supported");
      if (!V || Object.keys(V).length === 0) throw new Error("MPC signing message missing metadata");
      const hA = JSON.stringify(V), UA = [], LA = [], { signInfo: bA, chaincode: ZA } = V;
      bA.forEach((Cg) => {
        const { path: dg, payload: wI } = Cg;
        if (!wI) throw new Error("MPC signing message Missing payload");
        UA.push(wI), LA.push(dg);
      });
      const Eg = nB(oA, Z), Lg = oA.map((Cg) => Cg.id), SB = await this._cosignerWasmWrapper.startSigning(Z, c, sB(W), hA, UA, LA, ZA, Lg, Eg);
      switch (W) {
        case $g.MPC_CMP_ECDSA_SECP256K1:
          return this.generateMPCMessage(c, "CMP_ONLINE_MTA_REQUEST", SB, Eg);
        case $g.MPC_CMP_EDDSA_ED25519:
          return this.generateMPCMessage(c, "STORE_EDDSA_SIGNING_COMMITMENTS", SB, Eg);
        default:
          throw new g("Unsupported algorithm", "UNKNOWN_ALGORITHM");
      }
    }
    async CMPOnlineMTARequest(c, R) {
      const { transaction: G, messages: Z } = R.payload, W = [], V = /* @__PURE__ */ new Map();
      for (const hA in Z) {
        const UA = Z[hA], { payload: LA, sig: bA } = UA;
        if (!LA) throw new Error("MPC message Missing payload");
        const ZA = JSON.parse(LA);
        if (!ZA.mta_requests) throw new Error("MPC message bad mta_requests");
        V.set(hA, ZA.mta_requests), W.push(hA);
      }
      const oA = await this._cosignerWasmWrapper.onCmpMtaMessage(c, V);
      if (!oA) throw new Error("Failed to process CMP MTA message");
      return this.generateMPCMessage(G, "CMP_ONLINE_MTA_RESPONSE", oA, W);
    }
    async CMPOnlineMTAResponse(c, R) {
      const { transaction: G, messages: Z } = R.payload, W = [], V = /* @__PURE__ */ new Map();
      for (const hA in Z) {
        const UA = Z[hA], { payload: LA, sig: bA } = UA;
        if (!LA) throw new Error("MPC message Missing payload");
        const ZA = JSON.parse(LA);
        if (!ZA.ack) throw new Error("MPC message missing ack");
        if (!ZA.mta_responses) throw new Error("MPC message missing mta_responses");
        V.set(hA, ZA), W.push(hA);
      }
      const oA = await this._cosignerWasmWrapper.onCmpMtaMessageReply(c, V);
      if (!oA) throw new Error("Failed to process CMP MTA message reply");
      return this.generateMPCMessage(G, "CMP_ONLINE_MTA_VERIFY", oA, W);
    }
    async CMPOnlineMTAVerify(c, R) {
      const { transaction: G, messages: Z } = R.payload, W = [], V = /* @__PURE__ */ new Map();
      for (const hA in Z) {
        const UA = Z[hA], { payload: LA, sig: bA } = UA;
        if (!LA) throw new Error("MPC message Missing payload");
        const ZA = JSON.parse(LA);
        if (!ZA.txid) throw new Error("MPC message missing txid");
        if (!ZA.deltas) throw new Error("MPC message missing deltas");
        V.set(hA, ZA), W.push(hA);
      }
      const oA = await this._cosignerWasmWrapper.onCmpMtaMessageVerify(c, V);
      if (!oA) throw new Error("Failed to generate setup proofs");
      return this.generateMPCMessage(G, "GET_CMP_SIGNATURE", oA, W);
    }
    async getCMPSignature(c, R) {
      const { transaction: G, messages: Z } = R.payload, W = [], V = /* @__PURE__ */ new Map();
      for (const hA in Z) {
        const UA = Z[hA], { payload: LA, sig: bA } = UA;
        if (!LA) throw new Error("MPC message Missing payload");
        const ZA = JSON.parse(LA);
        if (!ZA.txid) throw new Error("MPC message missing txid");
        if (!ZA.sis) throw new Error("MPC message missing sis");
        V.set(hA, ZA), W.push(hA);
      }
      const oA = await this._cosignerWasmWrapper.getCMPSignature(c, V);
      if (!oA) throw new Error("Failed to get CMP signature");
      return this.generateMPCMessage(G, "SIGNATURE", oA, W);
    }
    async storeEddsaSigningCommitments(c, R) {
      const { transaction: G, messages: Z } = R.payload, W = [], V = /* @__PURE__ */ new Map();
      for (const hA in Z) {
        const UA = Z[hA], { payload: LA, sig: bA } = UA;
        if (!LA) throw new Error("MPC message Missing payload");
        const ZA = JSON.parse(LA);
        if (!ZA.commitments) throw new Error("MPC message bad commitments");
        V.set(hA, ZA.commitments), W.push(hA);
      }
      const oA = await this._cosignerWasmWrapper.storeEddsaSignatureCommitments(c, V);
      if (!oA) throw new Error("Failed to process EdDSA commitments message");
      return this.generateMPCMessage(G, "R_BROADCAST", oA, W);
    }
    async onRBroadcast(c, R) {
      const { transaction: G, messages: Z } = R.payload, W = [], V = /* @__PURE__ */ new Map();
      for (const hA in Z) {
        const UA = Z[hA], { payload: LA, sig: bA } = UA;
        if (!LA) throw new Error("MPC message Missing payload");
        const ZA = JSON.parse(LA);
        if (!ZA.txid) throw new Error("MPC message missing txid");
        if (!ZA.Rs) throw new Error("MPC message missing Rs");
        V.set(hA, ZA), W.push(hA);
      }
      const oA = await this._cosignerWasmWrapper.onRBroadcast(c, V);
      if (!oA) throw new Error("Failed to process EdDSA R broadcast message");
      return this.generateMPCMessage(G, "S_BROADCAST", oA, W);
    }
    async onSBroadcast(c, R) {
      const { transaction: G, messages: Z } = R.payload, W = [], V = /* @__PURE__ */ new Map();
      for (const hA in Z) {
        const UA = Z[hA], { payload: LA, sig: bA } = UA;
        if (!LA) throw new Error("MPC message Missing payload");
        const ZA = JSON.parse(LA);
        if (!ZA.txid) throw new Error("MPC message missing txid");
        if (!ZA.si) throw new Error("MPC message missing si");
        V.set(hA, ZA), W.push(hA);
      }
      const oA = await this._cosignerWasmWrapper.getEddsaSignature(c, V);
      if (!oA) throw new Error("Failed to process EdDSA get signature message");
      return this.generateMPCMessage(G, "SIGNATURE", oA, W);
    }
    async generateMPCMessage(c, R, G, Z) {
      const W = JSON.stringify(G), V = await this._sdkStorage.getPrivateKeyForCSR();
      if (!V) throw this._logger.log("ERROR", "_startListeningToTxMessages Private key not found"), new Error("Private key not found");
      const oA = await Ig(V, W);
      return { sender: this._playerId, transaction: c, phase: R, payload: W, recipients: Z, sig: oA, version: 6, cosignerVersion: 6 };
    }
    _isAlgorithmFromPayloadSupported(c) {
      return [$g.MPC_CMP_ECDSA_SECP256K1, $g.MPC_CMP_EDDSA_ED25519].includes(c);
    }
    _isCMP(c) {
      return [U.ECDSA_SECP256K1, U.EDDSA_ED25519].includes(c);
    }
  }
  qB([i()], TB.prototype, "startSignersDiscovery", null), qB([i()], TB.prototype, "addDeviceRequest", null), qB([i()], TB.prototype, "cmpAddUser", null), qB([i()], TB.prototype, "startDerivedSetup", null), qB([i()], TB.prototype, "storeCMPSetupCommitments", null), qB([i()], TB.prototype, "generateSetupProofs", null), qB([i()], TB.prototype, "verifySetupProofs", null), qB([i()], TB.prototype, "createCMPSecret", null), qB([i()], TB.prototype, "startSigning", null), qB([i()], TB.prototype, "CMPOnlineMTARequest", null), qB([i()], TB.prototype, "CMPOnlineMTAResponse", null), qB([i()], TB.prototype, "CMPOnlineMTAVerify", null), qB([i()], TB.prototype, "getCMPSignature", null), qB([i()], TB.prototype, "storeEddsaSigningCommitments", null), qB([i()], TB.prototype, "onRBroadcast", null), qB([i()], TB.prototype, "onSBroadcast", null);
  var iI = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  class _E {
    constructor(c) {
      DA(this, "_sdkStorage");
      DA(this, "_isInProcess", !1);
      DA(this, "_releaseSecureStorageCallback", null);
      DA(this, "_dataMapSecured", null);
      DA(this, "_dataMap", null);
      this._sdkStorage = c;
    }
    storeData(c, R, G) {
      const Z = M(G);
      this._getDataMap(c).set(R, Z);
    }
    loadData(c, R) {
      const G = this._getDataMap(c).get(R);
      return G ? x(G) : null;
    }
    deleteData(c, R) {
      this._getDataMap(c).delete(R);
    }
    async prepareForSyncWork() {
      if (this._isInProcess) throw new Error("CosignerStorage is already in process");
      this._isInProcess = !0;
      try {
        this._releaseSecureStorageCallback = await this._sdkStorage.getSecureStoreAccess(), this._dataMap = this._buildDataFromJson(await this._sdkStorage.getCosignerData()), this._dataMapSecured = this._buildDataFromJson(await this._sdkStorage.getCosignerSecureData());
      } catch (c) {
        throw await this.completeSyncWork(!1), c;
      }
    }
    async completeSyncWork(c) {
      if (!this._isInProcess) throw new Error("CosignerStorage is not in process");
      try {
        c && (this._dataMap && await this._sdkStorage.setCosignerData(this._buildJsonStrFromData(this._dataMap)), this._dataMapSecured && await this._sdkStorage.setCosignerSecureData(this._buildJsonStrFromData(this._dataMapSecured))), this._releaseSecureStorageCallback && await this._releaseSecureStorageCallback();
      } finally {
        this._releaseSecureStorageCallback = null, this._dataMapSecured = null, this._dataMap = null, this._isInProcess = !1;
      }
    }
    async getKeysShares(c) {
      await this.prepareForSyncWork();
      try {
        return c.reduce((R, G) => {
          const Z = this.loadData("js_cloud_cosigner", G);
          return Z && (R[G] = M(Z)), R;
        }, {});
      } finally {
        await this.completeSyncWork(!1);
      }
    }
    async getDataForBackup(c) {
      await this.prepareForSyncWork();
      try {
        const R = this.loadData("js_cloud_cosigner", c), G = function(hA) {
          return hA ? hA.length / 2 == 36 ? hA.slice(8) : hA : null;
        }(R ? M(R) : null), Z = this.loadData("auxiliary keys", c), W = Z ? M(Z) : null, V = this.loadData("metadata", c), oA = V ? M(V) : null;
        return JSON.stringify({ key: G, auxiliaryKeys: W, metadata: oA });
      } finally {
        await this.completeSyncWork(!1);
      }
    }
    async restoreFromBackup(c, R, G) {
      await this.prepareForSyncWork();
      try {
        const { key: Z, auxiliaryKeys: W, metadata: V } = JSON.parse(R), oA = function(hA, UA) {
          return hA ? hA.length / 2 == 32 ? function(bA) {
            switch (bA) {
              case "MPC_CMP_ECDSA_SECP256K1":
                return "00000000";
              case "MPC_CMP_EDDSA_ED25519":
                return "01000000";
              default:
                return "";
            }
          }(UA).concat(hA) : hA : null;
        }(Z, G);
        oA && this.storeData("js_cloud_cosigner", c, x(oA)), W && this.storeData("auxiliary keys", c, x(W)), V && this.storeData("metadata", c, x(V)), this.storeData("key info", c, new TextEncoder().encode(Ns));
      } finally {
        await this.completeSyncWork(!0);
      }
    }
    _getDataMap(c) {
      const R = this._isSecureNamespace(c) ? this._dataMapSecured : this._dataMap;
      if (!R) throw new Error("You must call prepareForSyncWork() before using the sync storage functions");
      let G = R.get(c);
      return G || (G = /* @__PURE__ */ new Map(), R.set(c, G)), G;
    }
    _isSecureNamespace(c) {
      return c === "auxiliary keys" || c === "js_cloud_cosigner";
    }
    _buildDataFromJson(c) {
      if (!c) return /* @__PURE__ */ new Map();
      const R = JSON.parse(c);
      if (!R) return /* @__PURE__ */ new Map();
      const G = /* @__PURE__ */ new Map();
      for (const Z in R) {
        const W = R[Z];
        for (const V in W) {
          const oA = W[V];
          let hA = G.get(Z);
          hA || (hA = /* @__PURE__ */ new Map(), G.set(Z, hA)), hA.set(V, oA);
        }
      }
      return G;
    }
    _buildJsonStrFromData(c) {
      const R = {};
      for (const [G, Z] of c) {
        const W = {};
        for (const [V, oA] of Z) W[V] = oA;
        R[G] = W;
      }
      return JSON.stringify(R);
    }
  }
  iI([i()], _E.prototype, "prepareForSyncWork", null), iI([i()], _E.prototype, "completeSyncWork", null), iI([i()], _E.prototype, "getKeysShares", null), iI([i()], _E.prototype, "getDataForBackup", null), iI([i()], _E.prototype, "restoreFromBackup", null);
  class qi {
    constructor(c) {
      DA(this, "_secureStorage");
      DA(this, "_locksCount", 0);
      this._secureStorage = c;
    }
    get(c) {
      if (this._locksCount === 0) throw new Error("You must call `getAccess` to get access to the storage");
      return this._secureStorage.get(c);
    }
    set(c, R) {
      if (this._locksCount === 0) throw new Error("You must call `getAccess` to get access to the storage");
      return this._secureStorage.set(c, R);
    }
    clear(c) {
      if (this._locksCount === 0) throw new Error("You must call `getAccess` to get access to the storage");
      return this._secureStorage.clear(c);
    }
    getAllKeys() {
      if (this._locksCount === 0) throw new Error("You must call `getAccess` to get access to the storage");
      return this._secureStorage.getAllKeys();
    }
    async getAccess() {
      this._locksCount++;
      let c = null;
      if (this._locksCount === 1) try {
        c = await this._secureStorage.getAccess();
      } catch (R) {
        throw this._locksCount--, R;
      }
      return async () => {
        if (this._locksCount--, this._locksCount === 0 && c) try {
          await c();
        } catch (R) {
          throw this._locksCount++, R;
        }
      };
    }
  }
  var Jg = function(tA, c, R, G) {
    var Z, W = arguments.length, V = W < 3 ? c : G === null ? G = Object.getOwnPropertyDescriptor(c, R) : G;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") V = Reflect.decorate(tA, c, R, G);
    else for (var oA = tA.length - 1; oA >= 0; oA--) (Z = tA[oA]) && (V = (W < 3 ? Z(V) : W > 3 ? Z(c, R, V) : Z(c, R)) || V);
    return W > 3 && V && Object.defineProperty(c, R, V), V;
  };
  const Be = ["MPC_CMP_ECDSA_SECP256K1", "MPC_CMP_EDDSA_ED25519"];
  class Ng {
    constructor(c, R, G, Z) {
      DA(this, "_env");
      DA(this, "_deviceId");
      DA(this, "_storageProvider");
      DA(this, "_multiLockSecureStorage");
      this._env = c, this._deviceId = R, this._storageProvider = G, this._multiLockSecureStorage = Z;
    }
    async getSecureStoreAccess() {
      return this._multiLockSecureStorage.getAccess();
    }
    async getCosignerData() {
      return this._get("NONE_SECURE", "cosignerData");
    }
    setCosignerData(c) {
      return this._set("NONE_SECURE", "cosignerData", c);
    }
    clearCosignerData() {
      return this._clear("NONE_SECURE", "cosignerData");
    }
    async getCosignerSecureData() {
      return this._get("SECURE", "cosignerSecureData");
    }
    setCosignerSecureData(c) {
      return this._set("SECURE", "cosignerSecureData", c);
    }
    clearCosignerSecureData() {
      return this._clear("SECURE", "cosignerSecureData");
    }
    async getInProgressSetupInfo(c) {
      const R = await this._get("NONE_SECURE", this._getInProgressSetupInfoKey(c));
      if (!R) return null;
      const G = JSON.parse(R), { expectedMessageType: Z, messageTimeout: W } = G;
      return { expectedMessageType: Z, messageTimeout: W };
    }
    setInProgressSetupInfo(c, R) {
      const { expectedMessageType: G, messageTimeout: Z } = c, W = JSON.stringify({ expectedMessageType: G, messageTimeout: Z });
      return this._set("NONE_SECURE", this._getInProgressSetupInfoKey(R), W);
    }
    async clearAllInProgressSetupInfos() {
      for (const c of Be) await this.clearInProgressSetupInfo(c);
    }
    clearInProgressSetupInfo(c) {
      return this._clear("NONE_SECURE", this._getInProgressSetupInfoKey(c));
    }
    async getInProgressSigningInfo() {
      const c = await this._get("NONE_SECURE", "inProgressSigningInfo");
      return c ? JSON.parse(c) : null;
    }
    setInProgressSigningInfo(c) {
      return this._set("NONE_SECURE", "inProgressSigningInfo", JSON.stringify(c));
    }
    clearInProgressSigningInfo() {
      return this._clear("NONE_SECURE", "inProgressSigningInfo");
    }
    setEnrolledPlayer(c) {
      return this._set("NONE_SECURE", "enrolledPlayer", c ? "true" : "false");
    }
    async getEnrolledPlayer() {
      return await this._get("NONE_SECURE", "enrolledPlayer") === "true";
    }
    clearEnrolledPlayer() {
      return this._clear("NONE_SECURE", "enrolledPlayer");
    }
    async clearAllEnrollmentStorage() {
      await this.clearCsrRequest(), await this.clearPublicKeyForCSR(), await this.clearPrivateKeyForCSR(), await this.clearEnrolledPlayer(), await this.clearAllInProgressSetupInfos();
    }
    setDownloadedServiceCertificates(c) {
      return this._set("NONE_SECURE", `downloadedServiceCertificates-${this._env}`, JSON.stringify(c));
    }
    async getDownloadedServiceCertificates() {
      const c = await this._get("NONE_SECURE", `downloadedServiceCertificates-${this._env}`);
      return c ? JSON.parse(c) : null;
    }
    clearDownloadedServiceCertificates() {
      return this._clear("NONE_SECURE", `downloadedServiceCertificates-${this._env}`);
    }
    async setPlayerCertificate(c, R) {
      const G = await this.getAllPlayersCertificates() ?? {};
      return G[c] = R, this._set("NONE_SECURE", `playerCertificates-${this._env}`, JSON.stringify(G));
    }
    async getPlayerCertificate(c) {
      return (await this.getAllPlayersCertificates() ?? {})[c] ?? null;
    }
    async getAllPlayersCertificates() {
      const c = await this._get("NONE_SECURE", `playerCertificates-${this._env}`);
      return c ? JSON.parse(c) : null;
    }
    clearPlayersCertificates() {
      return this._clear("NONE_SECURE", `playerCertificates-${this._env}`);
    }
    setKeyForBackup(c) {
      return this._set("NONE_SECURE", this._getKeyForBackupStorageKey(c.algorithm), JSON.stringify(c));
    }
    async getAllKeysForBackup() {
      const c = [];
      for (const R of Be) {
        const G = await this._get("NONE_SECURE", this._getKeyForBackupStorageKey(R));
        G && c.push(JSON.parse(G));
      }
      return c;
    }
    async getKeyForBackup(c) {
      const R = await this._get("NONE_SECURE", this._getKeyForBackupStorageKey(c));
      return R ? JSON.parse(R) : null;
    }
    async clearKeysForBackup(c) {
      for (const R of c) await this._clear("NONE_SECURE", this._getKeyForBackupStorageKey(R));
    }
    async clearAllKeysForBackup() {
      for (const c of Be) await this._clear("NONE_SECURE", this._getKeyForBackupStorageKey(c));
    }
    setKeyDescriptor(c) {
      return this._set("NONE_SECURE", this._getKeyDescriptorStorageKey(c.algorithm), JSON.stringify(c));
    }
    async updateKeyDescriptorStatus(c, R) {
      let G = await this.getKeyDescriptor(c);
      return G ? G.keyStatus = R : G = { algorithm: c, keyId: null, keyStatus: R }, await this.setKeyDescriptor(G), G;
    }
    async getKeyDescriptor(c) {
      const R = await this._get("NONE_SECURE", this._getKeyDescriptorStorageKey(c));
      return R ? JSON.parse(R) : null;
    }
    async getAllKeyDescriptors() {
      const c = {};
      for (const R of Be) {
        const G = await this._get("NONE_SECURE", this._getKeyDescriptorStorageKey(R));
        G && (c[R] = JSON.parse(G));
      }
      return c;
    }
    async clearKeyId(c) {
      return this._clear("NONE_SECURE", this._getKeyDescriptorStorageKey(c));
    }
    async clearAllKeyDescriptors() {
      for (const c of Be) await this.clearKeyId(c);
    }
    setCsrRequest(c) {
      return this._set("NONE_SECURE", "csrRequest", c);
    }
    getCsrRequest() {
      return this._get("NONE_SECURE", "csrRequest");
    }
    clearCsrRequest() {
      return this._clear("NONE_SECURE", "csrRequest");
    }
    setPublicKeyForCSR(c) {
      return this._set("NONE_SECURE", "publicKeyForCSR", c);
    }
    getPublicKeyForCSR() {
      return this._get("NONE_SECURE", "publicKeyForCSR");
    }
    clearPublicKeyForCSR() {
      return this._clear("NONE_SECURE", "publicKeyForCSR");
    }
    setPrivateKeyForCSR(c) {
      return this._set("SECURE", "privateKeyForCSR", c);
    }
    getPrivateKeyForCSR() {
      return this._get("SECURE", "privateKeyForCSR");
    }
    clearPrivateKeyForCSR() {
      return this._clear("SECURE", "privateKeyForCSR");
    }
    setPhysicalDeviceId(c) {
      return this._set("GLOBAL", "physicalDeviceId", c);
    }
    getPhysicalDeviceId() {
      return this._get("GLOBAL", "physicalDeviceId");
    }
    clearPhysicalDeviceId() {
      return this._clear("GLOBAL", "physicalDeviceId");
    }
    setLastUsedClientVersion(c) {
      return this._set("GLOBAL", "lastUsedClientVersion", c);
    }
    getLastUsedClientVersion() {
      return this._get("GLOBAL", "lastUsedClientVersion");
    }
    clearLastUsedClientVersion() {
      return this._clear("GLOBAL", "lastUsedClientVersion");
    }
    async clearAll() {
      const c = await this.getSecureStoreAccess();
      try {
        await this.clearEnrolledPlayer(), await this.clearDownloadedServiceCertificates(), await this.clearCsrRequest(), await this.clearPublicKeyForCSR(), await this.clearPrivateKeyForCSR(), await this.clearAllKeyDescriptors(), await this.clearAllKeysForBackup(), await this.clearPlayersCertificates(), await this.clearCosignerData(), await this.clearCosignerSecureData();
      } finally {
        c();
      }
    }
    _get(c, R) {
      return this._getStorage(c).get(this._getStorageKey(c, R));
    }
    _set(c, R, G) {
      return this._getStorage(c).set(this._getStorageKey(c, R), G);
    }
    _clear(c, R) {
      return this._getStorage(c).clear(this._getStorageKey(c, R));
    }
    _getStorage(c) {
      switch (c) {
        case "NONE_SECURE":
        case "GLOBAL":
          return this._storageProvider;
        case "SECURE":
          return this._multiLockSecureStorage;
        default:
          throw new Error("Invalid sourceStorage");
      }
    }
    _getStorageKey(c, R) {
      switch (c) {
        case "NONE_SECURE":
          return `STORAGE_${this._deviceId}_${R}`;
        case "SECURE":
          return `SECURE-STORAGE_${this._deviceId}_${R}`;
        case "GLOBAL":
          return `GLOBAL_${R}`;
        default:
          throw new Error("Invalid sourceStorage");
      }
    }
    _getInProgressSetupInfoKey(c) {
      return this._getStorageKeyWithDelimiter("inProgressSetupInfo", c);
    }
    _getKeyForBackupStorageKey(c) {
      return this._getStorageKeyWithDelimiter("keyForBackup", c);
    }
    _getKeyDescriptorStorageKey(c) {
      return this._getStorageKeyWithDelimiter("keyDescriptor", c);
    }
    _getStorageKeyWithDelimiter(...c) {
      return c.join("-");
    }
  }
  Jg([i()], Ng.prototype, "getSecureStoreAccess", null), Jg([i()], Ng.prototype, "getCosignerData", null), Jg([i()], Ng.prototype, "setCosignerData", null), Jg([i()], Ng.prototype, "clearCosignerData", null), Jg([i()], Ng.prototype, "getCosignerSecureData", null), Jg([i()], Ng.prototype, "setCosignerSecureData", null), Jg([i()], Ng.prototype, "clearCosignerSecureData", null), Jg([i()], Ng.prototype, "getInProgressSetupInfo", null), Jg([i()], Ng.prototype, "setInProgressSetupInfo", null), Jg([i()], Ng.prototype, "clearAllInProgressSetupInfos", null), Jg([i()], Ng.prototype, "clearInProgressSetupInfo", null), Jg([i()], Ng.prototype, "getInProgressSigningInfo", null), Jg([i()], Ng.prototype, "setInProgressSigningInfo", null), Jg([i()], Ng.prototype, "clearInProgressSigningInfo", null), Jg([i()], Ng.prototype, "setEnrolledPlayer", null), Jg([i()], Ng.prototype, "getEnrolledPlayer", null), Jg([i()], Ng.prototype, "clearEnrolledPlayer", null), Jg([i()], Ng.prototype, "clearAllEnrollmentStorage", null), Jg([i()], Ng.prototype, "setDownloadedServiceCertificates", null), Jg([i()], Ng.prototype, "getDownloadedServiceCertificates", null), Jg([i()], Ng.prototype, "clearDownloadedServiceCertificates", null), Jg([i()], Ng.prototype, "setPlayerCertificate", null), Jg([i()], Ng.prototype, "getPlayerCertificate", null), Jg([i()], Ng.prototype, "getAllPlayersCertificates", null), Jg([i()], Ng.prototype, "clearPlayersCertificates", null), Jg([i()], Ng.prototype, "setKeyForBackup", null), Jg([i()], Ng.prototype, "getAllKeysForBackup", null), Jg([i()], Ng.prototype, "getKeyForBackup", null), Jg([i()], Ng.prototype, "clearKeysForBackup", null), Jg([i()], Ng.prototype, "clearAllKeysForBackup", null), Jg([i()], Ng.prototype, "setKeyDescriptor", null), Jg([i()], Ng.prototype, "updateKeyDescriptorStatus", null), Jg([i()], Ng.prototype, "setPhysicalDeviceId", null), Jg([i()], Ng.prototype, "getPhysicalDeviceId", null), Jg([i()], Ng.prototype, "clearPhysicalDeviceId", null), Jg([i()], Ng.prototype, "setLastUsedClientVersion", null), Jg([i()], Ng.prototype, "getLastUsedClientVersion", null), Jg([i()], Ng.prototype, "clearLastUsedClientVersion", null), Jg([i()], Ng.prototype, "clearAll", null);
  const Pi = "INFO";
  class uy {
    constructor(c, R, G, Z) {
      DA(this, "_logger");
      DA(this, "_numericLogLevel");
      DA(this, "_bufferAppender");
      this._logger = c, this._numericLogLevel = this._getAllowedLogLevel(R, G), Z && (this._bufferAppender = { entries: [], maxEntries: Z.maxEntries || 20 });
    }
    get logBuffer() {
      var c;
      return (c = this._bufferAppender) == null ? void 0 : c.entries;
    }
    appendToBuffer(c, R, G) {
      if (!this._bufferAppender) return;
      const { entries: Z, maxEntries: W } = this._bufferAppender;
      Z.length >= W && Z.shift(), Z.push({ level: c, message: R, isoTimestamp: (/* @__PURE__ */ new Date()).toISOString(), ...G && { metadata: G } });
    }
    clearLogBuffer() {
      var c;
      (c = this._bufferAppender) != null && c.entries && (this._bufferAppender.entries = []);
    }
    log(c, R, G) {
      this.appendToBuffer(c, R, G), this._toNumericValue(c) < this._numericLogLevel || this._logger.log(c, R, G);
    }
    _toNumericValue(c) {
      switch (c) {
        case "VERBOSE":
        default:
          return 0;
        case "DEBUG":
          return 1;
        case "INFO":
          return 2;
        case "WARN":
          return 3;
        case "ERROR":
          return 4;
      }
    }
    _getAllowedLogLevel(c, R) {
      return this._isLogLevelAllowed(R, c) ? this._toNumericValue(R) : (this._logger.log("INFO", `Log level '${R}' is not allowed, setting to '${Pi}'`), this._toNumericValue(Pi));
    }
    _isLogLevelAllowed(c, R) {
      return !(["production", "sandbox"].includes(R) && this._toNumericValue(c) < this._toNumericValue(Pi));
    }
  }
  var KB;
  (function(tA) {
    tA.INITIALIZE = "INITIALIZE", tA.GENERATE_MPC_KEYS = "GENERATE_MPC_KEYS", tA.BACKUP_KEYS = "BACKUP_KEYS", tA.RECOVER_KEYS = "RECOVER_KEYS", tA.SIGN_TRANSACTION = "SIGN_TRANSACTION", tA.TAKEOVER = "TAKEOVER", tA.EXPORT_FULL_KEYS = "EXPORT_FULL_KEYS", tA.DERIVE_ASSET_KEY = "DERIVE_ASSET_KEY", tA.REQUEST_JOIN_EXISTING_WALLET = "REQUEST_JOIN_EXISTING_WALLET", tA.APPROVE_JOIN_WALLET_REQUEST = "APPROVE_JOIN_WALLET_REQUEST", tA.DISPOSE = "DISPOSE", tA.CLEAR_ALL_STORAGE = "CLEAR_ALL_STORAGE", tA.STOP_MPC_DEVICE_SETUP = "STOP_MPC_DEVICE_SETUP", tA.STOP_IN_PROGRESS_SIGN_TRANSACTION = "STOP_IN_PROGRESS_SIGN_TRANSACTION", tA.GET_IN_PROGRESS_SIGNING_TX_ID = "GET_IN_PROGRESS_SIGNING_TX_ID", tA.STOP_JOIN_WALLET = "STOP_JOIN_WALLET", tA.GET_KEYS_STATUS = "GET_KEYS_STATUS", tA.GET_PHYSICAL_DEVICE_ID = "GET_PHYSICAL_DEVICE_ID";
  })(KB || (KB = {}));
  const Ie = 4e3;
  class Ms extends Error {
    constructor(R, G, Z, W) {
      super(`${R}, algorithm=${G} status=${Z} keyId=${W}`);
      DA(this, "algorithm");
      DA(this, "keyStatus");
      DA(this, "keyId");
      this.algorithm = G, this.keyStatus = Z, this.keyId = W;
    }
  }
  class Sy {
    constructor(c, R, G) {
      DA(this, "_logger");
      DA(this, "_fireblocksServerApi");
      DA(this, "_options");
      DA(this, "_eventsHistory", {});
      this._logger = c, this._fireblocksServerApi = R, this._options = G;
    }
    async reportEvent({ method: c, error: R }) {
      if (!this._options.enabled) return !1;
      let G = !1;
      const Z = this._getErrorType(R), W = R.message;
      try {
        if (this._onEventReceived(c, Z)) return this._logger.log("INFO", "TelemetryManager.reportEvent(): discarding", { method: c, eventType: Z, eventMessage: W }), !1;
        this._logger.log("INFO", "TelemetryManager.reportEvent(): sending", { method: c, eventType: Z, eventMessage: W });
        const V = { type: Z, message: W, level: "ERROR", method: c, ...R.stack && { stacktraces: [R.stack.slice(0, Ie)] }, logs: this._getRecentLogs(), metadata: this._getMetadata(c, Z) };
        this._onEventSent(c, Z), G = await this._fireblocksServerApi.reportEvent(V), this._logger.log(G ? "INFO" : "ERROR", "TelemetryManager.reportEvent(): " + (G ? "succeeded" : "failed"), { method: c, eventType: Z, eventMessage: W });
      } catch (V) {
        this._logger.log("ERROR", "TelemetryManager.reportEvent(): failed with exception", { method: c, eventType: Z, eventMessage: W, error: V });
      }
      return G;
    }
    _getRecentLogs() {
      const c = this._logger.logBuffer;
      if (c) return c.splice(0, c.length - 20), c.forEach((R) => {
        if (R.metadata) try {
          const G = JSON.stringify(R.metadata);
          (G == null ? void 0 : G.length) > Ie && (R.metadata = { truncatedJson: G.substring(0, Ie) });
        } catch {
          delete R.metadata;
        }
        R.message && R.message.length > Ie && (R.message = R.message.substring(0, Ie));
      }), c;
    }
    _getMetadata(c, R) {
      const G = this._getPreviouslyIgnoredEvents(c, R), Z = globalThis == null ? void 0 : globalThis.navigator;
      return { timezoneOffset: (/* @__PURE__ */ new Date()).getTimezoneOffset(), ...(G == null ? void 0 : G.length) && { previousEvents: G.map((W) => W.toISOString()) }, ...Z && { navigator_userAgent: Z.userAgent, navigator_platform: Z.platform, navigator_language: Z.language } };
    }
    _getEventKey(c, R) {
      return `${c}_${R}`;
    }
    _onEventSent(c, R) {
      const G = this._getEventKey(c, R);
      this._eventsHistory[G].sent = /* @__PURE__ */ new Date(), this._eventsHistory[G].ignored = [];
    }
    _onEventReceived(c, R) {
      const G = this._getEventKey(c, R);
      return this._eventsHistory[G] || (this._eventsHistory[G] = { ignored: [] }), !!this._shouldIgnoreEvent(c, R) && (this._eventsHistory[G].ignored.push(/* @__PURE__ */ new Date()), !0);
    }
    _getLastEventSentTime(c, R) {
      var Z;
      const G = this._getEventKey(c, R);
      return (Z = this._eventsHistory[G]) == null ? void 0 : Z.sent;
    }
    _getPreviouslyIgnoredEvents(c, R) {
      var Z;
      const G = this._getEventKey(c, R);
      return (Z = this._eventsHistory[G]) == null ? void 0 : Z.ignored;
    }
    _shouldIgnoreEvent(c, R) {
      const G = this._getLastEventSentTime(c, R);
      return !!G && ((/* @__PURE__ */ new Date()).getTime() - G.getTime()) / 1e3 / 60 < 60;
    }
    _getErrorType(c) {
      var R, G;
      return c instanceof g ? `FB.${c.key}` : cA.isInstance(c) ? `FB.API.${c.method}.${(G = (R = c.errorResponse) == null ? void 0 : R.error) == null ? void 0 : G.code}` : c instanceof Ms ? `FB.MPC.${c.algorithm}.${c.keyStatus}` : c.name || "UnknownError";
    }
  }
  class Uy {
    constructor(c, R) {
      DA(this, "_fireblocksNCW");
      DA(this, "_telemetryManager");
      this._fireblocksNCW = c, this._telemetryManager = R;
    }
    async init() {
      return this._invokeAsync(KB.INITIALIZE, () => this._fireblocksNCW.init());
    }
    async dispose() {
      return this._invokeAsync(KB.DISPOSE, () => this._fireblocksNCW.dispose());
    }
    async clearAllStorage() {
      return this._invokeAsync(KB.CLEAR_ALL_STORAGE, () => this._fireblocksNCW.clearAllStorage());
    }
    async generateMPCKeys(c) {
      return this._invokeAsync(KB.GENERATE_MPC_KEYS, () => this._fireblocksNCW.generateMPCKeys(c));
    }
    async stopMpcDeviceSetup() {
      return this._invokeAsync(KB.STOP_MPC_DEVICE_SETUP, () => this._fireblocksNCW.stopMpcDeviceSetup());
    }
    async signTransaction(c) {
      return this._invokeAsync(KB.SIGN_TRANSACTION, () => this._fireblocksNCW.signTransaction(c));
    }
    async stopInProgressSignTransaction() {
      return this._invokeAsync(KB.STOP_IN_PROGRESS_SIGN_TRANSACTION, () => this._fireblocksNCW.stopInProgressSignTransaction());
    }
    async getInProgressSigningTxId() {
      return this._invokeAsync(KB.GET_IN_PROGRESS_SIGNING_TX_ID, () => this._fireblocksNCW.getInProgressSigningTxId());
    }
    async backupKeys(c, R) {
      return this._invokeAsync(KB.BACKUP_KEYS, () => this._fireblocksNCW.backupKeys(c, R));
    }
    async recoverKeys(c) {
      return this._invokeAsync(KB.RECOVER_KEYS, () => this._fireblocksNCW.recoverKeys(c));
    }
    async requestJoinExistingWallet(c) {
      return this._invokeAsync(KB.REQUEST_JOIN_EXISTING_WALLET, () => this._fireblocksNCW.requestJoinExistingWallet(c));
    }
    async approveJoinWalletRequest(c) {
      return this._invokeAsync(KB.APPROVE_JOIN_WALLET_REQUEST, () => this._fireblocksNCW.approveJoinWalletRequest(c));
    }
    stopJoinWallet() {
      this._invokeSync(KB.STOP_JOIN_WALLET, () => this._fireblocksNCW.stopJoinWallet());
    }
    async takeover() {
      return this._invokeAsync(KB.TAKEOVER, () => this._fireblocksNCW.takeover());
    }
    async exportFullKeys(c, R) {
      return this._invokeAsync(KB.EXPORT_FULL_KEYS, () => this._fireblocksNCW.exportFullKeys(c, R));
    }
    deriveAssetKey(c, R, G, Z, W) {
      return this._invokeSync(KB.DERIVE_ASSET_KEY, () => this._fireblocksNCW.deriveAssetKey(c, R, G, Z, W));
    }
    async getKeysStatus() {
      return this._invokeAsync(KB.GET_KEYS_STATUS, () => this._fireblocksNCW.getKeysStatus());
    }
    getPhysicalDeviceId() {
      return this._invokeSync(KB.GET_PHYSICAL_DEVICE_ID, () => this._fireblocksNCW.getPhysicalDeviceId());
    }
    async _invokeAsync(c, R) {
      try {
        return await R();
      } catch (G) {
        throw this._telemetryManager.reportEvent({ method: c, error: G }), G;
      }
    }
    _invokeSync(c, R) {
      try {
        return R();
      } catch (G) {
        throw this._telemetryManager.reportEvent({ method: c, error: G }), G;
      }
    }
  }
  class ky {
    constructor(c, R) {
      DA(this, "_eventsHandler");
      DA(this, "_telemetryManager");
      this._eventsHandler = c, this._telemetryManager = R;
    }
    handleEvent(c) {
      const R = this._getErrorEvent(c);
      R && this._telemetryManager.reportEvent(R), this._eventsHandler.handleEvent(c);
    }
    _getErrorEvent(c) {
      switch (c.type) {
        case "key_descriptor_changed": {
          const R = this._getKeyDescriptorChangedError(c);
          if (R) return { method: KB.GENERATE_MPC_KEYS, error: R };
          break;
        }
      }
      return null;
    }
    _getKeyDescriptorChangedError(c) {
      const { keyId: R, keyStatus: G, algorithm: Z } = (c == null ? void 0 : c.keyDescriptor) || {};
      return G === "TIMEOUT" || G === "ERROR" ? new Ms("Failed to generate MPC keys", Z, G, R) : null;
    }
  }
  class Hy {
    constructor(c, R) {
      DA(this, "_logger");
      DA(this, "_sdkStorage");
      DA(this, "MIGRATION_VERSIONS", ["12.4.0"]);
      this._logger = c, this._sdkStorage = R;
    }
    async runMigrationsIfNeeded(c) {
      const R = c;
      this._logger.log("DEBUG", "runMigrationIfNeeded started");
      const G = this._getPendingMigrations(R);
      if (G.length !== 0) {
        for (const Z of G) await this._executeMigration(Z);
        this._logger.log("DEBUG", "runMigrationIfNeeded completed");
      } else this._logger.log("DEBUG", "no migrations are needed");
    }
    _executeMigration(c) {
      if (c === "12.4.0") return this._Migration__12_4_0();
      throw new Error(`Migration for version ${c} is not implemented`);
    }
    _getPendingMigrations(c) {
      return this.MIGRATION_VERSIONS.filter((R) => this._compareVersions(R, AA) <= 0).filter((R) => this._shouldRunMigration(c, R)).sort(this._compareVersions);
    }
    _shouldRunMigration(c, R) {
      return !c || this._compareVersions(c, R) < 0;
    }
    _compareVersions(c, R) {
      const G = (oA) => oA.split("-")[0].split(".").map(Number), Z = G(c), W = G(R), V = Math.max(Z.length, W.length);
      for (let oA = 0; oA < V; oA++) {
        const hA = Z[oA] || 0, UA = W[oA] || 0;
        if (hA > UA) return 1;
        if (hA < UA) return -1;
      }
      return 0;
    }
    async _Migration__12_4_0() {
      this._logger.log("INFO", "Migration for 12.4.0 started");
      const c = { keysForBackup: 0, keyDescriptors: 0 }, R = await this._sdkStorage.getAllKeysForBackup12_4_0Impl();
      for (const Z of R) await this._sdkStorage.setKeyForBackup(Z), c.keysForBackup++;
      const G = await this._sdkStorage.getAllKeyDescriptors12_4_0Impl();
      for (const Z of Object.values(G)) await this._sdkStorage.setKeyDescriptor(Z), c.keyDescriptors++;
      this._logger.log("INFO", "Migration for 12.4.0 completed successfully", c);
    }
  }
  class py extends Ng {
    constructor(c, R, G, Z) {
      super(c, R, G, Z);
    }
    get(c, R) {
      return super._get(c, R);
    }
    async getAllKeyDescriptors12_4_0Impl() {
      const c = await this._get("NONE_SECURE", "keyDescriptors");
      return c ? JSON.parse(c) : {};
    }
    async getAllKeysForBackup12_4_0Impl() {
      const c = await this._get("NONE_SECURE", "keysForBackup"), R = c ? JSON.parse(c) : {};
      return Object.values(R);
    }
  }
  const Ns = "DEFAULT_TENANT_ID", Yy = k(), nE = class nE {
    constructor(c) {
      DA(this, "_fireblocksServerApi");
      DA(this, "_backupManager");
      DA(this, "_recoveryManager");
      DA(this, "_takeoverManager");
      DA(this, "_enrollmentManager");
      DA(this, "_certificatesManager");
      DA(this, "_mpcMessagesVerifier");
      DA(this, "_transactionsManager");
      DA(this, "_mpcSetupManager");
      DA(this, "_mpcMessagePollingManager");
      DA(this, "_addDeviceMessagePollingManager");
      DA(this, "_addDeviceManager");
      DA(this, "_asyncToSyncManager");
      DA(this, "_migrationManager");
      DA(this, "_telemetryManager");
      DA(this, "_cosignerWasmWrapper");
      DA(this, "_logger");
      DA(this, "_tenantId");
      DA(this, "_deviceId");
      DA(this, "_playerId");
      DA(this, "_physicalDeviceId", null);
      DA(this, "_sdkStorage");
      DA(this, "_reportingOptions");
      const { env: R = "production", logLevel: G = "INFO", deviceId: Z, messagesHandler: W, eventsHandler: V, secureStorageProvider: oA, storageProvider: hA = new us(), logger: UA = new CA(), reporting: LA = { enabled: !0 } } = c;
      if (hA === oA) throw new Error("secureStorageProvider and storageProvider must be different instances");
      this._tenantId = Ns, this._logger = new uy(UA, R, G, LA.enabled ? { maxEntries: 20 } : void 0), this._deviceId = Z, this._playerId = N(Z), this._reportingOptions = LA, this._logger.log("DEBUG", "fireblocksNCW constructor", { env: R, tenantId: this._tenantId, deviceId: Z, playerId: this._playerId, reporting: LA });
      const bA = { handleEvent: async (wI) => {
        try {
          V == null || V.handleEvent(wI);
        } catch (XB) {
          this._logger.log("ERROR", "Error handling event", { error: XB == null ? void 0 : XB.message });
        }
      } }, ZA = new qi(oA);
      this._sdkStorage = new Ng(R, Z, hA, ZA);
      const Eg = new _E(this._sdkStorage);
      this._fireblocksServerApi = new FA(this._logger, W), this._certificatesManager = new mB(R, this._logger, this._fireblocksServerApi, this._sdkStorage);
      let Lg = bA;
      LA.enabled && (this._telemetryManager = new Sy(this._logger, this._fireblocksServerApi, LA), Lg = new ky(bA, this._telemetryManager)), this._backupManager = new iA(this._logger, this._fireblocksServerApi, Eg, this._sdkStorage, this._deviceId, Lg), this._enrollmentManager = new tI(this._playerId, this._deviceId, this._logger, this._fireblocksServerApi, this._sdkStorage, this._certificatesManager), this._recoveryManager = new Yg(this._logger, this._certificatesManager, this._enrollmentManager, this._fireblocksServerApi, Eg, this._sdkStorage, this._deviceId, Lg);
      const SB = { tenantId: this._tenantId, playerId: this._playerId, cosignerStorage: Eg, logFunc: () => {
      }, randomFunc: $, getPrivateKeyFunc: () => this._asyncToSyncManager.getPrivateKey(), getPlayerPublicKeyFunc: (wI) => this._asyncToSyncManager.getCertificateForPlayer(wI) };
      this._cosignerWasmWrapper = new f(SB);
      const Cg = new TB(this._tenantId, this._playerId, this._deviceId, this._logger, this._cosignerWasmWrapper, this._sdkStorage);
      this._mpcMessagesVerifier = new IB(this._certificatesManager, this._cosignerWasmWrapper), this._mpcMessagePollingManager = new aA(this._fireblocksServerApi, this._mpcMessagesVerifier), this._addDeviceMessagePollingManager = new eA(this._fireblocksServerApi), this._transactionsManager = new It(this._logger, Cg, this._mpcMessagePollingManager, this._mpcMessagesVerifier, this._fireblocksServerApi, Lg, this._sdkStorage), this._asyncToSyncManager = new Vi(this._fireblocksServerApi, this._sdkStorage), this._mpcSetupManager = new dB(Cg, this._logger, this._fireblocksServerApi, this._enrollmentManager, this._backupManager, this._sdkStorage, Lg, this._mpcMessagePollingManager, this._asyncToSyncManager, this._mpcMessagesVerifier, Eg), this._addDeviceManager = new Qt(this._logger, this._fireblocksServerApi, this._mpcMessagePollingManager, this._addDeviceMessagePollingManager, this._mpcSetupManager, Cg, this._sdkStorage, this._enrollmentManager, this._asyncToSyncManager, Lg), this._takeoverManager = new Vg(this._deviceId, this._logger, this._fireblocksServerApi, this._sdkStorage, this._mpcMessagePollingManager, Lg, Eg, this._cosignerWasmWrapper);
      const dg = new py(R, Z, hA, ZA);
      this._migrationManager = new Hy(this._logger, dg);
    }
    static getInstance(c) {
      return nE._instances.get(c) ?? null;
    }
    async init() {
      const c = await this._sdkStorage.getLastUsedClientVersion();
      await this._migrationManager.runMigrationsIfNeeded(c);
      const R = c !== AA;
      R && await this._sdkStorage.setLastUsedClientVersion(AA);
      let G = await this._sdkStorage.getPhysicalDeviceId();
      G || (G = Yy.randomUUID(), await this._sdkStorage.setPhysicalDeviceId(G)), this._physicalDeviceId = G, this._fireblocksServerApi.setPhysicalDeviceId(this._physicalDeviceId), await this._sdkStorage.getEnrolledPlayer() ? R && await this._fireblocksServerApi.sendClientVersion() : await this._enrollmentManager.prapareKey(), await this._cosignerWasmWrapper.load(), await this._certificatesManager.initCertificates(R);
    }
    static async initialize(c) {
      var Z;
      const R = new nE(c);
      let G = R;
      return (Z = R._reportingOptions) != null && Z.enabled && R._telemetryManager && (G = new Uy(R, R._telemetryManager)), await G.init(), nE._instances.set(R._deviceId, G), G;
    }
    async dispose() {
      this._mpcMessagePollingManager.dispose(), this._addDeviceMessagePollingManager.dispose(), this._takeoverManager.dispose(), this._cosignerWasmWrapper.dispose(), await this._mpcSetupManager.dispose(), await this._transactionsManager.dispose(), nE._instances.delete(this._deviceId), this._logger.log("DEBUG", "fireblocksNCW disposed", { tenantId: this._tenantId, deviceId: this._deviceId, playerId: this._playerId });
    }
    clearAllStorage() {
      return this._sdkStorage.clearAll();
    }
    generateMPCKeys(c) {
      return this._mpcSetupManager.generateMPCKeys({ algorithms: c, type: "GENERATE_KEYS" });
    }
    async stopMpcDeviceSetup() {
      return this._mpcSetupManager.stopMpcDeviceSetup();
    }
    signTransaction(c) {
      return this._transactionsManager.signTransaction(c);
    }
    stopInProgressSignTransaction() {
      return this._transactionsManager.stopInProgressSignTransaction("USER_CANCELED");
    }
    async getInProgressSigningTxId() {
      return this._transactionsManager.getInProgressSigningTxId();
    }
    backupKeys(c, R) {
      return this._backupManager.backupKeys(c, R);
    }
    recoverKeys(c) {
      return this._recoveryManager.recoverBackup(c);
    }
    requestJoinExistingWallet(c) {
      return this._addDeviceManager.joinExistingWallet(c);
    }
    approveJoinWalletRequest(c) {
      return this._addDeviceManager.approveJoinWallet(c);
    }
    stopJoinWallet() {
      return this._addDeviceManager.stopJoinWallet();
    }
    takeover() {
      return this._takeoverManager.takeover();
    }
    async exportFullKeys(c, R) {
      return this._takeoverManager.exportFullKeys(c, R);
    }
    deriveAssetKey(c, R, G, Z, W) {
      const V = { coinType: R, account: G, change: Z, index: W };
      return this._takeoverManager.deriveAssetKey(c, V);
    }
    async getKeysStatus() {
      return await this._sdkStorage.getAllKeyDescriptors();
    }
    getPhysicalDeviceId() {
      if (!this._physicalDeviceId) throw new Error("FireblocksNCW was not initialized");
      return this._physicalDeviceId;
    }
  };
  DA(nE, "_instances", /* @__PURE__ */ new Map());
  let Qe = nE;
  function Jy(tA) {
    if (Qe.getInstance(tA.deviceId)) throw new g(`Fireblocks SDK with deviceId:${tA.deviceId} was already initialized`, "INSTANCE_ALREADY_INITIALIZED");
    return Qe.initialize(tA);
  }
  function Ly(tA) {
    return Qe.getInstance(tA);
  }
  class Ky {
    log(c, R, G) {
      switch (c) {
        case "DEBUG":
          G ? console.log(R, G) : console.log(R);
          break;
        case "INFO":
          G ? console.info(R, G) : console.info(R);
          break;
        case "WARN":
          G ? console.warn(R, G) : console.warn(R);
          break;
        case "ERROR":
          G ? console.error(R, G) : console.error(R);
      }
    }
  }
  function my() {
    return new Ky();
  }
  function xy() {
    return new CA();
  }
  class us {
    async get(c) {
      return globalThis.localStorage.getItem(this.getKey(c)) ?? null;
    }
    async set(c, R) {
      globalThis.localStorage.setItem(this.getKey(c), R);
    }
    async clear(c) {
      const R = this.getKey(c);
      globalThis.localStorage.getItem(R) && globalThis.localStorage.removeItem(R);
    }
    async getAllKeys() {
      return Object.entries(globalThis.localStorage).reduce((c, R) => (R[0].startsWith("NCW-") && c.push(R[0].slice(4)), c), []);
    }
    getKey(c) {
      return `NCW-${c}`;
    }
  }
  class Ss {
    constructor() {
      DA(this, "_data", /* @__PURE__ */ new Map());
    }
    async get(c) {
      return this._data.get(c) ?? null;
    }
    async set(c, R) {
      this._data.set(c, R);
    }
    async clear(c) {
      const R = c;
      this._data.delete(R);
    }
    async getAllKeys() {
      return Array.from(this._data.keys());
    }
  }
  class vy extends Ss {
    async getAccess() {
      return async () => {
      };
    }
  }
  const by = k(), Zy = AA;
  function Ty() {
    return by.randomUUID();
  }
  async function Xy(tA, c, R) {
    return async function(G, Z, W) {
      const V = await QA("AES-GCM", Z, W), oA = new TextEncoder().encode(G), hA = b.getRandomValues(new Uint8Array(Y)), UA = await b.subtle.encrypt({ name: "AES-GCM", iv: hA }, V, oA);
      return M(new Uint8Array([...hA, ...new Uint8Array(UA)]));
    }(tA, c, R);
  }
  async function zy(tA, c, R) {
    return BA(tA, c, R);
  }
  async function Vy(tA, c, R, G = "sandbox") {
    return async function(Z, W, V, oA = "sandbox") {
      const hA = new qi(W), UA = await hA.getAccess();
      try {
        for (const LA of V)
          await new Ng(oA, LA, Z, hA).clearAll();
      } finally {
        UA();
      }
    }(tA, c, R, G);
  }
  async function qy(tA, c) {
    return async function(R, G) {
      const Z = new qi(G), W = await Z.getAccess();
      try {
        const [V, oA] = await Promise.all([R.getAllKeys(), Z.getAllKeys()]), hA = /* @__PURE__ */ new Set();
        for (const UA of V) {
          const LA = UA.match(/STORAGE_(.+)_.*$/);
          LA && LA.length > 1 && hA.add(LA[1]);
        }
        for (const UA of oA) {
          const LA = UA.match(/SECURE_STORAGE_(.+)_.*$/);
          LA && LA.length > 1 && hA.add(LA[1]);
        }
        return Array.from(hA);
      } finally {
        W();
      }
    }(tA, c);
  }
})();
var Nd = EI.fj;
EI.LF;
EI.$_;
var ud = EI.uz;
EI.y7;
EI.pD;
EI.qF;
EI.IB;
var Ep = EI.ag;
EI.yS;
var Sd = EI.lC, Ud = EI.We;
EI.zW;
var kd = EI.$l;
EI.XQ;
EI.i8;
const xn = (A) => new Promise((g) => setTimeout(g, A));
class Hd {
  constructor(g) {
    DA(this, "_baseUrl");
    DA(this, "_deviceTxsSubscriptions", /* @__PURE__ */ new Map());
    DA(this, "_disposed", !1);
    DA(this, "_pollingTxsActive", /* @__PURE__ */ new Map());
    DA(this, "manager");
    DA(this, "socket");
    this._baseUrl = g, console.log("baseUrl", this._baseUrl), this._baseUrl.endsWith("/") && (this._baseUrl = this._baseUrl.slice(0, -1));
  }
  async initSocket() {
    this.manager = new $w(this._baseUrl, {
      autoConnect: !0,
      withCredentials: !0
      // path: "/fireblocks",
    }), this.socket = this.manager.socket("/", {
      auth: async (g) => g({ token: await E0.getToken() })
    }), this.socket.on("connect", () => console.log("websocket connected")), this.socket.on("disconnect", () => console.log("websocket disconnected"));
  }
  async getTransactionById(g, I) {
    return await (await this._getCall(
      `api/devices/${g}/transactions/${I}`
    )).data;
  }
  async getWallets() {
    return await (await this._getCall("api/wallets")).data;
  }
  async getLatestBackup(g) {
    const I = await this._getCall(`api/wallets/${g}/backup/latest`);
    if (I.status >= 200 && I.status < 300)
      return await I.json();
    if (I.status === 404)
      return null;
    throw new Error("Failed to get latest backup");
  }
  async getPassphraseInfo(g) {
    return await (await this._getCall(`api/passphrase/${g}`)).json();
  }
  async createPassphraseInfo(g, I) {
    return await this._postCall(`api/passphrase/${g}`, { location: I });
  }
  async getPassphraseInfos() {
    return await (await this._getCall("api/passphrase/")).json();
  }
  async assignDevice(g) {
    return (await this._postCall(`api/devices/${g}/assign`)).walletId;
  }
  async askToJoinWalletExisting(g, I) {
    return (await this._postCall(`api/devices/${g}/join`, { walletId: I })).walletId;
  }
  async sendMessage(g, I) {
    if (this.socket.connected) {
      const B = await this.socket.emitWithAck("rpc", g, I);
      if (!("response" in B))
        throw console.error("Failed to invoke RPC", B == null ? void 0 : B.error), new Error("Failed to invoke RPC");
      return B.response;
    }
    return this._postCall(`api/devices/${g}/rpc`, { message: I });
  }
  async getWeb3Connections(g) {
    return await (await this._getCall(`api/devices/${g}/web3/connections`)).json();
  }
  async createWeb3Connection(g, I) {
    return await this._postCall(`api/devices/${g}/web3/connections`, { uri: I });
  }
  async approveWeb3Connection(g, I) {
    return await this._postCall(`api/devices/${g}/web3/connections/${I}/approve`);
  }
  async denyWeb3Connection(g, I) {
    return await this._postCall(`api/devices/${g}/web3/connections/${I}/deny`);
  }
  async removeWeb3Connection(g, I) {
    return await this._deleteCall(`api/devices/${g}/web3/connections/${I}`);
  }
  async createTransaction(g, I) {
    return (await this._postCall(`api/devices/${g}/transactions`, I)).data;
  }
  async cancelTransaction(g, I) {
    return await this._postCall(`api/devices/${g}/transactions/${I}/cancel`);
  }
  async addAsset(g, I, B) {
    return await (await this._postCall(`api/devices/${g}/accounts/${I}/assets/${B}`)).data;
  }
  async getAsset(g, I, B) {
    return await (await this._getCall(`api/devices/${g}/accounts/${I}/assets/${B}`)).data;
  }
  async getAccounts(g) {
    return await (await this._getCall(`api/devices/${g}/accounts/`)).json();
  }
  async getAssets(g, I) {
    return await (await this._getCall(`api/devices/${g}/accounts/${I}/assets`)).data;
  }
  async getSupportedAssets(g, I) {
    return await (await this._getCall(`api/devices/${g}/accounts/${I}/assets/supported_assets`)).data;
  }
  async getAddress(g, I, B) {
    return await (await this._getCall(`api/devices/${g}/accounts/${I}/assets/${B}/address`)).data;
  }
  async getBalance(g, I, B) {
    return await (await this._getCall(`api/devices/${g}/accounts/${I}/assets/${B}/balance`)).data;
  }
  listenToTxs(g, I) {
    let B = this._deviceTxsSubscriptions.get(g);
    return B || (B = [], this._deviceTxsSubscriptions.set(g, B)), B.push(I), this._startPollingTxs(g), () => {
      if (this._stopPollingTxs(g), B) {
        const Q = B.indexOf(I);
        Q !== -1 && (B.splice(Q, 1), B.length === 0 && this._deviceTxsSubscriptions.delete(g));
      }
    };
  }
  dispose() {
    this._deviceTxsSubscriptions.clear(), this._pollingTxsActive.clear(), this._disposed = !0;
  }
  ///// PRIVATE /////
  async _stopPollingTxs(g) {
    this._pollingTxsActive.delete(g);
  }
  async _startPollingTxs(g) {
    if (this._pollingTxsActive.get(g))
      return;
    this._pollingTxsActive.set(g, !0);
    let I = 0;
    for (; !this._disposed; )
      try {
        const B = await this._getCall(
          `api/devices/${g}/transactions?poll=true&startDate=${I}&details=true`
        );
        if (!B.ok) {
          await xn(5e3);
          continue;
        }
        const Q = await B.json();
        if (Q && Array.isArray(Q))
          for (const E of Q) {
            const C = E.id, o = E.lastUpdated;
            if (C !== void 0 && o !== void 0) {
              I = Math.max(I, o);
              const t = this._deviceTxsSubscriptions.get(g);
              if (t)
                for (const e of t) {
                  if (this._disposed || !this._pollingTxsActive.get(g))
                    break;
                  e(E);
                }
            }
          }
      } catch (B) {
        console.error("failed to get txs", B), await xn(5e3);
      }
  }
  async _postCall(g, I) {
    return g.startsWith("/") && (g = g.slice(1)), await yB.post(g, I);
  }
  async _deleteCall(g) {
    await yB.delete(g);
  }
  async _getCall(g) {
    return await yB.get(g);
  }
}
var bg = {
  // default options
  options: {
    usePureJavaScript: !1
  }
}, Lr = {}, pd = Lr, vn = {};
Lr.encode = function(A, g, I) {
  if (typeof g != "string")
    throw new TypeError('"alphabet" must be a string.');
  if (I !== void 0 && typeof I != "number")
    throw new TypeError('"maxline" must be a number.');
  var B = "";
  if (!(A instanceof Uint8Array))
    B = Yd(A, g);
  else {
    var Q = 0, E = g.length, C = g.charAt(0), o = [0];
    for (Q = 0; Q < A.length; ++Q) {
      for (var t = 0, e = A[Q]; t < o.length; ++t)
        e += o[t] << 8, o[t] = e % E, e = e / E | 0;
      for (; e > 0; )
        o.push(e % E), e = e / E | 0;
    }
    for (Q = 0; A[Q] === 0 && Q < A.length - 1; ++Q)
      B += C;
    for (Q = o.length - 1; Q >= 0; --Q)
      B += g[o[Q]];
  }
  if (I) {
    var i = new RegExp(".{1," + I + "}", "g");
    B = B.match(i).join(`\r
`);
  }
  return B;
};
Lr.decode = function(A, g) {
  if (typeof A != "string")
    throw new TypeError('"input" must be a string.');
  if (typeof g != "string")
    throw new TypeError('"alphabet" must be a string.');
  var I = vn[g];
  if (!I) {
    I = vn[g] = [];
    for (var B = 0; B < g.length; ++B)
      I[g.charCodeAt(B)] = B;
  }
  A = A.replace(/\s/g, "");
  for (var Q = g.length, E = g.charAt(0), C = [0], B = 0; B < A.length; B++) {
    var o = I[A.charCodeAt(B)];
    if (o === void 0)
      return;
    for (var t = 0, e = o; t < C.length; ++t)
      e += C[t] * Q, C[t] = e & 255, e >>= 8;
    for (; e > 0; )
      C.push(e & 255), e >>= 8;
  }
  for (var i = 0; A[i] === E && i < A.length - 1; ++i)
    C.push(0);
  return typeof FB < "u" ? FB.from(C.reverse()) : new Uint8Array(C.reverse());
};
function Yd(A, g) {
  var I = 0, B = g.length, Q = g.charAt(0), E = [0];
  for (I = 0; I < A.length(); ++I) {
    for (var C = 0, o = A.at(I); C < E.length; ++C)
      o += E[C] << 8, E[C] = o % B, o = o / B | 0;
    for (; o > 0; )
      E.push(o % B), o = o / B | 0;
  }
  var t = "";
  for (I = 0; A.at(I) === 0 && I < A.length() - 1; ++I)
    t += Q;
  for (I = E.length - 1; I >= 0; --I)
    t += g[E[I]];
  return t;
}
var bn = bg, Zn = pd, fA = bn.util = bn.util || {};
(function() {
  if (typeof PA < "u" && PA.nextTick && !PA.browser) {
    fA.nextTick = PA.nextTick, typeof setImmediate == "function" ? fA.setImmediate = setImmediate : fA.setImmediate = fA.nextTick;
    return;
  }
  if (typeof setImmediate == "function") {
    fA.setImmediate = function() {
      return setImmediate.apply(void 0, arguments);
    }, fA.nextTick = function(C) {
      return setImmediate(C);
    };
    return;
  }
  if (fA.setImmediate = function(C) {
    setTimeout(C, 0);
  }, typeof window < "u" && typeof window.postMessage == "function") {
    let C = function(o) {
      if (o.source === window && o.data === A) {
        o.stopPropagation();
        var t = g.slice();
        g.length = 0, t.forEach(function(e) {
          e();
        });
      }
    };
    var A = "forge.setImmediate", g = [];
    fA.setImmediate = function(o) {
      g.push(o), g.length === 1 && window.postMessage(A, "*");
    }, window.addEventListener("message", C, !0);
  }
  if (typeof MutationObserver < "u") {
    var I = Date.now(), B = !0, Q = document.createElement("div"), g = [];
    new MutationObserver(function() {
      var o = g.slice();
      g.length = 0, o.forEach(function(t) {
        t();
      });
    }).observe(Q, { attributes: !0 });
    var E = fA.setImmediate;
    fA.setImmediate = function(o) {
      Date.now() - I > 15 ? (I = Date.now(), E(o)) : (g.push(o), g.length === 1 && Q.setAttribute("a", B = !B));
    };
  }
  fA.nextTick = fA.setImmediate;
})();
fA.isNodejs = typeof PA < "u" && PA.versions && PA.versions.node;
fA.globalScope = function() {
  return fA.isNodejs ? $D : typeof self > "u" ? window : self;
}();
fA.isArray = Array.isArray || function(A) {
  return Object.prototype.toString.call(A) === "[object Array]";
};
fA.isArrayBuffer = function(A) {
  return typeof ArrayBuffer < "u" && A instanceof ArrayBuffer;
};
fA.isArrayBufferView = function(A) {
  return A && fA.isArrayBuffer(A.buffer) && A.byteLength !== void 0;
};
function je(A) {
  if (!(A === 8 || A === 16 || A === 24 || A === 32))
    throw new Error("Only 8, 16, 24, or 32 bits supported: " + A);
}
fA.ByteBuffer = Kr;
function Kr(A) {
  if (this.data = "", this.read = 0, typeof A == "string")
    this.data = A;
  else if (fA.isArrayBuffer(A) || fA.isArrayBufferView(A))
    if (typeof FB < "u" && A instanceof FB)
      this.data = A.toString("binary");
    else {
      var g = new Uint8Array(A);
      try {
        this.data = String.fromCharCode.apply(null, g);
      } catch {
        for (var I = 0; I < g.length; ++I)
          this.putByte(g[I]);
      }
    }
  else (A instanceof Kr || typeof A == "object" && typeof A.data == "string" && typeof A.read == "number") && (this.data = A.data, this.read = A.read);
  this._constructedStringLength = 0;
}
fA.ByteStringBuffer = Kr;
var Jd = 4096;
fA.ByteStringBuffer.prototype._optimizeConstructedString = function(A) {
  this._constructedStringLength += A, this._constructedStringLength > Jd && (this.data.substr(0, 1), this._constructedStringLength = 0);
};
fA.ByteStringBuffer.prototype.length = function() {
  return this.data.length - this.read;
};
fA.ByteStringBuffer.prototype.isEmpty = function() {
  return this.length() <= 0;
};
fA.ByteStringBuffer.prototype.putByte = function(A) {
  return this.putBytes(String.fromCharCode(A));
};
fA.ByteStringBuffer.prototype.fillWithByte = function(A, g) {
  A = String.fromCharCode(A);
  for (var I = this.data; g > 0; )
    g & 1 && (I += A), g >>>= 1, g > 0 && (A += A);
  return this.data = I, this._optimizeConstructedString(g), this;
};
fA.ByteStringBuffer.prototype.putBytes = function(A) {
  return this.data += A, this._optimizeConstructedString(A.length), this;
};
fA.ByteStringBuffer.prototype.putString = function(A) {
  return this.putBytes(fA.encodeUtf8(A));
};
fA.ByteStringBuffer.prototype.putInt16 = function(A) {
  return this.putBytes(
    String.fromCharCode(A >> 8 & 255) + String.fromCharCode(A & 255)
  );
};
fA.ByteStringBuffer.prototype.putInt24 = function(A) {
  return this.putBytes(
    String.fromCharCode(A >> 16 & 255) + String.fromCharCode(A >> 8 & 255) + String.fromCharCode(A & 255)
  );
};
fA.ByteStringBuffer.prototype.putInt32 = function(A) {
  return this.putBytes(
    String.fromCharCode(A >> 24 & 255) + String.fromCharCode(A >> 16 & 255) + String.fromCharCode(A >> 8 & 255) + String.fromCharCode(A & 255)
  );
};
fA.ByteStringBuffer.prototype.putInt16Le = function(A) {
  return this.putBytes(
    String.fromCharCode(A & 255) + String.fromCharCode(A >> 8 & 255)
  );
};
fA.ByteStringBuffer.prototype.putInt24Le = function(A) {
  return this.putBytes(
    String.fromCharCode(A & 255) + String.fromCharCode(A >> 8 & 255) + String.fromCharCode(A >> 16 & 255)
  );
};
fA.ByteStringBuffer.prototype.putInt32Le = function(A) {
  return this.putBytes(
    String.fromCharCode(A & 255) + String.fromCharCode(A >> 8 & 255) + String.fromCharCode(A >> 16 & 255) + String.fromCharCode(A >> 24 & 255)
  );
};
fA.ByteStringBuffer.prototype.putInt = function(A, g) {
  je(g);
  var I = "";
  do
    g -= 8, I += String.fromCharCode(A >> g & 255);
  while (g > 0);
  return this.putBytes(I);
};
fA.ByteStringBuffer.prototype.putSignedInt = function(A, g) {
  return A < 0 && (A += 2 << g - 1), this.putInt(A, g);
};
fA.ByteStringBuffer.prototype.putBuffer = function(A) {
  return this.putBytes(A.getBytes());
};
fA.ByteStringBuffer.prototype.getByte = function() {
  return this.data.charCodeAt(this.read++);
};
fA.ByteStringBuffer.prototype.getInt16 = function() {
  var A = this.data.charCodeAt(this.read) << 8 ^ this.data.charCodeAt(this.read + 1);
  return this.read += 2, A;
};
fA.ByteStringBuffer.prototype.getInt24 = function() {
  var A = this.data.charCodeAt(this.read) << 16 ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2);
  return this.read += 3, A;
};
fA.ByteStringBuffer.prototype.getInt32 = function() {
  var A = this.data.charCodeAt(this.read) << 24 ^ this.data.charCodeAt(this.read + 1) << 16 ^ this.data.charCodeAt(this.read + 2) << 8 ^ this.data.charCodeAt(this.read + 3);
  return this.read += 4, A;
};
fA.ByteStringBuffer.prototype.getInt16Le = function() {
  var A = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8;
  return this.read += 2, A;
};
fA.ByteStringBuffer.prototype.getInt24Le = function() {
  var A = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16;
  return this.read += 3, A;
};
fA.ByteStringBuffer.prototype.getInt32Le = function() {
  var A = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16 ^ this.data.charCodeAt(this.read + 3) << 24;
  return this.read += 4, A;
};
fA.ByteStringBuffer.prototype.getInt = function(A) {
  je(A);
  var g = 0;
  do
    g = (g << 8) + this.data.charCodeAt(this.read++), A -= 8;
  while (A > 0);
  return g;
};
fA.ByteStringBuffer.prototype.getSignedInt = function(A) {
  var g = this.getInt(A), I = 2 << A - 2;
  return g >= I && (g -= I << 1), g;
};
fA.ByteStringBuffer.prototype.getBytes = function(A) {
  var g;
  return A ? (A = Math.min(this.length(), A), g = this.data.slice(this.read, this.read + A), this.read += A) : A === 0 ? g = "" : (g = this.read === 0 ? this.data : this.data.slice(this.read), this.clear()), g;
};
fA.ByteStringBuffer.prototype.bytes = function(A) {
  return typeof A > "u" ? this.data.slice(this.read) : this.data.slice(this.read, this.read + A);
};
fA.ByteStringBuffer.prototype.at = function(A) {
  return this.data.charCodeAt(this.read + A);
};
fA.ByteStringBuffer.prototype.setAt = function(A, g) {
  return this.data = this.data.substr(0, this.read + A) + String.fromCharCode(g) + this.data.substr(this.read + A + 1), this;
};
fA.ByteStringBuffer.prototype.last = function() {
  return this.data.charCodeAt(this.data.length - 1);
};
fA.ByteStringBuffer.prototype.copy = function() {
  var A = fA.createBuffer(this.data);
  return A.read = this.read, A;
};
fA.ByteStringBuffer.prototype.compact = function() {
  return this.read > 0 && (this.data = this.data.slice(this.read), this.read = 0), this;
};
fA.ByteStringBuffer.prototype.clear = function() {
  return this.data = "", this.read = 0, this;
};
fA.ByteStringBuffer.prototype.truncate = function(A) {
  var g = Math.max(0, this.length() - A);
  return this.data = this.data.substr(this.read, g), this.read = 0, this;
};
fA.ByteStringBuffer.prototype.toHex = function() {
  for (var A = "", g = this.read; g < this.data.length; ++g) {
    var I = this.data.charCodeAt(g);
    I < 16 && (A += "0"), A += I.toString(16);
  }
  return A;
};
fA.ByteStringBuffer.prototype.toString = function() {
  return fA.decodeUtf8(this.bytes());
};
function Ld(A, g) {
  g = g || {}, this.read = g.readOffset || 0, this.growSize = g.growSize || 1024;
  var I = fA.isArrayBuffer(A), B = fA.isArrayBufferView(A);
  if (I || B) {
    I ? this.data = new DataView(A) : this.data = new DataView(A.buffer, A.byteOffset, A.byteLength), this.write = "writeOffset" in g ? g.writeOffset : this.data.byteLength;
    return;
  }
  this.data = new DataView(new ArrayBuffer(0)), this.write = 0, A != null && this.putBytes(A), "writeOffset" in g && (this.write = g.writeOffset);
}
fA.DataBuffer = Ld;
fA.DataBuffer.prototype.length = function() {
  return this.write - this.read;
};
fA.DataBuffer.prototype.isEmpty = function() {
  return this.length() <= 0;
};
fA.DataBuffer.prototype.accommodate = function(A, g) {
  if (this.length() >= A)
    return this;
  g = Math.max(g || this.growSize, A);
  var I = new Uint8Array(
    this.data.buffer,
    this.data.byteOffset,
    this.data.byteLength
  ), B = new Uint8Array(this.length() + g);
  return B.set(I), this.data = new DataView(B.buffer), this;
};
fA.DataBuffer.prototype.putByte = function(A) {
  return this.accommodate(1), this.data.setUint8(this.write++, A), this;
};
fA.DataBuffer.prototype.fillWithByte = function(A, g) {
  this.accommodate(g);
  for (var I = 0; I < g; ++I)
    this.data.setUint8(A);
  return this;
};
fA.DataBuffer.prototype.putBytes = function(A, g) {
  if (fA.isArrayBufferView(A)) {
    var I = new Uint8Array(A.buffer, A.byteOffset, A.byteLength), B = I.byteLength - I.byteOffset;
    this.accommodate(B);
    var Q = new Uint8Array(this.data.buffer, this.write);
    return Q.set(I), this.write += B, this;
  }
  if (fA.isArrayBuffer(A)) {
    var I = new Uint8Array(A);
    this.accommodate(I.byteLength);
    var Q = new Uint8Array(this.data.buffer);
    return Q.set(I, this.write), this.write += I.byteLength, this;
  }
  if (A instanceof fA.DataBuffer || typeof A == "object" && typeof A.read == "number" && typeof A.write == "number" && fA.isArrayBufferView(A.data)) {
    var I = new Uint8Array(A.data.byteLength, A.read, A.length());
    this.accommodate(I.byteLength);
    var Q = new Uint8Array(A.data.byteLength, this.write);
    return Q.set(I), this.write += I.byteLength, this;
  }
  if (A instanceof fA.ByteStringBuffer && (A = A.data, g = "binary"), g = g || "binary", typeof A == "string") {
    var E;
    if (g === "hex")
      return this.accommodate(Math.ceil(A.length / 2)), E = new Uint8Array(this.data.buffer, this.write), this.write += fA.binary.hex.decode(A, E, this.write), this;
    if (g === "base64")
      return this.accommodate(Math.ceil(A.length / 4) * 3), E = new Uint8Array(this.data.buffer, this.write), this.write += fA.binary.base64.decode(A, E, this.write), this;
    if (g === "utf8" && (A = fA.encodeUtf8(A), g = "binary"), g === "binary" || g === "raw")
      return this.accommodate(A.length), E = new Uint8Array(this.data.buffer, this.write), this.write += fA.binary.raw.decode(E), this;
    if (g === "utf16")
      return this.accommodate(A.length * 2), E = new Uint16Array(this.data.buffer, this.write), this.write += fA.text.utf16.encode(E), this;
    throw new Error("Invalid encoding: " + g);
  }
  throw Error("Invalid parameter: " + A);
};
fA.DataBuffer.prototype.putBuffer = function(A) {
  return this.putBytes(A), A.clear(), this;
};
fA.DataBuffer.prototype.putString = function(A) {
  return this.putBytes(A, "utf16");
};
fA.DataBuffer.prototype.putInt16 = function(A) {
  return this.accommodate(2), this.data.setInt16(this.write, A), this.write += 2, this;
};
fA.DataBuffer.prototype.putInt24 = function(A) {
  return this.accommodate(3), this.data.setInt16(this.write, A >> 8 & 65535), this.data.setInt8(this.write, A >> 16 & 255), this.write += 3, this;
};
fA.DataBuffer.prototype.putInt32 = function(A) {
  return this.accommodate(4), this.data.setInt32(this.write, A), this.write += 4, this;
};
fA.DataBuffer.prototype.putInt16Le = function(A) {
  return this.accommodate(2), this.data.setInt16(this.write, A, !0), this.write += 2, this;
};
fA.DataBuffer.prototype.putInt24Le = function(A) {
  return this.accommodate(3), this.data.setInt8(this.write, A >> 16 & 255), this.data.setInt16(this.write, A >> 8 & 65535, !0), this.write += 3, this;
};
fA.DataBuffer.prototype.putInt32Le = function(A) {
  return this.accommodate(4), this.data.setInt32(this.write, A, !0), this.write += 4, this;
};
fA.DataBuffer.prototype.putInt = function(A, g) {
  je(g), this.accommodate(g / 8);
  do
    g -= 8, this.data.setInt8(this.write++, A >> g & 255);
  while (g > 0);
  return this;
};
fA.DataBuffer.prototype.putSignedInt = function(A, g) {
  return je(g), this.accommodate(g / 8), A < 0 && (A += 2 << g - 1), this.putInt(A, g);
};
fA.DataBuffer.prototype.getByte = function() {
  return this.data.getInt8(this.read++);
};
fA.DataBuffer.prototype.getInt16 = function() {
  var A = this.data.getInt16(this.read);
  return this.read += 2, A;
};
fA.DataBuffer.prototype.getInt24 = function() {
  var A = this.data.getInt16(this.read) << 8 ^ this.data.getInt8(this.read + 2);
  return this.read += 3, A;
};
fA.DataBuffer.prototype.getInt32 = function() {
  var A = this.data.getInt32(this.read);
  return this.read += 4, A;
};
fA.DataBuffer.prototype.getInt16Le = function() {
  var A = this.data.getInt16(this.read, !0);
  return this.read += 2, A;
};
fA.DataBuffer.prototype.getInt24Le = function() {
  var A = this.data.getInt8(this.read) ^ this.data.getInt16(this.read + 1, !0) << 8;
  return this.read += 3, A;
};
fA.DataBuffer.prototype.getInt32Le = function() {
  var A = this.data.getInt32(this.read, !0);
  return this.read += 4, A;
};
fA.DataBuffer.prototype.getInt = function(A) {
  je(A);
  var g = 0;
  do
    g = (g << 8) + this.data.getInt8(this.read++), A -= 8;
  while (A > 0);
  return g;
};
fA.DataBuffer.prototype.getSignedInt = function(A) {
  var g = this.getInt(A), I = 2 << A - 2;
  return g >= I && (g -= I << 1), g;
};
fA.DataBuffer.prototype.getBytes = function(A) {
  var g;
  return A ? (A = Math.min(this.length(), A), g = this.data.slice(this.read, this.read + A), this.read += A) : A === 0 ? g = "" : (g = this.read === 0 ? this.data : this.data.slice(this.read), this.clear()), g;
};
fA.DataBuffer.prototype.bytes = function(A) {
  return typeof A > "u" ? this.data.slice(this.read) : this.data.slice(this.read, this.read + A);
};
fA.DataBuffer.prototype.at = function(A) {
  return this.data.getUint8(this.read + A);
};
fA.DataBuffer.prototype.setAt = function(A, g) {
  return this.data.setUint8(A, g), this;
};
fA.DataBuffer.prototype.last = function() {
  return this.data.getUint8(this.write - 1);
};
fA.DataBuffer.prototype.copy = function() {
  return new fA.DataBuffer(this);
};
fA.DataBuffer.prototype.compact = function() {
  if (this.read > 0) {
    var A = new Uint8Array(this.data.buffer, this.read), g = new Uint8Array(A.byteLength);
    g.set(A), this.data = new DataView(g), this.write -= this.read, this.read = 0;
  }
  return this;
};
fA.DataBuffer.prototype.clear = function() {
  return this.data = new DataView(new ArrayBuffer(0)), this.read = this.write = 0, this;
};
fA.DataBuffer.prototype.truncate = function(A) {
  return this.write = Math.max(0, this.length() - A), this.read = Math.min(this.read, this.write), this;
};
fA.DataBuffer.prototype.toHex = function() {
  for (var A = "", g = this.read; g < this.data.byteLength; ++g) {
    var I = this.data.getUint8(g);
    I < 16 && (A += "0"), A += I.toString(16);
  }
  return A;
};
fA.DataBuffer.prototype.toString = function(A) {
  var g = new Uint8Array(this.data, this.read, this.length());
  if (A = A || "utf8", A === "binary" || A === "raw")
    return fA.binary.raw.encode(g);
  if (A === "hex")
    return fA.binary.hex.encode(g);
  if (A === "base64")
    return fA.binary.base64.encode(g);
  if (A === "utf8")
    return fA.text.utf8.decode(g);
  if (A === "utf16")
    return fA.text.utf16.decode(g);
  throw new Error("Invalid encoding: " + A);
};
fA.createBuffer = function(A, g) {
  return g = g || "raw", A !== void 0 && g === "utf8" && (A = fA.encodeUtf8(A)), new fA.ByteBuffer(A);
};
fA.fillString = function(A, g) {
  for (var I = ""; g > 0; )
    g & 1 && (I += A), g >>>= 1, g > 0 && (A += A);
  return I;
};
fA.xorBytes = function(A, g, I) {
  for (var B = "", Q = "", E = "", C = 0, o = 0; I > 0; --I, ++C)
    Q = A.charCodeAt(C) ^ g.charCodeAt(C), o >= 10 && (B += E, E = "", o = 0), E += String.fromCharCode(Q), ++o;
  return B += E, B;
};
fA.hexToBytes = function(A) {
  var g = "", I = 0;
  for (A.length & !0 && (I = 1, g += String.fromCharCode(parseInt(A[0], 16))); I < A.length; I += 2)
    g += String.fromCharCode(parseInt(A.substr(I, 2), 16));
  return g;
};
fA.bytesToHex = function(A) {
  return fA.createBuffer(A).toHex();
};
fA.int32ToBytes = function(A) {
  return String.fromCharCode(A >> 24 & 255) + String.fromCharCode(A >> 16 & 255) + String.fromCharCode(A >> 8 & 255) + String.fromCharCode(A & 255);
};
var WQ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", OQ = [
  /*43 -43 = 0*/
  /*'+',  1,  2,  3,'/' */
  62,
  -1,
  -1,
  -1,
  63,
  /*'0','1','2','3','4','5','6','7','8','9' */
  52,
  53,
  54,
  55,
  56,
  57,
  58,
  59,
  60,
  61,
  /*15, 16, 17,'=', 19, 20, 21 */
  -1,
  -1,
  -1,
  64,
  -1,
  -1,
  -1,
  /*65 - 43 = 22*/
  /*'A','B','C','D','E','F','G','H','I','J','K','L','M', */
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  /*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  /*91 - 43 = 48 */
  /*48, 49, 50, 51, 52, 53 */
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  /*97 - 43 = 54*/
  /*'a','b','c','d','e','f','g','h','i','j','k','l','m' */
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  /*'n','o','p','q','r','s','t','u','v','w','x','y','z' */
  39,
  40,
  41,
  42,
  43,
  44,
  45,
  46,
  47,
  48,
  49,
  50,
  51
], s0 = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
fA.encode64 = function(A, g) {
  for (var I = "", B = "", Q, E, C, o = 0; o < A.length; )
    Q = A.charCodeAt(o++), E = A.charCodeAt(o++), C = A.charCodeAt(o++), I += WQ.charAt(Q >> 2), I += WQ.charAt((Q & 3) << 4 | E >> 4), isNaN(E) ? I += "==" : (I += WQ.charAt((E & 15) << 2 | C >> 6), I += isNaN(C) ? "=" : WQ.charAt(C & 63)), g && I.length > g && (B += I.substr(0, g) + `\r
`, I = I.substr(g));
  return B += I, B;
};
fA.decode64 = function(A) {
  A = A.replace(/[^A-Za-z0-9\+\/\=]/g, "");
  for (var g = "", I, B, Q, E, C = 0; C < A.length; )
    I = OQ[A.charCodeAt(C++) - 43], B = OQ[A.charCodeAt(C++) - 43], Q = OQ[A.charCodeAt(C++) - 43], E = OQ[A.charCodeAt(C++) - 43], g += String.fromCharCode(I << 2 | B >> 4), Q !== 64 && (g += String.fromCharCode((B & 15) << 4 | Q >> 2), E !== 64 && (g += String.fromCharCode((Q & 3) << 6 | E)));
  return g;
};
fA.encodeUtf8 = function(A) {
  return unescape(encodeURIComponent(A));
};
fA.decodeUtf8 = function(A) {
  return decodeURIComponent(escape(A));
};
fA.binary = {
  raw: {},
  hex: {},
  base64: {},
  base58: {},
  baseN: {
    encode: Zn.encode,
    decode: Zn.decode
  }
};
fA.binary.raw.encode = function(A) {
  return String.fromCharCode.apply(null, A);
};
fA.binary.raw.decode = function(A, g, I) {
  var B = g;
  B || (B = new Uint8Array(A.length)), I = I || 0;
  for (var Q = I, E = 0; E < A.length; ++E)
    B[Q++] = A.charCodeAt(E);
  return g ? Q - I : B;
};
fA.binary.hex.encode = fA.bytesToHex;
fA.binary.hex.decode = function(A, g, I) {
  var B = g;
  B || (B = new Uint8Array(Math.ceil(A.length / 2))), I = I || 0;
  var Q = 0, E = I;
  for (A.length & 1 && (Q = 1, B[E++] = parseInt(A[0], 16)); Q < A.length; Q += 2)
    B[E++] = parseInt(A.substr(Q, 2), 16);
  return g ? E - I : B;
};
fA.binary.base64.encode = function(A, g) {
  for (var I = "", B = "", Q, E, C, o = 0; o < A.byteLength; )
    Q = A[o++], E = A[o++], C = A[o++], I += WQ.charAt(Q >> 2), I += WQ.charAt((Q & 3) << 4 | E >> 4), isNaN(E) ? I += "==" : (I += WQ.charAt((E & 15) << 2 | C >> 6), I += isNaN(C) ? "=" : WQ.charAt(C & 63)), g && I.length > g && (B += I.substr(0, g) + `\r
`, I = I.substr(g));
  return B += I, B;
};
fA.binary.base64.decode = function(A, g, I) {
  var B = g;
  B || (B = new Uint8Array(Math.ceil(A.length / 4) * 3)), A = A.replace(/[^A-Za-z0-9\+\/\=]/g, ""), I = I || 0;
  for (var Q, E, C, o, t = 0, e = I; t < A.length; )
    Q = OQ[A.charCodeAt(t++) - 43], E = OQ[A.charCodeAt(t++) - 43], C = OQ[A.charCodeAt(t++) - 43], o = OQ[A.charCodeAt(t++) - 43], B[e++] = Q << 2 | E >> 4, C !== 64 && (B[e++] = (E & 15) << 4 | C >> 2, o !== 64 && (B[e++] = (C & 3) << 6 | o));
  return g ? e - I : B.subarray(0, e);
};
fA.binary.base58.encode = function(A, g) {
  return fA.binary.baseN.encode(A, s0, g);
};
fA.binary.base58.decode = function(A, g) {
  return fA.binary.baseN.decode(A, s0, g);
};
fA.text = {
  utf8: {},
  utf16: {}
};
fA.text.utf8.encode = function(A, g, I) {
  A = fA.encodeUtf8(A);
  var B = g;
  B || (B = new Uint8Array(A.length)), I = I || 0;
  for (var Q = I, E = 0; E < A.length; ++E)
    B[Q++] = A.charCodeAt(E);
  return g ? Q - I : B;
};
fA.text.utf8.decode = function(A) {
  return fA.decodeUtf8(String.fromCharCode.apply(null, A));
};
fA.text.utf16.encode = function(A, g, I) {
  var B = g;
  B || (B = new Uint8Array(A.length * 2));
  var Q = new Uint16Array(B.buffer);
  I = I || 0;
  for (var E = I, C = I, o = 0; o < A.length; ++o)
    Q[C++] = A.charCodeAt(o), E += 2;
  return g ? E - I : B;
};
fA.text.utf16.decode = function(A) {
  return String.fromCharCode.apply(null, new Uint16Array(A.buffer));
};
fA.deflate = function(A, g, I) {
  if (g = fA.decode64(A.deflate(fA.encode64(g)).rval), I) {
    var B = 2, Q = g.charCodeAt(1);
    Q & 32 && (B = 6), g = g.substring(B, g.length - 4);
  }
  return g;
};
fA.inflate = function(A, g, I) {
  var B = A.inflate(fA.encode64(g)).rval;
  return B === null ? null : fA.decode64(B);
};
var mr = function(A, g, I) {
  if (!A)
    throw new Error("WebStorage not available.");
  var B;
  if (I === null ? B = A.removeItem(g) : (I = fA.encode64(JSON.stringify(I)), B = A.setItem(g, I)), typeof B < "u" && B.rval !== !0) {
    var Q = new Error(B.error.message);
    throw Q.id = B.error.id, Q.name = B.error.name, Q;
  }
}, xr = function(A, g) {
  if (!A)
    throw new Error("WebStorage not available.");
  var I = A.getItem(g);
  if (A.init)
    if (I.rval === null) {
      if (I.error) {
        var B = new Error(I.error.message);
        throw B.id = I.error.id, B.name = I.error.name, B;
      }
      I = null;
    } else
      I = I.rval;
  return I !== null && (I = JSON.parse(fA.decode64(I))), I;
}, Kd = function(A, g, I, B) {
  var Q = xr(A, g);
  Q === null && (Q = {}), Q[I] = B, mr(A, g, Q);
}, md = function(A, g, I) {
  var B = xr(A, g);
  return B !== null && (B = I in B ? B[I] : null), B;
}, xd = function(A, g, I) {
  var B = xr(A, g);
  if (B !== null && I in B) {
    delete B[I];
    var Q = !0;
    for (var E in B) {
      Q = !1;
      break;
    }
    Q && (B = null), mr(A, g, B);
  }
}, vd = function(A, g) {
  mr(A, g, null);
}, fi = function(A, g, I) {
  var B = null;
  typeof I > "u" && (I = ["web", "flash"]);
  var Q, E = !1, C = null;
  for (var o in I) {
    Q = I[o];
    try {
      if (Q === "flash" || Q === "both") {
        if (g[0] === null)
          throw new Error("Flash local storage not available.");
        B = A.apply(this, g), E = Q === "flash";
      }
      (Q === "web" || Q === "both") && (g[0] = localStorage, B = A.apply(this, g), E = !0);
    } catch (t) {
      C = t;
    }
    if (E)
      break;
  }
  if (!E)
    throw C;
  return B;
};
fA.setItem = function(A, g, I, B, Q) {
  fi(Kd, arguments, Q);
};
fA.getItem = function(A, g, I, B) {
  return fi(md, arguments, B);
};
fA.removeItem = function(A, g, I, B) {
  fi(xd, arguments, B);
};
fA.clearItems = function(A, g, I) {
  fi(vd, arguments, I);
};
fA.isEmpty = function(A) {
  for (var g in A)
    if (A.hasOwnProperty(g))
      return !1;
  return !0;
};
fA.format = function(A) {
  for (var g = /%./g, I, B, Q = 0, E = [], C = 0; I = g.exec(A); ) {
    B = A.substring(C, g.lastIndex - 2), B.length > 0 && E.push(B), C = g.lastIndex;
    var o = I[0][1];
    switch (o) {
      case "s":
      case "o":
        Q < arguments.length ? E.push(arguments[Q++ + 1]) : E.push("<?>");
        break;
      case "%":
        E.push("%");
        break;
      default:
        E.push("<%" + o + "?>");
    }
  }
  return E.push(A.substring(C)), E.join("");
};
fA.formatNumber = function(A, g, I, B) {
  var Q = A, E = isNaN(g = Math.abs(g)) ? 2 : g, C = I === void 0 ? "," : I, o = B === void 0 ? "." : B, t = Q < 0 ? "-" : "", e = parseInt(Q = Math.abs(+Q || 0).toFixed(E), 10) + "", i = e.length > 3 ? e.length % 3 : 0;
  return t + (i ? e.substr(0, i) + o : "") + e.substr(i).replace(/(\d{3})(?=\d)/g, "$1" + o) + (E ? C + Math.abs(Q - e).toFixed(E).slice(2) : "");
};
fA.formatSize = function(A) {
  return A >= 1073741824 ? A = fA.formatNumber(A / 1073741824, 2, ".", "") + " GiB" : A >= 1048576 ? A = fA.formatNumber(A / 1048576, 2, ".", "") + " MiB" : A >= 1024 ? A = fA.formatNumber(A / 1024, 0) + " KiB" : A = fA.formatNumber(A, 0) + " bytes", A;
};
fA.bytesFromIP = function(A) {
  return A.indexOf(".") !== -1 ? fA.bytesFromIPv4(A) : A.indexOf(":") !== -1 ? fA.bytesFromIPv6(A) : null;
};
fA.bytesFromIPv4 = function(A) {
  if (A = A.split("."), A.length !== 4)
    return null;
  for (var g = fA.createBuffer(), I = 0; I < A.length; ++I) {
    var B = parseInt(A[I], 10);
    if (isNaN(B))
      return null;
    g.putByte(B);
  }
  return g.getBytes();
};
fA.bytesFromIPv6 = function(A) {
  var g = 0;
  A = A.split(":").filter(function(C) {
    return C.length === 0 && ++g, !0;
  });
  for (var I = (8 - A.length + g) * 2, B = fA.createBuffer(), Q = 0; Q < 8; ++Q) {
    if (!A[Q] || A[Q].length === 0) {
      B.fillWithByte(0, I), I = 0;
      continue;
    }
    var E = fA.hexToBytes(A[Q]);
    E.length < 2 && B.putByte(0), B.putBytes(E);
  }
  return B.getBytes();
};
fA.bytesToIP = function(A) {
  return A.length === 4 ? fA.bytesToIPv4(A) : A.length === 16 ? fA.bytesToIPv6(A) : null;
};
fA.bytesToIPv4 = function(A) {
  if (A.length !== 4)
    return null;
  for (var g = [], I = 0; I < A.length; ++I)
    g.push(A.charCodeAt(I));
  return g.join(".");
};
fA.bytesToIPv6 = function(A) {
  if (A.length !== 16)
    return null;
  for (var g = [], I = [], B = 0, Q = 0; Q < A.length; Q += 2) {
    for (var E = fA.bytesToHex(A[Q] + A[Q + 1]); E[0] === "0" && E !== "0"; )
      E = E.substr(1);
    if (E === "0") {
      var C = I[I.length - 1], o = g.length;
      !C || o !== C.end + 1 ? I.push({ start: o, end: o }) : (C.end = o, C.end - C.start > I[B].end - I[B].start && (B = I.length - 1));
    }
    g.push(E);
  }
  if (I.length > 0) {
    var t = I[B];
    t.end - t.start > 0 && (g.splice(t.start, t.end - t.start + 1, ""), t.start === 0 && g.unshift(""), t.end === 7 && g.push(""));
  }
  return g.join(":");
};
fA.estimateCores = function(A, g) {
  if (typeof A == "function" && (g = A, A = {}), A = A || {}, "cores" in fA && !A.update)
    return g(null, fA.cores);
  if (typeof navigator < "u" && "hardwareConcurrency" in navigator && navigator.hardwareConcurrency > 0)
    return fA.cores = navigator.hardwareConcurrency, g(null, fA.cores);
  if (typeof Worker > "u")
    return fA.cores = 1, g(null, fA.cores);
  if (typeof Blob > "u")
    return fA.cores = 2, g(null, fA.cores);
  var I = URL.createObjectURL(new Blob([
    "(",
    (function() {
      self.addEventListener("message", function(C) {
        var o = Date.now(), t = o + 4;
        self.postMessage({ st: o, et: t });
      });
    }).toString(),
    ")()"
  ], { type: "application/javascript" }));
  B([], 5, 16);
  function B(C, o, t) {
    if (o === 0) {
      var e = Math.floor(C.reduce(function(i, a) {
        return i + a;
      }, 0) / C.length);
      return fA.cores = Math.max(1, e), URL.revokeObjectURL(I), g(null, fA.cores);
    }
    Q(t, function(i, a) {
      C.push(E(t, a)), B(C, o - 1, t);
    });
  }
  function Q(C, o) {
    for (var t = [], e = [], i = 0; i < C; ++i) {
      var a = new Worker(I);
      a.addEventListener("message", function(r) {
        if (e.push(r.data), e.length === C) {
          for (var h = 0; h < C; ++h)
            t[h].terminate();
          o(null, e);
        }
      }), t.push(a);
    }
    for (var i = 0; i < C; ++i)
      t[i].postMessage(i);
  }
  function E(C, o) {
    for (var t = [], e = 0; e < C; ++e)
      for (var i = o[e], a = t[e] = [], r = 0; r < C; ++r)
        if (e !== r) {
          var h = o[r];
          (i.st > h.st && i.st < h.et || h.st > i.st && h.st < i.et) && a.push(r);
        }
    return t.reduce(function(n, l) {
      return Math.max(n, l.length);
    }, 0);
  }
};
var _B = bg;
_B.cipher = _B.cipher || {};
_B.cipher.algorithms = _B.cipher.algorithms || {};
_B.cipher.createCipher = function(A, g) {
  var I = A;
  if (typeof I == "string" && (I = _B.cipher.getAlgorithm(I), I && (I = I())), !I)
    throw new Error("Unsupported algorithm: " + A);
  return new _B.cipher.BlockCipher({
    algorithm: I,
    key: g,
    decrypt: !1
  });
};
_B.cipher.createDecipher = function(A, g) {
  var I = A;
  if (typeof I == "string" && (I = _B.cipher.getAlgorithm(I), I && (I = I())), !I)
    throw new Error("Unsupported algorithm: " + A);
  return new _B.cipher.BlockCipher({
    algorithm: I,
    key: g,
    decrypt: !0
  });
};
_B.cipher.registerAlgorithm = function(A, g) {
  A = A.toUpperCase(), _B.cipher.algorithms[A] = g;
};
_B.cipher.getAlgorithm = function(A) {
  return A = A.toUpperCase(), A in _B.cipher.algorithms ? _B.cipher.algorithms[A] : null;
};
var vr = _B.cipher.BlockCipher = function(A) {
  this.algorithm = A.algorithm, this.mode = this.algorithm.mode, this.blockSize = this.mode.blockSize, this._finish = !1, this._input = null, this.output = null, this._op = A.decrypt ? this.mode.decrypt : this.mode.encrypt, this._decrypt = A.decrypt, this.algorithm.initialize(A);
};
vr.prototype.start = function(A) {
  A = A || {};
  var g = {};
  for (var I in A)
    g[I] = A[I];
  g.decrypt = this._decrypt, this._finish = !1, this._input = _B.util.createBuffer(), this.output = A.output || _B.util.createBuffer(), this.mode.start(g);
};
vr.prototype.update = function(A) {
  for (A && this._input.putBuffer(A); !this._op.call(this.mode, this._input, this.output, this._finish) && !this._finish; )
    ;
  this._input.compact();
};
vr.prototype.finish = function(A) {
  A && (this.mode.name === "ECB" || this.mode.name === "CBC") && (this.mode.pad = function(I) {
    return A(this.blockSize, I, !1);
  }, this.mode.unpad = function(I) {
    return A(this.blockSize, I, !0);
  });
  var g = {};
  return g.decrypt = this._decrypt, g.overflow = this._input.length() % this.blockSize, !(!this._decrypt && this.mode.pad && !this.mode.pad(this._input, g) || (this._finish = !0, this.update(), this._decrypt && this.mode.unpad && !this.mode.unpad(this.output, g)) || this.mode.afterFinish && !this.mode.afterFinish(this.output, g));
};
var jB = bg;
jB.cipher = jB.cipher || {};
var zg = jB.cipher.modes = jB.cipher.modes || {};
zg.ecb = function(A) {
  A = A || {}, this.name = "ECB", this.cipher = A.cipher, this.blockSize = A.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints);
};
zg.ecb.prototype.start = function(A) {
};
zg.ecb.prototype.encrypt = function(A, g, I) {
  if (A.length() < this.blockSize && !(I && A.length() > 0))
    return !0;
  for (var B = 0; B < this._ints; ++B)
    this._inBlock[B] = A.getInt32();
  this.cipher.encrypt(this._inBlock, this._outBlock);
  for (var B = 0; B < this._ints; ++B)
    g.putInt32(this._outBlock[B]);
};
zg.ecb.prototype.decrypt = function(A, g, I) {
  if (A.length() < this.blockSize && !(I && A.length() > 0))
    return !0;
  for (var B = 0; B < this._ints; ++B)
    this._inBlock[B] = A.getInt32();
  this.cipher.decrypt(this._inBlock, this._outBlock);
  for (var B = 0; B < this._ints; ++B)
    g.putInt32(this._outBlock[B]);
};
zg.ecb.prototype.pad = function(A, g) {
  var I = A.length() === this.blockSize ? this.blockSize : this.blockSize - A.length();
  return A.fillWithByte(I, I), !0;
};
zg.ecb.prototype.unpad = function(A, g) {
  if (g.overflow > 0)
    return !1;
  var I = A.length(), B = A.at(I - 1);
  return B > this.blockSize << 2 ? !1 : (A.truncate(B), !0);
};
zg.cbc = function(A) {
  A = A || {}, this.name = "CBC", this.cipher = A.cipher, this.blockSize = A.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints);
};
zg.cbc.prototype.start = function(A) {
  if (A.iv === null) {
    if (!this._prev)
      throw new Error("Invalid IV parameter.");
    this._iv = this._prev.slice(0);
  } else if ("iv" in A)
    this._iv = Gi(A.iv, this.blockSize), this._prev = this._iv.slice(0);
  else
    throw new Error("Invalid IV parameter.");
};
zg.cbc.prototype.encrypt = function(A, g, I) {
  if (A.length() < this.blockSize && !(I && A.length() > 0))
    return !0;
  for (var B = 0; B < this._ints; ++B)
    this._inBlock[B] = this._prev[B] ^ A.getInt32();
  this.cipher.encrypt(this._inBlock, this._outBlock);
  for (var B = 0; B < this._ints; ++B)
    g.putInt32(this._outBlock[B]);
  this._prev = this._outBlock;
};
zg.cbc.prototype.decrypt = function(A, g, I) {
  if (A.length() < this.blockSize && !(I && A.length() > 0))
    return !0;
  for (var B = 0; B < this._ints; ++B)
    this._inBlock[B] = A.getInt32();
  this.cipher.decrypt(this._inBlock, this._outBlock);
  for (var B = 0; B < this._ints; ++B)
    g.putInt32(this._prev[B] ^ this._outBlock[B]);
  this._prev = this._inBlock.slice(0);
};
zg.cbc.prototype.pad = function(A, g) {
  var I = A.length() === this.blockSize ? this.blockSize : this.blockSize - A.length();
  return A.fillWithByte(I, I), !0;
};
zg.cbc.prototype.unpad = function(A, g) {
  if (g.overflow > 0)
    return !1;
  var I = A.length(), B = A.at(I - 1);
  return B > this.blockSize << 2 ? !1 : (A.truncate(B), !0);
};
zg.cfb = function(A) {
  A = A || {}, this.name = "CFB", this.cipher = A.cipher, this.blockSize = A.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialBlock = new Array(this._ints), this._partialOutput = jB.util.createBuffer(), this._partialBytes = 0;
};
zg.cfb.prototype.start = function(A) {
  if (!("iv" in A))
    throw new Error("Invalid IV parameter.");
  this._iv = Gi(A.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
};
zg.cfb.prototype.encrypt = function(A, g, I) {
  var B = A.length();
  if (B === 0)
    return !0;
  if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && B >= this.blockSize) {
    for (var Q = 0; Q < this._ints; ++Q)
      this._inBlock[Q] = A.getInt32() ^ this._outBlock[Q], g.putInt32(this._inBlock[Q]);
    return;
  }
  var E = (this.blockSize - B) % this.blockSize;
  E > 0 && (E = this.blockSize - E), this._partialOutput.clear();
  for (var Q = 0; Q < this._ints; ++Q)
    this._partialBlock[Q] = A.getInt32() ^ this._outBlock[Q], this._partialOutput.putInt32(this._partialBlock[Q]);
  if (E > 0)
    A.read -= this.blockSize;
  else
    for (var Q = 0; Q < this._ints; ++Q)
      this._inBlock[Q] = this._partialBlock[Q];
  if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), E > 0 && !I)
    return g.putBytes(this._partialOutput.getBytes(
      E - this._partialBytes
    )), this._partialBytes = E, !0;
  g.putBytes(this._partialOutput.getBytes(
    B - this._partialBytes
  )), this._partialBytes = 0;
};
zg.cfb.prototype.decrypt = function(A, g, I) {
  var B = A.length();
  if (B === 0)
    return !0;
  if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && B >= this.blockSize) {
    for (var Q = 0; Q < this._ints; ++Q)
      this._inBlock[Q] = A.getInt32(), g.putInt32(this._inBlock[Q] ^ this._outBlock[Q]);
    return;
  }
  var E = (this.blockSize - B) % this.blockSize;
  E > 0 && (E = this.blockSize - E), this._partialOutput.clear();
  for (var Q = 0; Q < this._ints; ++Q)
    this._partialBlock[Q] = A.getInt32(), this._partialOutput.putInt32(this._partialBlock[Q] ^ this._outBlock[Q]);
  if (E > 0)
    A.read -= this.blockSize;
  else
    for (var Q = 0; Q < this._ints; ++Q)
      this._inBlock[Q] = this._partialBlock[Q];
  if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), E > 0 && !I)
    return g.putBytes(this._partialOutput.getBytes(
      E - this._partialBytes
    )), this._partialBytes = E, !0;
  g.putBytes(this._partialOutput.getBytes(
    B - this._partialBytes
  )), this._partialBytes = 0;
};
zg.ofb = function(A) {
  A = A || {}, this.name = "OFB", this.cipher = A.cipher, this.blockSize = A.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialOutput = jB.util.createBuffer(), this._partialBytes = 0;
};
zg.ofb.prototype.start = function(A) {
  if (!("iv" in A))
    throw new Error("Invalid IV parameter.");
  this._iv = Gi(A.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
};
zg.ofb.prototype.encrypt = function(A, g, I) {
  var B = A.length();
  if (A.length() === 0)
    return !0;
  if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && B >= this.blockSize) {
    for (var Q = 0; Q < this._ints; ++Q)
      g.putInt32(A.getInt32() ^ this._outBlock[Q]), this._inBlock[Q] = this._outBlock[Q];
    return;
  }
  var E = (this.blockSize - B) % this.blockSize;
  E > 0 && (E = this.blockSize - E), this._partialOutput.clear();
  for (var Q = 0; Q < this._ints; ++Q)
    this._partialOutput.putInt32(A.getInt32() ^ this._outBlock[Q]);
  if (E > 0)
    A.read -= this.blockSize;
  else
    for (var Q = 0; Q < this._ints; ++Q)
      this._inBlock[Q] = this._outBlock[Q];
  if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), E > 0 && !I)
    return g.putBytes(this._partialOutput.getBytes(
      E - this._partialBytes
    )), this._partialBytes = E, !0;
  g.putBytes(this._partialOutput.getBytes(
    B - this._partialBytes
  )), this._partialBytes = 0;
};
zg.ofb.prototype.decrypt = zg.ofb.prototype.encrypt;
zg.ctr = function(A) {
  A = A || {}, this.name = "CTR", this.cipher = A.cipher, this.blockSize = A.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = null, this._outBlock = new Array(this._ints), this._partialOutput = jB.util.createBuffer(), this._partialBytes = 0;
};
zg.ctr.prototype.start = function(A) {
  if (!("iv" in A))
    throw new Error("Invalid IV parameter.");
  this._iv = Gi(A.iv, this.blockSize), this._inBlock = this._iv.slice(0), this._partialBytes = 0;
};
zg.ctr.prototype.encrypt = function(A, g, I) {
  var B = A.length();
  if (B === 0)
    return !0;
  if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && B >= this.blockSize)
    for (var Q = 0; Q < this._ints; ++Q)
      g.putInt32(A.getInt32() ^ this._outBlock[Q]);
  else {
    var E = (this.blockSize - B) % this.blockSize;
    E > 0 && (E = this.blockSize - E), this._partialOutput.clear();
    for (var Q = 0; Q < this._ints; ++Q)
      this._partialOutput.putInt32(A.getInt32() ^ this._outBlock[Q]);
    if (E > 0 && (A.read -= this.blockSize), this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), E > 0 && !I)
      return g.putBytes(this._partialOutput.getBytes(
        E - this._partialBytes
      )), this._partialBytes = E, !0;
    g.putBytes(this._partialOutput.getBytes(
      B - this._partialBytes
    )), this._partialBytes = 0;
  }
  Mi(this._inBlock);
};
zg.ctr.prototype.decrypt = zg.ctr.prototype.encrypt;
zg.gcm = function(A) {
  A = A || {}, this.name = "GCM", this.cipher = A.cipher, this.blockSize = A.blockSize || 16, this._ints = this.blockSize / 4, this._inBlock = new Array(this._ints), this._outBlock = new Array(this._ints), this._partialOutput = jB.util.createBuffer(), this._partialBytes = 0, this._R = 3774873600;
};
zg.gcm.prototype.start = function(A) {
  if (!("iv" in A))
    throw new Error("Invalid IV parameter.");
  var g = jB.util.createBuffer(A.iv);
  this._cipherLength = 0;
  var I;
  if ("additionalData" in A ? I = jB.util.createBuffer(A.additionalData) : I = jB.util.createBuffer(), "tagLength" in A ? this._tagLength = A.tagLength : this._tagLength = 128, this._tag = null, A.decrypt && (this._tag = jB.util.createBuffer(A.tag).getBytes(), this._tag.length !== this._tagLength / 8))
    throw new Error("Authentication tag does not match tag length.");
  this._hashBlock = new Array(this._ints), this.tag = null, this._hashSubkey = new Array(this._ints), this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey), this.componentBits = 4, this._m = this.generateHashTable(this._hashSubkey, this.componentBits);
  var B = g.length();
  if (B === 12)
    this._j0 = [g.getInt32(), g.getInt32(), g.getInt32(), 1];
  else {
    for (this._j0 = [0, 0, 0, 0]; g.length() > 0; )
      this._j0 = this.ghash(
        this._hashSubkey,
        this._j0,
        [g.getInt32(), g.getInt32(), g.getInt32(), g.getInt32()]
      );
    this._j0 = this.ghash(
      this._hashSubkey,
      this._j0,
      [0, 0].concat($o(B * 8))
    );
  }
  this._inBlock = this._j0.slice(0), Mi(this._inBlock), this._partialBytes = 0, I = jB.util.createBuffer(I), this._aDataLength = $o(I.length() * 8);
  var Q = I.length() % this.blockSize;
  for (Q && I.fillWithByte(0, this.blockSize - Q), this._s = [0, 0, 0, 0]; I.length() > 0; )
    this._s = this.ghash(this._hashSubkey, this._s, [
      I.getInt32(),
      I.getInt32(),
      I.getInt32(),
      I.getInt32()
    ]);
};
zg.gcm.prototype.encrypt = function(A, g, I) {
  var B = A.length();
  if (B === 0)
    return !0;
  if (this.cipher.encrypt(this._inBlock, this._outBlock), this._partialBytes === 0 && B >= this.blockSize) {
    for (var Q = 0; Q < this._ints; ++Q)
      g.putInt32(this._outBlock[Q] ^= A.getInt32());
    this._cipherLength += this.blockSize;
  } else {
    var E = (this.blockSize - B) % this.blockSize;
    E > 0 && (E = this.blockSize - E), this._partialOutput.clear();
    for (var Q = 0; Q < this._ints; ++Q)
      this._partialOutput.putInt32(A.getInt32() ^ this._outBlock[Q]);
    if (E <= 0 || I) {
      if (I) {
        var C = B % this.blockSize;
        this._cipherLength += C, this._partialOutput.truncate(this.blockSize - C);
      } else
        this._cipherLength += this.blockSize;
      for (var Q = 0; Q < this._ints; ++Q)
        this._outBlock[Q] = this._partialOutput.getInt32();
      this._partialOutput.read -= this.blockSize;
    }
    if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes), E > 0 && !I)
      return A.read -= this.blockSize, g.putBytes(this._partialOutput.getBytes(
        E - this._partialBytes
      )), this._partialBytes = E, !0;
    g.putBytes(this._partialOutput.getBytes(
      B - this._partialBytes
    )), this._partialBytes = 0;
  }
  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock), Mi(this._inBlock);
};
zg.gcm.prototype.decrypt = function(A, g, I) {
  var B = A.length();
  if (B < this.blockSize && !(I && B > 0))
    return !0;
  this.cipher.encrypt(this._inBlock, this._outBlock), Mi(this._inBlock), this._hashBlock[0] = A.getInt32(), this._hashBlock[1] = A.getInt32(), this._hashBlock[2] = A.getInt32(), this._hashBlock[3] = A.getInt32(), this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);
  for (var Q = 0; Q < this._ints; ++Q)
    g.putInt32(this._outBlock[Q] ^ this._hashBlock[Q]);
  B < this.blockSize ? this._cipherLength += B % this.blockSize : this._cipherLength += this.blockSize;
};
zg.gcm.prototype.afterFinish = function(A, g) {
  var I = !0;
  g.decrypt && g.overflow && A.truncate(this.blockSize - g.overflow), this.tag = jB.util.createBuffer();
  var B = this._aDataLength.concat($o(this._cipherLength * 8));
  this._s = this.ghash(this._hashSubkey, this._s, B);
  var Q = [];
  this.cipher.encrypt(this._j0, Q);
  for (var E = 0; E < this._ints; ++E)
    this.tag.putInt32(this._s[E] ^ Q[E]);
  return this.tag.truncate(this.tag.length() % (this._tagLength / 8)), g.decrypt && this.tag.bytes() !== this._tag && (I = !1), I;
};
zg.gcm.prototype.multiply = function(A, g) {
  for (var I = [0, 0, 0, 0], B = g.slice(0), Q = 0; Q < 128; ++Q) {
    var E = A[Q / 32 | 0] & 1 << 31 - Q % 32;
    E && (I[0] ^= B[0], I[1] ^= B[1], I[2] ^= B[2], I[3] ^= B[3]), this.pow(B, B);
  }
  return I;
};
zg.gcm.prototype.pow = function(A, g) {
  for (var I = A[3] & 1, B = 3; B > 0; --B)
    g[B] = A[B] >>> 1 | (A[B - 1] & 1) << 31;
  g[0] = A[0] >>> 1, I && (g[0] ^= this._R);
};
zg.gcm.prototype.tableMultiply = function(A) {
  for (var g = [0, 0, 0, 0], I = 0; I < 32; ++I) {
    var B = I / 8 | 0, Q = A[B] >>> (7 - I % 8) * 4 & 15, E = this._m[I][Q];
    g[0] ^= E[0], g[1] ^= E[1], g[2] ^= E[2], g[3] ^= E[3];
  }
  return g;
};
zg.gcm.prototype.ghash = function(A, g, I) {
  return g[0] ^= I[0], g[1] ^= I[1], g[2] ^= I[2], g[3] ^= I[3], this.tableMultiply(g);
};
zg.gcm.prototype.generateHashTable = function(A, g) {
  for (var I = 8 / g, B = 4 * I, Q = 16 * I, E = new Array(Q), C = 0; C < Q; ++C) {
    var o = [0, 0, 0, 0], t = C / B | 0, e = (B - 1 - C % B) * g;
    o[t] = 1 << g - 1 << e, E[C] = this.generateSubHashTable(this.multiply(o, A), g);
  }
  return E;
};
zg.gcm.prototype.generateSubHashTable = function(A, g) {
  var I = 1 << g, B = I >>> 1, Q = new Array(I);
  Q[B] = A.slice(0);
  for (var E = B >>> 1; E > 0; )
    this.pow(Q[2 * E], Q[E] = []), E >>= 1;
  for (E = 2; E < B; ) {
    for (var C = 1; C < E; ++C) {
      var o = Q[E], t = Q[C];
      Q[E + C] = [
        o[0] ^ t[0],
        o[1] ^ t[1],
        o[2] ^ t[2],
        o[3] ^ t[3]
      ];
    }
    E *= 2;
  }
  for (Q[0] = [0, 0, 0, 0], E = B + 1; E < I; ++E) {
    var e = Q[E ^ B];
    Q[E] = [A[0] ^ e[0], A[1] ^ e[1], A[2] ^ e[2], A[3] ^ e[3]];
  }
  return Q;
};
function Gi(A, g) {
  if (typeof A == "string" && (A = jB.util.createBuffer(A)), jB.util.isArray(A) && A.length > 4) {
    var I = A;
    A = jB.util.createBuffer();
    for (var B = 0; B < I.length; ++B)
      A.putByte(I[B]);
  }
  if (A.length() < g)
    throw new Error(
      "Invalid IV length; got " + A.length() + " bytes and expected " + g + " bytes."
    );
  if (!jB.util.isArray(A)) {
    for (var Q = [], E = g / 4, B = 0; B < E; ++B)
      Q.push(A.getInt32());
    A = Q;
  }
  return A;
}
function Mi(A) {
  A[A.length - 1] = A[A.length - 1] + 1 & 4294967295;
}
function $o(A) {
  return [A / 4294967296 | 0, A & 4294967295];
}
var lB = bg;
lB.aes = lB.aes || {};
lB.aes.startEncrypting = function(A, g, I, B) {
  var Q = Ni({
    key: A,
    output: I,
    decrypt: !1,
    mode: B
  });
  return Q.start(g), Q;
};
lB.aes.createEncryptionCipher = function(A, g) {
  return Ni({
    key: A,
    output: null,
    decrypt: !1,
    mode: g
  });
};
lB.aes.startDecrypting = function(A, g, I, B) {
  var Q = Ni({
    key: A,
    output: I,
    decrypt: !0,
    mode: B
  });
  return Q.start(g), Q;
};
lB.aes.createDecryptionCipher = function(A, g) {
  return Ni({
    key: A,
    output: null,
    decrypt: !0,
    mode: g
  });
};
lB.aes.Algorithm = function(A, g) {
  br || c0();
  var I = this;
  I.name = A, I.mode = new g({
    blockSize: 16,
    cipher: {
      encrypt: function(B, Q) {
        return ga(I._w, B, Q, !1);
      },
      decrypt: function(B, Q) {
        return ga(I._w, B, Q, !0);
      }
    }
  }), I._init = !1;
};
lB.aes.Algorithm.prototype.initialize = function(A) {
  if (!this._init) {
    var g = A.key, I;
    if (typeof g == "string" && (g.length === 16 || g.length === 24 || g.length === 32))
      g = lB.util.createBuffer(g);
    else if (lB.util.isArray(g) && (g.length === 16 || g.length === 24 || g.length === 32)) {
      I = g, g = lB.util.createBuffer();
      for (var B = 0; B < I.length; ++B)
        g.putByte(I[B]);
    }
    if (!lB.util.isArray(g)) {
      I = g, g = [];
      var Q = I.length();
      if (Q === 16 || Q === 24 || Q === 32) {
        Q = Q >>> 2;
        for (var B = 0; B < Q; ++B)
          g.push(I.getInt32());
      }
    }
    if (!lB.util.isArray(g) || !(g.length === 4 || g.length === 6 || g.length === 8))
      throw new Error("Invalid key parameter.");
    var E = this.mode.name, C = ["CFB", "OFB", "CTR", "GCM"].indexOf(E) !== -1;
    this._w = D0(g, A.decrypt && !C), this._init = !0;
  }
};
lB.aes._expandKey = function(A, g) {
  return br || c0(), D0(A, g);
};
lB.aes._updateBlock = ga;
qC("AES-ECB", lB.cipher.modes.ecb);
qC("AES-CBC", lB.cipher.modes.cbc);
qC("AES-CFB", lB.cipher.modes.cfb);
qC("AES-OFB", lB.cipher.modes.ofb);
qC("AES-CTR", lB.cipher.modes.ctr);
qC("AES-GCM", lB.cipher.modes.gcm);
function qC(A, g) {
  var I = function() {
    return new lB.aes.Algorithm(A, g);
  };
  lB.cipher.registerAlgorithm(A, I);
}
var br = !1, iC = 4, aI, Aa, n0, UE, AQ;
function c0() {
  br = !0, n0 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
  for (var A = new Array(256), g = 0; g < 128; ++g)
    A[g] = g << 1, A[g + 128] = g + 128 << 1 ^ 283;
  aI = new Array(256), Aa = new Array(256), UE = new Array(4), AQ = new Array(4);
  for (var g = 0; g < 4; ++g)
    UE[g] = new Array(256), AQ[g] = new Array(256);
  for (var I = 0, B = 0, Q, E, C, o, t, e, i, g = 0; g < 256; ++g) {
    o = B ^ B << 1 ^ B << 2 ^ B << 3 ^ B << 4, o = o >> 8 ^ o & 255 ^ 99, aI[I] = o, Aa[o] = I, t = A[o], Q = A[I], E = A[Q], C = A[E], e = t << 24 ^ // 2
    o << 16 ^ // 1
    o << 8 ^ // 1
    (o ^ t), i = (Q ^ E ^ C) << 24 ^ // E (14)
    (I ^ C) << 16 ^ // 9
    (I ^ E ^ C) << 8 ^ // D (13)
    (I ^ Q ^ C);
    for (var a = 0; a < 4; ++a)
      UE[a][I] = e, AQ[a][o] = i, e = e << 24 | e >>> 8, i = i << 24 | i >>> 8;
    I === 0 ? I = B = 1 : (I = Q ^ A[A[A[Q ^ C]]], B ^= A[A[B]]);
  }
}
function D0(A, g) {
  for (var I = A.slice(0), B, Q = 1, E = I.length, C = E + 6 + 1, o = iC * C, t = E; t < o; ++t)
    B = I[t - 1], t % E === 0 ? (B = aI[B >>> 16 & 255] << 24 ^ aI[B >>> 8 & 255] << 16 ^ aI[B & 255] << 8 ^ aI[B >>> 24] ^ n0[Q] << 24, Q++) : E > 6 && t % E === 4 && (B = aI[B >>> 24] << 24 ^ aI[B >>> 16 & 255] << 16 ^ aI[B >>> 8 & 255] << 8 ^ aI[B & 255]), I[t] = I[t - E] ^ B;
  if (g) {
    var e, i = AQ[0], a = AQ[1], r = AQ[2], h = AQ[3], n = I.slice(0);
    o = I.length;
    for (var t = 0, l = o - iC; t < o; t += iC, l -= iC)
      if (t === 0 || t === o - iC)
        n[t] = I[l], n[t + 1] = I[l + 3], n[t + 2] = I[l + 2], n[t + 3] = I[l + 1];
      else
        for (var y = 0; y < iC; ++y)
          e = I[l + y], n[t + (3 & -y)] = i[aI[e >>> 24]] ^ a[aI[e >>> 16 & 255]] ^ r[aI[e >>> 8 & 255]] ^ h[aI[e & 255]];
    I = n;
  }
  return I;
}
function ga(A, g, I, B) {
  var Q = A.length / 4 - 1, E, C, o, t, e;
  B ? (E = AQ[0], C = AQ[1], o = AQ[2], t = AQ[3], e = Aa) : (E = UE[0], C = UE[1], o = UE[2], t = UE[3], e = aI);
  var i, a, r, h, n, l, y;
  i = g[0] ^ A[0], a = g[B ? 3 : 1] ^ A[1], r = g[2] ^ A[2], h = g[B ? 1 : 3] ^ A[3];
  for (var N = 3, s = 1; s < Q; ++s)
    n = E[i >>> 24] ^ C[a >>> 16 & 255] ^ o[r >>> 8 & 255] ^ t[h & 255] ^ A[++N], l = E[a >>> 24] ^ C[r >>> 16 & 255] ^ o[h >>> 8 & 255] ^ t[i & 255] ^ A[++N], y = E[r >>> 24] ^ C[h >>> 16 & 255] ^ o[i >>> 8 & 255] ^ t[a & 255] ^ A[++N], h = E[h >>> 24] ^ C[i >>> 16 & 255] ^ o[a >>> 8 & 255] ^ t[r & 255] ^ A[++N], i = n, a = l, r = y;
  I[0] = e[i >>> 24] << 24 ^ e[a >>> 16 & 255] << 16 ^ e[r >>> 8 & 255] << 8 ^ e[h & 255] ^ A[++N], I[B ? 3 : 1] = e[a >>> 24] << 24 ^ e[r >>> 16 & 255] << 16 ^ e[h >>> 8 & 255] << 8 ^ e[i & 255] ^ A[++N], I[2] = e[r >>> 24] << 24 ^ e[h >>> 16 & 255] << 16 ^ e[i >>> 8 & 255] << 8 ^ e[a & 255] ^ A[++N], I[B ? 1 : 3] = e[h >>> 24] << 24 ^ e[i >>> 16 & 255] << 16 ^ e[a >>> 8 & 255] << 8 ^ e[r & 255] ^ A[++N];
}
function Ni(A) {
  A = A || {};
  var g = (A.mode || "CBC").toUpperCase(), I = "AES-" + g, B;
  A.decrypt ? B = lB.cipher.createDecipher(I, A.key) : B = lB.cipher.createCipher(I, A.key);
  var Q = B.start;
  return B.start = function(E, C) {
    var o = null;
    C instanceof lB.util.ByteBuffer && (o = C, C = {}), C = C || {}, C.output = o, C.iv = E, Q.call(B, C);
  }, B;
}
var ue = bg;
ue.pki = ue.pki || {};
var Ba = ue.pki.oids = ue.oids = ue.oids || {};
function vA(A, g) {
  Ba[A] = g, Ba[g] = A;
}
function oB(A, g) {
  Ba[A] = g;
}
vA("1.2.840.113549.1.1.1", "rsaEncryption");
vA("1.2.840.113549.1.1.4", "md5WithRSAEncryption");
vA("1.2.840.113549.1.1.5", "sha1WithRSAEncryption");
vA("1.2.840.113549.1.1.7", "RSAES-OAEP");
vA("1.2.840.113549.1.1.8", "mgf1");
vA("1.2.840.113549.1.1.9", "pSpecified");
vA("1.2.840.113549.1.1.10", "RSASSA-PSS");
vA("1.2.840.113549.1.1.11", "sha256WithRSAEncryption");
vA("1.2.840.113549.1.1.12", "sha384WithRSAEncryption");
vA("1.2.840.113549.1.1.13", "sha512WithRSAEncryption");
vA("1.3.101.112", "EdDSA25519");
vA("1.2.840.10040.4.3", "dsa-with-sha1");
vA("1.3.14.3.2.7", "desCBC");
vA("1.3.14.3.2.26", "sha1");
vA("1.3.14.3.2.29", "sha1WithRSASignature");
vA("2.16.840.1.101.3.4.2.1", "sha256");
vA("2.16.840.1.101.3.4.2.2", "sha384");
vA("2.16.840.1.101.3.4.2.3", "sha512");
vA("2.16.840.1.101.3.4.2.4", "sha224");
vA("2.16.840.1.101.3.4.2.5", "sha512-224");
vA("2.16.840.1.101.3.4.2.6", "sha512-256");
vA("1.2.840.113549.2.2", "md2");
vA("1.2.840.113549.2.5", "md5");
vA("1.2.840.113549.1.7.1", "data");
vA("1.2.840.113549.1.7.2", "signedData");
vA("1.2.840.113549.1.7.3", "envelopedData");
vA("1.2.840.113549.1.7.4", "signedAndEnvelopedData");
vA("1.2.840.113549.1.7.5", "digestedData");
vA("1.2.840.113549.1.7.6", "encryptedData");
vA("1.2.840.113549.1.9.1", "emailAddress");
vA("1.2.840.113549.1.9.2", "unstructuredName");
vA("1.2.840.113549.1.9.3", "contentType");
vA("1.2.840.113549.1.9.4", "messageDigest");
vA("1.2.840.113549.1.9.5", "signingTime");
vA("1.2.840.113549.1.9.6", "counterSignature");
vA("1.2.840.113549.1.9.7", "challengePassword");
vA("1.2.840.113549.1.9.8", "unstructuredAddress");
vA("1.2.840.113549.1.9.14", "extensionRequest");
vA("1.2.840.113549.1.9.20", "friendlyName");
vA("1.2.840.113549.1.9.21", "localKeyId");
vA("1.2.840.113549.1.9.22.1", "x509Certificate");
vA("1.2.840.113549.1.12.10.1.1", "keyBag");
vA("1.2.840.113549.1.12.10.1.2", "pkcs8ShroudedKeyBag");
vA("1.2.840.113549.1.12.10.1.3", "certBag");
vA("1.2.840.113549.1.12.10.1.4", "crlBag");
vA("1.2.840.113549.1.12.10.1.5", "secretBag");
vA("1.2.840.113549.1.12.10.1.6", "safeContentsBag");
vA("1.2.840.113549.1.5.13", "pkcs5PBES2");
vA("1.2.840.113549.1.5.12", "pkcs5PBKDF2");
vA("1.2.840.113549.1.12.1.1", "pbeWithSHAAnd128BitRC4");
vA("1.2.840.113549.1.12.1.2", "pbeWithSHAAnd40BitRC4");
vA("1.2.840.113549.1.12.1.3", "pbeWithSHAAnd3-KeyTripleDES-CBC");
vA("1.2.840.113549.1.12.1.4", "pbeWithSHAAnd2-KeyTripleDES-CBC");
vA("1.2.840.113549.1.12.1.5", "pbeWithSHAAnd128BitRC2-CBC");
vA("1.2.840.113549.1.12.1.6", "pbewithSHAAnd40BitRC2-CBC");
vA("1.2.840.113549.2.7", "hmacWithSHA1");
vA("1.2.840.113549.2.8", "hmacWithSHA224");
vA("1.2.840.113549.2.9", "hmacWithSHA256");
vA("1.2.840.113549.2.10", "hmacWithSHA384");
vA("1.2.840.113549.2.11", "hmacWithSHA512");
vA("1.2.840.113549.3.7", "des-EDE3-CBC");
vA("2.16.840.1.101.3.4.1.2", "aes128-CBC");
vA("2.16.840.1.101.3.4.1.22", "aes192-CBC");
vA("2.16.840.1.101.3.4.1.42", "aes256-CBC");
vA("2.5.4.3", "commonName");
vA("2.5.4.4", "surname");
vA("2.5.4.5", "serialNumber");
vA("2.5.4.6", "countryName");
vA("2.5.4.7", "localityName");
vA("2.5.4.8", "stateOrProvinceName");
vA("2.5.4.9", "streetAddress");
vA("2.5.4.10", "organizationName");
vA("2.5.4.11", "organizationalUnitName");
vA("2.5.4.12", "title");
vA("2.5.4.13", "description");
vA("2.5.4.15", "businessCategory");
vA("2.5.4.17", "postalCode");
vA("2.5.4.42", "givenName");
vA("1.3.6.1.4.1.311.60.2.1.2", "jurisdictionOfIncorporationStateOrProvinceName");
vA("1.3.6.1.4.1.311.60.2.1.3", "jurisdictionOfIncorporationCountryName");
vA("2.16.840.1.113730.1.1", "nsCertType");
vA("2.16.840.1.113730.1.13", "nsComment");
oB("2.5.29.1", "authorityKeyIdentifier");
oB("2.5.29.2", "keyAttributes");
oB("2.5.29.3", "certificatePolicies");
oB("2.5.29.4", "keyUsageRestriction");
oB("2.5.29.5", "policyMapping");
oB("2.5.29.6", "subtreesConstraint");
oB("2.5.29.7", "subjectAltName");
oB("2.5.29.8", "issuerAltName");
oB("2.5.29.9", "subjectDirectoryAttributes");
oB("2.5.29.10", "basicConstraints");
oB("2.5.29.11", "nameConstraints");
oB("2.5.29.12", "policyConstraints");
oB("2.5.29.13", "basicConstraints");
vA("2.5.29.14", "subjectKeyIdentifier");
vA("2.5.29.15", "keyUsage");
oB("2.5.29.16", "privateKeyUsagePeriod");
vA("2.5.29.17", "subjectAltName");
vA("2.5.29.18", "issuerAltName");
vA("2.5.29.19", "basicConstraints");
oB("2.5.29.20", "cRLNumber");
oB("2.5.29.21", "cRLReason");
oB("2.5.29.22", "expirationDate");
oB("2.5.29.23", "instructionCode");
oB("2.5.29.24", "invalidityDate");
oB("2.5.29.25", "cRLDistributionPoints");
oB("2.5.29.26", "issuingDistributionPoint");
oB("2.5.29.27", "deltaCRLIndicator");
oB("2.5.29.28", "issuingDistributionPoint");
oB("2.5.29.29", "certificateIssuer");
oB("2.5.29.30", "nameConstraints");
vA("2.5.29.31", "cRLDistributionPoints");
vA("2.5.29.32", "certificatePolicies");
oB("2.5.29.33", "policyMappings");
oB("2.5.29.34", "policyConstraints");
vA("2.5.29.35", "authorityKeyIdentifier");
oB("2.5.29.36", "policyConstraints");
vA("2.5.29.37", "extKeyUsage");
oB("2.5.29.46", "freshestCRL");
oB("2.5.29.54", "inhibitAnyPolicy");
vA("1.3.6.1.4.1.11129.2.4.2", "timestampList");
vA("1.3.6.1.5.5.7.1.1", "authorityInfoAccess");
vA("1.3.6.1.5.5.7.3.1", "serverAuth");
vA("1.3.6.1.5.5.7.3.2", "clientAuth");
vA("1.3.6.1.5.5.7.3.3", "codeSigning");
vA("1.3.6.1.5.5.7.3.4", "emailProtection");
vA("1.3.6.1.5.5.7.3.8", "timeStamping");
var RB = bg, OA = RB.asn1 = RB.asn1 || {};
OA.Class = {
  UNIVERSAL: 0,
  APPLICATION: 64,
  CONTEXT_SPECIFIC: 128,
  PRIVATE: 192
};
OA.Type = {
  NONE: 0,
  BOOLEAN: 1,
  INTEGER: 2,
  BITSTRING: 3,
  OCTETSTRING: 4,
  NULL: 5,
  OID: 6,
  ODESC: 7,
  EXTERNAL: 8,
  REAL: 9,
  ENUMERATED: 10,
  EMBEDDED: 11,
  UTF8: 12,
  ROID: 13,
  SEQUENCE: 16,
  SET: 17,
  PRINTABLESTRING: 19,
  IA5STRING: 22,
  UTCTIME: 23,
  GENERALIZEDTIME: 24,
  BMPSTRING: 30
};
OA.create = function(A, g, I, B, Q) {
  if (RB.util.isArray(B)) {
    for (var E = [], C = 0; C < B.length; ++C)
      B[C] !== void 0 && E.push(B[C]);
    B = E;
  }
  var o = {
    tagClass: A,
    type: g,
    constructed: I,
    composed: I || RB.util.isArray(B),
    value: B
  };
  return Q && "bitStringContents" in Q && (o.bitStringContents = Q.bitStringContents, o.original = OA.copy(o)), o;
};
OA.copy = function(A, g) {
  var I;
  if (RB.util.isArray(A)) {
    I = [];
    for (var B = 0; B < A.length; ++B)
      I.push(OA.copy(A[B], g));
    return I;
  }
  return typeof A == "string" ? A : (I = {
    tagClass: A.tagClass,
    type: A.type,
    constructed: A.constructed,
    composed: A.composed,
    value: OA.copy(A.value, g)
  }, g && !g.excludeBitStringContents && (I.bitStringContents = A.bitStringContents), I);
};
OA.equals = function(A, g, I) {
  if (RB.util.isArray(A)) {
    if (!RB.util.isArray(g) || A.length !== g.length)
      return !1;
    for (var B = 0; B < A.length; ++B)
      if (!OA.equals(A[B], g[B]))
        return !1;
    return !0;
  }
  if (typeof A != typeof g)
    return !1;
  if (typeof A == "string")
    return A === g;
  var Q = A.tagClass === g.tagClass && A.type === g.type && A.constructed === g.constructed && A.composed === g.composed && OA.equals(A.value, g.value);
  return I && I.includeBitStringContents && (Q = Q && A.bitStringContents === g.bitStringContents), Q;
};
OA.getBerValueLength = function(A) {
  var g = A.getByte();
  if (g !== 128) {
    var I, B = g & 128;
    return B ? I = A.getInt((g & 127) << 3) : I = g, I;
  }
};
function Re(A, g, I) {
  if (I > g) {
    var B = new Error("Too few bytes to parse DER.");
    throw B.available = A.length(), B.remaining = g, B.requested = I, B;
  }
}
var bd = function(A, g) {
  var I = A.getByte();
  if (g--, I !== 128) {
    var B, Q = I & 128;
    if (!Q)
      B = I;
    else {
      var E = I & 127;
      Re(A, g, E), B = A.getInt(E << 3);
    }
    if (B < 0)
      throw new Error("Negative length: " + B);
    return B;
  }
};
OA.fromDer = function(A, g) {
  g === void 0 && (g = {
    strict: !0,
    parseAllBytes: !0,
    decodeBitStrings: !0
  }), typeof g == "boolean" && (g = {
    strict: g,
    parseAllBytes: !0,
    decodeBitStrings: !0
  }), "strict" in g || (g.strict = !0), "parseAllBytes" in g || (g.parseAllBytes = !0), "decodeBitStrings" in g || (g.decodeBitStrings = !0), typeof A == "string" && (A = RB.util.createBuffer(A));
  var I = A.length(), B = vt(A, A.length(), 0, g);
  if (g.parseAllBytes && A.length() !== 0) {
    var Q = new Error("Unparsed DER bytes remain after ASN.1 parsing.");
    throw Q.byteCount = I, Q.remaining = A.length(), Q;
  }
  return B;
};
function vt(A, g, I, B) {
  var Q;
  Re(A, g, 2);
  var E = A.getByte();
  g--;
  var C = E & 192, o = E & 31;
  Q = A.length();
  var t = bd(A, g);
  if (g -= Q - A.length(), t !== void 0 && t > g) {
    if (B.strict) {
      var e = new Error("Too few bytes to read ASN.1 value.");
      throw e.available = A.length(), e.remaining = g, e.requested = t, e;
    }
    t = g;
  }
  var i, a, r = (E & 32) === 32;
  if (r)
    if (i = [], t === void 0)
      for (; ; ) {
        if (Re(A, g, 2), A.bytes(2) === "\0\0") {
          A.getBytes(2), g -= 2;
          break;
        }
        Q = A.length(), i.push(vt(A, g, I + 1, B)), g -= Q - A.length();
      }
    else
      for (; t > 0; )
        Q = A.length(), i.push(vt(A, t, I + 1, B)), g -= Q - A.length(), t -= Q - A.length();
  if (i === void 0 && C === OA.Class.UNIVERSAL && o === OA.Type.BITSTRING && (a = A.bytes(t)), i === void 0 && B.decodeBitStrings && C === OA.Class.UNIVERSAL && // FIXME: OCTET STRINGs not yet supported here
  // .. other parts of forge expect to decode OCTET STRINGs manually
  o === OA.Type.BITSTRING && t > 1) {
    var h = A.read, n = g, l = 0;
    if (o === OA.Type.BITSTRING && (Re(A, g, 1), l = A.getByte(), g--), l === 0)
      try {
        Q = A.length();
        var y = {
          // enforce strict mode to avoid parsing ASN.1 from plain data
          strict: !0,
          decodeBitStrings: !0
        }, N = vt(A, g, I + 1, y), s = Q - A.length();
        g -= s, o == OA.Type.BITSTRING && s++;
        var F = N.tagClass;
        s === t && (F === OA.Class.UNIVERSAL || F === OA.Class.CONTEXT_SPECIFIC) && (i = [N]);
      } catch {
      }
    i === void 0 && (A.read = h, g = n);
  }
  if (i === void 0) {
    if (t === void 0) {
      if (B.strict)
        throw new Error("Non-constructed ASN.1 object of indefinite length.");
      t = g;
    }
    if (o === OA.Type.BMPSTRING)
      for (i = ""; t > 0; t -= 2)
        Re(A, g, 2), i += String.fromCharCode(A.getInt16()), g -= 2;
    else
      i = A.getBytes(t), g -= t;
  }
  var u = a === void 0 ? null : {
    bitStringContents: a
  };
  return OA.create(C, o, r, i, u);
}
OA.toDer = function(A) {
  var g = RB.util.createBuffer(), I = A.tagClass | A.type, B = RB.util.createBuffer(), Q = !1;
  if ("bitStringContents" in A && (Q = !0, A.original && (Q = OA.equals(A, A.original))), Q)
    B.putBytes(A.bitStringContents);
  else if (A.composed) {
    A.constructed ? I |= 32 : B.putByte(0);
    for (var E = 0; E < A.value.length; ++E)
      A.value[E] !== void 0 && B.putBuffer(OA.toDer(A.value[E]));
  } else if (A.type === OA.Type.BMPSTRING)
    for (var E = 0; E < A.value.length; ++E)
      B.putInt16(A.value.charCodeAt(E));
  else
    A.type === OA.Type.INTEGER && A.value.length > 1 && // leading 0x00 for positive integer
    (A.value.charCodeAt(0) === 0 && !(A.value.charCodeAt(1) & 128) || // leading 0xFF for negative integer
    A.value.charCodeAt(0) === 255 && (A.value.charCodeAt(1) & 128) === 128) ? B.putBytes(A.value.substr(1)) : B.putBytes(A.value);
  if (g.putByte(I), B.length() <= 127)
    g.putByte(B.length() & 127);
  else {
    var C = B.length(), o = "";
    do
      o += String.fromCharCode(C & 255), C = C >>> 8;
    while (C > 0);
    g.putByte(o.length | 128);
    for (var E = o.length - 1; E >= 0; --E)
      g.putByte(o.charCodeAt(E));
  }
  return g.putBuffer(B), g;
};
OA.oidToDer = function(A) {
  var g = A.split("."), I = RB.util.createBuffer();
  I.putByte(40 * parseInt(g[0], 10) + parseInt(g[1], 10));
  for (var B, Q, E, C, o = 2; o < g.length; ++o) {
    B = !0, Q = [], E = parseInt(g[o], 10);
    do
      C = E & 127, E = E >>> 7, B || (C |= 128), Q.push(C), B = !1;
    while (E > 0);
    for (var t = Q.length - 1; t >= 0; --t)
      I.putByte(Q[t]);
  }
  return I;
};
OA.derToOid = function(A) {
  var g;
  typeof A == "string" && (A = RB.util.createBuffer(A));
  var I = A.getByte();
  g = Math.floor(I / 40) + "." + I % 40;
  for (var B = 0; A.length() > 0; )
    I = A.getByte(), B = B << 7, I & 128 ? B += I & 127 : (g += "." + (B + I), B = 0);
  return g;
};
OA.utcTimeToDate = function(A) {
  var g = /* @__PURE__ */ new Date(), I = parseInt(A.substr(0, 2), 10);
  I = I >= 50 ? 1900 + I : 2e3 + I;
  var B = parseInt(A.substr(2, 2), 10) - 1, Q = parseInt(A.substr(4, 2), 10), E = parseInt(A.substr(6, 2), 10), C = parseInt(A.substr(8, 2), 10), o = 0;
  if (A.length > 11) {
    var t = A.charAt(10), e = 10;
    t !== "+" && t !== "-" && (o = parseInt(A.substr(10, 2), 10), e += 2);
  }
  if (g.setUTCFullYear(I, B, Q), g.setUTCHours(E, C, o, 0), e && (t = A.charAt(e), t === "+" || t === "-")) {
    var i = parseInt(A.substr(e + 1, 2), 10), a = parseInt(A.substr(e + 4, 2), 10), r = i * 60 + a;
    r *= 6e4, t === "+" ? g.setTime(+g - r) : g.setTime(+g + r);
  }
  return g;
};
OA.generalizedTimeToDate = function(A) {
  var g = /* @__PURE__ */ new Date(), I = parseInt(A.substr(0, 4), 10), B = parseInt(A.substr(4, 2), 10) - 1, Q = parseInt(A.substr(6, 2), 10), E = parseInt(A.substr(8, 2), 10), C = parseInt(A.substr(10, 2), 10), o = parseInt(A.substr(12, 2), 10), t = 0, e = 0, i = !1;
  A.charAt(A.length - 1) === "Z" && (i = !0);
  var a = A.length - 5, r = A.charAt(a);
  if (r === "+" || r === "-") {
    var h = parseInt(A.substr(a + 1, 2), 10), n = parseInt(A.substr(a + 4, 2), 10);
    e = h * 60 + n, e *= 6e4, r === "+" && (e *= -1), i = !0;
  }
  return A.charAt(14) === "." && (t = parseFloat(A.substr(14), 10) * 1e3), i ? (g.setUTCFullYear(I, B, Q), g.setUTCHours(E, C, o, t), g.setTime(+g + e)) : (g.setFullYear(I, B, Q), g.setHours(E, C, o, t)), g;
};
OA.dateToUtcTime = function(A) {
  if (typeof A == "string")
    return A;
  var g = "", I = [];
  I.push(("" + A.getUTCFullYear()).substr(2)), I.push("" + (A.getUTCMonth() + 1)), I.push("" + A.getUTCDate()), I.push("" + A.getUTCHours()), I.push("" + A.getUTCMinutes()), I.push("" + A.getUTCSeconds());
  for (var B = 0; B < I.length; ++B)
    I[B].length < 2 && (g += "0"), g += I[B];
  return g += "Z", g;
};
OA.dateToGeneralizedTime = function(A) {
  if (typeof A == "string")
    return A;
  var g = "", I = [];
  I.push("" + A.getUTCFullYear()), I.push("" + (A.getUTCMonth() + 1)), I.push("" + A.getUTCDate()), I.push("" + A.getUTCHours()), I.push("" + A.getUTCMinutes()), I.push("" + A.getUTCSeconds());
  for (var B = 0; B < I.length; ++B)
    I[B].length < 2 && (g += "0"), g += I[B];
  return g += "Z", g;
};
OA.integerToDer = function(A) {
  var g = RB.util.createBuffer();
  if (A >= -128 && A < 128)
    return g.putSignedInt(A, 8);
  if (A >= -32768 && A < 32768)
    return g.putSignedInt(A, 16);
  if (A >= -8388608 && A < 8388608)
    return g.putSignedInt(A, 24);
  if (A >= -2147483648 && A < 2147483648)
    return g.putSignedInt(A, 32);
  var I = new Error("Integer too large; max is 32-bits.");
  throw I.integer = A, I;
};
OA.derToInteger = function(A) {
  typeof A == "string" && (A = RB.util.createBuffer(A));
  var g = A.length() * 8;
  if (g > 32)
    throw new Error("Integer too large; max is 32-bits.");
  return A.getSignedInt(g);
};
OA.validate = function(A, g, I, B) {
  var Q = !1;
  if ((A.tagClass === g.tagClass || typeof g.tagClass > "u") && (A.type === g.type || typeof g.type > "u"))
    if (A.constructed === g.constructed || typeof g.constructed > "u") {
      if (Q = !0, g.value && RB.util.isArray(g.value))
        for (var E = 0, C = 0; Q && C < g.value.length; ++C)
          Q = g.value[C].optional || !1, A.value[E] && (Q = OA.validate(A.value[E], g.value[C], I, B), Q ? ++E : g.value[C].optional && (Q = !0)), !Q && B && B.push(
            "[" + g.name + '] Tag class "' + g.tagClass + '", type "' + g.type + '" expected value length "' + g.value.length + '", got "' + A.value.length + '"'
          );
      if (Q && I && (g.capture && (I[g.capture] = A.value), g.captureAsn1 && (I[g.captureAsn1] = A), g.captureBitStringContents && "bitStringContents" in A && (I[g.captureBitStringContents] = A.bitStringContents), g.captureBitStringValue && "bitStringContents" in A))
        if (A.bitStringContents.length < 2)
          I[g.captureBitStringValue] = "";
        else {
          var o = A.bitStringContents.charCodeAt(0);
          if (o !== 0)
            throw new Error(
              "captureBitStringValue only supported for zero unused bits"
            );
          I[g.captureBitStringValue] = A.bitStringContents.slice(1);
        }
    } else B && B.push(
      "[" + g.name + '] Expected constructed "' + g.constructed + '", got "' + A.constructed + '"'
    );
  else B && (A.tagClass !== g.tagClass && B.push(
    "[" + g.name + '] Expected tag class "' + g.tagClass + '", got "' + A.tagClass + '"'
  ), A.type !== g.type && B.push(
    "[" + g.name + '] Expected type "' + g.type + '", got "' + A.type + '"'
  ));
  return Q;
};
var Tn = /[^\\u0000-\\u00ff]/;
OA.prettyPrint = function(A, g, I) {
  var B = "";
  g = g || 0, I = I || 2, g > 0 && (B += `
`);
  for (var Q = "", E = 0; E < g * I; ++E)
    Q += " ";
  switch (B += Q + "Tag: ", A.tagClass) {
    case OA.Class.UNIVERSAL:
      B += "Universal:";
      break;
    case OA.Class.APPLICATION:
      B += "Application:";
      break;
    case OA.Class.CONTEXT_SPECIFIC:
      B += "Context-Specific:";
      break;
    case OA.Class.PRIVATE:
      B += "Private:";
      break;
  }
  if (A.tagClass === OA.Class.UNIVERSAL)
    switch (B += A.type, A.type) {
      case OA.Type.NONE:
        B += " (None)";
        break;
      case OA.Type.BOOLEAN:
        B += " (Boolean)";
        break;
      case OA.Type.INTEGER:
        B += " (Integer)";
        break;
      case OA.Type.BITSTRING:
        B += " (Bit string)";
        break;
      case OA.Type.OCTETSTRING:
        B += " (Octet string)";
        break;
      case OA.Type.NULL:
        B += " (Null)";
        break;
      case OA.Type.OID:
        B += " (Object Identifier)";
        break;
      case OA.Type.ODESC:
        B += " (Object Descriptor)";
        break;
      case OA.Type.EXTERNAL:
        B += " (External or Instance of)";
        break;
      case OA.Type.REAL:
        B += " (Real)";
        break;
      case OA.Type.ENUMERATED:
        B += " (Enumerated)";
        break;
      case OA.Type.EMBEDDED:
        B += " (Embedded PDV)";
        break;
      case OA.Type.UTF8:
        B += " (UTF8)";
        break;
      case OA.Type.ROID:
        B += " (Relative Object Identifier)";
        break;
      case OA.Type.SEQUENCE:
        B += " (Sequence)";
        break;
      case OA.Type.SET:
        B += " (Set)";
        break;
      case OA.Type.PRINTABLESTRING:
        B += " (Printable String)";
        break;
      case OA.Type.IA5String:
        B += " (IA5String (ASCII))";
        break;
      case OA.Type.UTCTIME:
        B += " (UTC time)";
        break;
      case OA.Type.GENERALIZEDTIME:
        B += " (Generalized time)";
        break;
      case OA.Type.BMPSTRING:
        B += " (BMP String)";
        break;
    }
  else
    B += A.type;
  if (B += `
`, B += Q + "Constructed: " + A.constructed + `
`, A.composed) {
    for (var C = 0, o = "", E = 0; E < A.value.length; ++E)
      A.value[E] !== void 0 && (C += 1, o += OA.prettyPrint(A.value[E], g + 1, I), E + 1 < A.value.length && (o += ","));
    B += Q + "Sub values: " + C + o;
  } else {
    if (B += Q + "Value: ", A.type === OA.Type.OID) {
      var t = OA.derToOid(A.value);
      B += t, RB.pki && RB.pki.oids && t in RB.pki.oids && (B += " (" + RB.pki.oids[t] + ") ");
    }
    if (A.type === OA.Type.INTEGER)
      try {
        B += OA.derToInteger(A.value);
      } catch {
        B += "0x" + RB.util.bytesToHex(A.value);
      }
    else if (A.type === OA.Type.BITSTRING) {
      if (A.value.length > 1 ? B += "0x" + RB.util.bytesToHex(A.value.slice(1)) : B += "(none)", A.value.length > 0) {
        var e = A.value.charCodeAt(0);
        e == 1 ? B += " (1 unused bit shown)" : e > 1 && (B += " (" + e + " unused bits shown)");
      }
    } else if (A.type === OA.Type.OCTETSTRING)
      Tn.test(A.value) || (B += "(" + A.value + ") "), B += "0x" + RB.util.bytesToHex(A.value);
    else if (A.type === OA.Type.UTF8)
      try {
        B += RB.util.decodeUtf8(A.value);
      } catch (i) {
        if (i.message === "URI malformed")
          B += "0x" + RB.util.bytesToHex(A.value) + " (malformed UTF8)";
        else
          throw i;
      }
    else A.type === OA.Type.PRINTABLESTRING || A.type === OA.Type.IA5String ? B += A.value : Tn.test(A.value) ? B += "0x" + RB.util.bytesToHex(A.value) : A.value.length === 0 ? B += "[null]" : B += A.value;
  }
  return B;
};
var Ii = bg;
Ii.md = Ii.md || {};
Ii.md.algorithms = Ii.md.algorithms || {};
var kQ = bg, Zd = kQ.hmac = kQ.hmac || {};
Zd.create = function() {
  var A = null, g = null, I = null, B = null, Q = {};
  return Q.start = function(E, C) {
    if (E !== null)
      if (typeof E == "string")
        if (E = E.toLowerCase(), E in kQ.md.algorithms)
          g = kQ.md.algorithms[E].create();
        else
          throw new Error('Unknown hash algorithm "' + E + '"');
      else
        g = E;
    if (C === null)
      C = A;
    else {
      if (typeof C == "string")
        C = kQ.util.createBuffer(C);
      else if (kQ.util.isArray(C)) {
        var o = C;
        C = kQ.util.createBuffer();
        for (var t = 0; t < o.length; ++t)
          C.putByte(o[t]);
      }
      var e = C.length();
      e > g.blockLength && (g.start(), g.update(C.bytes()), C = g.digest()), I = kQ.util.createBuffer(), B = kQ.util.createBuffer(), e = C.length();
      for (var t = 0; t < e; ++t) {
        var o = C.at(t);
        I.putByte(54 ^ o), B.putByte(92 ^ o);
      }
      if (e < g.blockLength)
        for (var o = g.blockLength - e, t = 0; t < o; ++t)
          I.putByte(54), B.putByte(92);
      A = C, I = I.bytes(), B = B.bytes();
    }
    g.start(), g.update(I);
  }, Q.update = function(E) {
    g.update(E);
  }, Q.getMac = function() {
    var E = g.digest().bytes();
    return g.start(), g.update(B), g.update(E), g.digest();
  }, Q.digest = Q.getMac, Q;
};
var nQ = bg, h0 = nQ.md5 = nQ.md5 || {};
nQ.md.md5 = nQ.md.algorithms.md5 = h0;
h0.create = function() {
  l0 || Td();
  var A = null, g = nQ.util.createBuffer(), I = new Array(16), B = {
    algorithm: "md5",
    blockLength: 64,
    digestLength: 16,
    // 56-bit length of message so far (does not including padding)
    messageLength: 0,
    // true message length
    fullMessageLength: null,
    // size of message length in bytes
    messageLengthSize: 8
  };
  return B.start = function() {
    B.messageLength = 0, B.fullMessageLength = B.messageLength64 = [];
    for (var Q = B.messageLengthSize / 4, E = 0; E < Q; ++E)
      B.fullMessageLength.push(0);
    return g = nQ.util.createBuffer(), A = {
      h0: 1732584193,
      h1: 4023233417,
      h2: 2562383102,
      h3: 271733878
    }, B;
  }, B.start(), B.update = function(Q, E) {
    E === "utf8" && (Q = nQ.util.encodeUtf8(Q));
    var C = Q.length;
    B.messageLength += C, C = [C / 4294967296 >>> 0, C >>> 0];
    for (var o = B.fullMessageLength.length - 1; o >= 0; --o)
      B.fullMessageLength[o] += C[1], C[1] = C[0] + (B.fullMessageLength[o] / 4294967296 >>> 0), B.fullMessageLength[o] = B.fullMessageLength[o] >>> 0, C[0] = C[1] / 4294967296 >>> 0;
    return g.putBytes(Q), Xn(A, I, g), (g.read > 2048 || g.length() === 0) && g.compact(), B;
  }, B.digest = function() {
    var Q = nQ.util.createBuffer();
    Q.putBytes(g.bytes());
    var E = B.fullMessageLength[B.fullMessageLength.length - 1] + B.messageLengthSize, C = E & B.blockLength - 1;
    Q.putBytes(Ia.substr(0, B.blockLength - C));
    for (var o, t = 0, e = B.fullMessageLength.length - 1; e >= 0; --e)
      o = B.fullMessageLength[e] * 8 + t, t = o / 4294967296 >>> 0, Q.putInt32Le(o >>> 0);
    var i = {
      h0: A.h0,
      h1: A.h1,
      h2: A.h2,
      h3: A.h3
    };
    Xn(i, I, Q);
    var a = nQ.util.createBuffer();
    return a.putInt32Le(i.h0), a.putInt32Le(i.h1), a.putInt32Le(i.h2), a.putInt32Le(i.h3), a;
  }, B;
};
var Ia = null, bt = null, fe = null, DC = null, l0 = !1;
function Td() {
  Ia = "", Ia += nQ.util.fillString("\0", 64), bt = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    1,
    6,
    11,
    0,
    5,
    10,
    15,
    4,
    9,
    14,
    3,
    8,
    13,
    2,
    7,
    12,
    5,
    8,
    11,
    14,
    1,
    4,
    7,
    10,
    13,
    0,
    3,
    6,
    9,
    12,
    15,
    2,
    0,
    7,
    14,
    5,
    12,
    3,
    10,
    1,
    8,
    15,
    6,
    13,
    4,
    11,
    2,
    9
  ], fe = [
    7,
    12,
    17,
    22,
    7,
    12,
    17,
    22,
    7,
    12,
    17,
    22,
    7,
    12,
    17,
    22,
    5,
    9,
    14,
    20,
    5,
    9,
    14,
    20,
    5,
    9,
    14,
    20,
    5,
    9,
    14,
    20,
    4,
    11,
    16,
    23,
    4,
    11,
    16,
    23,
    4,
    11,
    16,
    23,
    4,
    11,
    16,
    23,
    6,
    10,
    15,
    21,
    6,
    10,
    15,
    21,
    6,
    10,
    15,
    21,
    6,
    10,
    15,
    21
  ], DC = new Array(64);
  for (var A = 0; A < 64; ++A)
    DC[A] = Math.floor(Math.abs(Math.sin(A + 1)) * 4294967296);
  l0 = !0;
}
function Xn(A, g, I) {
  for (var B, Q, E, C, o, t, e, i, a = I.length(); a >= 64; ) {
    for (Q = A.h0, E = A.h1, C = A.h2, o = A.h3, i = 0; i < 16; ++i)
      g[i] = I.getInt32Le(), t = o ^ E & (C ^ o), B = Q + t + DC[i] + g[i], e = fe[i], Q = o, o = C, C = E, E += B << e | B >>> 32 - e;
    for (; i < 32; ++i)
      t = C ^ o & (E ^ C), B = Q + t + DC[i] + g[bt[i]], e = fe[i], Q = o, o = C, C = E, E += B << e | B >>> 32 - e;
    for (; i < 48; ++i)
      t = E ^ C ^ o, B = Q + t + DC[i] + g[bt[i]], e = fe[i], Q = o, o = C, C = E, E += B << e | B >>> 32 - e;
    for (; i < 64; ++i)
      t = C ^ (E | ~o), B = Q + t + DC[i] + g[bt[i]], e = fe[i], Q = o, o = C, C = E, E += B << e | B >>> 32 - e;
    A.h0 = A.h0 + Q | 0, A.h1 = A.h1 + E | 0, A.h2 = A.h2 + C | 0, A.h3 = A.h3 + o | 0, a -= 64;
  }
}
var Qi = bg, y0 = Qi.pem = Qi.pem || {};
y0.encode = function(A, g) {
  g = g || {};
  var I = "-----BEGIN " + A.type + `-----\r
`, B;
  if (A.procType && (B = {
    name: "Proc-Type",
    values: [String(A.procType.version), A.procType.type]
  }, I += Rt(B)), A.contentDomain && (B = { name: "Content-Domain", values: [A.contentDomain] }, I += Rt(B)), A.dekInfo && (B = { name: "DEK-Info", values: [A.dekInfo.algorithm] }, A.dekInfo.parameters && B.values.push(A.dekInfo.parameters), I += Rt(B)), A.headers)
    for (var Q = 0; Q < A.headers.length; ++Q)
      I += Rt(A.headers[Q]);
  return A.procType && (I += `\r
`), I += Qi.util.encode64(A.body, g.maxline || 64) + `\r
`, I += "-----END " + A.type + `-----\r
`, I;
};
y0.decode = function(A) {
  for (var g = [], I = /\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g, B = /([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/, Q = /\r?\n/, E; E = I.exec(A), !!E; ) {
    var C = E[1];
    C === "NEW CERTIFICATE REQUEST" && (C = "CERTIFICATE REQUEST");
    var o = {
      type: C,
      procType: null,
      contentDomain: null,
      dekInfo: null,
      headers: [],
      body: Qi.util.decode64(E[3])
    };
    if (g.push(o), !!E[2]) {
      for (var t = E[2].split(Q), e = 0; E && e < t.length; ) {
        for (var i = t[e].replace(/\s+$/, ""), a = e + 1; a < t.length; ++a) {
          var r = t[a];
          if (!/\s/.test(r[0]))
            break;
          i += r, e = a;
        }
        if (E = i.match(B), E) {
          for (var h = { name: E[1], values: [] }, n = E[2].split(","), l = 0; l < n.length; ++l)
            h.values.push(Xd(n[l]));
          if (o.procType)
            if (!o.contentDomain && h.name === "Content-Domain")
              o.contentDomain = n[0] || "";
            else if (!o.dekInfo && h.name === "DEK-Info") {
              if (h.values.length === 0)
                throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');
              o.dekInfo = { algorithm: n[0], parameters: n[1] || null };
            } else
              o.headers.push(h);
          else {
            if (h.name !== "Proc-Type")
              throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');
            if (h.values.length !== 2)
              throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');
            o.procType = { version: n[0], type: n[1] };
          }
        }
        ++e;
      }
      if (o.procType === "ENCRYPTED" && !o.dekInfo)
        throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".');
    }
  }
  if (g.length === 0)
    throw new Error("Invalid PEM formatted message.");
  return g;
};
function Rt(A) {
  for (var g = A.name + ": ", I = [], B = function(t, e) {
    return " " + e;
  }, Q = 0; Q < A.values.length; ++Q)
    I.push(A.values[Q].replace(/^(\S+\r\n)/, B));
  g += I.join(",") + `\r
`;
  for (var E = 0, C = -1, Q = 0; Q < g.length; ++Q, ++E)
    if (E > 65 && C !== -1) {
      var o = g[C];
      o === "," ? (++C, g = g.substr(0, C) + `\r
 ` + g.substr(C)) : g = g.substr(0, C) + `\r
` + o + g.substr(C + 1), E = Q - C - 1, C = -1, ++Q;
    } else (g[Q] === " " || g[Q] === "	" || g[Q] === ",") && (C = Q);
  return g;
}
function Xd(A) {
  return A.replace(/^\s+/, "");
}
var MB = bg;
MB.des = MB.des || {};
MB.des.startEncrypting = function(A, g, I, B) {
  var Q = ui({
    key: A,
    output: I,
    decrypt: !1,
    mode: B || (g === null ? "ECB" : "CBC")
  });
  return Q.start(g), Q;
};
MB.des.createEncryptionCipher = function(A, g) {
  return ui({
    key: A,
    output: null,
    decrypt: !1,
    mode: g
  });
};
MB.des.startDecrypting = function(A, g, I, B) {
  var Q = ui({
    key: A,
    output: I,
    decrypt: !0,
    mode: B || (g === null ? "ECB" : "CBC")
  });
  return Q.start(g), Q;
};
MB.des.createDecryptionCipher = function(A, g) {
  return ui({
    key: A,
    output: null,
    decrypt: !0,
    mode: g
  });
};
MB.des.Algorithm = function(A, g) {
  var I = this;
  I.name = A, I.mode = new g({
    blockSize: 8,
    cipher: {
      encrypt: function(B, Q) {
        return zn(I._keys, B, Q, !1);
      },
      decrypt: function(B, Q) {
        return zn(I._keys, B, Q, !0);
      }
    }
  }), I._init = !1;
};
MB.des.Algorithm.prototype.initialize = function(A) {
  if (!this._init) {
    var g = MB.util.createBuffer(A.key);
    if (this.name.indexOf("3DES") === 0 && g.length() !== 24)
      throw new Error("Invalid Triple-DES key size: " + g.length() * 8);
    this._keys = $d(g), this._init = !0;
  }
};
yQ("DES-ECB", MB.cipher.modes.ecb);
yQ("DES-CBC", MB.cipher.modes.cbc);
yQ("DES-CFB", MB.cipher.modes.cfb);
yQ("DES-OFB", MB.cipher.modes.ofb);
yQ("DES-CTR", MB.cipher.modes.ctr);
yQ("3DES-ECB", MB.cipher.modes.ecb);
yQ("3DES-CBC", MB.cipher.modes.cbc);
yQ("3DES-CFB", MB.cipher.modes.cfb);
yQ("3DES-OFB", MB.cipher.modes.ofb);
yQ("3DES-CTR", MB.cipher.modes.ctr);
function yQ(A, g) {
  var I = function() {
    return new MB.des.Algorithm(A, g);
  };
  MB.cipher.registerAlgorithm(A, I);
}
var zd = [16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028, 16778240, 16778240, 0, 65540, 66560, 0, 16842756], Vd = [-2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576, -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344], qd = [520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584], Pd = [8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193, 8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928], Wd = [256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976, 1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976, 1073742080], Od = [536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704, 541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0, 541081600, 536870912, 4194320, 536887312], jd = [2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016, 2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154], _d = [268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520, 268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456, 268701696];
function $d(A) {
  for (var g = [0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512, 516, 536871424, 536871428, 66048, 66052, 536936960, 536936964], I = [0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256, 257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697], B = [0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272], Q = [0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920, 136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416, 134356992, 136454144], E = [0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112, 266256, 4096, 266240, 4112, 266256], C = [0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464, 33555488, 33554432, 33555456, 33554464, 33555488], o = [0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746], t = [0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496, 131072, 196608, 133120, 198656, 537001984, 537067520, 537004032, 537069568], e = [0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576, 33554432, 33816576, 33554434, 33816578, 33554434, 33816578], i = [0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024, 268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488], a = [0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192, 8224, 1056768, 1056800, 1056768, 1056800], r = [0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880, 67108864, 83886080, 67109376, 83886592, 69206016, 85983232, 69206528, 85983744], h = [0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112, 16, 4112, 134217744, 134221840, 524304, 528400, 134742032, 134746128], n = [0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261], l = A.length() > 8 ? 3 : 1, y = [], N = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], s = 0, F, u = 0; u < l; u++) {
    var U = A.getInt32(), J = A.getInt32();
    F = (U >>> 4 ^ J) & 252645135, J ^= F, U ^= F << 4, F = (J >>> -16 ^ U) & 65535, U ^= F, J ^= F << -16, F = (U >>> 2 ^ J) & 858993459, J ^= F, U ^= F << 2, F = (J >>> -16 ^ U) & 65535, U ^= F, J ^= F << -16, F = (U >>> 1 ^ J) & 1431655765, J ^= F, U ^= F << 1, F = (J >>> 8 ^ U) & 16711935, U ^= F, J ^= F << 8, F = (U >>> 1 ^ J) & 1431655765, J ^= F, U ^= F << 1, F = U << 8 | J >>> 20 & 240, U = J << 24 | J << 8 & 16711680 | J >>> 8 & 65280 | J >>> 24 & 240, J = F;
    for (var L = 0; L < N.length; ++L) {
      N[L] ? (U = U << 2 | U >>> 26, J = J << 2 | J >>> 26) : (U = U << 1 | U >>> 27, J = J << 1 | J >>> 27), U &= -15, J &= -15;
      var f = g[U >>> 28] | I[U >>> 24 & 15] | B[U >>> 20 & 15] | Q[U >>> 16 & 15] | E[U >>> 12 & 15] | C[U >>> 8 & 15] | o[U >>> 4 & 15], d = t[J >>> 28] | e[J >>> 24 & 15] | i[J >>> 20 & 15] | a[J >>> 16 & 15] | r[J >>> 12 & 15] | h[J >>> 8 & 15] | n[J >>> 4 & 15];
      F = (d >>> 16 ^ f) & 65535, y[s++] = f ^ F, y[s++] = d ^ F << 16;
    }
  }
  return y;
}
function zn(A, g, I, B) {
  var Q = A.length === 32 ? 3 : 9, E;
  Q === 3 ? E = B ? [30, -2, -2] : [0, 32, 2] : E = B ? [94, 62, -2, 32, 64, 2, 30, -2, -2] : [0, 32, 2, 62, 30, -2, 64, 96, 2];
  var C, o = g[0], t = g[1];
  C = (o >>> 4 ^ t) & 252645135, t ^= C, o ^= C << 4, C = (o >>> 16 ^ t) & 65535, t ^= C, o ^= C << 16, C = (t >>> 2 ^ o) & 858993459, o ^= C, t ^= C << 2, C = (t >>> 8 ^ o) & 16711935, o ^= C, t ^= C << 8, C = (o >>> 1 ^ t) & 1431655765, t ^= C, o ^= C << 1, o = o << 1 | o >>> 31, t = t << 1 | t >>> 31;
  for (var e = 0; e < Q; e += 3) {
    for (var i = E[e + 1], a = E[e + 2], r = E[e]; r != i; r += a) {
      var h = t ^ A[r], n = (t >>> 4 | t << 28) ^ A[r + 1];
      C = o, o = t, t = C ^ (Vd[h >>> 24 & 63] | Pd[h >>> 16 & 63] | Od[h >>> 8 & 63] | _d[h & 63] | zd[n >>> 24 & 63] | qd[n >>> 16 & 63] | Wd[n >>> 8 & 63] | jd[n & 63]);
    }
    C = o, o = t, t = C;
  }
  o = o >>> 1 | o << 31, t = t >>> 1 | t << 31, C = (o >>> 1 ^ t) & 1431655765, t ^= C, o ^= C << 1, C = (t >>> 8 ^ o) & 16711935, o ^= C, t ^= C << 8, C = (t >>> 2 ^ o) & 858993459, o ^= C, t ^= C << 2, C = (o >>> 16 ^ t) & 65535, t ^= C, o ^= C << 16, C = (o >>> 4 ^ t) & 252645135, t ^= C, o ^= C << 4, I[0] = o, I[1] = t;
}
function ui(A) {
  A = A || {};
  var g = (A.mode || "CBC").toUpperCase(), I = "DES-" + g, B;
  A.decrypt ? B = MB.cipher.createDecipher(I, A.key) : B = MB.cipher.createCipher(I, A.key);
  var Q = B.start;
  return B.start = function(E, C) {
    var o = null;
    C instanceof MB.util.ByteBuffer && (o = C, C = {}), C = C || {}, C.output = o, C.iv = E, Q.call(B, C);
  }, B;
}
var nI = bg, AF = nI.pkcs5 = nI.pkcs5 || {}, NQ;
nI.util.isNodejs && !nI.options.usePureJavaScript && (NQ = Yr());
nI.pbkdf2 = AF.pbkdf2 = function(A, g, I, B, Q, E) {
  if (typeof Q == "function" && (E = Q, Q = null), nI.util.isNodejs && !nI.options.usePureJavaScript && NQ.pbkdf2 && (Q === null || typeof Q != "object") && (NQ.pbkdf2Sync.length > 4 || !Q || Q === "sha1"))
    return typeof Q != "string" && (Q = "sha1"), A = FB.from(A, "binary"), g = FB.from(g, "binary"), E ? NQ.pbkdf2Sync.length === 4 ? NQ.pbkdf2(A, g, I, B, function(F, u) {
      if (F)
        return E(F);
      E(null, u.toString("binary"));
    }) : NQ.pbkdf2(A, g, I, B, Q, function(F, u) {
      if (F)
        return E(F);
      E(null, u.toString("binary"));
    }) : NQ.pbkdf2Sync.length === 4 ? NQ.pbkdf2Sync(A, g, I, B).toString("binary") : NQ.pbkdf2Sync(A, g, I, B, Q).toString("binary");
  if ((typeof Q > "u" || Q === null) && (Q = "sha1"), typeof Q == "string") {
    if (!(Q in nI.md.algorithms))
      throw new Error("Unknown hash algorithm: " + Q);
    Q = nI.md[Q].create();
  }
  var C = Q.digestLength;
  if (B > 4294967295 * C) {
    var o = new Error("Derived key is too long.");
    if (E)
      return E(o);
    throw o;
  }
  var t = Math.ceil(B / C), e = B - (t - 1) * C, i = nI.hmac.create();
  i.start(Q, A);
  var a = "", r, h, n;
  if (!E) {
    for (var l = 1; l <= t; ++l) {
      i.start(null, null), i.update(g), i.update(nI.util.int32ToBytes(l)), r = n = i.digest().getBytes();
      for (var y = 2; y <= I; ++y)
        i.start(null, null), i.update(n), h = i.digest().getBytes(), r = nI.util.xorBytes(r, h, C), n = h;
      a += l < t ? r : r.substr(0, e);
    }
    return a;
  }
  var l = 1, y;
  function N() {
    if (l > t)
      return E(null, a);
    i.start(null, null), i.update(g), i.update(nI.util.int32ToBytes(l)), r = n = i.digest().getBytes(), y = 2, s();
  }
  function s() {
    if (y <= I)
      return i.start(null, null), i.update(n), h = i.digest().getBytes(), r = nI.util.xorBytes(r, h, C), n = h, ++y, nI.util.setImmediate(s);
    a += l < t ? r : r.substr(0, e), ++l, N();
  }
  N();
};
var cQ = bg, w0 = cQ.sha256 = cQ.sha256 || {};
cQ.md.sha256 = cQ.md.algorithms.sha256 = w0;
w0.create = function() {
  d0 || gF();
  var A = null, g = cQ.util.createBuffer(), I = new Array(64), B = {
    algorithm: "sha256",
    blockLength: 64,
    digestLength: 32,
    // 56-bit length of message so far (does not including padding)
    messageLength: 0,
    // true message length
    fullMessageLength: null,
    // size of message length in bytes
    messageLengthSize: 8
  };
  return B.start = function() {
    B.messageLength = 0, B.fullMessageLength = B.messageLength64 = [];
    for (var Q = B.messageLengthSize / 4, E = 0; E < Q; ++E)
      B.fullMessageLength.push(0);
    return g = cQ.util.createBuffer(), A = {
      h0: 1779033703,
      h1: 3144134277,
      h2: 1013904242,
      h3: 2773480762,
      h4: 1359893119,
      h5: 2600822924,
      h6: 528734635,
      h7: 1541459225
    }, B;
  }, B.start(), B.update = function(Q, E) {
    E === "utf8" && (Q = cQ.util.encodeUtf8(Q));
    var C = Q.length;
    B.messageLength += C, C = [C / 4294967296 >>> 0, C >>> 0];
    for (var o = B.fullMessageLength.length - 1; o >= 0; --o)
      B.fullMessageLength[o] += C[1], C[1] = C[0] + (B.fullMessageLength[o] / 4294967296 >>> 0), B.fullMessageLength[o] = B.fullMessageLength[o] >>> 0, C[0] = C[1] / 4294967296 >>> 0;
    return g.putBytes(Q), Vn(A, I, g), (g.read > 2048 || g.length() === 0) && g.compact(), B;
  }, B.digest = function() {
    var Q = cQ.util.createBuffer();
    Q.putBytes(g.bytes());
    var E = B.fullMessageLength[B.fullMessageLength.length - 1] + B.messageLengthSize, C = E & B.blockLength - 1;
    Q.putBytes(Qa.substr(0, B.blockLength - C));
    for (var o, t, e = B.fullMessageLength[0] * 8, i = 0; i < B.fullMessageLength.length - 1; ++i)
      o = B.fullMessageLength[i + 1] * 8, t = o / 4294967296 >>> 0, e += t, Q.putInt32(e >>> 0), e = o >>> 0;
    Q.putInt32(e);
    var a = {
      h0: A.h0,
      h1: A.h1,
      h2: A.h2,
      h3: A.h3,
      h4: A.h4,
      h5: A.h5,
      h6: A.h6,
      h7: A.h7
    };
    Vn(a, I, Q);
    var r = cQ.util.createBuffer();
    return r.putInt32(a.h0), r.putInt32(a.h1), r.putInt32(a.h2), r.putInt32(a.h3), r.putInt32(a.h4), r.putInt32(a.h5), r.putInt32(a.h6), r.putInt32(a.h7), r;
  }, B;
};
var Qa = null, d0 = !1, F0 = null;
function gF() {
  Qa = "", Qa += cQ.util.fillString("\0", 64), F0 = [
    1116352408,
    1899447441,
    3049323471,
    3921009573,
    961987163,
    1508970993,
    2453635748,
    2870763221,
    3624381080,
    310598401,
    607225278,
    1426881987,
    1925078388,
    2162078206,
    2614888103,
    3248222580,
    3835390401,
    4022224774,
    264347078,
    604807628,
    770255983,
    1249150122,
    1555081692,
    1996064986,
    2554220882,
    2821834349,
    2952996808,
    3210313671,
    3336571891,
    3584528711,
    113926993,
    338241895,
    666307205,
    773529912,
    1294757372,
    1396182291,
    1695183700,
    1986661051,
    2177026350,
    2456956037,
    2730485921,
    2820302411,
    3259730800,
    3345764771,
    3516065817,
    3600352804,
    4094571909,
    275423344,
    430227734,
    506948616,
    659060556,
    883997877,
    958139571,
    1322822218,
    1537002063,
    1747873779,
    1955562222,
    2024104815,
    2227730452,
    2361852424,
    2428436474,
    2756734187,
    3204031479,
    3329325298
  ], d0 = !0;
}
function Vn(A, g, I) {
  for (var B, Q, E, C, o, t, e, i, a, r, h, n, l, y, N, s = I.length(); s >= 64; ) {
    for (e = 0; e < 16; ++e)
      g[e] = I.getInt32();
    for (; e < 64; ++e)
      B = g[e - 2], B = (B >>> 17 | B << 15) ^ (B >>> 19 | B << 13) ^ B >>> 10, Q = g[e - 15], Q = (Q >>> 7 | Q << 25) ^ (Q >>> 18 | Q << 14) ^ Q >>> 3, g[e] = B + g[e - 7] + Q + g[e - 16] | 0;
    for (i = A.h0, a = A.h1, r = A.h2, h = A.h3, n = A.h4, l = A.h5, y = A.h6, N = A.h7, e = 0; e < 64; ++e)
      C = (n >>> 6 | n << 26) ^ (n >>> 11 | n << 21) ^ (n >>> 25 | n << 7), o = y ^ n & (l ^ y), E = (i >>> 2 | i << 30) ^ (i >>> 13 | i << 19) ^ (i >>> 22 | i << 10), t = i & a | r & (i ^ a), B = N + C + o + F0[e] + g[e], Q = E + t, N = y, y = l, l = n, n = h + B >>> 0, h = r, r = a, a = i, i = B + Q >>> 0;
    A.h0 = A.h0 + i | 0, A.h1 = A.h1 + a | 0, A.h2 = A.h2 + r | 0, A.h3 = A.h3 + h | 0, A.h4 = A.h4 + n | 0, A.h5 = A.h5 + l | 0, A.h6 = A.h6 + y | 0, A.h7 = A.h7 + N | 0, s -= 64;
  }
}
var aQ = bg, Zt = null;
aQ.util.isNodejs && !aQ.options.usePureJavaScript && !PA.versions["node-webkit"] && (Zt = Yr());
var BF = aQ.prng = aQ.prng || {};
BF.create = function(A) {
  for (var g = {
    plugin: A,
    key: null,
    seed: null,
    time: null,
    // number of reseeds so far
    reseeds: 0,
    // amount of data generated so far
    generated: 0,
    // no initial key bytes
    keyBytes: ""
  }, I = A.md, B = new Array(32), Q = 0; Q < 32; ++Q)
    B[Q] = I.create();
  g.pools = B, g.pool = 0, g.generate = function(e, i) {
    if (!i)
      return g.generateSync(e);
    var a = g.plugin.cipher, r = g.plugin.increment, h = g.plugin.formatKey, n = g.plugin.formatSeed, l = aQ.util.createBuffer();
    g.key = null, y();
    function y(N) {
      if (N)
        return i(N);
      if (l.length() >= e)
        return i(null, l.getBytes(e));
      if (g.generated > 1048575 && (g.key = null), g.key === null)
        return aQ.util.nextTick(function() {
          E(y);
        });
      var s = a(g.key, g.seed);
      g.generated += s.length, l.putBytes(s), g.key = h(a(g.key, r(g.seed))), g.seed = n(a(g.key, g.seed)), aQ.util.setImmediate(y);
    }
  }, g.generateSync = function(e) {
    var i = g.plugin.cipher, a = g.plugin.increment, r = g.plugin.formatKey, h = g.plugin.formatSeed;
    g.key = null;
    for (var n = aQ.util.createBuffer(); n.length() < e; ) {
      g.generated > 1048575 && (g.key = null), g.key === null && C();
      var l = i(g.key, g.seed);
      g.generated += l.length, n.putBytes(l), g.key = r(i(g.key, a(g.seed))), g.seed = h(i(g.key, g.seed));
    }
    return n.getBytes(e);
  };
  function E(e) {
    if (g.pools[0].messageLength >= 32)
      return o(), e();
    var i = 32 - g.pools[0].messageLength << 5;
    g.seedFile(i, function(a, r) {
      if (a)
        return e(a);
      g.collect(r), o(), e();
    });
  }
  function C() {
    if (g.pools[0].messageLength >= 32)
      return o();
    var e = 32 - g.pools[0].messageLength << 5;
    g.collect(g.seedFileSync(e)), o();
  }
  function o() {
    g.reseeds = g.reseeds === 4294967295 ? 0 : g.reseeds + 1;
    var e = g.plugin.md.create();
    e.update(g.keyBytes);
    for (var i = 1, a = 0; a < 32; ++a)
      g.reseeds % i === 0 && (e.update(g.pools[a].digest().getBytes()), g.pools[a].start()), i = i << 1;
    g.keyBytes = e.digest().getBytes(), e.start(), e.update(g.keyBytes);
    var r = e.digest().getBytes();
    g.key = g.plugin.formatKey(g.keyBytes), g.seed = g.plugin.formatSeed(r), g.generated = 0;
  }
  function t(e) {
    var i = null, a = aQ.util.globalScope, r = a.crypto || a.msCrypto;
    r && r.getRandomValues && (i = function(U) {
      return r.getRandomValues(U);
    });
    var h = aQ.util.createBuffer();
    if (i)
      for (; h.length() < e; ) {
        var n = Math.max(1, Math.min(e - h.length(), 65536) / 4), l = new Uint32Array(Math.floor(n));
        try {
          i(l);
          for (var y = 0; y < l.length; ++y)
            h.putInt32(l[y]);
        } catch (U) {
          if (!(typeof QuotaExceededError < "u" && U instanceof QuotaExceededError))
            throw U;
        }
      }
    if (h.length() < e)
      for (var N, s, F, u = Math.floor(Math.random() * 65536); h.length() < e; ) {
        s = 16807 * (u & 65535), N = 16807 * (u >> 16), s += (N & 32767) << 16, s += N >> 15, s = (s & 2147483647) + (s >> 31), u = s & 4294967295;
        for (var y = 0; y < 3; ++y)
          F = u >>> (y << 3), F ^= Math.floor(Math.random() * 256), h.putByte(F & 255);
      }
    return h.getBytes(e);
  }
  return Zt ? (g.seedFile = function(e, i) {
    Zt.randomBytes(e, function(a, r) {
      if (a)
        return i(a);
      i(null, r.toString());
    });
  }, g.seedFileSync = function(e) {
    return Zt.randomBytes(e).toString();
  }) : (g.seedFile = function(e, i) {
    try {
      i(null, t(e));
    } catch (a) {
      i(a);
    }
  }, g.seedFileSync = t), g.collect = function(e) {
    for (var i = e.length, a = 0; a < i; ++a)
      g.pools[g.pool].update(e.substr(a, 1)), g.pool = g.pool === 31 ? 0 : g.pool + 1;
  }, g.collectInt = function(e, i) {
    for (var a = "", r = 0; r < i; r += 8)
      a += String.fromCharCode(e >> r & 255);
    g.collect(a);
  }, g.registerWorker = function(e) {
    if (e === self)
      g.seedFile = function(a, r) {
        function h(n) {
          var l = n.data;
          l.forge && l.forge.prng && (self.removeEventListener("message", h), r(l.forge.prng.err, l.forge.prng.bytes));
        }
        self.addEventListener("message", h), self.postMessage({ forge: { prng: { needed: a } } });
      };
    else {
      var i = function(a) {
        var r = a.data;
        r.forge && r.forge.prng && g.seedFile(r.forge.prng.needed, function(h, n) {
          e.postMessage({ forge: { prng: { err: h, bytes: n } } });
        });
      };
      e.addEventListener("message", i);
    }
  }, g;
};
var PB = bg;
(function() {
  if (PB.random && PB.random.getBytes) {
    PB.random;
    return;
  }
  (function(A) {
    var g = {}, I = new Array(4), B = PB.util.createBuffer();
    g.formatKey = function(a) {
      var r = PB.util.createBuffer(a);
      return a = new Array(4), a[0] = r.getInt32(), a[1] = r.getInt32(), a[2] = r.getInt32(), a[3] = r.getInt32(), PB.aes._expandKey(a, !1);
    }, g.formatSeed = function(a) {
      var r = PB.util.createBuffer(a);
      return a = new Array(4), a[0] = r.getInt32(), a[1] = r.getInt32(), a[2] = r.getInt32(), a[3] = r.getInt32(), a;
    }, g.cipher = function(a, r) {
      return PB.aes._updateBlock(a, r, I, !1), B.putInt32(I[0]), B.putInt32(I[1]), B.putInt32(I[2]), B.putInt32(I[3]), B.getBytes();
    }, g.increment = function(a) {
      return ++a[3], a;
    }, g.md = PB.md.sha256;
    function Q() {
      var a = PB.prng.create(g);
      return a.getBytes = function(r, h) {
        return a.generate(r, h);
      }, a.getBytesSync = function(r) {
        return a.generate(r);
      }, a;
    }
    var E = Q(), C = null, o = PB.util.globalScope, t = o.crypto || o.msCrypto;
    if (t && t.getRandomValues && (C = function(a) {
      return t.getRandomValues(a);
    }), PB.options.usePureJavaScript || !PB.util.isNodejs && !C) {
      if (E.collectInt(+/* @__PURE__ */ new Date(), 32), typeof navigator < "u") {
        var e = "";
        for (var i in navigator)
          try {
            typeof navigator[i] == "string" && (e += navigator[i]);
          } catch {
          }
        E.collect(e), e = null;
      }
      A && (A().mousemove(function(a) {
        E.collectInt(a.clientX, 16), E.collectInt(a.clientY, 16);
      }), A().keypress(function(a) {
        E.collectInt(a.charCode, 8);
      }));
    }
    if (!PB.random)
      PB.random = E;
    else
      for (var i in E)
        PB.random[i] = E[i];
    PB.random.createInstance = Q, PB.random;
  })(typeof jQuery < "u" ? jQuery : null);
})();
var RI = bg, Fo = [
  217,
  120,
  249,
  196,
  25,
  221,
  181,
  237,
  40,
  233,
  253,
  121,
  74,
  160,
  216,
  157,
  198,
  126,
  55,
  131,
  43,
  118,
  83,
  142,
  98,
  76,
  100,
  136,
  68,
  139,
  251,
  162,
  23,
  154,
  89,
  245,
  135,
  179,
  79,
  19,
  97,
  69,
  109,
  141,
  9,
  129,
  125,
  50,
  189,
  143,
  64,
  235,
  134,
  183,
  123,
  11,
  240,
  149,
  33,
  34,
  92,
  107,
  78,
  130,
  84,
  214,
  101,
  147,
  206,
  96,
  178,
  28,
  115,
  86,
  192,
  20,
  167,
  140,
  241,
  220,
  18,
  117,
  202,
  31,
  59,
  190,
  228,
  209,
  66,
  61,
  212,
  48,
  163,
  60,
  182,
  38,
  111,
  191,
  14,
  218,
  70,
  105,
  7,
  87,
  39,
  242,
  29,
  155,
  188,
  148,
  67,
  3,
  248,
  17,
  199,
  246,
  144,
  239,
  62,
  231,
  6,
  195,
  213,
  47,
  200,
  102,
  30,
  215,
  8,
  232,
  234,
  222,
  128,
  82,
  238,
  247,
  132,
  170,
  114,
  172,
  53,
  77,
  106,
  42,
  150,
  26,
  210,
  113,
  90,
  21,
  73,
  116,
  75,
  159,
  208,
  94,
  4,
  24,
  164,
  236,
  194,
  224,
  65,
  110,
  15,
  81,
  203,
  204,
  36,
  145,
  175,
  80,
  161,
  244,
  112,
  57,
  153,
  124,
  58,
  133,
  35,
  184,
  180,
  122,
  252,
  2,
  54,
  91,
  37,
  85,
  151,
  49,
  45,
  93,
  250,
  152,
  227,
  138,
  146,
  174,
  5,
  223,
  41,
  16,
  103,
  108,
  186,
  201,
  211,
  0,
  230,
  207,
  225,
  158,
  168,
  44,
  99,
  22,
  1,
  63,
  88,
  226,
  137,
  169,
  13,
  56,
  52,
  27,
  171,
  51,
  255,
  176,
  187,
  72,
  12,
  95,
  185,
  177,
  205,
  46,
  197,
  243,
  219,
  71,
  229,
  165,
  156,
  119,
  10,
  166,
  32,
  104,
  254,
  127,
  193,
  173
], qn = [1, 2, 3, 5], IF = function(A, g) {
  return A << g & 65535 | (A & 65535) >> 16 - g;
}, QF = function(A, g) {
  return (A & 65535) >> g | A << 16 - g & 65535;
};
RI.rc2 = RI.rc2 || {};
RI.rc2.expandKey = function(A, g) {
  typeof A == "string" && (A = RI.util.createBuffer(A)), g = g || 128;
  var I = A, B = A.length(), Q = g, E = Math.ceil(Q / 8), C = 255 >> (Q & 7), o;
  for (o = B; o < 128; o++)
    I.putByte(Fo[I.at(o - 1) + I.at(o - B) & 255]);
  for (I.setAt(128 - E, Fo[I.at(128 - E) & C]), o = 127 - E; o >= 0; o--)
    I.setAt(o, Fo[I.at(o + 1) ^ I.at(o + E)]);
  return I;
};
var R0 = function(A, g, I) {
  var B = !1, Q = null, E = null, C = null, o, t, e, i, a = [];
  for (A = RI.rc2.expandKey(A, g), e = 0; e < 64; e++)
    a.push(A.getInt16Le());
  I ? (o = function(n) {
    for (e = 0; e < 4; e++)
      n[e] += a[i] + (n[(e + 3) % 4] & n[(e + 2) % 4]) + (~n[(e + 3) % 4] & n[(e + 1) % 4]), n[e] = IF(n[e], qn[e]), i++;
  }, t = function(n) {
    for (e = 0; e < 4; e++)
      n[e] += a[n[(e + 3) % 4] & 63];
  }) : (o = function(n) {
    for (e = 3; e >= 0; e--)
      n[e] = QF(n[e], qn[e]), n[e] -= a[i] + (n[(e + 3) % 4] & n[(e + 2) % 4]) + (~n[(e + 3) % 4] & n[(e + 1) % 4]), i--;
  }, t = function(n) {
    for (e = 3; e >= 0; e--)
      n[e] -= a[n[(e + 3) % 4] & 63];
  });
  var r = function(n) {
    var l = [];
    for (e = 0; e < 4; e++) {
      var y = Q.getInt16Le();
      C !== null && (I ? y ^= C.getInt16Le() : C.putInt16Le(y)), l.push(y & 65535);
    }
    i = I ? 0 : 63;
    for (var N = 0; N < n.length; N++)
      for (var s = 0; s < n[N][0]; s++)
        n[N][1](l);
    for (e = 0; e < 4; e++)
      C !== null && (I ? C.putInt16Le(l[e]) : l[e] ^= C.getInt16Le()), E.putInt16Le(l[e]);
  }, h = null;
  return h = {
    /**
     * Starts or restarts the encryption or decryption process, whichever
     * was previously configured.
     *
     * To use the cipher in CBC mode, iv may be given either as a string
     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.
     *
     * @param iv the initialization vector to use, null for ECB mode.
     * @param output the output the buffer to write to, null to create one.
     */
    start: function(n, l) {
      n && typeof n == "string" && (n = RI.util.createBuffer(n)), B = !1, Q = RI.util.createBuffer(), E = l || new RI.util.createBuffer(), C = n, h.output = E;
    },
    /**
     * Updates the next block.
     *
     * @param input the buffer to read from.
     */
    update: function(n) {
      for (B || Q.putBuffer(n); Q.length() >= 8; )
        r([
          [5, o],
          [1, t],
          [6, o],
          [1, t],
          [5, o]
        ]);
    },
    /**
     * Finishes encrypting or decrypting.
     *
     * @param pad a padding function to use, null for PKCS#7 padding,
     *           signature(blockSize, buffer, decrypt).
     *
     * @return true if successful, false on error.
     */
    finish: function(n) {
      var l = !0;
      if (I)
        if (n)
          l = n(8, Q, !I);
        else {
          var y = Q.length() === 8 ? 8 : 8 - Q.length();
          Q.fillWithByte(y, y);
        }
      if (l && (B = !0, h.update()), !I && (l = Q.length() === 0, l))
        if (n)
          l = n(8, E, !I);
        else {
          var N = E.length(), s = E.at(N - 1);
          s > N ? l = !1 : E.truncate(s);
        }
      return l;
    }
  }, h;
};
RI.rc2.startEncrypting = function(A, g, I) {
  var B = RI.rc2.createEncryptionCipher(A, 128);
  return B.start(g, I), B;
};
RI.rc2.createEncryptionCipher = function(A, g) {
  return R0(A, g, !0);
};
RI.rc2.startDecrypting = function(A, g, I) {
  var B = RI.rc2.createDecryptionCipher(A, 128);
  return B.start(g, I), B;
};
RI.rc2.createDecryptionCipher = function(A, g) {
  return R0(A, g, !1);
};
var Ea = bg;
Ea.jsbn = Ea.jsbn || {};
var pQ;
function mA(A, g, I) {
  this.data = [], A != null && (typeof A == "number" ? this.fromNumber(A, g, I) : g == null && typeof A != "string" ? this.fromString(A, 256) : this.fromString(A, g));
}
Ea.jsbn.BigInteger = mA;
function gB() {
  return new mA(null);
}
function EF(A, g, I, B, Q, E) {
  for (; --E >= 0; ) {
    var C = g * this.data[A++] + I.data[B] + Q;
    Q = Math.floor(C / 67108864), I.data[B++] = C & 67108863;
  }
  return Q;
}
function CF(A, g, I, B, Q, E) {
  for (var C = g & 32767, o = g >> 15; --E >= 0; ) {
    var t = this.data[A] & 32767, e = this.data[A++] >> 15, i = o * t + e * C;
    t = C * t + ((i & 32767) << 15) + I.data[B] + (Q & 1073741823), Q = (t >>> 30) + (i >>> 15) + o * e + (Q >>> 30), I.data[B++] = t & 1073741823;
  }
  return Q;
}
function Pn(A, g, I, B, Q, E) {
  for (var C = g & 16383, o = g >> 14; --E >= 0; ) {
    var t = this.data[A] & 16383, e = this.data[A++] >> 14, i = o * t + e * C;
    t = C * t + ((i & 16383) << 14) + I.data[B] + Q, Q = (t >> 28) + (i >> 14) + o * e, I.data[B++] = t & 268435455;
  }
  return Q;
}
typeof navigator > "u" ? (mA.prototype.am = Pn, pQ = 28) : navigator.appName == "Microsoft Internet Explorer" ? (mA.prototype.am = CF, pQ = 30) : navigator.appName != "Netscape" ? (mA.prototype.am = EF, pQ = 26) : (mA.prototype.am = Pn, pQ = 28);
mA.prototype.DB = pQ;
mA.prototype.DM = (1 << pQ) - 1;
mA.prototype.DV = 1 << pQ;
var Zr = 52;
mA.prototype.FV = Math.pow(2, Zr);
mA.prototype.F1 = Zr - pQ;
mA.prototype.F2 = 2 * pQ - Zr;
var eF = "0123456789abcdefghijklmnopqrstuvwxyz", Si = new Array(), PC, bI;
PC = 48;
for (bI = 0; bI <= 9; ++bI) Si[PC++] = bI;
PC = 97;
for (bI = 10; bI < 36; ++bI) Si[PC++] = bI;
PC = 65;
for (bI = 10; bI < 36; ++bI) Si[PC++] = bI;
function Wn(A) {
  return eF.charAt(A);
}
function f0(A, g) {
  var I = Si[A.charCodeAt(g)];
  return I ?? -1;
}
function tF(A) {
  for (var g = this.t - 1; g >= 0; --g) A.data[g] = this.data[g];
  A.t = this.t, A.s = this.s;
}
function iF(A) {
  this.t = 1, this.s = A < 0 ? -1 : 0, A > 0 ? this.data[0] = A : A < -1 ? this.data[0] = A + this.DV : this.t = 0;
}
function jQ(A) {
  var g = gB();
  return g.fromInt(A), g;
}
function oF(A, g) {
  var I;
  if (g == 16) I = 4;
  else if (g == 8) I = 3;
  else if (g == 256) I = 8;
  else if (g == 2) I = 1;
  else if (g == 32) I = 5;
  else if (g == 4) I = 2;
  else {
    this.fromRadix(A, g);
    return;
  }
  this.t = 0, this.s = 0;
  for (var B = A.length, Q = !1, E = 0; --B >= 0; ) {
    var C = I == 8 ? A[B] & 255 : f0(A, B);
    if (C < 0) {
      A.charAt(B) == "-" && (Q = !0);
      continue;
    }
    Q = !1, E == 0 ? this.data[this.t++] = C : E + I > this.DB ? (this.data[this.t - 1] |= (C & (1 << this.DB - E) - 1) << E, this.data[this.t++] = C >> this.DB - E) : this.data[this.t - 1] |= C << E, E += I, E >= this.DB && (E -= this.DB);
  }
  I == 8 && A[0] & 128 && (this.s = -1, E > 0 && (this.data[this.t - 1] |= (1 << this.DB - E) - 1 << E)), this.clamp(), Q && mA.ZERO.subTo(this, this);
}
function aF() {
  for (var A = this.s & this.DM; this.t > 0 && this.data[this.t - 1] == A; ) --this.t;
}
function rF(A) {
  if (this.s < 0) return "-" + this.negate().toString(A);
  var g;
  if (A == 16) g = 4;
  else if (A == 8) g = 3;
  else if (A == 2) g = 1;
  else if (A == 32) g = 5;
  else if (A == 4) g = 2;
  else return this.toRadix(A);
  var I = (1 << g) - 1, B, Q = !1, E = "", C = this.t, o = this.DB - C * this.DB % g;
  if (C-- > 0)
    for (o < this.DB && (B = this.data[C] >> o) > 0 && (Q = !0, E = Wn(B)); C >= 0; )
      o < g ? (B = (this.data[C] & (1 << o) - 1) << g - o, B |= this.data[--C] >> (o += this.DB - g)) : (B = this.data[C] >> (o -= g) & I, o <= 0 && (o += this.DB, --C)), B > 0 && (Q = !0), Q && (E += Wn(B));
  return Q ? E : "0";
}
function sF() {
  var A = gB();
  return mA.ZERO.subTo(this, A), A;
}
function nF() {
  return this.s < 0 ? this.negate() : this;
}
function cF(A) {
  var g = this.s - A.s;
  if (g != 0) return g;
  var I = this.t;
  if (g = I - A.t, g != 0) return this.s < 0 ? -g : g;
  for (; --I >= 0; ) if ((g = this.data[I] - A.data[I]) != 0) return g;
  return 0;
}
function Ui(A) {
  var g = 1, I;
  return (I = A >>> 16) != 0 && (A = I, g += 16), (I = A >> 8) != 0 && (A = I, g += 8), (I = A >> 4) != 0 && (A = I, g += 4), (I = A >> 2) != 0 && (A = I, g += 2), (I = A >> 1) != 0 && (A = I, g += 1), g;
}
function DF() {
  return this.t <= 0 ? 0 : this.DB * (this.t - 1) + Ui(this.data[this.t - 1] ^ this.s & this.DM);
}
function hF(A, g) {
  var I;
  for (I = this.t - 1; I >= 0; --I) g.data[I + A] = this.data[I];
  for (I = A - 1; I >= 0; --I) g.data[I] = 0;
  g.t = this.t + A, g.s = this.s;
}
function lF(A, g) {
  for (var I = A; I < this.t; ++I) g.data[I - A] = this.data[I];
  g.t = Math.max(this.t - A, 0), g.s = this.s;
}
function yF(A, g) {
  var I = A % this.DB, B = this.DB - I, Q = (1 << B) - 1, E = Math.floor(A / this.DB), C = this.s << I & this.DM, o;
  for (o = this.t - 1; o >= 0; --o)
    g.data[o + E + 1] = this.data[o] >> B | C, C = (this.data[o] & Q) << I;
  for (o = E - 1; o >= 0; --o) g.data[o] = 0;
  g.data[E] = C, g.t = this.t + E + 1, g.s = this.s, g.clamp();
}
function wF(A, g) {
  g.s = this.s;
  var I = Math.floor(A / this.DB);
  if (I >= this.t) {
    g.t = 0;
    return;
  }
  var B = A % this.DB, Q = this.DB - B, E = (1 << B) - 1;
  g.data[0] = this.data[I] >> B;
  for (var C = I + 1; C < this.t; ++C)
    g.data[C - I - 1] |= (this.data[C] & E) << Q, g.data[C - I] = this.data[C] >> B;
  B > 0 && (g.data[this.t - I - 1] |= (this.s & E) << Q), g.t = this.t - I, g.clamp();
}
function dF(A, g) {
  for (var I = 0, B = 0, Q = Math.min(A.t, this.t); I < Q; )
    B += this.data[I] - A.data[I], g.data[I++] = B & this.DM, B >>= this.DB;
  if (A.t < this.t) {
    for (B -= A.s; I < this.t; )
      B += this.data[I], g.data[I++] = B & this.DM, B >>= this.DB;
    B += this.s;
  } else {
    for (B += this.s; I < A.t; )
      B -= A.data[I], g.data[I++] = B & this.DM, B >>= this.DB;
    B -= A.s;
  }
  g.s = B < 0 ? -1 : 0, B < -1 ? g.data[I++] = this.DV + B : B > 0 && (g.data[I++] = B), g.t = I, g.clamp();
}
function FF(A, g) {
  var I = this.abs(), B = A.abs(), Q = I.t;
  for (g.t = Q + B.t; --Q >= 0; ) g.data[Q] = 0;
  for (Q = 0; Q < B.t; ++Q) g.data[Q + I.t] = I.am(0, B.data[Q], g, Q, 0, I.t);
  g.s = 0, g.clamp(), this.s != A.s && mA.ZERO.subTo(g, g);
}
function RF(A) {
  for (var g = this.abs(), I = A.t = 2 * g.t; --I >= 0; ) A.data[I] = 0;
  for (I = 0; I < g.t - 1; ++I) {
    var B = g.am(I, g.data[I], A, 2 * I, 0, 1);
    (A.data[I + g.t] += g.am(I + 1, 2 * g.data[I], A, 2 * I + 1, B, g.t - I - 1)) >= g.DV && (A.data[I + g.t] -= g.DV, A.data[I + g.t + 1] = 1);
  }
  A.t > 0 && (A.data[A.t - 1] += g.am(I, g.data[I], A, 2 * I, 0, 1)), A.s = 0, A.clamp();
}
function fF(A, g, I) {
  var B = A.abs();
  if (!(B.t <= 0)) {
    var Q = this.abs();
    if (Q.t < B.t) {
      g != null && g.fromInt(0), I != null && this.copyTo(I);
      return;
    }
    I == null && (I = gB());
    var E = gB(), C = this.s, o = A.s, t = this.DB - Ui(B.data[B.t - 1]);
    t > 0 ? (B.lShiftTo(t, E), Q.lShiftTo(t, I)) : (B.copyTo(E), Q.copyTo(I));
    var e = E.t, i = E.data[e - 1];
    if (i != 0) {
      var a = i * (1 << this.F1) + (e > 1 ? E.data[e - 2] >> this.F2 : 0), r = this.FV / a, h = (1 << this.F1) / a, n = 1 << this.F2, l = I.t, y = l - e, N = g ?? gB();
      for (E.dlShiftTo(y, N), I.compareTo(N) >= 0 && (I.data[I.t++] = 1, I.subTo(N, I)), mA.ONE.dlShiftTo(e, N), N.subTo(E, E); E.t < e; ) E.data[E.t++] = 0;
      for (; --y >= 0; ) {
        var s = I.data[--l] == i ? this.DM : Math.floor(I.data[l] * r + (I.data[l - 1] + n) * h);
        if ((I.data[l] += E.am(0, s, I, y, 0, e)) < s)
          for (E.dlShiftTo(y, N), I.subTo(N, I); I.data[l] < --s; ) I.subTo(N, I);
      }
      g != null && (I.drShiftTo(e, g), C != o && mA.ZERO.subTo(g, g)), I.t = e, I.clamp(), t > 0 && I.rShiftTo(t, I), C < 0 && mA.ZERO.subTo(I, I);
    }
  }
}
function GF(A) {
  var g = gB();
  return this.abs().divRemTo(A, null, g), this.s < 0 && g.compareTo(mA.ZERO) > 0 && A.subTo(g, g), g;
}
function PE(A) {
  this.m = A;
}
function MF(A) {
  return A.s < 0 || A.compareTo(this.m) >= 0 ? A.mod(this.m) : A;
}
function NF(A) {
  return A;
}
function uF(A) {
  A.divRemTo(this.m, null, A);
}
function SF(A, g, I) {
  A.multiplyTo(g, I), this.reduce(I);
}
function UF(A, g) {
  A.squareTo(g), this.reduce(g);
}
PE.prototype.convert = MF;
PE.prototype.revert = NF;
PE.prototype.reduce = uF;
PE.prototype.mulTo = SF;
PE.prototype.sqrTo = UF;
function kF() {
  if (this.t < 1) return 0;
  var A = this.data[0];
  if (!(A & 1)) return 0;
  var g = A & 3;
  return g = g * (2 - (A & 15) * g) & 15, g = g * (2 - (A & 255) * g) & 255, g = g * (2 - ((A & 65535) * g & 65535)) & 65535, g = g * (2 - A * g % this.DV) % this.DV, g > 0 ? this.DV - g : -g;
}
function WE(A) {
  this.m = A, this.mp = A.invDigit(), this.mpl = this.mp & 32767, this.mph = this.mp >> 15, this.um = (1 << A.DB - 15) - 1, this.mt2 = 2 * A.t;
}
function HF(A) {
  var g = gB();
  return A.abs().dlShiftTo(this.m.t, g), g.divRemTo(this.m, null, g), A.s < 0 && g.compareTo(mA.ZERO) > 0 && this.m.subTo(g, g), g;
}
function pF(A) {
  var g = gB();
  return A.copyTo(g), this.reduce(g), g;
}
function YF(A) {
  for (; A.t <= this.mt2; )
    A.data[A.t++] = 0;
  for (var g = 0; g < this.m.t; ++g) {
    var I = A.data[g] & 32767, B = I * this.mpl + ((I * this.mph + (A.data[g] >> 15) * this.mpl & this.um) << 15) & A.DM;
    for (I = g + this.m.t, A.data[I] += this.m.am(0, B, A, g, 0, this.m.t); A.data[I] >= A.DV; )
      A.data[I] -= A.DV, A.data[++I]++;
  }
  A.clamp(), A.drShiftTo(this.m.t, A), A.compareTo(this.m) >= 0 && A.subTo(this.m, A);
}
function JF(A, g) {
  A.squareTo(g), this.reduce(g);
}
function LF(A, g, I) {
  A.multiplyTo(g, I), this.reduce(I);
}
WE.prototype.convert = HF;
WE.prototype.revert = pF;
WE.prototype.reduce = YF;
WE.prototype.mulTo = LF;
WE.prototype.sqrTo = JF;
function KF() {
  return (this.t > 0 ? this.data[0] & 1 : this.s) == 0;
}
function mF(A, g) {
  if (A > 4294967295 || A < 1) return mA.ONE;
  var I = gB(), B = gB(), Q = g.convert(this), E = Ui(A) - 1;
  for (Q.copyTo(I); --E >= 0; )
    if (g.sqrTo(I, B), (A & 1 << E) > 0) g.mulTo(B, Q, I);
    else {
      var C = I;
      I = B, B = C;
    }
  return g.revert(I);
}
function xF(A, g) {
  var I;
  return A < 256 || g.isEven() ? I = new PE(g) : I = new WE(g), this.exp(A, I);
}
mA.prototype.copyTo = tF;
mA.prototype.fromInt = iF;
mA.prototype.fromString = oF;
mA.prototype.clamp = aF;
mA.prototype.dlShiftTo = hF;
mA.prototype.drShiftTo = lF;
mA.prototype.lShiftTo = yF;
mA.prototype.rShiftTo = wF;
mA.prototype.subTo = dF;
mA.prototype.multiplyTo = FF;
mA.prototype.squareTo = RF;
mA.prototype.divRemTo = fF;
mA.prototype.invDigit = kF;
mA.prototype.isEven = KF;
mA.prototype.exp = mF;
mA.prototype.toString = rF;
mA.prototype.negate = sF;
mA.prototype.abs = nF;
mA.prototype.compareTo = cF;
mA.prototype.bitLength = DF;
mA.prototype.mod = GF;
mA.prototype.modPowInt = xF;
mA.ZERO = jQ(0);
mA.ONE = jQ(1);
function vF() {
  var A = gB();
  return this.copyTo(A), A;
}
function bF() {
  if (this.s < 0) {
    if (this.t == 1) return this.data[0] - this.DV;
    if (this.t == 0) return -1;
  } else {
    if (this.t == 1) return this.data[0];
    if (this.t == 0) return 0;
  }
  return (this.data[1] & (1 << 32 - this.DB) - 1) << this.DB | this.data[0];
}
function ZF() {
  return this.t == 0 ? this.s : this.data[0] << 24 >> 24;
}
function TF() {
  return this.t == 0 ? this.s : this.data[0] << 16 >> 16;
}
function XF(A) {
  return Math.floor(Math.LN2 * this.DB / Math.log(A));
}
function zF() {
  return this.s < 0 ? -1 : this.t <= 0 || this.t == 1 && this.data[0] <= 0 ? 0 : 1;
}
function VF(A) {
  if (A == null && (A = 10), this.signum() == 0 || A < 2 || A > 36) return "0";
  var g = this.chunkSize(A), I = Math.pow(A, g), B = jQ(I), Q = gB(), E = gB(), C = "";
  for (this.divRemTo(B, Q, E); Q.signum() > 0; )
    C = (I + E.intValue()).toString(A).substr(1) + C, Q.divRemTo(B, Q, E);
  return E.intValue().toString(A) + C;
}
function qF(A, g) {
  this.fromInt(0), g == null && (g = 10);
  for (var I = this.chunkSize(g), B = Math.pow(g, I), Q = !1, E = 0, C = 0, o = 0; o < A.length; ++o) {
    var t = f0(A, o);
    if (t < 0) {
      A.charAt(o) == "-" && this.signum() == 0 && (Q = !0);
      continue;
    }
    C = g * C + t, ++E >= I && (this.dMultiply(B), this.dAddOffset(C, 0), E = 0, C = 0);
  }
  E > 0 && (this.dMultiply(Math.pow(g, E)), this.dAddOffset(C, 0)), Q && mA.ZERO.subTo(this, this);
}
function PF(A, g, I) {
  if (typeof g == "number")
    if (A < 2) this.fromInt(1);
    else
      for (this.fromNumber(A, I), this.testBit(A - 1) || this.bitwiseTo(mA.ONE.shiftLeft(A - 1), Tr, this), this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(g); )
        this.dAddOffset(2, 0), this.bitLength() > A && this.subTo(mA.ONE.shiftLeft(A - 1), this);
  else {
    var B = new Array(), Q = A & 7;
    B.length = (A >> 3) + 1, g.nextBytes(B), Q > 0 ? B[0] &= (1 << Q) - 1 : B[0] = 0, this.fromString(B, 256);
  }
}
function WF() {
  var A = this.t, g = new Array();
  g[0] = this.s;
  var I = this.DB - A * this.DB % 8, B, Q = 0;
  if (A-- > 0)
    for (I < this.DB && (B = this.data[A] >> I) != (this.s & this.DM) >> I && (g[Q++] = B | this.s << this.DB - I); A >= 0; )
      I < 8 ? (B = (this.data[A] & (1 << I) - 1) << 8 - I, B |= this.data[--A] >> (I += this.DB - 8)) : (B = this.data[A] >> (I -= 8) & 255, I <= 0 && (I += this.DB, --A)), B & 128 && (B |= -256), Q == 0 && (this.s & 128) != (B & 128) && ++Q, (Q > 0 || B != this.s) && (g[Q++] = B);
  return g;
}
function OF(A) {
  return this.compareTo(A) == 0;
}
function jF(A) {
  return this.compareTo(A) < 0 ? this : A;
}
function _F(A) {
  return this.compareTo(A) > 0 ? this : A;
}
function $F(A, g, I) {
  var B, Q, E = Math.min(A.t, this.t);
  for (B = 0; B < E; ++B) I.data[B] = g(this.data[B], A.data[B]);
  if (A.t < this.t) {
    for (Q = A.s & this.DM, B = E; B < this.t; ++B) I.data[B] = g(this.data[B], Q);
    I.t = this.t;
  } else {
    for (Q = this.s & this.DM, B = E; B < A.t; ++B) I.data[B] = g(Q, A.data[B]);
    I.t = A.t;
  }
  I.s = g(this.s, A.s), I.clamp();
}
function AR(A, g) {
  return A & g;
}
function gR(A) {
  var g = gB();
  return this.bitwiseTo(A, AR, g), g;
}
function Tr(A, g) {
  return A | g;
}
function BR(A) {
  var g = gB();
  return this.bitwiseTo(A, Tr, g), g;
}
function G0(A, g) {
  return A ^ g;
}
function IR(A) {
  var g = gB();
  return this.bitwiseTo(A, G0, g), g;
}
function M0(A, g) {
  return A & ~g;
}
function QR(A) {
  var g = gB();
  return this.bitwiseTo(A, M0, g), g;
}
function ER() {
  for (var A = gB(), g = 0; g < this.t; ++g) A.data[g] = this.DM & ~this.data[g];
  return A.t = this.t, A.s = ~this.s, A;
}
function CR(A) {
  var g = gB();
  return A < 0 ? this.rShiftTo(-A, g) : this.lShiftTo(A, g), g;
}
function eR(A) {
  var g = gB();
  return A < 0 ? this.lShiftTo(-A, g) : this.rShiftTo(A, g), g;
}
function tR(A) {
  if (A == 0) return -1;
  var g = 0;
  return A & 65535 || (A >>= 16, g += 16), A & 255 || (A >>= 8, g += 8), A & 15 || (A >>= 4, g += 4), A & 3 || (A >>= 2, g += 2), A & 1 || ++g, g;
}
function iR() {
  for (var A = 0; A < this.t; ++A)
    if (this.data[A] != 0) return A * this.DB + tR(this.data[A]);
  return this.s < 0 ? this.t * this.DB : -1;
}
function oR(A) {
  for (var g = 0; A != 0; )
    A &= A - 1, ++g;
  return g;
}
function aR() {
  for (var A = 0, g = this.s & this.DM, I = 0; I < this.t; ++I) A += oR(this.data[I] ^ g);
  return A;
}
function rR(A) {
  var g = Math.floor(A / this.DB);
  return g >= this.t ? this.s != 0 : (this.data[g] & 1 << A % this.DB) != 0;
}
function sR(A, g) {
  var I = mA.ONE.shiftLeft(A);
  return this.bitwiseTo(I, g, I), I;
}
function nR(A) {
  return this.changeBit(A, Tr);
}
function cR(A) {
  return this.changeBit(A, M0);
}
function DR(A) {
  return this.changeBit(A, G0);
}
function hR(A, g) {
  for (var I = 0, B = 0, Q = Math.min(A.t, this.t); I < Q; )
    B += this.data[I] + A.data[I], g.data[I++] = B & this.DM, B >>= this.DB;
  if (A.t < this.t) {
    for (B += A.s; I < this.t; )
      B += this.data[I], g.data[I++] = B & this.DM, B >>= this.DB;
    B += this.s;
  } else {
    for (B += this.s; I < A.t; )
      B += A.data[I], g.data[I++] = B & this.DM, B >>= this.DB;
    B += A.s;
  }
  g.s = B < 0 ? -1 : 0, B > 0 ? g.data[I++] = B : B < -1 && (g.data[I++] = this.DV + B), g.t = I, g.clamp();
}
function lR(A) {
  var g = gB();
  return this.addTo(A, g), g;
}
function yR(A) {
  var g = gB();
  return this.subTo(A, g), g;
}
function wR(A) {
  var g = gB();
  return this.multiplyTo(A, g), g;
}
function dR(A) {
  var g = gB();
  return this.divRemTo(A, g, null), g;
}
function FR(A) {
  var g = gB();
  return this.divRemTo(A, null, g), g;
}
function RR(A) {
  var g = gB(), I = gB();
  return this.divRemTo(A, g, I), new Array(g, I);
}
function fR(A) {
  this.data[this.t] = this.am(0, A - 1, this, 0, 0, this.t), ++this.t, this.clamp();
}
function GR(A, g) {
  if (A != 0) {
    for (; this.t <= g; ) this.data[this.t++] = 0;
    for (this.data[g] += A; this.data[g] >= this.DV; )
      this.data[g] -= this.DV, ++g >= this.t && (this.data[this.t++] = 0), ++this.data[g];
  }
}
function _e() {
}
function N0(A) {
  return A;
}
function MR(A, g, I) {
  A.multiplyTo(g, I);
}
function NR(A, g) {
  A.squareTo(g);
}
_e.prototype.convert = N0;
_e.prototype.revert = N0;
_e.prototype.mulTo = MR;
_e.prototype.sqrTo = NR;
function uR(A) {
  return this.exp(A, new _e());
}
function SR(A, g, I) {
  var B = Math.min(this.t + A.t, g);
  for (I.s = 0, I.t = B; B > 0; ) I.data[--B] = 0;
  var Q;
  for (Q = I.t - this.t; B < Q; ++B) I.data[B + this.t] = this.am(0, A.data[B], I, B, 0, this.t);
  for (Q = Math.min(A.t, g); B < Q; ++B) this.am(0, A.data[B], I, B, 0, g - B);
  I.clamp();
}
function UR(A, g, I) {
  --g;
  var B = I.t = this.t + A.t - g;
  for (I.s = 0; --B >= 0; ) I.data[B] = 0;
  for (B = Math.max(g - this.t, 0); B < A.t; ++B)
    I.data[this.t + B - g] = this.am(g - B, A.data[B], I, 0, 0, this.t + B - g);
  I.clamp(), I.drShiftTo(1, I);
}
function WC(A) {
  this.r2 = gB(), this.q3 = gB(), mA.ONE.dlShiftTo(2 * A.t, this.r2), this.mu = this.r2.divide(A), this.m = A;
}
function kR(A) {
  if (A.s < 0 || A.t > 2 * this.m.t) return A.mod(this.m);
  if (A.compareTo(this.m) < 0) return A;
  var g = gB();
  return A.copyTo(g), this.reduce(g), g;
}
function HR(A) {
  return A;
}
function pR(A) {
  for (A.drShiftTo(this.m.t - 1, this.r2), A.t > this.m.t + 1 && (A.t = this.m.t + 1, A.clamp()), this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3), this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); A.compareTo(this.r2) < 0; ) A.dAddOffset(1, this.m.t + 1);
  for (A.subTo(this.r2, A); A.compareTo(this.m) >= 0; ) A.subTo(this.m, A);
}
function YR(A, g) {
  A.squareTo(g), this.reduce(g);
}
function JR(A, g, I) {
  A.multiplyTo(g, I), this.reduce(I);
}
WC.prototype.convert = kR;
WC.prototype.revert = HR;
WC.prototype.reduce = pR;
WC.prototype.mulTo = JR;
WC.prototype.sqrTo = YR;
function LR(A, g) {
  var I = A.bitLength(), B, Q = jQ(1), E;
  if (I <= 0) return Q;
  I < 18 ? B = 1 : I < 48 ? B = 3 : I < 144 ? B = 4 : I < 768 ? B = 5 : B = 6, I < 8 ? E = new PE(g) : g.isEven() ? E = new WC(g) : E = new WE(g);
  var C = new Array(), o = 3, t = B - 1, e = (1 << B) - 1;
  if (C[1] = E.convert(this), B > 1) {
    var i = gB();
    for (E.sqrTo(C[1], i); o <= e; )
      C[o] = gB(), E.mulTo(i, C[o - 2], C[o]), o += 2;
  }
  var a = A.t - 1, r, h = !0, n = gB(), l;
  for (I = Ui(A.data[a]) - 1; a >= 0; ) {
    for (I >= t ? r = A.data[a] >> I - t & e : (r = (A.data[a] & (1 << I + 1) - 1) << t - I, a > 0 && (r |= A.data[a - 1] >> this.DB + I - t)), o = B; !(r & 1); )
      r >>= 1, --o;
    if ((I -= o) < 0 && (I += this.DB, --a), h)
      C[r].copyTo(Q), h = !1;
    else {
      for (; o > 1; )
        E.sqrTo(Q, n), E.sqrTo(n, Q), o -= 2;
      o > 0 ? E.sqrTo(Q, n) : (l = Q, Q = n, n = l), E.mulTo(n, C[r], Q);
    }
    for (; a >= 0 && !(A.data[a] & 1 << I); )
      E.sqrTo(Q, n), l = Q, Q = n, n = l, --I < 0 && (I = this.DB - 1, --a);
  }
  return E.revert(Q);
}
function KR(A) {
  var g = this.s < 0 ? this.negate() : this.clone(), I = A.s < 0 ? A.negate() : A.clone();
  if (g.compareTo(I) < 0) {
    var B = g;
    g = I, I = B;
  }
  var Q = g.getLowestSetBit(), E = I.getLowestSetBit();
  if (E < 0) return g;
  for (Q < E && (E = Q), E > 0 && (g.rShiftTo(E, g), I.rShiftTo(E, I)); g.signum() > 0; )
    (Q = g.getLowestSetBit()) > 0 && g.rShiftTo(Q, g), (Q = I.getLowestSetBit()) > 0 && I.rShiftTo(Q, I), g.compareTo(I) >= 0 ? (g.subTo(I, g), g.rShiftTo(1, g)) : (I.subTo(g, I), I.rShiftTo(1, I));
  return E > 0 && I.lShiftTo(E, I), I;
}
function mR(A) {
  if (A <= 0) return 0;
  var g = this.DV % A, I = this.s < 0 ? A - 1 : 0;
  if (this.t > 0)
    if (g == 0) I = this.data[0] % A;
    else for (var B = this.t - 1; B >= 0; --B) I = (g * I + this.data[B]) % A;
  return I;
}
function xR(A) {
  var g = A.isEven();
  if (this.isEven() && g || A.signum() == 0) return mA.ZERO;
  for (var I = A.clone(), B = this.clone(), Q = jQ(1), E = jQ(0), C = jQ(0), o = jQ(1); I.signum() != 0; ) {
    for (; I.isEven(); )
      I.rShiftTo(1, I), g ? ((!Q.isEven() || !E.isEven()) && (Q.addTo(this, Q), E.subTo(A, E)), Q.rShiftTo(1, Q)) : E.isEven() || E.subTo(A, E), E.rShiftTo(1, E);
    for (; B.isEven(); )
      B.rShiftTo(1, B), g ? ((!C.isEven() || !o.isEven()) && (C.addTo(this, C), o.subTo(A, o)), C.rShiftTo(1, C)) : o.isEven() || o.subTo(A, o), o.rShiftTo(1, o);
    I.compareTo(B) >= 0 ? (I.subTo(B, I), g && Q.subTo(C, Q), E.subTo(o, E)) : (B.subTo(I, B), g && C.subTo(Q, C), o.subTo(E, o));
  }
  if (B.compareTo(mA.ONE) != 0) return mA.ZERO;
  if (o.compareTo(A) >= 0) return o.subtract(A);
  if (o.signum() < 0) o.addTo(A, o);
  else return o;
  return o.signum() < 0 ? o.add(A) : o;
}
var WI = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509], vR = (1 << 26) / WI[WI.length - 1];
function bR(A) {
  var g, I = this.abs();
  if (I.t == 1 && I.data[0] <= WI[WI.length - 1]) {
    for (g = 0; g < WI.length; ++g)
      if (I.data[0] == WI[g]) return !0;
    return !1;
  }
  if (I.isEven()) return !1;
  for (g = 1; g < WI.length; ) {
    for (var B = WI[g], Q = g + 1; Q < WI.length && B < vR; ) B *= WI[Q++];
    for (B = I.modInt(B); g < Q; ) if (B % WI[g++] == 0) return !1;
  }
  return I.millerRabin(A);
}
function ZR(A) {
  var g = this.subtract(mA.ONE), I = g.getLowestSetBit();
  if (I <= 0) return !1;
  for (var B = g.shiftRight(I), Q = TR(), E, C = 0; C < A; ++C) {
    do
      E = new mA(this.bitLength(), Q);
    while (E.compareTo(mA.ONE) <= 0 || E.compareTo(g) >= 0);
    var o = E.modPow(B, this);
    if (o.compareTo(mA.ONE) != 0 && o.compareTo(g) != 0) {
      for (var t = 1; t++ < I && o.compareTo(g) != 0; )
        if (o = o.modPowInt(2, this), o.compareTo(mA.ONE) == 0) return !1;
      if (o.compareTo(g) != 0) return !1;
    }
  }
  return !0;
}
function TR() {
  return {
    // x is an array to fill with bytes
    nextBytes: function(A) {
      for (var g = 0; g < A.length; ++g)
        A[g] = Math.floor(Math.random() * 256);
    }
  };
}
mA.prototype.chunkSize = XF;
mA.prototype.toRadix = VF;
mA.prototype.fromRadix = qF;
mA.prototype.fromNumber = PF;
mA.prototype.bitwiseTo = $F;
mA.prototype.changeBit = sR;
mA.prototype.addTo = hR;
mA.prototype.dMultiply = fR;
mA.prototype.dAddOffset = GR;
mA.prototype.multiplyLowerTo = SR;
mA.prototype.multiplyUpperTo = UR;
mA.prototype.modInt = mR;
mA.prototype.millerRabin = ZR;
mA.prototype.clone = vF;
mA.prototype.intValue = bF;
mA.prototype.byteValue = ZF;
mA.prototype.shortValue = TF;
mA.prototype.signum = zF;
mA.prototype.toByteArray = WF;
mA.prototype.equals = OF;
mA.prototype.min = jF;
mA.prototype.max = _F;
mA.prototype.and = gR;
mA.prototype.or = BR;
mA.prototype.xor = IR;
mA.prototype.andNot = QR;
mA.prototype.not = ER;
mA.prototype.shiftLeft = CR;
mA.prototype.shiftRight = eR;
mA.prototype.getLowestSetBit = iR;
mA.prototype.bitCount = aR;
mA.prototype.testBit = rR;
mA.prototype.setBit = nR;
mA.prototype.clearBit = cR;
mA.prototype.flipBit = DR;
mA.prototype.add = lR;
mA.prototype.subtract = yR;
mA.prototype.multiply = wR;
mA.prototype.divide = dR;
mA.prototype.remainder = FR;
mA.prototype.divideAndRemainder = RR;
mA.prototype.modPow = LR;
mA.prototype.modInverse = xR;
mA.prototype.pow = uR;
mA.prototype.gcd = KR;
mA.prototype.isProbablePrime = bR;
var DQ = bg, u0 = DQ.sha1 = DQ.sha1 || {};
DQ.md.sha1 = DQ.md.algorithms.sha1 = u0;
u0.create = function() {
  S0 || XR();
  var A = null, g = DQ.util.createBuffer(), I = new Array(80), B = {
    algorithm: "sha1",
    blockLength: 64,
    digestLength: 20,
    // 56-bit length of message so far (does not including padding)
    messageLength: 0,
    // true message length
    fullMessageLength: null,
    // size of message length in bytes
    messageLengthSize: 8
  };
  return B.start = function() {
    B.messageLength = 0, B.fullMessageLength = B.messageLength64 = [];
    for (var Q = B.messageLengthSize / 4, E = 0; E < Q; ++E)
      B.fullMessageLength.push(0);
    return g = DQ.util.createBuffer(), A = {
      h0: 1732584193,
      h1: 4023233417,
      h2: 2562383102,
      h3: 271733878,
      h4: 3285377520
    }, B;
  }, B.start(), B.update = function(Q, E) {
    E === "utf8" && (Q = DQ.util.encodeUtf8(Q));
    var C = Q.length;
    B.messageLength += C, C = [C / 4294967296 >>> 0, C >>> 0];
    for (var o = B.fullMessageLength.length - 1; o >= 0; --o)
      B.fullMessageLength[o] += C[1], C[1] = C[0] + (B.fullMessageLength[o] / 4294967296 >>> 0), B.fullMessageLength[o] = B.fullMessageLength[o] >>> 0, C[0] = C[1] / 4294967296 >>> 0;
    return g.putBytes(Q), On(A, I, g), (g.read > 2048 || g.length() === 0) && g.compact(), B;
  }, B.digest = function() {
    var Q = DQ.util.createBuffer();
    Q.putBytes(g.bytes());
    var E = B.fullMessageLength[B.fullMessageLength.length - 1] + B.messageLengthSize, C = E & B.blockLength - 1;
    Q.putBytes(Ca.substr(0, B.blockLength - C));
    for (var o, t, e = B.fullMessageLength[0] * 8, i = 0; i < B.fullMessageLength.length - 1; ++i)
      o = B.fullMessageLength[i + 1] * 8, t = o / 4294967296 >>> 0, e += t, Q.putInt32(e >>> 0), e = o >>> 0;
    Q.putInt32(e);
    var a = {
      h0: A.h0,
      h1: A.h1,
      h2: A.h2,
      h3: A.h3,
      h4: A.h4
    };
    On(a, I, Q);
    var r = DQ.util.createBuffer();
    return r.putInt32(a.h0), r.putInt32(a.h1), r.putInt32(a.h2), r.putInt32(a.h3), r.putInt32(a.h4), r;
  }, B;
};
var Ca = null, S0 = !1;
function XR() {
  Ca = "", Ca += DQ.util.fillString("\0", 64), S0 = !0;
}
function On(A, g, I) {
  for (var B, Q, E, C, o, t, e, i, a = I.length(); a >= 64; ) {
    for (Q = A.h0, E = A.h1, C = A.h2, o = A.h3, t = A.h4, i = 0; i < 16; ++i)
      B = I.getInt32(), g[i] = B, e = o ^ E & (C ^ o), B = (Q << 5 | Q >>> 27) + e + t + 1518500249 + B, t = o, o = C, C = (E << 30 | E >>> 2) >>> 0, E = Q, Q = B;
    for (; i < 20; ++i)
      B = g[i - 3] ^ g[i - 8] ^ g[i - 14] ^ g[i - 16], B = B << 1 | B >>> 31, g[i] = B, e = o ^ E & (C ^ o), B = (Q << 5 | Q >>> 27) + e + t + 1518500249 + B, t = o, o = C, C = (E << 30 | E >>> 2) >>> 0, E = Q, Q = B;
    for (; i < 32; ++i)
      B = g[i - 3] ^ g[i - 8] ^ g[i - 14] ^ g[i - 16], B = B << 1 | B >>> 31, g[i] = B, e = E ^ C ^ o, B = (Q << 5 | Q >>> 27) + e + t + 1859775393 + B, t = o, o = C, C = (E << 30 | E >>> 2) >>> 0, E = Q, Q = B;
    for (; i < 40; ++i)
      B = g[i - 6] ^ g[i - 16] ^ g[i - 28] ^ g[i - 32], B = B << 2 | B >>> 30, g[i] = B, e = E ^ C ^ o, B = (Q << 5 | Q >>> 27) + e + t + 1859775393 + B, t = o, o = C, C = (E << 30 | E >>> 2) >>> 0, E = Q, Q = B;
    for (; i < 60; ++i)
      B = g[i - 6] ^ g[i - 16] ^ g[i - 28] ^ g[i - 32], B = B << 2 | B >>> 30, g[i] = B, e = E & C | o & (E ^ C), B = (Q << 5 | Q >>> 27) + e + t + 2400959708 + B, t = o, o = C, C = (E << 30 | E >>> 2) >>> 0, E = Q, Q = B;
    for (; i < 80; ++i)
      B = g[i - 6] ^ g[i - 16] ^ g[i - 28] ^ g[i - 32], B = B << 2 | B >>> 30, g[i] = B, e = E ^ C ^ o, B = (Q << 5 | Q >>> 27) + e + t + 3395469782 + B, t = o, o = C, C = (E << 30 | E >>> 2) >>> 0, E = Q, Q = B;
    A.h0 = A.h0 + Q | 0, A.h1 = A.h1 + E | 0, A.h2 = A.h2 + C | 0, A.h3 = A.h3 + o | 0, A.h4 = A.h4 + t | 0, a -= 64;
  }
}
var hQ = bg, U0 = hQ.pkcs1 = hQ.pkcs1 || {};
U0.encode_rsa_oaep = function(A, g, I) {
  var B, Q, E, C;
  typeof I == "string" ? (B = I, Q = arguments[3] || void 0, E = arguments[4] || void 0) : I && (B = I.label || void 0, Q = I.seed || void 0, E = I.md || void 0, I.mgf1 && I.mgf1.md && (C = I.mgf1.md)), E ? E.start() : E = hQ.md.sha1.create(), C || (C = E);
  var o = Math.ceil(A.n.bitLength() / 8), t = o - 2 * E.digestLength - 2;
  if (g.length > t) {
    var e = new Error("RSAES-OAEP input message length is too long.");
    throw e.length = g.length, e.maxLength = t, e;
  }
  B || (B = ""), E.update(B, "raw");
  for (var i = E.digest(), a = "", r = t - g.length, h = 0; h < r; h++)
    a += "\0";
  var n = i.getBytes() + a + "" + g;
  if (!Q)
    Q = hQ.random.getBytes(E.digestLength);
  else if (Q.length !== E.digestLength) {
    var e = new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.");
    throw e.seedLength = Q.length, e.digestLength = E.digestLength, e;
  }
  var l = Ei(Q, o - E.digestLength - 1, C), y = hQ.util.xorBytes(n, l, n.length), N = Ei(y, E.digestLength, C), s = hQ.util.xorBytes(Q, N, Q.length);
  return "\0" + s + y;
};
U0.decode_rsa_oaep = function(A, g, I) {
  var B, Q, E;
  typeof I == "string" ? (B = I, Q = arguments[3] || void 0) : I && (B = I.label || void 0, Q = I.md || void 0, I.mgf1 && I.mgf1.md && (E = I.mgf1.md));
  var C = Math.ceil(A.n.bitLength() / 8);
  if (g.length !== C) {
    var y = new Error("RSAES-OAEP encoded message length is invalid.");
    throw y.length = g.length, y.expectedLength = C, y;
  }
  if (Q === void 0 ? Q = hQ.md.sha1.create() : Q.start(), E || (E = Q), C < 2 * Q.digestLength + 2)
    throw new Error("RSAES-OAEP key is too short for the hash function.");
  B || (B = ""), Q.update(B, "raw");
  for (var o = Q.digest().getBytes(), t = g.charAt(0), e = g.substring(1, Q.digestLength + 1), i = g.substring(1 + Q.digestLength), a = Ei(i, Q.digestLength, E), r = hQ.util.xorBytes(e, a, e.length), h = Ei(r, C - Q.digestLength - 1, E), n = hQ.util.xorBytes(i, h, i.length), l = n.substring(0, Q.digestLength), y = t !== "\0", N = 0; N < Q.digestLength; ++N)
    y |= o.charAt(N) !== l.charAt(N);
  for (var s = 1, F = Q.digestLength, u = Q.digestLength; u < n.length; u++) {
    var U = n.charCodeAt(u), J = U & 1 ^ 1, L = s ? 65534 : 0;
    y |= U & L, s = s & J, F += s;
  }
  if (y || n.charCodeAt(F) !== 1)
    throw new Error("Invalid RSAES-OAEP padding.");
  return n.substring(F + 1);
};
function Ei(A, g, I) {
  I || (I = hQ.md.sha1.create());
  for (var B = "", Q = Math.ceil(g / I.digestLength), E = 0; E < Q; ++E) {
    var C = String.fromCharCode(
      E >> 24 & 255,
      E >> 16 & 255,
      E >> 8 & 255,
      E & 255
    );
    I.start(), I.update(A + C), B += I.digest().getBytes();
  }
  return B.substring(0, g);
}
var mQ = bg;
(function() {
  if (mQ.prime) {
    mQ.prime;
    return;
  }
  var A = mQ.prime = mQ.prime || {}, g = mQ.jsbn.BigInteger, I = [6, 4, 2, 4, 2, 4, 6, 2], B = new g(null);
  B.fromInt(30);
  var Q = function(a, r) {
    return a | r;
  };
  A.generateProbablePrime = function(a, r, h) {
    typeof r == "function" && (h = r, r = {}), r = r || {};
    var n = r.algorithm || "PRIMEINC";
    typeof n == "string" && (n = { name: n }), n.options = n.options || {};
    var l = r.prng || mQ.random, y = {
      // x is an array to fill with bytes
      nextBytes: function(N) {
        for (var s = l.getBytesSync(N.length), F = 0; F < N.length; ++F)
          N[F] = s.charCodeAt(F);
      }
    };
    if (n.name === "PRIMEINC")
      return E(a, y, n.options, h);
    throw new Error("Invalid prime generation algorithm: " + n.name);
  };
  function E(a, r, h, n) {
    return "workers" in h ? t(a, r, h, n) : C(a, r, h, n);
  }
  function C(a, r, h, n) {
    var l = e(a, r), y = 0, N = i(l.bitLength());
    "millerRabinTests" in h && (N = h.millerRabinTests);
    var s = 10;
    "maxBlockTime" in h && (s = h.maxBlockTime), o(l, a, r, y, N, s, n);
  }
  function o(a, r, h, n, l, y, N) {
    var s = +/* @__PURE__ */ new Date();
    do {
      if (a.bitLength() > r && (a = e(r, h)), a.isProbablePrime(l))
        return N(null, a);
      a.dAddOffset(I[n++ % 8], 0);
    } while (y < 0 || +/* @__PURE__ */ new Date() - s < y);
    mQ.util.setImmediate(function() {
      o(a, r, h, n, l, y, N);
    });
  }
  function t(a, r, h, n) {
    if (typeof Worker > "u")
      return C(a, r, h, n);
    var l = e(a, r), y = h.workers, N = h.workLoad || 100, s = N * 30 / 8, F = h.workerScript || "forge/prime.worker.js";
    if (y === -1)
      return mQ.util.estimateCores(function(U, J) {
        U && (J = 2), y = J - 1, u();
      });
    u();
    function u() {
      y = Math.max(1, y);
      for (var U = [], J = 0; J < y; ++J)
        U[J] = new Worker(F);
      for (var J = 0; J < y; ++J)
        U[J].addEventListener("message", f);
      var L = !1;
      function f(d) {
        if (!L) {
          var p = d.data;
          if (p.found) {
            for (var x = 0; x < U.length; ++x)
              U[x].terminate();
            return L = !0, n(null, new g(p.prime, 16));
          }
          l.bitLength() > a && (l = e(a, r));
          var M = l.toString(16);
          d.target.postMessage({
            hex: M,
            workLoad: N
          }), l.dAddOffset(s, 0);
        }
      }
    }
  }
  function e(a, r) {
    var h = new g(a, r), n = a - 1;
    return h.testBit(n) || h.bitwiseTo(g.ONE.shiftLeft(n), Q, h), h.dAddOffset(31 - h.mod(B).byteValue(), 0), h;
  }
  function i(a) {
    return a <= 100 ? 27 : a <= 150 ? 18 : a <= 200 ? 15 : a <= 250 ? 12 : a <= 300 ? 9 : a <= 350 ? 8 : a <= 400 ? 7 : a <= 500 ? 6 : a <= 600 ? 5 : a <= 800 ? 4 : a <= 1250 ? 3 : 2;
  }
})();
var tg = bg;
if (typeof AB > "u")
  var AB = tg.jsbn.BigInteger;
var ea = tg.util.isNodejs ? Yr() : null, NA = tg.asn1, ZI = tg.util;
tg.pki = tg.pki || {};
tg.pki.rsa = tg.rsa = tg.rsa || {};
var Gg = tg.pki, zR = [6, 4, 2, 4, 2, 4, 6, 2], VR = {
  // PrivateKeyInfo
  name: "PrivateKeyInfo",
  tagClass: NA.Class.UNIVERSAL,
  type: NA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    // Version (INTEGER)
    name: "PrivateKeyInfo.version",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyVersion"
  }, {
    // privateKeyAlgorithm
    name: "PrivateKeyInfo.privateKeyAlgorithm",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "AlgorithmIdentifier.algorithm",
      tagClass: NA.Class.UNIVERSAL,
      type: NA.Type.OID,
      constructed: !1,
      capture: "privateKeyOid"
    }]
  }, {
    // PrivateKey
    name: "PrivateKeyInfo",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.OCTETSTRING,
    constructed: !1,
    capture: "privateKey"
  }]
}, qR = {
  // RSAPrivateKey
  name: "RSAPrivateKey",
  tagClass: NA.Class.UNIVERSAL,
  type: NA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    // Version (INTEGER)
    name: "RSAPrivateKey.version",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyVersion"
  }, {
    // modulus (n)
    name: "RSAPrivateKey.modulus",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyModulus"
  }, {
    // publicExponent (e)
    name: "RSAPrivateKey.publicExponent",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyPublicExponent"
  }, {
    // privateExponent (d)
    name: "RSAPrivateKey.privateExponent",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyPrivateExponent"
  }, {
    // prime1 (p)
    name: "RSAPrivateKey.prime1",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyPrime1"
  }, {
    // prime2 (q)
    name: "RSAPrivateKey.prime2",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyPrime2"
  }, {
    // exponent1 (d mod (p-1))
    name: "RSAPrivateKey.exponent1",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyExponent1"
  }, {
    // exponent2 (d mod (q-1))
    name: "RSAPrivateKey.exponent2",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyExponent2"
  }, {
    // coefficient ((inverse of q) mod p)
    name: "RSAPrivateKey.coefficient",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyCoefficient"
  }]
}, PR = {
  // RSAPublicKey
  name: "RSAPublicKey",
  tagClass: NA.Class.UNIVERSAL,
  type: NA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    // modulus (n)
    name: "RSAPublicKey.modulus",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "publicKeyModulus"
  }, {
    // publicExponent (e)
    name: "RSAPublicKey.exponent",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.INTEGER,
    constructed: !1,
    capture: "publicKeyExponent"
  }]
}, WR = tg.pki.rsa.publicKeyValidator = {
  name: "SubjectPublicKeyInfo",
  tagClass: NA.Class.UNIVERSAL,
  type: NA.Type.SEQUENCE,
  constructed: !0,
  captureAsn1: "subjectPublicKeyInfo",
  value: [{
    name: "SubjectPublicKeyInfo.AlgorithmIdentifier",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "AlgorithmIdentifier.algorithm",
      tagClass: NA.Class.UNIVERSAL,
      type: NA.Type.OID,
      constructed: !1,
      capture: "publicKeyOid"
    }]
  }, {
    // subjectPublicKey
    name: "SubjectPublicKeyInfo.subjectPublicKey",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.BITSTRING,
    constructed: !1,
    value: [{
      // RSAPublicKey
      name: "SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",
      tagClass: NA.Class.UNIVERSAL,
      type: NA.Type.SEQUENCE,
      constructed: !0,
      optional: !0,
      captureAsn1: "rsaPublicKey"
    }]
  }]
}, OR = {
  name: "DigestInfo",
  tagClass: NA.Class.UNIVERSAL,
  type: NA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "DigestInfo.DigestAlgorithm",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "DigestInfo.DigestAlgorithm.algorithmIdentifier",
      tagClass: NA.Class.UNIVERSAL,
      type: NA.Type.OID,
      constructed: !1,
      capture: "algorithmIdentifier"
    }, {
      // NULL paramters
      name: "DigestInfo.DigestAlgorithm.parameters",
      tagClass: NA.Class.UNIVERSAL,
      type: NA.Type.NULL,
      // captured only to check existence for md2 and md5
      capture: "parameters",
      optional: !0,
      constructed: !1
    }]
  }, {
    // digest
    name: "DigestInfo.digest",
    tagClass: NA.Class.UNIVERSAL,
    type: NA.Type.OCTETSTRING,
    constructed: !1,
    capture: "digest"
  }]
}, jR = function(A) {
  var g;
  if (A.algorithm in Gg.oids)
    g = Gg.oids[A.algorithm];
  else {
    var I = new Error("Unknown message digest algorithm.");
    throw I.algorithm = A.algorithm, I;
  }
  var B = NA.oidToDer(g).getBytes(), Q = NA.create(
    NA.Class.UNIVERSAL,
    NA.Type.SEQUENCE,
    !0,
    []
  ), E = NA.create(
    NA.Class.UNIVERSAL,
    NA.Type.SEQUENCE,
    !0,
    []
  );
  E.value.push(NA.create(
    NA.Class.UNIVERSAL,
    NA.Type.OID,
    !1,
    B
  )), E.value.push(NA.create(
    NA.Class.UNIVERSAL,
    NA.Type.NULL,
    !1,
    ""
  ));
  var C = NA.create(
    NA.Class.UNIVERSAL,
    NA.Type.OCTETSTRING,
    !1,
    A.digest().getBytes()
  );
  return Q.value.push(E), Q.value.push(C), NA.toDer(Q).getBytes();
}, k0 = function(A, g, I) {
  if (I)
    return A.modPow(g.e, g.n);
  if (!g.p || !g.q)
    return A.modPow(g.d, g.n);
  g.dP || (g.dP = g.d.mod(g.p.subtract(AB.ONE))), g.dQ || (g.dQ = g.d.mod(g.q.subtract(AB.ONE))), g.qInv || (g.qInv = g.q.modInverse(g.p));
  var B;
  do
    B = new AB(
      tg.util.bytesToHex(tg.random.getBytes(g.n.bitLength() / 8)),
      16
    );
  while (B.compareTo(g.n) >= 0 || !B.gcd(g.n).equals(AB.ONE));
  A = A.multiply(B.modPow(g.e, g.n)).mod(g.n);
  for (var Q = A.mod(g.p).modPow(g.dP, g.p), E = A.mod(g.q).modPow(g.dQ, g.q); Q.compareTo(E) < 0; )
    Q = Q.add(g.p);
  var C = Q.subtract(E).multiply(g.qInv).mod(g.p).multiply(g.q).add(E);
  return C = C.multiply(B.modInverse(g.n)).mod(g.n), C;
};
Gg.rsa.encrypt = function(A, g, I) {
  var B = I, Q, E = Math.ceil(g.n.bitLength() / 8);
  I !== !1 && I !== !0 ? (B = I === 2, Q = H0(A, g, I)) : (Q = tg.util.createBuffer(), Q.putBytes(A));
  for (var C = new AB(Q.toHex(), 16), o = k0(C, g, B), t = o.toString(16), e = tg.util.createBuffer(), i = E - Math.ceil(t.length / 2); i > 0; )
    e.putByte(0), --i;
  return e.putBytes(tg.util.hexToBytes(t)), e.getBytes();
};
Gg.rsa.decrypt = function(A, g, I, B) {
  var Q = Math.ceil(g.n.bitLength() / 8);
  if (A.length !== Q) {
    var E = new Error("Encrypted message length is invalid.");
    throw E.length = A.length, E.expected = Q, E;
  }
  var C = new AB(tg.util.createBuffer(A).toHex(), 16);
  if (C.compareTo(g.n) >= 0)
    throw new Error("Encrypted message is invalid.");
  for (var o = k0(C, g, I), t = o.toString(16), e = tg.util.createBuffer(), i = Q - Math.ceil(t.length / 2); i > 0; )
    e.putByte(0), --i;
  return e.putBytes(tg.util.hexToBytes(t)), B !== !1 ? Ci(e.getBytes(), g, I) : e.getBytes();
};
Gg.rsa.createKeyPairGenerationState = function(A, g, I) {
  typeof A == "string" && (A = parseInt(A, 10)), A = A || 2048, I = I || {};
  var B = I.prng || tg.random, Q = {
    // x is an array to fill with bytes
    nextBytes: function(o) {
      for (var t = B.getBytesSync(o.length), e = 0; e < o.length; ++e)
        o[e] = t.charCodeAt(e);
    }
  }, E = I.algorithm || "PRIMEINC", C;
  if (E === "PRIMEINC")
    C = {
      algorithm: E,
      state: 0,
      bits: A,
      rng: Q,
      eInt: g || 65537,
      e: new AB(null),
      p: null,
      q: null,
      qBits: A >> 1,
      pBits: A - (A >> 1),
      pqState: 0,
      num: null,
      keys: null
    }, C.e.fromInt(C.eInt);
  else
    throw new Error("Invalid key generation algorithm: " + E);
  return C;
};
Gg.rsa.stepKeyPairGenerationState = function(A, g) {
  "algorithm" in A || (A.algorithm = "PRIMEINC");
  var I = new AB(null);
  I.fromInt(30);
  for (var B = 0, Q = function(a, r) {
    return a | r;
  }, E = +/* @__PURE__ */ new Date(), C, o = 0; A.keys === null && (g <= 0 || o < g); ) {
    if (A.state === 0) {
      var t = A.p === null ? A.pBits : A.qBits, e = t - 1;
      A.pqState === 0 ? (A.num = new AB(t, A.rng), A.num.testBit(e) || A.num.bitwiseTo(
        AB.ONE.shiftLeft(e),
        Q,
        A.num
      ), A.num.dAddOffset(31 - A.num.mod(I).byteValue(), 0), B = 0, ++A.pqState) : A.pqState === 1 ? A.num.bitLength() > t ? A.pqState = 0 : A.num.isProbablePrime(
        $R(A.num.bitLength())
      ) ? ++A.pqState : A.num.dAddOffset(zR[B++ % 8], 0) : A.pqState === 2 ? A.pqState = A.num.subtract(AB.ONE).gcd(A.e).compareTo(AB.ONE) === 0 ? 3 : 0 : A.pqState === 3 && (A.pqState = 0, A.p === null ? A.p = A.num : A.q = A.num, A.p !== null && A.q !== null && ++A.state, A.num = null);
    } else if (A.state === 1)
      A.p.compareTo(A.q) < 0 && (A.num = A.p, A.p = A.q, A.q = A.num), ++A.state;
    else if (A.state === 2)
      A.p1 = A.p.subtract(AB.ONE), A.q1 = A.q.subtract(AB.ONE), A.phi = A.p1.multiply(A.q1), ++A.state;
    else if (A.state === 3)
      A.phi.gcd(A.e).compareTo(AB.ONE) === 0 ? ++A.state : (A.p = null, A.q = null, A.state = 0);
    else if (A.state === 4)
      A.n = A.p.multiply(A.q), A.n.bitLength() === A.bits ? ++A.state : (A.q = null, A.state = 0);
    else if (A.state === 5) {
      var i = A.e.modInverse(A.phi);
      A.keys = {
        privateKey: Gg.rsa.setPrivateKey(
          A.n,
          A.e,
          i,
          A.p,
          A.q,
          i.mod(A.p1),
          i.mod(A.q1),
          A.q.modInverse(A.p)
        ),
        publicKey: Gg.rsa.setPublicKey(A.n, A.e)
      };
    }
    C = +/* @__PURE__ */ new Date(), o += C - E, E = C;
  }
  return A.keys !== null;
};
Gg.rsa.generateKeyPair = function(A, g, I, B) {
  if (arguments.length === 1 ? typeof A == "object" ? (I = A, A = void 0) : typeof A == "function" && (B = A, A = void 0) : arguments.length === 2 ? typeof A == "number" ? typeof g == "function" ? (B = g, g = void 0) : typeof g != "number" && (I = g, g = void 0) : (I = A, B = g, A = void 0, g = void 0) : arguments.length === 3 && (typeof g == "number" ? typeof I == "function" && (B = I, I = void 0) : (B = I, I = g, g = void 0)), I = I || {}, A === void 0 && (A = I.bits || 2048), g === void 0 && (g = I.e || 65537), !tg.options.usePureJavaScript && !I.prng && A >= 256 && A <= 16384 && (g === 65537 || g === 3)) {
    if (B) {
      if (jn("generateKeyPair"))
        return ea.generateKeyPair("rsa", {
          modulusLength: A,
          publicExponent: g,
          publicKeyEncoding: {
            type: "spki",
            format: "pem"
          },
          privateKeyEncoding: {
            type: "pkcs8",
            format: "pem"
          }
        }, function(o, t, e) {
          if (o)
            return B(o);
          B(null, {
            privateKey: Gg.privateKeyFromPem(e),
            publicKey: Gg.publicKeyFromPem(t)
          });
        });
      if (_n("generateKey") && _n("exportKey"))
        return ZI.globalScope.crypto.subtle.generateKey({
          name: "RSASSA-PKCS1-v1_5",
          modulusLength: A,
          publicExponent: Ac(g),
          hash: { name: "SHA-256" }
        }, !0, ["sign", "verify"]).then(function(o) {
          return ZI.globalScope.crypto.subtle.exportKey(
            "pkcs8",
            o.privateKey
          );
        }).then(void 0, function(o) {
          B(o);
        }).then(function(o) {
          if (o) {
            var t = Gg.privateKeyFromAsn1(
              NA.fromDer(tg.util.createBuffer(o))
            );
            B(null, {
              privateKey: t,
              publicKey: Gg.setRsaPublicKey(t.n, t.e)
            });
          }
        });
      if ($n("generateKey") && $n("exportKey")) {
        var Q = ZI.globalScope.msCrypto.subtle.generateKey({
          name: "RSASSA-PKCS1-v1_5",
          modulusLength: A,
          publicExponent: Ac(g),
          hash: { name: "SHA-256" }
        }, !0, ["sign", "verify"]);
        Q.oncomplete = function(o) {
          var t = o.target.result, e = ZI.globalScope.msCrypto.subtle.exportKey(
            "pkcs8",
            t.privateKey
          );
          e.oncomplete = function(i) {
            var a = i.target.result, r = Gg.privateKeyFromAsn1(
              NA.fromDer(tg.util.createBuffer(a))
            );
            B(null, {
              privateKey: r,
              publicKey: Gg.setRsaPublicKey(r.n, r.e)
            });
          }, e.onerror = function(i) {
            B(i);
          };
        }, Q.onerror = function(o) {
          B(o);
        };
        return;
      }
    } else if (jn("generateKeyPairSync")) {
      var E = ea.generateKeyPairSync("rsa", {
        modulusLength: A,
        publicExponent: g,
        publicKeyEncoding: {
          type: "spki",
          format: "pem"
        },
        privateKeyEncoding: {
          type: "pkcs8",
          format: "pem"
        }
      });
      return {
        privateKey: Gg.privateKeyFromPem(E.privateKey),
        publicKey: Gg.publicKeyFromPem(E.publicKey)
      };
    }
  }
  var C = Gg.rsa.createKeyPairGenerationState(A, g, I);
  if (!B)
    return Gg.rsa.stepKeyPairGenerationState(C, 0), C.keys;
  _R(C, I, B);
};
Gg.setRsaPublicKey = Gg.rsa.setPublicKey = function(A, g) {
  var I = {
    n: A,
    e: g
  };
  return I.encrypt = function(B, Q, E) {
    if (typeof Q == "string" ? Q = Q.toUpperCase() : Q === void 0 && (Q = "RSAES-PKCS1-V1_5"), Q === "RSAES-PKCS1-V1_5")
      Q = {
        encode: function(o, t, e) {
          return H0(o, t, 2).getBytes();
        }
      };
    else if (Q === "RSA-OAEP" || Q === "RSAES-OAEP")
      Q = {
        encode: function(o, t) {
          return tg.pkcs1.encode_rsa_oaep(t, o, E);
        }
      };
    else if (["RAW", "NONE", "NULL", null].indexOf(Q) !== -1)
      Q = { encode: function(o) {
        return o;
      } };
    else if (typeof Q == "string")
      throw new Error('Unsupported encryption scheme: "' + Q + '".');
    var C = Q.encode(B, I, !0);
    return Gg.rsa.encrypt(C, I, !0);
  }, I.verify = function(B, Q, E, C) {
    typeof E == "string" ? E = E.toUpperCase() : E === void 0 && (E = "RSASSA-PKCS1-V1_5"), C === void 0 && (C = {
      _parseAllDigestBytes: !0
    }), "_parseAllDigestBytes" in C || (C._parseAllDigestBytes = !0), E === "RSASSA-PKCS1-V1_5" ? E = {
      verify: function(t, e) {
        e = Ci(e, I, !0);
        var i = NA.fromDer(e, {
          parseAllBytes: C._parseAllDigestBytes
        }), a = {}, r = [];
        if (!NA.validate(i, OR, a, r)) {
          var h = new Error(
            "ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 DigestInfo value."
          );
          throw h.errors = r, h;
        }
        var n = NA.derToOid(a.algorithmIdentifier);
        if (!(n === tg.oids.md2 || n === tg.oids.md5 || n === tg.oids.sha1 || n === tg.oids.sha224 || n === tg.oids.sha256 || n === tg.oids.sha384 || n === tg.oids.sha512 || n === tg.oids["sha512-224"] || n === tg.oids["sha512-256"])) {
          var h = new Error(
            "Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier."
          );
          throw h.oid = n, h;
        }
        if ((n === tg.oids.md2 || n === tg.oids.md5) && !("parameters" in a))
          throw new Error(
            "ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 DigestInfo value. Missing algorithm identifer NULL parameters."
          );
        return t === a.digest;
      }
    } : (E === "NONE" || E === "NULL" || E === null) && (E = {
      verify: function(t, e) {
        return e = Ci(e, I, !0), t === e;
      }
    });
    var o = Gg.rsa.decrypt(Q, I, !0, !1);
    return E.verify(B, o, I.n.bitLength());
  }, I;
};
Gg.setRsaPrivateKey = Gg.rsa.setPrivateKey = function(A, g, I, B, Q, E, C, o) {
  var t = {
    n: A,
    e: g,
    d: I,
    p: B,
    q: Q,
    dP: E,
    dQ: C,
    qInv: o
  };
  return t.decrypt = function(e, i, a) {
    typeof i == "string" ? i = i.toUpperCase() : i === void 0 && (i = "RSAES-PKCS1-V1_5");
    var r = Gg.rsa.decrypt(e, t, !1, !1);
    if (i === "RSAES-PKCS1-V1_5")
      i = { decode: Ci };
    else if (i === "RSA-OAEP" || i === "RSAES-OAEP")
      i = {
        decode: function(h, n) {
          return tg.pkcs1.decode_rsa_oaep(n, h, a);
        }
      };
    else if (["RAW", "NONE", "NULL", null].indexOf(i) !== -1)
      i = { decode: function(h) {
        return h;
      } };
    else
      throw new Error('Unsupported encryption scheme: "' + i + '".');
    return i.decode(r, t, !1);
  }, t.sign = function(e, i) {
    var a = !1;
    typeof i == "string" && (i = i.toUpperCase()), i === void 0 || i === "RSASSA-PKCS1-V1_5" ? (i = { encode: jR }, a = 1) : (i === "NONE" || i === "NULL" || i === null) && (i = { encode: function() {
      return e;
    } }, a = 1);
    var r = i.encode(e, t.n.bitLength());
    return Gg.rsa.encrypt(r, t, a);
  }, t;
};
Gg.wrapRsaPrivateKey = function(A) {
  return NA.create(NA.Class.UNIVERSAL, NA.Type.SEQUENCE, !0, [
    // version (0)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      NA.integerToDer(0).getBytes()
    ),
    // privateKeyAlgorithm
    NA.create(NA.Class.UNIVERSAL, NA.Type.SEQUENCE, !0, [
      NA.create(
        NA.Class.UNIVERSAL,
        NA.Type.OID,
        !1,
        NA.oidToDer(Gg.oids.rsaEncryption).getBytes()
      ),
      NA.create(NA.Class.UNIVERSAL, NA.Type.NULL, !1, "")
    ]),
    // PrivateKey
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.OCTETSTRING,
      !1,
      NA.toDer(A).getBytes()
    )
  ]);
};
Gg.privateKeyFromAsn1 = function(A) {
  var g = {}, I = [];
  if (NA.validate(A, VR, g, I) && (A = NA.fromDer(tg.util.createBuffer(g.privateKey))), g = {}, I = [], !NA.validate(A, qR, g, I)) {
    var B = new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");
    throw B.errors = I, B;
  }
  var Q, E, C, o, t, e, i, a;
  return Q = tg.util.createBuffer(g.privateKeyModulus).toHex(), E = tg.util.createBuffer(g.privateKeyPublicExponent).toHex(), C = tg.util.createBuffer(g.privateKeyPrivateExponent).toHex(), o = tg.util.createBuffer(g.privateKeyPrime1).toHex(), t = tg.util.createBuffer(g.privateKeyPrime2).toHex(), e = tg.util.createBuffer(g.privateKeyExponent1).toHex(), i = tg.util.createBuffer(g.privateKeyExponent2).toHex(), a = tg.util.createBuffer(g.privateKeyCoefficient).toHex(), Gg.setRsaPrivateKey(
    new AB(Q, 16),
    new AB(E, 16),
    new AB(C, 16),
    new AB(o, 16),
    new AB(t, 16),
    new AB(e, 16),
    new AB(i, 16),
    new AB(a, 16)
  );
};
Gg.privateKeyToAsn1 = Gg.privateKeyToRSAPrivateKey = function(A) {
  return NA.create(NA.Class.UNIVERSAL, NA.Type.SEQUENCE, !0, [
    // version (0 = only 2 primes, 1 multiple primes)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      NA.integerToDer(0).getBytes()
    ),
    // modulus (n)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.n)
    ),
    // publicExponent (e)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.e)
    ),
    // privateExponent (d)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.d)
    ),
    // privateKeyPrime1 (p)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.p)
    ),
    // privateKeyPrime2 (q)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.q)
    ),
    // privateKeyExponent1 (dP)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.dP)
    ),
    // privateKeyExponent2 (dQ)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.dQ)
    ),
    // coefficient (qInv)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.qInv)
    )
  ]);
};
Gg.publicKeyFromAsn1 = function(A) {
  var g = {}, I = [];
  if (NA.validate(A, WR, g, I)) {
    var B = NA.derToOid(g.publicKeyOid);
    if (B !== Gg.oids.rsaEncryption) {
      var Q = new Error("Cannot read public key. Unknown OID.");
      throw Q.oid = B, Q;
    }
    A = g.rsaPublicKey;
  }
  if (I = [], !NA.validate(A, PR, g, I)) {
    var Q = new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.");
    throw Q.errors = I, Q;
  }
  var E = tg.util.createBuffer(g.publicKeyModulus).toHex(), C = tg.util.createBuffer(g.publicKeyExponent).toHex();
  return Gg.setRsaPublicKey(
    new AB(E, 16),
    new AB(C, 16)
  );
};
Gg.publicKeyToAsn1 = Gg.publicKeyToSubjectPublicKeyInfo = function(A) {
  return NA.create(NA.Class.UNIVERSAL, NA.Type.SEQUENCE, !0, [
    // AlgorithmIdentifier
    NA.create(NA.Class.UNIVERSAL, NA.Type.SEQUENCE, !0, [
      // algorithm
      NA.create(
        NA.Class.UNIVERSAL,
        NA.Type.OID,
        !1,
        NA.oidToDer(Gg.oids.rsaEncryption).getBytes()
      ),
      // parameters (null)
      NA.create(NA.Class.UNIVERSAL, NA.Type.NULL, !1, "")
    ]),
    // subjectPublicKey
    NA.create(NA.Class.UNIVERSAL, NA.Type.BITSTRING, !1, [
      Gg.publicKeyToRSAPublicKey(A)
    ])
  ]);
};
Gg.publicKeyToRSAPublicKey = function(A) {
  return NA.create(NA.Class.UNIVERSAL, NA.Type.SEQUENCE, !0, [
    // modulus (n)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.n)
    ),
    // publicExponent (e)
    NA.create(
      NA.Class.UNIVERSAL,
      NA.Type.INTEGER,
      !1,
      EQ(A.e)
    )
  ]);
};
function H0(A, g, I) {
  var B = tg.util.createBuffer(), Q = Math.ceil(g.n.bitLength() / 8);
  if (A.length > Q - 11) {
    var E = new Error("Message is too long for PKCS#1 v1.5 padding.");
    throw E.length = A.length, E.max = Q - 11, E;
  }
  B.putByte(0), B.putByte(I);
  var C = Q - 3 - A.length, o;
  if (I === 0 || I === 1) {
    o = I === 0 ? 0 : 255;
    for (var t = 0; t < C; ++t)
      B.putByte(o);
  } else
    for (; C > 0; ) {
      for (var e = 0, i = tg.random.getBytes(C), t = 0; t < C; ++t)
        o = i.charCodeAt(t), o === 0 ? ++e : B.putByte(o);
      C = e;
    }
  return B.putByte(0), B.putBytes(A), B;
}
function Ci(A, g, I, B) {
  var Q = Math.ceil(g.n.bitLength() / 8), E = tg.util.createBuffer(A), C = E.getByte(), o = E.getByte();
  if (C !== 0 || I && o !== 0 && o !== 1 || !I && o != 2 || I && o === 0 && typeof B > "u")
    throw new Error("Encryption block is invalid.");
  var t = 0;
  if (o === 0) {
    t = Q - 3 - B;
    for (var e = 0; e < t; ++e)
      if (E.getByte() !== 0)
        throw new Error("Encryption block is invalid.");
  } else if (o === 1)
    for (t = 0; E.length() > 1; ) {
      if (E.getByte() !== 255) {
        --E.read;
        break;
      }
      ++t;
    }
  else if (o === 2)
    for (t = 0; E.length() > 1; ) {
      if (E.getByte() === 0) {
        --E.read;
        break;
      }
      ++t;
    }
  var i = E.getByte();
  if (i !== 0 || t !== Q - 3 - E.length())
    throw new Error("Encryption block is invalid.");
  return E.getBytes();
}
function _R(A, g, I) {
  typeof g == "function" && (I = g, g = {}), g = g || {};
  var B = {
    algorithm: {
      name: g.algorithm || "PRIMEINC",
      options: {
        workers: g.workers || 2,
        workLoad: g.workLoad || 100,
        workerScript: g.workerScript
      }
    }
  };
  "prng" in g && (B.prng = g.prng), Q();
  function Q() {
    E(A.pBits, function(o, t) {
      if (o)
        return I(o);
      if (A.p = t, A.q !== null)
        return C(o, A.q);
      E(A.qBits, C);
    });
  }
  function E(o, t) {
    tg.prime.generateProbablePrime(o, B, t);
  }
  function C(o, t) {
    if (o)
      return I(o);
    if (A.q = t, A.p.compareTo(A.q) < 0) {
      var e = A.p;
      A.p = A.q, A.q = e;
    }
    if (A.p.subtract(AB.ONE).gcd(A.e).compareTo(AB.ONE) !== 0) {
      A.p = null, Q();
      return;
    }
    if (A.q.subtract(AB.ONE).gcd(A.e).compareTo(AB.ONE) !== 0) {
      A.q = null, E(A.qBits, C);
      return;
    }
    if (A.p1 = A.p.subtract(AB.ONE), A.q1 = A.q.subtract(AB.ONE), A.phi = A.p1.multiply(A.q1), A.phi.gcd(A.e).compareTo(AB.ONE) !== 0) {
      A.p = A.q = null, Q();
      return;
    }
    if (A.n = A.p.multiply(A.q), A.n.bitLength() !== A.bits) {
      A.q = null, E(A.qBits, C);
      return;
    }
    var i = A.e.modInverse(A.phi);
    A.keys = {
      privateKey: Gg.rsa.setPrivateKey(
        A.n,
        A.e,
        i,
        A.p,
        A.q,
        i.mod(A.p1),
        i.mod(A.q1),
        A.q.modInverse(A.p)
      ),
      publicKey: Gg.rsa.setPublicKey(A.n, A.e)
    }, I(null, A.keys);
  }
}
function EQ(A) {
  var g = A.toString(16);
  g[0] >= "8" && (g = "00" + g);
  var I = tg.util.hexToBytes(g);
  return I.length > 1 && // leading 0x00 for positive integer
  (I.charCodeAt(0) === 0 && !(I.charCodeAt(1) & 128) || // leading 0xFF for negative integer
  I.charCodeAt(0) === 255 && (I.charCodeAt(1) & 128) === 128) ? I.substr(1) : I;
}
function $R(A) {
  return A <= 100 ? 27 : A <= 150 ? 18 : A <= 200 ? 15 : A <= 250 ? 12 : A <= 300 ? 9 : A <= 350 ? 8 : A <= 400 ? 7 : A <= 500 ? 6 : A <= 600 ? 5 : A <= 800 ? 4 : A <= 1250 ? 3 : 2;
}
function jn(A) {
  return tg.util.isNodejs && typeof ea[A] == "function";
}
function _n(A) {
  return typeof ZI.globalScope < "u" && typeof ZI.globalScope.crypto == "object" && typeof ZI.globalScope.crypto.subtle == "object" && typeof ZI.globalScope.crypto.subtle[A] == "function";
}
function $n(A) {
  return typeof ZI.globalScope < "u" && typeof ZI.globalScope.msCrypto == "object" && typeof ZI.globalScope.msCrypto.subtle == "object" && typeof ZI.globalScope.msCrypto.subtle[A] == "function";
}
function Ac(A) {
  for (var g = tg.util.hexToBytes(A.toString(16)), I = new Uint8Array(g.length), B = 0; B < g.length; ++B)
    I[B] = g.charCodeAt(B);
  return I;
}
var Ag = bg;
if (typeof Af > "u")
  var Af = Ag.jsbn.BigInteger;
var kA = Ag.asn1, kg = Ag.pki = Ag.pki || {};
kg.pbe = Ag.pbe = Ag.pbe || {};
var dE = kg.oids, gf = {
  name: "EncryptedPrivateKeyInfo",
  tagClass: kA.Class.UNIVERSAL,
  type: kA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "EncryptedPrivateKeyInfo.encryptionAlgorithm",
    tagClass: kA.Class.UNIVERSAL,
    type: kA.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "AlgorithmIdentifier.algorithm",
      tagClass: kA.Class.UNIVERSAL,
      type: kA.Type.OID,
      constructed: !1,
      capture: "encryptionOid"
    }, {
      name: "AlgorithmIdentifier.parameters",
      tagClass: kA.Class.UNIVERSAL,
      type: kA.Type.SEQUENCE,
      constructed: !0,
      captureAsn1: "encryptionParams"
    }]
  }, {
    // encryptedData
    name: "EncryptedPrivateKeyInfo.encryptedData",
    tagClass: kA.Class.UNIVERSAL,
    type: kA.Type.OCTETSTRING,
    constructed: !1,
    capture: "encryptedData"
  }]
}, Bf = {
  name: "PBES2Algorithms",
  tagClass: kA.Class.UNIVERSAL,
  type: kA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "PBES2Algorithms.keyDerivationFunc",
    tagClass: kA.Class.UNIVERSAL,
    type: kA.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "PBES2Algorithms.keyDerivationFunc.oid",
      tagClass: kA.Class.UNIVERSAL,
      type: kA.Type.OID,
      constructed: !1,
      capture: "kdfOid"
    }, {
      name: "PBES2Algorithms.params",
      tagClass: kA.Class.UNIVERSAL,
      type: kA.Type.SEQUENCE,
      constructed: !0,
      value: [{
        name: "PBES2Algorithms.params.salt",
        tagClass: kA.Class.UNIVERSAL,
        type: kA.Type.OCTETSTRING,
        constructed: !1,
        capture: "kdfSalt"
      }, {
        name: "PBES2Algorithms.params.iterationCount",
        tagClass: kA.Class.UNIVERSAL,
        type: kA.Type.INTEGER,
        constructed: !1,
        capture: "kdfIterationCount"
      }, {
        name: "PBES2Algorithms.params.keyLength",
        tagClass: kA.Class.UNIVERSAL,
        type: kA.Type.INTEGER,
        constructed: !1,
        optional: !0,
        capture: "keyLength"
      }, {
        // prf
        name: "PBES2Algorithms.params.prf",
        tagClass: kA.Class.UNIVERSAL,
        type: kA.Type.SEQUENCE,
        constructed: !0,
        optional: !0,
        value: [{
          name: "PBES2Algorithms.params.prf.algorithm",
          tagClass: kA.Class.UNIVERSAL,
          type: kA.Type.OID,
          constructed: !1,
          capture: "prfOid"
        }]
      }]
    }]
  }, {
    name: "PBES2Algorithms.encryptionScheme",
    tagClass: kA.Class.UNIVERSAL,
    type: kA.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "PBES2Algorithms.encryptionScheme.oid",
      tagClass: kA.Class.UNIVERSAL,
      type: kA.Type.OID,
      constructed: !1,
      capture: "encOid"
    }, {
      name: "PBES2Algorithms.encryptionScheme.iv",
      tagClass: kA.Class.UNIVERSAL,
      type: kA.Type.OCTETSTRING,
      constructed: !1,
      capture: "encIv"
    }]
  }]
}, If = {
  name: "pkcs-12PbeParams",
  tagClass: kA.Class.UNIVERSAL,
  type: kA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "pkcs-12PbeParams.salt",
    tagClass: kA.Class.UNIVERSAL,
    type: kA.Type.OCTETSTRING,
    constructed: !1,
    capture: "salt"
  }, {
    name: "pkcs-12PbeParams.iterations",
    tagClass: kA.Class.UNIVERSAL,
    type: kA.Type.INTEGER,
    constructed: !1,
    capture: "iterations"
  }]
};
kg.encryptPrivateKeyInfo = function(A, g, I) {
  I = I || {}, I.saltSize = I.saltSize || 8, I.count = I.count || 2048, I.algorithm = I.algorithm || "aes128", I.prfAlgorithm = I.prfAlgorithm || "sha1";
  var B = Ag.random.getBytesSync(I.saltSize), Q = I.count, E = kA.integerToDer(Q), C, o, t;
  if (I.algorithm.indexOf("aes") === 0 || I.algorithm === "des") {
    var e, i, a;
    switch (I.algorithm) {
      case "aes128":
        C = 16, e = 16, i = dE["aes128-CBC"], a = Ag.aes.createEncryptionCipher;
        break;
      case "aes192":
        C = 24, e = 16, i = dE["aes192-CBC"], a = Ag.aes.createEncryptionCipher;
        break;
      case "aes256":
        C = 32, e = 16, i = dE["aes256-CBC"], a = Ag.aes.createEncryptionCipher;
        break;
      case "des":
        C = 8, e = 8, i = dE.desCBC, a = Ag.des.createEncryptionCipher;
        break;
      default:
        var r = new Error("Cannot encrypt private key. Unknown encryption algorithm.");
        throw r.algorithm = I.algorithm, r;
    }
    var h = "hmacWith" + I.prfAlgorithm.toUpperCase(), n = Y0(h), l = Ag.pkcs5.pbkdf2(g, B, Q, C, n), y = Ag.random.getBytesSync(e), N = a(l);
    N.start(y), N.update(kA.toDer(A)), N.finish(), t = N.output.getBytes();
    var s = Qf(B, E, C, h);
    o = kA.create(
      kA.Class.UNIVERSAL,
      kA.Type.SEQUENCE,
      !0,
      [
        kA.create(
          kA.Class.UNIVERSAL,
          kA.Type.OID,
          !1,
          kA.oidToDer(dE.pkcs5PBES2).getBytes()
        ),
        kA.create(kA.Class.UNIVERSAL, kA.Type.SEQUENCE, !0, [
          // keyDerivationFunc
          kA.create(kA.Class.UNIVERSAL, kA.Type.SEQUENCE, !0, [
            kA.create(
              kA.Class.UNIVERSAL,
              kA.Type.OID,
              !1,
              kA.oidToDer(dE.pkcs5PBKDF2).getBytes()
            ),
            // PBKDF2-params
            s
          ]),
          // encryptionScheme
          kA.create(kA.Class.UNIVERSAL, kA.Type.SEQUENCE, !0, [
            kA.create(
              kA.Class.UNIVERSAL,
              kA.Type.OID,
              !1,
              kA.oidToDer(i).getBytes()
            ),
            // iv
            kA.create(
              kA.Class.UNIVERSAL,
              kA.Type.OCTETSTRING,
              !1,
              y
            )
          ])
        ])
      ]
    );
  } else if (I.algorithm === "3des") {
    C = 24;
    var F = new Ag.util.ByteBuffer(B), l = kg.pbe.generatePkcs12Key(g, F, 1, Q, C), y = kg.pbe.generatePkcs12Key(g, F, 2, Q, C), N = Ag.des.createEncryptionCipher(l);
    N.start(y), N.update(kA.toDer(A)), N.finish(), t = N.output.getBytes(), o = kA.create(
      kA.Class.UNIVERSAL,
      kA.Type.SEQUENCE,
      !0,
      [
        kA.create(
          kA.Class.UNIVERSAL,
          kA.Type.OID,
          !1,
          kA.oidToDer(dE["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()
        ),
        // pkcs-12PbeParams
        kA.create(kA.Class.UNIVERSAL, kA.Type.SEQUENCE, !0, [
          // salt
          kA.create(kA.Class.UNIVERSAL, kA.Type.OCTETSTRING, !1, B),
          // iteration count
          kA.create(
            kA.Class.UNIVERSAL,
            kA.Type.INTEGER,
            !1,
            E.getBytes()
          )
        ])
      ]
    );
  } else {
    var r = new Error("Cannot encrypt private key. Unknown encryption algorithm.");
    throw r.algorithm = I.algorithm, r;
  }
  var u = kA.create(kA.Class.UNIVERSAL, kA.Type.SEQUENCE, !0, [
    // encryptionAlgorithm
    o,
    // encryptedData
    kA.create(
      kA.Class.UNIVERSAL,
      kA.Type.OCTETSTRING,
      !1,
      t
    )
  ]);
  return u;
};
kg.decryptPrivateKeyInfo = function(A, g) {
  var I = null, B = {}, Q = [];
  if (!kA.validate(A, gf, B, Q)) {
    var E = new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
    throw E.errors = Q, E;
  }
  var C = kA.derToOid(B.encryptionOid), o = kg.pbe.getCipher(C, B.encryptionParams, g), t = Ag.util.createBuffer(B.encryptedData);
  return o.update(t), o.finish() && (I = kA.fromDer(o.output)), I;
};
kg.encryptedPrivateKeyToPem = function(A, g) {
  var I = {
    type: "ENCRYPTED PRIVATE KEY",
    body: kA.toDer(A).getBytes()
  };
  return Ag.pem.encode(I, { maxline: g });
};
kg.encryptedPrivateKeyFromPem = function(A) {
  var g = Ag.pem.decode(A)[0];
  if (g.type !== "ENCRYPTED PRIVATE KEY") {
    var I = new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');
    throw I.headerType = g.type, I;
  }
  if (g.procType && g.procType.type === "ENCRYPTED")
    throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");
  return kA.fromDer(g.body);
};
kg.encryptRsaPrivateKey = function(A, g, I) {
  if (I = I || {}, !I.legacy) {
    var B = kg.wrapRsaPrivateKey(kg.privateKeyToAsn1(A));
    return B = kg.encryptPrivateKeyInfo(B, g, I), kg.encryptedPrivateKeyToPem(B);
  }
  var Q, E, C, o;
  switch (I.algorithm) {
    case "aes128":
      Q = "AES-128-CBC", C = 16, E = Ag.random.getBytesSync(16), o = Ag.aes.createEncryptionCipher;
      break;
    case "aes192":
      Q = "AES-192-CBC", C = 24, E = Ag.random.getBytesSync(16), o = Ag.aes.createEncryptionCipher;
      break;
    case "aes256":
      Q = "AES-256-CBC", C = 32, E = Ag.random.getBytesSync(16), o = Ag.aes.createEncryptionCipher;
      break;
    case "3des":
      Q = "DES-EDE3-CBC", C = 24, E = Ag.random.getBytesSync(8), o = Ag.des.createEncryptionCipher;
      break;
    case "des":
      Q = "DES-CBC", C = 8, E = Ag.random.getBytesSync(8), o = Ag.des.createEncryptionCipher;
      break;
    default:
      var t = new Error('Could not encrypt RSA private key; unsupported encryption algorithm "' + I.algorithm + '".');
      throw t.algorithm = I.algorithm, t;
  }
  var e = Ag.pbe.opensslDeriveBytes(g, E.substr(0, 8), C), i = o(e);
  i.start(E), i.update(kA.toDer(kg.privateKeyToAsn1(A))), i.finish();
  var a = {
    type: "RSA PRIVATE KEY",
    procType: {
      version: "4",
      type: "ENCRYPTED"
    },
    dekInfo: {
      algorithm: Q,
      parameters: Ag.util.bytesToHex(E).toUpperCase()
    },
    body: i.output.getBytes()
  };
  return Ag.pem.encode(a);
};
kg.decryptRsaPrivateKey = function(A, g) {
  var I = null, B = Ag.pem.decode(A)[0];
  if (B.type !== "ENCRYPTED PRIVATE KEY" && B.type !== "PRIVATE KEY" && B.type !== "RSA PRIVATE KEY") {
    var Q = new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');
    throw Q.headerType = Q, Q;
  }
  if (B.procType && B.procType.type === "ENCRYPTED") {
    var E, C;
    switch (B.dekInfo.algorithm) {
      case "DES-CBC":
        E = 8, C = Ag.des.createDecryptionCipher;
        break;
      case "DES-EDE3-CBC":
        E = 24, C = Ag.des.createDecryptionCipher;
        break;
      case "AES-128-CBC":
        E = 16, C = Ag.aes.createDecryptionCipher;
        break;
      case "AES-192-CBC":
        E = 24, C = Ag.aes.createDecryptionCipher;
        break;
      case "AES-256-CBC":
        E = 32, C = Ag.aes.createDecryptionCipher;
        break;
      case "RC2-40-CBC":
        E = 5, C = function(a) {
          return Ag.rc2.createDecryptionCipher(a, 40);
        };
        break;
      case "RC2-64-CBC":
        E = 8, C = function(a) {
          return Ag.rc2.createDecryptionCipher(a, 64);
        };
        break;
      case "RC2-128-CBC":
        E = 16, C = function(a) {
          return Ag.rc2.createDecryptionCipher(a, 128);
        };
        break;
      default:
        var Q = new Error('Could not decrypt private key; unsupported encryption algorithm "' + B.dekInfo.algorithm + '".');
        throw Q.algorithm = B.dekInfo.algorithm, Q;
    }
    var o = Ag.util.hexToBytes(B.dekInfo.parameters), t = Ag.pbe.opensslDeriveBytes(g, o.substr(0, 8), E), e = C(t);
    if (e.start(o), e.update(Ag.util.createBuffer(B.body)), e.finish())
      I = e.output.getBytes();
    else
      return I;
  } else
    I = B.body;
  return B.type === "ENCRYPTED PRIVATE KEY" ? I = kg.decryptPrivateKeyInfo(kA.fromDer(I), g) : I = kA.fromDer(I), I !== null && (I = kg.privateKeyFromAsn1(I)), I;
};
kg.pbe.generatePkcs12Key = function(A, g, I, B, Q, E) {
  var C, o;
  if (typeof E > "u" || E === null) {
    if (!("sha1" in Ag.md))
      throw new Error('"sha1" hash algorithm unavailable.');
    E = Ag.md.sha1.create();
  }
  var t = E.digestLength, e = E.blockLength, i = new Ag.util.ByteBuffer(), a = new Ag.util.ByteBuffer();
  if (A != null) {
    for (o = 0; o < A.length; o++)
      a.putInt16(A.charCodeAt(o));
    a.putInt16(0);
  }
  var r = a.length(), h = g.length(), n = new Ag.util.ByteBuffer();
  n.fillWithByte(I, e);
  var l = e * Math.ceil(h / e), y = new Ag.util.ByteBuffer();
  for (o = 0; o < l; o++)
    y.putByte(g.at(o % h));
  var N = e * Math.ceil(r / e), s = new Ag.util.ByteBuffer();
  for (o = 0; o < N; o++)
    s.putByte(a.at(o % r));
  var F = y;
  F.putBuffer(s);
  for (var u = Math.ceil(Q / t), U = 1; U <= u; U++) {
    var J = new Ag.util.ByteBuffer();
    J.putBytes(n.bytes()), J.putBytes(F.bytes());
    for (var L = 0; L < B; L++)
      E.start(), E.update(J.getBytes()), J = E.digest();
    var f = new Ag.util.ByteBuffer();
    for (o = 0; o < e; o++)
      f.putByte(J.at(o % t));
    var d = Math.ceil(h / e) + Math.ceil(r / e), p = new Ag.util.ByteBuffer();
    for (C = 0; C < d; C++) {
      var x = new Ag.util.ByteBuffer(F.getBytes(e)), M = 511;
      for (o = f.length() - 1; o >= 0; o--)
        M = M >> 8, M += f.at(o) + x.at(o), x.setAt(o, M & 255);
      p.putBuffer(x);
    }
    F = p, i.putBuffer(J);
  }
  return i.truncate(i.length() - Q), i;
};
kg.pbe.getCipher = function(A, g, I) {
  switch (A) {
    case kg.oids.pkcs5PBES2:
      return kg.pbe.getCipherForPBES2(A, g, I);
    case kg.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
    case kg.oids["pbewithSHAAnd40BitRC2-CBC"]:
      return kg.pbe.getCipherForPKCS12PBE(A, g, I);
    default:
      var B = new Error("Cannot read encrypted PBE data block. Unsupported OID.");
      throw B.oid = A, B.supportedOids = [
        "pkcs5PBES2",
        "pbeWithSHAAnd3-KeyTripleDES-CBC",
        "pbewithSHAAnd40BitRC2-CBC"
      ], B;
  }
};
kg.pbe.getCipherForPBES2 = function(A, g, I) {
  var B = {}, Q = [];
  if (!kA.validate(g, Bf, B, Q)) {
    var E = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
    throw E.errors = Q, E;
  }
  if (A = kA.derToOid(B.kdfOid), A !== kg.oids.pkcs5PBKDF2) {
    var E = new Error("Cannot read encrypted private key. Unsupported key derivation function OID.");
    throw E.oid = A, E.supportedOids = ["pkcs5PBKDF2"], E;
  }
  if (A = kA.derToOid(B.encOid), A !== kg.oids["aes128-CBC"] && A !== kg.oids["aes192-CBC"] && A !== kg.oids["aes256-CBC"] && A !== kg.oids["des-EDE3-CBC"] && A !== kg.oids.desCBC) {
    var E = new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.");
    throw E.oid = A, E.supportedOids = [
      "aes128-CBC",
      "aes192-CBC",
      "aes256-CBC",
      "des-EDE3-CBC",
      "desCBC"
    ], E;
  }
  var C = B.kdfSalt, o = Ag.util.createBuffer(B.kdfIterationCount);
  o = o.getInt(o.length() << 3);
  var t, e;
  switch (kg.oids[A]) {
    case "aes128-CBC":
      t = 16, e = Ag.aes.createDecryptionCipher;
      break;
    case "aes192-CBC":
      t = 24, e = Ag.aes.createDecryptionCipher;
      break;
    case "aes256-CBC":
      t = 32, e = Ag.aes.createDecryptionCipher;
      break;
    case "des-EDE3-CBC":
      t = 24, e = Ag.des.createDecryptionCipher;
      break;
    case "desCBC":
      t = 8, e = Ag.des.createDecryptionCipher;
      break;
  }
  var i = p0(B.prfOid), a = Ag.pkcs5.pbkdf2(I, C, o, t, i), r = B.encIv, h = e(a);
  return h.start(r), h;
};
kg.pbe.getCipherForPKCS12PBE = function(A, g, I) {
  var B = {}, Q = [];
  if (!kA.validate(g, If, B, Q)) {
    var E = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
    throw E.errors = Q, E;
  }
  var C = Ag.util.createBuffer(B.salt), o = Ag.util.createBuffer(B.iterations);
  o = o.getInt(o.length() << 3);
  var t, e, i;
  switch (A) {
    case kg.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
      t = 24, e = 8, i = Ag.des.startDecrypting;
      break;
    case kg.oids["pbewithSHAAnd40BitRC2-CBC"]:
      t = 5, e = 8, i = function(l, y) {
        var N = Ag.rc2.createDecryptionCipher(l, 40);
        return N.start(y, null), N;
      };
      break;
    default:
      var E = new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");
      throw E.oid = A, E;
  }
  var a = p0(B.prfOid), r = kg.pbe.generatePkcs12Key(I, C, 1, o, t, a);
  a.start();
  var h = kg.pbe.generatePkcs12Key(I, C, 2, o, e, a);
  return i(r, h);
};
kg.pbe.opensslDeriveBytes = function(A, g, I, B) {
  if (typeof B > "u" || B === null) {
    if (!("md5" in Ag.md))
      throw new Error('"md5" hash algorithm unavailable.');
    B = Ag.md.md5.create();
  }
  g === null && (g = "");
  for (var Q = [gc(B, A + g)], E = 16, C = 1; E < I; ++C, E += 16)
    Q.push(gc(B, Q[C - 1] + A + g));
  return Q.join("").substr(0, I);
};
function gc(A, g) {
  return A.start().update(g).digest().getBytes();
}
function p0(A) {
  var g;
  if (!A)
    g = "hmacWithSHA1";
  else if (g = kg.oids[kA.derToOid(A)], !g) {
    var I = new Error("Unsupported PRF OID.");
    throw I.oid = A, I.supported = [
      "hmacWithSHA1",
      "hmacWithSHA224",
      "hmacWithSHA256",
      "hmacWithSHA384",
      "hmacWithSHA512"
    ], I;
  }
  return Y0(g);
}
function Y0(A) {
  var g = Ag.md;
  switch (A) {
    case "hmacWithSHA224":
      g = Ag.md.sha512;
    case "hmacWithSHA1":
    case "hmacWithSHA256":
    case "hmacWithSHA384":
    case "hmacWithSHA512":
      A = A.substr(8).toLowerCase();
      break;
    default:
      var I = new Error("Unsupported PRF algorithm.");
      throw I.algorithm = A, I.supported = [
        "hmacWithSHA1",
        "hmacWithSHA224",
        "hmacWithSHA256",
        "hmacWithSHA384",
        "hmacWithSHA512"
      ], I;
  }
  if (!g || !(A in g))
    throw new Error("Unknown hash algorithm: " + A);
  return g[A].create();
}
function Qf(A, g, I, B) {
  var Q = kA.create(kA.Class.UNIVERSAL, kA.Type.SEQUENCE, !0, [
    // salt
    kA.create(
      kA.Class.UNIVERSAL,
      kA.Type.OCTETSTRING,
      !1,
      A
    ),
    // iteration count
    kA.create(
      kA.Class.UNIVERSAL,
      kA.Type.INTEGER,
      !1,
      g.getBytes()
    )
  ]);
  return B !== "hmacWithSHA1" && Q.value.push(
    // key length
    kA.create(
      kA.Class.UNIVERSAL,
      kA.Type.INTEGER,
      !1,
      Ag.util.hexToBytes(I.toString(16))
    ),
    // AlgorithmIdentifier
    kA.create(kA.Class.UNIVERSAL, kA.Type.SEQUENCE, !0, [
      // algorithm
      kA.create(
        kA.Class.UNIVERSAL,
        kA.Type.OID,
        !1,
        kA.oidToDer(kg.oids[B]).getBytes()
      ),
      // parameters (null)
      kA.create(kA.Class.UNIVERSAL, kA.Type.NULL, !1, "")
    ])
  ), Q;
}
var mC = bg, _A = mC.asn1, OC = mC.pkcs7asn1 = mC.pkcs7asn1 || {};
mC.pkcs7 = mC.pkcs7 || {};
mC.pkcs7.asn1 = OC;
var J0 = {
  name: "ContentInfo",
  tagClass: _A.Class.UNIVERSAL,
  type: _A.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "ContentInfo.ContentType",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.OID,
    constructed: !1,
    capture: "contentType"
  }, {
    name: "ContentInfo.content",
    tagClass: _A.Class.CONTEXT_SPECIFIC,
    type: 0,
    constructed: !0,
    optional: !0,
    captureAsn1: "content"
  }]
};
OC.contentInfoValidator = J0;
var L0 = {
  name: "EncryptedContentInfo",
  tagClass: _A.Class.UNIVERSAL,
  type: _A.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "EncryptedContentInfo.contentType",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.OID,
    constructed: !1,
    capture: "contentType"
  }, {
    name: "EncryptedContentInfo.contentEncryptionAlgorithm",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "EncryptedContentInfo.contentEncryptionAlgorithm.algorithm",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.OID,
      constructed: !1,
      capture: "encAlgorithm"
    }, {
      name: "EncryptedContentInfo.contentEncryptionAlgorithm.parameter",
      tagClass: _A.Class.UNIVERSAL,
      captureAsn1: "encParameter"
    }]
  }, {
    name: "EncryptedContentInfo.encryptedContent",
    tagClass: _A.Class.CONTEXT_SPECIFIC,
    type: 0,
    /* The PKCS#7 structure output by OpenSSL somewhat differs from what
     * other implementations do generate.
     *
     * OpenSSL generates a structure like this:
     * SEQUENCE {
     *    ...
     *    [0]
     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38
     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45
     *       ...
     * }
     *
     * Whereas other implementations (and this PKCS#7 module) generate:
     * SEQUENCE {
     *    ...
     *    [0] {
     *       OCTET STRING
     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38
     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45
     *          ...
     *    }
     * }
     *
     * In order to support both, we just capture the context specific
     * field here.  The OCTET STRING bit is removed below.
     */
    capture: "encryptedContent",
    captureAsn1: "encryptedContentAsn1"
  }]
};
OC.envelopedDataValidator = {
  name: "EnvelopedData",
  tagClass: _A.Class.UNIVERSAL,
  type: _A.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "EnvelopedData.Version",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.INTEGER,
    constructed: !1,
    capture: "version"
  }, {
    name: "EnvelopedData.RecipientInfos",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.SET,
    constructed: !0,
    captureAsn1: "recipientInfos"
  }].concat(L0)
};
OC.encryptedDataValidator = {
  name: "EncryptedData",
  tagClass: _A.Class.UNIVERSAL,
  type: _A.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "EncryptedData.Version",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.INTEGER,
    constructed: !1,
    capture: "version"
  }].concat(L0)
};
var Ef = {
  name: "SignerInfo",
  tagClass: _A.Class.UNIVERSAL,
  type: _A.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "SignerInfo.version",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.INTEGER,
    constructed: !1
  }, {
    name: "SignerInfo.issuerAndSerialNumber",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "SignerInfo.issuerAndSerialNumber.issuer",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.SEQUENCE,
      constructed: !0,
      captureAsn1: "issuer"
    }, {
      name: "SignerInfo.issuerAndSerialNumber.serialNumber",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.INTEGER,
      constructed: !1,
      capture: "serial"
    }]
  }, {
    name: "SignerInfo.digestAlgorithm",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "SignerInfo.digestAlgorithm.algorithm",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.OID,
      constructed: !1,
      capture: "digestAlgorithm"
    }, {
      name: "SignerInfo.digestAlgorithm.parameter",
      tagClass: _A.Class.UNIVERSAL,
      constructed: !1,
      captureAsn1: "digestParameter",
      optional: !0
    }]
  }, {
    name: "SignerInfo.authenticatedAttributes",
    tagClass: _A.Class.CONTEXT_SPECIFIC,
    type: 0,
    constructed: !0,
    optional: !0,
    capture: "authenticatedAttributes"
  }, {
    name: "SignerInfo.digestEncryptionAlgorithm",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.SEQUENCE,
    constructed: !0,
    capture: "signatureAlgorithm"
  }, {
    name: "SignerInfo.encryptedDigest",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.OCTETSTRING,
    constructed: !1,
    capture: "signature"
  }, {
    name: "SignerInfo.unauthenticatedAttributes",
    tagClass: _A.Class.CONTEXT_SPECIFIC,
    type: 1,
    constructed: !0,
    optional: !0,
    capture: "unauthenticatedAttributes"
  }]
};
OC.signedDataValidator = {
  name: "SignedData",
  tagClass: _A.Class.UNIVERSAL,
  type: _A.Type.SEQUENCE,
  constructed: !0,
  value: [
    {
      name: "SignedData.Version",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.INTEGER,
      constructed: !1,
      capture: "version"
    },
    {
      name: "SignedData.DigestAlgorithms",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.SET,
      constructed: !0,
      captureAsn1: "digestAlgorithms"
    },
    J0,
    {
      name: "SignedData.Certificates",
      tagClass: _A.Class.CONTEXT_SPECIFIC,
      type: 0,
      optional: !0,
      captureAsn1: "certificates"
    },
    {
      name: "SignedData.CertificateRevocationLists",
      tagClass: _A.Class.CONTEXT_SPECIFIC,
      type: 1,
      optional: !0,
      captureAsn1: "crls"
    },
    {
      name: "SignedData.SignerInfos",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.SET,
      capture: "signerInfos",
      optional: !0,
      value: [Ef]
    }
  ]
};
OC.recipientInfoValidator = {
  name: "RecipientInfo",
  tagClass: _A.Class.UNIVERSAL,
  type: _A.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "RecipientInfo.version",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.INTEGER,
    constructed: !1,
    capture: "version"
  }, {
    name: "RecipientInfo.issuerAndSerial",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "RecipientInfo.issuerAndSerial.issuer",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.SEQUENCE,
      constructed: !0,
      captureAsn1: "issuer"
    }, {
      name: "RecipientInfo.issuerAndSerial.serialNumber",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.INTEGER,
      constructed: !1,
      capture: "serial"
    }]
  }, {
    name: "RecipientInfo.keyEncryptionAlgorithm",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "RecipientInfo.keyEncryptionAlgorithm.algorithm",
      tagClass: _A.Class.UNIVERSAL,
      type: _A.Type.OID,
      constructed: !1,
      capture: "encAlgorithm"
    }, {
      name: "RecipientInfo.keyEncryptionAlgorithm.parameter",
      tagClass: _A.Class.UNIVERSAL,
      constructed: !1,
      captureAsn1: "encParameter",
      optional: !0
    }]
  }, {
    name: "RecipientInfo.encryptedKey",
    tagClass: _A.Class.UNIVERSAL,
    type: _A.Type.OCTETSTRING,
    constructed: !1,
    capture: "encKey"
  }]
};
var bE = bg;
bE.mgf = bE.mgf || {};
var Cf = bE.mgf.mgf1 = bE.mgf1 = bE.mgf1 || {};
Cf.create = function(A) {
  var g = {
    /**
     * Generate mask of specified length.
     *
     * @param {String} seed The seed for mask generation.
     * @param maskLen Number of bytes to generate.
     * @return {String} The generated mask.
     */
    generate: function(I, B) {
      for (var Q = new bE.util.ByteBuffer(), E = Math.ceil(B / A.digestLength), C = 0; C < E; C++) {
        var o = new bE.util.ByteBuffer();
        o.putInt32(C), A.start(), A.update(I + o.getBytes()), Q.putBuffer(A.digest());
      }
      return Q.truncate(Q.length() - B), Q.getBytes();
    }
  };
  return g;
};
var ei = bg;
ei.mgf = ei.mgf || {};
ei.mgf.mgf1 = ei.mgf1;
var RE = bg, ef = RE.pss = RE.pss || {};
ef.create = function(A) {
  arguments.length === 3 && (A = {
    md: arguments[0],
    mgf: arguments[1],
    saltLength: arguments[2]
  });
  var g = A.md, I = A.mgf, B = g.digestLength, Q = A.salt || null;
  typeof Q == "string" && (Q = RE.util.createBuffer(Q));
  var E;
  if ("saltLength" in A)
    E = A.saltLength;
  else if (Q !== null)
    E = Q.length();
  else
    throw new Error("Salt length not specified or specific salt not given.");
  if (Q !== null && Q.length() !== E)
    throw new Error("Given salt length does not match length of given salt.");
  var C = A.prng || RE.random, o = {};
  return o.encode = function(t, e) {
    var i, a = e - 1, r = Math.ceil(a / 8), h = t.digest().getBytes();
    if (r < B + E + 2)
      throw new Error("Message is too long to encrypt.");
    var n;
    Q === null ? n = C.getBytesSync(E) : n = Q.bytes();
    var l = new RE.util.ByteBuffer();
    l.fillWithByte(0, 8), l.putBytes(h), l.putBytes(n), g.start(), g.update(l.getBytes());
    var y = g.digest().getBytes(), N = new RE.util.ByteBuffer();
    N.fillWithByte(0, r - E - B - 2), N.putByte(1), N.putBytes(n);
    var s = N.getBytes(), F = r - B - 1, u = I.generate(y, F), U = "";
    for (i = 0; i < F; i++)
      U += String.fromCharCode(s.charCodeAt(i) ^ u.charCodeAt(i));
    var J = 65280 >> 8 * r - a & 255;
    return U = String.fromCharCode(U.charCodeAt(0) & ~J) + U.substr(1), U + y + "¼";
  }, o.verify = function(t, e, i) {
    var a, r = i - 1, h = Math.ceil(r / 8);
    if (e = e.substr(-h), h < B + E + 2)
      throw new Error("Inconsistent parameters to PSS signature verification.");
    if (e.charCodeAt(h - 1) !== 188)
      throw new Error("Encoded message does not end in 0xBC.");
    var n = h - B - 1, l = e.substr(0, n), y = e.substr(n, B), N = 65280 >> 8 * h - r & 255;
    if (l.charCodeAt(0) & N)
      throw new Error("Bits beyond keysize not zero as expected.");
    var s = I.generate(y, n), F = "";
    for (a = 0; a < n; a++)
      F += String.fromCharCode(l.charCodeAt(a) ^ s.charCodeAt(a));
    F = String.fromCharCode(F.charCodeAt(0) & ~N) + F.substr(1);
    var u = h - B - E - 2;
    for (a = 0; a < u; a++)
      if (F.charCodeAt(a) !== 0)
        throw new Error("Leftmost octets not zero as expected");
    if (F.charCodeAt(u) !== 1)
      throw new Error("Inconsistent PSS signature, 0x01 marker not found");
    var U = F.substr(-E), J = new RE.util.ByteBuffer();
    J.fillWithByte(0, 8), J.putBytes(t), J.putBytes(U), g.start(), g.update(J.getBytes());
    var L = g.digest().getBytes();
    return y === L;
  }, o;
};
var og = bg, q = og.asn1, zA = og.pki = og.pki || {}, _g = zA.oids, JB = {};
JB.CN = _g.commonName;
JB.commonName = "CN";
JB.C = _g.countryName;
JB.countryName = "C";
JB.L = _g.localityName;
JB.localityName = "L";
JB.ST = _g.stateOrProvinceName;
JB.stateOrProvinceName = "ST";
JB.O = _g.organizationName;
JB.organizationName = "O";
JB.OU = _g.organizationalUnitName;
JB.organizationalUnitName = "OU";
JB.E = _g.emailAddress;
JB.emailAddress = "E";
var K0 = og.pki.rsa.publicKeyValidator, tf = {
  name: "Certificate",
  tagClass: q.Class.UNIVERSAL,
  type: q.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "Certificate.TBSCertificate",
    tagClass: q.Class.UNIVERSAL,
    type: q.Type.SEQUENCE,
    constructed: !0,
    captureAsn1: "tbsCertificate",
    value: [
      {
        name: "Certificate.TBSCertificate.version",
        tagClass: q.Class.CONTEXT_SPECIFIC,
        type: 0,
        constructed: !0,
        optional: !0,
        value: [{
          name: "Certificate.TBSCertificate.version.integer",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.INTEGER,
          constructed: !1,
          capture: "certVersion"
        }]
      },
      {
        name: "Certificate.TBSCertificate.serialNumber",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.INTEGER,
        constructed: !1,
        capture: "certSerialNumber"
      },
      {
        name: "Certificate.TBSCertificate.signature",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.SEQUENCE,
        constructed: !0,
        value: [{
          name: "Certificate.TBSCertificate.signature.algorithm",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.OID,
          constructed: !1,
          capture: "certinfoSignatureOid"
        }, {
          name: "Certificate.TBSCertificate.signature.parameters",
          tagClass: q.Class.UNIVERSAL,
          optional: !0,
          captureAsn1: "certinfoSignatureParams"
        }]
      },
      {
        name: "Certificate.TBSCertificate.issuer",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.SEQUENCE,
        constructed: !0,
        captureAsn1: "certIssuer"
      },
      {
        name: "Certificate.TBSCertificate.validity",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.SEQUENCE,
        constructed: !0,
        // Note: UTC and generalized times may both appear so the capture
        // names are based on their detected order, the names used below
        // are only for the common case, which validity time really means
        // "notBefore" and which means "notAfter" will be determined by order
        value: [{
          // notBefore (Time) (UTC time case)
          name: "Certificate.TBSCertificate.validity.notBefore (utc)",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.UTCTIME,
          constructed: !1,
          optional: !0,
          capture: "certValidity1UTCTime"
        }, {
          // notBefore (Time) (generalized time case)
          name: "Certificate.TBSCertificate.validity.notBefore (generalized)",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.GENERALIZEDTIME,
          constructed: !1,
          optional: !0,
          capture: "certValidity2GeneralizedTime"
        }, {
          // notAfter (Time) (only UTC time is supported)
          name: "Certificate.TBSCertificate.validity.notAfter (utc)",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.UTCTIME,
          constructed: !1,
          optional: !0,
          capture: "certValidity3UTCTime"
        }, {
          // notAfter (Time) (only UTC time is supported)
          name: "Certificate.TBSCertificate.validity.notAfter (generalized)",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.GENERALIZEDTIME,
          constructed: !1,
          optional: !0,
          capture: "certValidity4GeneralizedTime"
        }]
      },
      {
        // Name (subject) (RDNSequence)
        name: "Certificate.TBSCertificate.subject",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.SEQUENCE,
        constructed: !0,
        captureAsn1: "certSubject"
      },
      // SubjectPublicKeyInfo
      K0,
      {
        // issuerUniqueID (optional)
        name: "Certificate.TBSCertificate.issuerUniqueID",
        tagClass: q.Class.CONTEXT_SPECIFIC,
        type: 1,
        constructed: !0,
        optional: !0,
        value: [{
          name: "Certificate.TBSCertificate.issuerUniqueID.id",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.BITSTRING,
          constructed: !1,
          // TODO: support arbitrary bit length ids
          captureBitStringValue: "certIssuerUniqueId"
        }]
      },
      {
        // subjectUniqueID (optional)
        name: "Certificate.TBSCertificate.subjectUniqueID",
        tagClass: q.Class.CONTEXT_SPECIFIC,
        type: 2,
        constructed: !0,
        optional: !0,
        value: [{
          name: "Certificate.TBSCertificate.subjectUniqueID.id",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.BITSTRING,
          constructed: !1,
          // TODO: support arbitrary bit length ids
          captureBitStringValue: "certSubjectUniqueId"
        }]
      },
      {
        // Extensions (optional)
        name: "Certificate.TBSCertificate.extensions",
        tagClass: q.Class.CONTEXT_SPECIFIC,
        type: 3,
        constructed: !0,
        captureAsn1: "certExtensions",
        optional: !0
      }
    ]
  }, {
    // AlgorithmIdentifier (signature algorithm)
    name: "Certificate.signatureAlgorithm",
    tagClass: q.Class.UNIVERSAL,
    type: q.Type.SEQUENCE,
    constructed: !0,
    value: [{
      // algorithm
      name: "Certificate.signatureAlgorithm.algorithm",
      tagClass: q.Class.UNIVERSAL,
      type: q.Type.OID,
      constructed: !1,
      capture: "certSignatureOid"
    }, {
      name: "Certificate.TBSCertificate.signature.parameters",
      tagClass: q.Class.UNIVERSAL,
      optional: !0,
      captureAsn1: "certSignatureParams"
    }]
  }, {
    // SignatureValue
    name: "Certificate.signatureValue",
    tagClass: q.Class.UNIVERSAL,
    type: q.Type.BITSTRING,
    constructed: !1,
    captureBitStringValue: "certSignature"
  }]
}, of = {
  name: "rsapss",
  tagClass: q.Class.UNIVERSAL,
  type: q.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "rsapss.hashAlgorithm",
    tagClass: q.Class.CONTEXT_SPECIFIC,
    type: 0,
    constructed: !0,
    value: [{
      name: "rsapss.hashAlgorithm.AlgorithmIdentifier",
      tagClass: q.Class.UNIVERSAL,
      type: q.Class.SEQUENCE,
      constructed: !0,
      optional: !0,
      value: [{
        name: "rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.OID,
        constructed: !1,
        capture: "hashOid"
        /* parameter block omitted, for SHA1 NULL anyhow. */
      }]
    }]
  }, {
    name: "rsapss.maskGenAlgorithm",
    tagClass: q.Class.CONTEXT_SPECIFIC,
    type: 1,
    constructed: !0,
    value: [{
      name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier",
      tagClass: q.Class.UNIVERSAL,
      type: q.Class.SEQUENCE,
      constructed: !0,
      optional: !0,
      value: [{
        name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.OID,
        constructed: !1,
        capture: "maskGenOid"
      }, {
        name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.SEQUENCE,
        constructed: !0,
        value: [{
          name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.OID,
          constructed: !1,
          capture: "maskGenHashOid"
          /* parameter block omitted, for SHA1 NULL anyhow. */
        }]
      }]
    }]
  }, {
    name: "rsapss.saltLength",
    tagClass: q.Class.CONTEXT_SPECIFIC,
    type: 2,
    optional: !0,
    value: [{
      name: "rsapss.saltLength.saltLength",
      tagClass: q.Class.UNIVERSAL,
      type: q.Class.INTEGER,
      constructed: !1,
      capture: "saltLength"
    }]
  }, {
    name: "rsapss.trailerField",
    tagClass: q.Class.CONTEXT_SPECIFIC,
    type: 3,
    optional: !0,
    value: [{
      name: "rsapss.trailer.trailer",
      tagClass: q.Class.UNIVERSAL,
      type: q.Class.INTEGER,
      constructed: !1,
      capture: "trailer"
    }]
  }]
}, af = {
  name: "CertificationRequestInfo",
  tagClass: q.Class.UNIVERSAL,
  type: q.Type.SEQUENCE,
  constructed: !0,
  captureAsn1: "certificationRequestInfo",
  value: [
    {
      name: "CertificationRequestInfo.integer",
      tagClass: q.Class.UNIVERSAL,
      type: q.Type.INTEGER,
      constructed: !1,
      capture: "certificationRequestInfoVersion"
    },
    {
      // Name (subject) (RDNSequence)
      name: "CertificationRequestInfo.subject",
      tagClass: q.Class.UNIVERSAL,
      type: q.Type.SEQUENCE,
      constructed: !0,
      captureAsn1: "certificationRequestInfoSubject"
    },
    // SubjectPublicKeyInfo
    K0,
    {
      name: "CertificationRequestInfo.attributes",
      tagClass: q.Class.CONTEXT_SPECIFIC,
      type: 0,
      constructed: !0,
      optional: !0,
      capture: "certificationRequestInfoAttributes",
      value: [{
        name: "CertificationRequestInfo.attributes",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.SEQUENCE,
        constructed: !0,
        value: [{
          name: "CertificationRequestInfo.attributes.type",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.OID,
          constructed: !1
        }, {
          name: "CertificationRequestInfo.attributes.value",
          tagClass: q.Class.UNIVERSAL,
          type: q.Type.SET,
          constructed: !0
        }]
      }]
    }
  ]
}, rf = {
  name: "CertificationRequest",
  tagClass: q.Class.UNIVERSAL,
  type: q.Type.SEQUENCE,
  constructed: !0,
  captureAsn1: "csr",
  value: [
    af,
    {
      // AlgorithmIdentifier (signature algorithm)
      name: "CertificationRequest.signatureAlgorithm",
      tagClass: q.Class.UNIVERSAL,
      type: q.Type.SEQUENCE,
      constructed: !0,
      value: [{
        // algorithm
        name: "CertificationRequest.signatureAlgorithm.algorithm",
        tagClass: q.Class.UNIVERSAL,
        type: q.Type.OID,
        constructed: !1,
        capture: "csrSignatureOid"
      }, {
        name: "CertificationRequest.signatureAlgorithm.parameters",
        tagClass: q.Class.UNIVERSAL,
        optional: !0,
        captureAsn1: "csrSignatureParams"
      }]
    },
    {
      // signature
      name: "CertificationRequest.signature",
      tagClass: q.Class.UNIVERSAL,
      type: q.Type.BITSTRING,
      constructed: !1,
      captureBitStringValue: "csrSignature"
    }
  ]
};
zA.RDNAttributesAsArray = function(A, g) {
  for (var I = [], B, Q, E, C = 0; C < A.value.length; ++C) {
    B = A.value[C];
    for (var o = 0; o < B.value.length; ++o)
      E = {}, Q = B.value[o], E.type = q.derToOid(Q.value[0].value), E.value = Q.value[1].value, E.valueTagClass = Q.value[1].type, E.type in _g && (E.name = _g[E.type], E.name in JB && (E.shortName = JB[E.name])), g && (g.update(E.type), g.update(E.value)), I.push(E);
  }
  return I;
};
zA.CRIAttributesAsArray = function(A) {
  for (var g = [], I = 0; I < A.length; ++I)
    for (var B = A[I], Q = q.derToOid(B.value[0].value), E = B.value[1].value, C = 0; C < E.length; ++C) {
      var o = {};
      if (o.type = Q, o.value = E[C].value, o.valueTagClass = E[C].type, o.type in _g && (o.name = _g[o.type], o.name in JB && (o.shortName = JB[o.name])), o.type === _g.extensionRequest) {
        o.extensions = [];
        for (var t = 0; t < o.value.length; ++t)
          o.extensions.push(zA.certificateExtensionFromAsn1(o.value[t]));
      }
      g.push(o);
    }
  return g;
};
function EE(A, g) {
  typeof g == "string" && (g = { shortName: g });
  for (var I = null, B, Q = 0; I === null && Q < A.attributes.length; ++Q)
    B = A.attributes[Q], (g.type && g.type === B.type || g.name && g.name === B.name || g.shortName && g.shortName === B.shortName) && (I = B);
  return I;
}
var ti = function(A, g, I) {
  var B = {};
  if (A !== _g["RSASSA-PSS"])
    return B;
  I && (B = {
    hash: {
      algorithmOid: _g.sha1
    },
    mgf: {
      algorithmOid: _g.mgf1,
      hash: {
        algorithmOid: _g.sha1
      }
    },
    saltLength: 20
  });
  var Q = {}, E = [];
  if (!q.validate(g, of, Q, E)) {
    var C = new Error("Cannot read RSASSA-PSS parameter block.");
    throw C.errors = E, C;
  }
  return Q.hashOid !== void 0 && (B.hash = B.hash || {}, B.hash.algorithmOid = q.derToOid(Q.hashOid)), Q.maskGenOid !== void 0 && (B.mgf = B.mgf || {}, B.mgf.algorithmOid = q.derToOid(Q.maskGenOid), B.mgf.hash = B.mgf.hash || {}, B.mgf.hash.algorithmOid = q.derToOid(Q.maskGenHashOid)), Q.saltLength !== void 0 && (B.saltLength = Q.saltLength.charCodeAt(0)), B;
}, ki = function(A) {
  switch (_g[A.signatureOid]) {
    case "sha1WithRSAEncryption":
    case "sha1WithRSASignature":
      return og.md.sha1.create();
    case "md5WithRSAEncryption":
      return og.md.md5.create();
    case "sha256WithRSAEncryption":
      return og.md.sha256.create();
    case "sha384WithRSAEncryption":
      return og.md.sha384.create();
    case "sha512WithRSAEncryption":
      return og.md.sha512.create();
    case "RSASSA-PSS":
      return og.md.sha256.create();
    default:
      var g = new Error(
        "Could not compute " + A.type + " digest. Unknown signature OID."
      );
      throw g.signatureOid = A.signatureOid, g;
  }
}, m0 = function(A) {
  var g = A.certificate, I;
  switch (g.signatureOid) {
    case _g.sha1WithRSAEncryption:
    case _g.sha1WithRSASignature:
      break;
    case _g["RSASSA-PSS"]:
      var B, Q;
      if (B = _g[g.signatureParameters.mgf.hash.algorithmOid], B === void 0 || og.md[B] === void 0) {
        var E = new Error("Unsupported MGF hash function.");
        throw E.oid = g.signatureParameters.mgf.hash.algorithmOid, E.name = B, E;
      }
      if (Q = _g[g.signatureParameters.mgf.algorithmOid], Q === void 0 || og.mgf[Q] === void 0) {
        var E = new Error("Unsupported MGF function.");
        throw E.oid = g.signatureParameters.mgf.algorithmOid, E.name = Q, E;
      }
      if (Q = og.mgf[Q].create(og.md[B].create()), B = _g[g.signatureParameters.hash.algorithmOid], B === void 0 || og.md[B] === void 0) {
        var E = new Error("Unsupported RSASSA-PSS hash function.");
        throw E.oid = g.signatureParameters.hash.algorithmOid, E.name = B, E;
      }
      I = og.pss.create(
        og.md[B].create(),
        Q,
        g.signatureParameters.saltLength
      );
      break;
  }
  return g.publicKey.verify(
    A.md.digest().getBytes(),
    A.signature,
    I
  );
};
zA.certificateFromPem = function(A, g, I) {
  var B = og.pem.decode(A)[0];
  if (B.type !== "CERTIFICATE" && B.type !== "X509 CERTIFICATE" && B.type !== "TRUSTED CERTIFICATE") {
    var Q = new Error(
      'Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".'
    );
    throw Q.headerType = B.type, Q;
  }
  if (B.procType && B.procType.type === "ENCRYPTED")
    throw new Error(
      "Could not convert certificate from PEM; PEM is encrypted."
    );
  var E = q.fromDer(B.body, I);
  return zA.certificateFromAsn1(E, g);
};
zA.certificateToPem = function(A, g) {
  var I = {
    type: "CERTIFICATE",
    body: q.toDer(zA.certificateToAsn1(A)).getBytes()
  };
  return og.pem.encode(I, { maxline: g });
};
zA.publicKeyFromPem = function(A) {
  var g = og.pem.decode(A)[0];
  if (g.type !== "PUBLIC KEY" && g.type !== "RSA PUBLIC KEY") {
    var I = new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');
    throw I.headerType = g.type, I;
  }
  if (g.procType && g.procType.type === "ENCRYPTED")
    throw new Error("Could not convert public key from PEM; PEM is encrypted.");
  var B = q.fromDer(g.body);
  return zA.publicKeyFromAsn1(B);
};
zA.publicKeyToPem = function(A, g) {
  var I = {
    type: "PUBLIC KEY",
    body: q.toDer(zA.publicKeyToAsn1(A)).getBytes()
  };
  return og.pem.encode(I, { maxline: g });
};
zA.publicKeyToRSAPublicKeyPem = function(A, g) {
  var I = {
    type: "RSA PUBLIC KEY",
    body: q.toDer(zA.publicKeyToRSAPublicKey(A)).getBytes()
  };
  return og.pem.encode(I, { maxline: g });
};
zA.getPublicKeyFingerprint = function(A, g) {
  g = g || {};
  var I = g.md || og.md.sha1.create(), B = g.type || "RSAPublicKey", Q;
  switch (B) {
    case "RSAPublicKey":
      Q = q.toDer(zA.publicKeyToRSAPublicKey(A)).getBytes();
      break;
    case "SubjectPublicKeyInfo":
      Q = q.toDer(zA.publicKeyToAsn1(A)).getBytes();
      break;
    default:
      throw new Error('Unknown fingerprint type "' + g.type + '".');
  }
  I.start(), I.update(Q);
  var E = I.digest();
  if (g.encoding === "hex") {
    var C = E.toHex();
    return g.delimiter ? C.match(/.{2}/g).join(g.delimiter) : C;
  } else {
    if (g.encoding === "binary")
      return E.getBytes();
    if (g.encoding)
      throw new Error('Unknown encoding "' + g.encoding + '".');
  }
  return E;
};
zA.certificationRequestFromPem = function(A, g, I) {
  var B = og.pem.decode(A)[0];
  if (B.type !== "CERTIFICATE REQUEST") {
    var Q = new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');
    throw Q.headerType = B.type, Q;
  }
  if (B.procType && B.procType.type === "ENCRYPTED")
    throw new Error("Could not convert certification request from PEM; PEM is encrypted.");
  var E = q.fromDer(B.body, I);
  return zA.certificationRequestFromAsn1(E, g);
};
zA.certificationRequestToPem = function(A, g) {
  var I = {
    type: "CERTIFICATE REQUEST",
    body: q.toDer(zA.certificationRequestToAsn1(A)).getBytes()
  };
  return og.pem.encode(I, { maxline: g });
};
zA.createCertificate = function() {
  var A = {};
  return A.version = 2, A.serialNumber = "00", A.signatureOid = null, A.signature = null, A.siginfo = {}, A.siginfo.algorithmOid = null, A.validity = {}, A.validity.notBefore = /* @__PURE__ */ new Date(), A.validity.notAfter = /* @__PURE__ */ new Date(), A.issuer = {}, A.issuer.getField = function(g) {
    return EE(A.issuer, g);
  }, A.issuer.addField = function(g) {
    TI([g]), A.issuer.attributes.push(g);
  }, A.issuer.attributes = [], A.issuer.hash = null, A.subject = {}, A.subject.getField = function(g) {
    return EE(A.subject, g);
  }, A.subject.addField = function(g) {
    TI([g]), A.subject.attributes.push(g);
  }, A.subject.attributes = [], A.subject.hash = null, A.extensions = [], A.publicKey = null, A.md = null, A.setSubject = function(g, I) {
    TI(g), A.subject.attributes = g, delete A.subject.uniqueId, I && (A.subject.uniqueId = I), A.subject.hash = null;
  }, A.setIssuer = function(g, I) {
    TI(g), A.issuer.attributes = g, delete A.issuer.uniqueId, I && (A.issuer.uniqueId = I), A.issuer.hash = null;
  }, A.setExtensions = function(g) {
    for (var I = 0; I < g.length; ++I)
      x0(g[I], { cert: A });
    A.extensions = g;
  }, A.getExtension = function(g) {
    typeof g == "string" && (g = { name: g });
    for (var I = null, B, Q = 0; I === null && Q < A.extensions.length; ++Q)
      B = A.extensions[Q], (g.id && B.id === g.id || g.name && B.name === g.name) && (I = B);
    return I;
  }, A.sign = function(g, I) {
    A.md = I || og.md.sha1.create();
    var B = _g[A.md.algorithm + "WithRSAEncryption"];
    if (!B) {
      var Q = new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");
      throw Q.algorithm = A.md.algorithm, Q;
    }
    A.signatureOid = A.siginfo.algorithmOid = B, A.tbsCertificate = zA.getTBSCertificate(A);
    var E = q.toDer(A.tbsCertificate);
    A.md.update(E.getBytes()), A.signature = g.sign(A.md);
  }, A.verify = function(g) {
    var I = !1;
    if (!A.issued(g)) {
      var B = g.issuer, Q = A.subject, E = new Error(
        "The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject."
      );
      throw E.expectedIssuer = Q.attributes, E.actualIssuer = B.attributes, E;
    }
    var C = g.md;
    if (C === null) {
      C = ki({
        signatureOid: g.signatureOid,
        type: "certificate"
      });
      var o = g.tbsCertificate || zA.getTBSCertificate(g), t = q.toDer(o);
      C.update(t.getBytes());
    }
    return C !== null && (I = m0({
      certificate: A,
      md: C,
      signature: g.signature
    })), I;
  }, A.isIssuer = function(g) {
    var I = !1, B = A.issuer, Q = g.subject;
    if (B.hash && Q.hash)
      I = B.hash === Q.hash;
    else if (B.attributes.length === Q.attributes.length) {
      I = !0;
      for (var E, C, o = 0; I && o < B.attributes.length; ++o)
        E = B.attributes[o], C = Q.attributes[o], (E.type !== C.type || E.value !== C.value) && (I = !1);
    }
    return I;
  }, A.issued = function(g) {
    return g.isIssuer(A);
  }, A.generateSubjectKeyIdentifier = function() {
    return zA.getPublicKeyFingerprint(A.publicKey, { type: "RSAPublicKey" });
  }, A.verifySubjectKeyIdentifier = function() {
    for (var g = _g.subjectKeyIdentifier, I = 0; I < A.extensions.length; ++I) {
      var B = A.extensions[I];
      if (B.id === g) {
        var Q = A.generateSubjectKeyIdentifier().getBytes();
        return og.util.hexToBytes(B.subjectKeyIdentifier) === Q;
      }
    }
    return !1;
  }, A;
};
zA.certificateFromAsn1 = function(A, g) {
  var I = {}, B = [];
  if (!q.validate(A, tf, I, B)) {
    var Q = new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.");
    throw Q.errors = B, Q;
  }
  var E = q.derToOid(I.publicKeyOid);
  if (E !== zA.oids.rsaEncryption)
    throw new Error("Cannot read public key. OID is not RSA.");
  var C = zA.createCertificate();
  C.version = I.certVersion ? I.certVersion.charCodeAt(0) : 0;
  var o = og.util.createBuffer(I.certSerialNumber);
  C.serialNumber = o.toHex(), C.signatureOid = og.asn1.derToOid(I.certSignatureOid), C.signatureParameters = ti(
    C.signatureOid,
    I.certSignatureParams,
    !0
  ), C.siginfo.algorithmOid = og.asn1.derToOid(I.certinfoSignatureOid), C.siginfo.parameters = ti(
    C.siginfo.algorithmOid,
    I.certinfoSignatureParams,
    !1
  ), C.signature = I.certSignature;
  var t = [];
  if (I.certValidity1UTCTime !== void 0 && t.push(q.utcTimeToDate(I.certValidity1UTCTime)), I.certValidity2GeneralizedTime !== void 0 && t.push(q.generalizedTimeToDate(
    I.certValidity2GeneralizedTime
  )), I.certValidity3UTCTime !== void 0 && t.push(q.utcTimeToDate(I.certValidity3UTCTime)), I.certValidity4GeneralizedTime !== void 0 && t.push(q.generalizedTimeToDate(
    I.certValidity4GeneralizedTime
  )), t.length > 2)
    throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");
  if (t.length < 2)
    throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");
  if (C.validity.notBefore = t[0], C.validity.notAfter = t[1], C.tbsCertificate = I.tbsCertificate, g) {
    C.md = ki({
      signatureOid: C.signatureOid,
      type: "certificate"
    });
    var e = q.toDer(C.tbsCertificate);
    C.md.update(e.getBytes());
  }
  var i = og.md.sha1.create(), a = q.toDer(I.certIssuer);
  i.update(a.getBytes()), C.issuer.getField = function(n) {
    return EE(C.issuer, n);
  }, C.issuer.addField = function(n) {
    TI([n]), C.issuer.attributes.push(n);
  }, C.issuer.attributes = zA.RDNAttributesAsArray(I.certIssuer), I.certIssuerUniqueId && (C.issuer.uniqueId = I.certIssuerUniqueId), C.issuer.hash = i.digest().toHex();
  var r = og.md.sha1.create(), h = q.toDer(I.certSubject);
  return r.update(h.getBytes()), C.subject.getField = function(n) {
    return EE(C.subject, n);
  }, C.subject.addField = function(n) {
    TI([n]), C.subject.attributes.push(n);
  }, C.subject.attributes = zA.RDNAttributesAsArray(I.certSubject), I.certSubjectUniqueId && (C.subject.uniqueId = I.certSubjectUniqueId), C.subject.hash = r.digest().toHex(), I.certExtensions ? C.extensions = zA.certificateExtensionsFromAsn1(I.certExtensions) : C.extensions = [], C.publicKey = zA.publicKeyFromAsn1(I.subjectPublicKeyInfo), C;
};
zA.certificateExtensionsFromAsn1 = function(A) {
  for (var g = [], I = 0; I < A.value.length; ++I)
    for (var B = A.value[I], Q = 0; Q < B.value.length; ++Q)
      g.push(zA.certificateExtensionFromAsn1(B.value[Q]));
  return g;
};
zA.certificateExtensionFromAsn1 = function(A) {
  var g = {};
  if (g.id = q.derToOid(A.value[0].value), g.critical = !1, A.value[1].type === q.Type.BOOLEAN ? (g.critical = A.value[1].value.charCodeAt(0) !== 0, g.value = A.value[2].value) : g.value = A.value[1].value, g.id in _g) {
    if (g.name = _g[g.id], g.name === "keyUsage") {
      var I = q.fromDer(g.value), B = 0, Q = 0;
      I.value.length > 1 && (B = I.value.charCodeAt(1), Q = I.value.length > 2 ? I.value.charCodeAt(2) : 0), g.digitalSignature = (B & 128) === 128, g.nonRepudiation = (B & 64) === 64, g.keyEncipherment = (B & 32) === 32, g.dataEncipherment = (B & 16) === 16, g.keyAgreement = (B & 8) === 8, g.keyCertSign = (B & 4) === 4, g.cRLSign = (B & 2) === 2, g.encipherOnly = (B & 1) === 1, g.decipherOnly = (Q & 128) === 128;
    } else if (g.name === "basicConstraints") {
      var I = q.fromDer(g.value);
      I.value.length > 0 && I.value[0].type === q.Type.BOOLEAN ? g.cA = I.value[0].value.charCodeAt(0) !== 0 : g.cA = !1;
      var E = null;
      I.value.length > 0 && I.value[0].type === q.Type.INTEGER ? E = I.value[0].value : I.value.length > 1 && (E = I.value[1].value), E !== null && (g.pathLenConstraint = q.derToInteger(E));
    } else if (g.name === "extKeyUsage")
      for (var I = q.fromDer(g.value), C = 0; C < I.value.length; ++C) {
        var o = q.derToOid(I.value[C].value);
        o in _g ? g[_g[o]] = !0 : g[o] = !0;
      }
    else if (g.name === "nsCertType") {
      var I = q.fromDer(g.value), B = 0;
      I.value.length > 1 && (B = I.value.charCodeAt(1)), g.client = (B & 128) === 128, g.server = (B & 64) === 64, g.email = (B & 32) === 32, g.objsign = (B & 16) === 16, g.reserved = (B & 8) === 8, g.sslCA = (B & 4) === 4, g.emailCA = (B & 2) === 2, g.objCA = (B & 1) === 1;
    } else if (g.name === "subjectAltName" || g.name === "issuerAltName") {
      g.altNames = [];
      for (var t, I = q.fromDer(g.value), e = 0; e < I.value.length; ++e) {
        t = I.value[e];
        var i = {
          type: t.type,
          value: t.value
        };
        switch (g.altNames.push(i), t.type) {
          case 1:
          case 2:
          case 6:
            break;
          case 7:
            i.ip = og.util.bytesToIP(t.value);
            break;
          case 8:
            i.oid = q.derToOid(t.value);
            break;
        }
      }
    } else if (g.name === "subjectKeyIdentifier") {
      var I = q.fromDer(g.value);
      g.subjectKeyIdentifier = og.util.bytesToHex(I.value);
    }
  }
  return g;
};
zA.certificationRequestFromAsn1 = function(A, g) {
  var I = {}, B = [];
  if (!q.validate(A, rf, I, B)) {
    var Q = new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.");
    throw Q.errors = B, Q;
  }
  var E = q.derToOid(I.publicKeyOid);
  if (E !== zA.oids.rsaEncryption)
    throw new Error("Cannot read public key. OID is not RSA.");
  var C = zA.createCertificationRequest();
  if (C.version = I.csrVersion ? I.csrVersion.charCodeAt(0) : 0, C.signatureOid = og.asn1.derToOid(I.csrSignatureOid), C.signatureParameters = ti(
    C.signatureOid,
    I.csrSignatureParams,
    !0
  ), C.siginfo.algorithmOid = og.asn1.derToOid(I.csrSignatureOid), C.siginfo.parameters = ti(
    C.siginfo.algorithmOid,
    I.csrSignatureParams,
    !1
  ), C.signature = I.csrSignature, C.certificationRequestInfo = I.certificationRequestInfo, g) {
    C.md = ki({
      signatureOid: C.signatureOid,
      type: "certification request"
    });
    var o = q.toDer(C.certificationRequestInfo);
    C.md.update(o.getBytes());
  }
  var t = og.md.sha1.create();
  return C.subject.getField = function(e) {
    return EE(C.subject, e);
  }, C.subject.addField = function(e) {
    TI([e]), C.subject.attributes.push(e);
  }, C.subject.attributes = zA.RDNAttributesAsArray(
    I.certificationRequestInfoSubject,
    t
  ), C.subject.hash = t.digest().toHex(), C.publicKey = zA.publicKeyFromAsn1(I.subjectPublicKeyInfo), C.getAttribute = function(e) {
    return EE(C, e);
  }, C.addAttribute = function(e) {
    TI([e]), C.attributes.push(e);
  }, C.attributes = zA.CRIAttributesAsArray(
    I.certificationRequestInfoAttributes || []
  ), C;
};
zA.createCertificationRequest = function() {
  var A = {};
  return A.version = 0, A.signatureOid = null, A.signature = null, A.siginfo = {}, A.siginfo.algorithmOid = null, A.subject = {}, A.subject.getField = function(g) {
    return EE(A.subject, g);
  }, A.subject.addField = function(g) {
    TI([g]), A.subject.attributes.push(g);
  }, A.subject.attributes = [], A.subject.hash = null, A.publicKey = null, A.attributes = [], A.getAttribute = function(g) {
    return EE(A, g);
  }, A.addAttribute = function(g) {
    TI([g]), A.attributes.push(g);
  }, A.md = null, A.setSubject = function(g) {
    TI(g), A.subject.attributes = g, A.subject.hash = null;
  }, A.setAttributes = function(g) {
    TI(g), A.attributes = g;
  }, A.sign = function(g, I) {
    A.md = I || og.md.sha1.create();
    var B = _g[A.md.algorithm + "WithRSAEncryption"];
    if (!B) {
      var Q = new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");
      throw Q.algorithm = A.md.algorithm, Q;
    }
    A.signatureOid = A.siginfo.algorithmOid = B, A.certificationRequestInfo = zA.getCertificationRequestInfo(A);
    var E = q.toDer(A.certificationRequestInfo);
    A.md.update(E.getBytes()), A.signature = g.sign(A.md);
  }, A.verify = function() {
    var g = !1, I = A.md;
    if (I === null) {
      I = ki({
        signatureOid: A.signatureOid,
        type: "certification request"
      });
      var B = A.certificationRequestInfo || zA.getCertificationRequestInfo(A), Q = q.toDer(B);
      I.update(Q.getBytes());
    }
    return I !== null && (g = m0({
      certificate: A,
      md: I,
      signature: A.signature
    })), g;
  }, A;
};
function xC(A) {
  for (var g = q.create(
    q.Class.UNIVERSAL,
    q.Type.SEQUENCE,
    !0,
    []
  ), I, B, Q = A.attributes, E = 0; E < Q.length; ++E) {
    I = Q[E];
    var C = I.value, o = q.Type.PRINTABLESTRING;
    "valueTagClass" in I && (o = I.valueTagClass, o === q.Type.UTF8 && (C = og.util.encodeUtf8(C))), B = q.create(q.Class.UNIVERSAL, q.Type.SET, !0, [
      q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
        // AttributeType
        q.create(
          q.Class.UNIVERSAL,
          q.Type.OID,
          !1,
          q.oidToDer(I.type).getBytes()
        ),
        // AttributeValue
        q.create(q.Class.UNIVERSAL, o, !1, C)
      ])
    ]), g.value.push(B);
  }
  return g;
}
function TI(A) {
  for (var g, I = 0; I < A.length; ++I) {
    if (g = A[I], typeof g.name > "u" && (g.type && g.type in zA.oids ? g.name = zA.oids[g.type] : g.shortName && g.shortName in JB && (g.name = zA.oids[JB[g.shortName]])), typeof g.type > "u")
      if (g.name && g.name in zA.oids)
        g.type = zA.oids[g.name];
      else {
        var B = new Error("Attribute type not specified.");
        throw B.attribute = g, B;
      }
    if (typeof g.shortName > "u" && g.name && g.name in JB && (g.shortName = JB[g.name]), g.type === _g.extensionRequest && (g.valueConstructed = !0, g.valueTagClass = q.Type.SEQUENCE, !g.value && g.extensions)) {
      g.value = [];
      for (var Q = 0; Q < g.extensions.length; ++Q)
        g.value.push(zA.certificateExtensionToAsn1(
          x0(g.extensions[Q])
        ));
    }
    if (typeof g.value > "u") {
      var B = new Error("Attribute value not specified.");
      throw B.attribute = g, B;
    }
  }
}
function x0(A, g) {
  if (g = g || {}, typeof A.name > "u" && A.id && A.id in zA.oids && (A.name = zA.oids[A.id]), typeof A.id > "u")
    if (A.name && A.name in zA.oids)
      A.id = zA.oids[A.name];
    else {
      var I = new Error("Extension ID not specified.");
      throw I.extension = A, I;
    }
  if (typeof A.value < "u")
    return A;
  if (A.name === "keyUsage") {
    var B = 0, Q = 0, E = 0;
    A.digitalSignature && (Q |= 128, B = 7), A.nonRepudiation && (Q |= 64, B = 6), A.keyEncipherment && (Q |= 32, B = 5), A.dataEncipherment && (Q |= 16, B = 4), A.keyAgreement && (Q |= 8, B = 3), A.keyCertSign && (Q |= 4, B = 2), A.cRLSign && (Q |= 2, B = 1), A.encipherOnly && (Q |= 1, B = 0), A.decipherOnly && (E |= 128, B = 7);
    var C = String.fromCharCode(B);
    E !== 0 ? C += String.fromCharCode(Q) + String.fromCharCode(E) : Q !== 0 && (C += String.fromCharCode(Q)), A.value = q.create(
      q.Class.UNIVERSAL,
      q.Type.BITSTRING,
      !1,
      C
    );
  } else if (A.name === "basicConstraints")
    A.value = q.create(
      q.Class.UNIVERSAL,
      q.Type.SEQUENCE,
      !0,
      []
    ), A.cA && A.value.value.push(q.create(
      q.Class.UNIVERSAL,
      q.Type.BOOLEAN,
      !1,
      "ÿ"
    )), "pathLenConstraint" in A && A.value.value.push(q.create(
      q.Class.UNIVERSAL,
      q.Type.INTEGER,
      !1,
      q.integerToDer(A.pathLenConstraint).getBytes()
    ));
  else if (A.name === "extKeyUsage") {
    A.value = q.create(
      q.Class.UNIVERSAL,
      q.Type.SEQUENCE,
      !0,
      []
    );
    var o = A.value.value;
    for (var t in A)
      A[t] === !0 && (t in _g ? o.push(q.create(
        q.Class.UNIVERSAL,
        q.Type.OID,
        !1,
        q.oidToDer(_g[t]).getBytes()
      )) : t.indexOf(".") !== -1 && o.push(q.create(
        q.Class.UNIVERSAL,
        q.Type.OID,
        !1,
        q.oidToDer(t).getBytes()
      )));
  } else if (A.name === "nsCertType") {
    var B = 0, Q = 0;
    A.client && (Q |= 128, B = 7), A.server && (Q |= 64, B = 6), A.email && (Q |= 32, B = 5), A.objsign && (Q |= 16, B = 4), A.reserved && (Q |= 8, B = 3), A.sslCA && (Q |= 4, B = 2), A.emailCA && (Q |= 2, B = 1), A.objCA && (Q |= 1, B = 0);
    var C = String.fromCharCode(B);
    Q !== 0 && (C += String.fromCharCode(Q)), A.value = q.create(
      q.Class.UNIVERSAL,
      q.Type.BITSTRING,
      !1,
      C
    );
  } else if (A.name === "subjectAltName" || A.name === "issuerAltName") {
    A.value = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, []);
    for (var e, i = 0; i < A.altNames.length; ++i) {
      e = A.altNames[i];
      var C = e.value;
      if (e.type === 7 && e.ip) {
        if (C = og.util.bytesFromIP(e.ip), C === null) {
          var I = new Error(
            'Extension "ip" value is not a valid IPv4 or IPv6 address.'
          );
          throw I.extension = A, I;
        }
      } else e.type === 8 && (e.oid ? C = q.oidToDer(q.oidToDer(e.oid)) : C = q.oidToDer(C));
      A.value.value.push(q.create(
        q.Class.CONTEXT_SPECIFIC,
        e.type,
        !1,
        C
      ));
    }
  } else if (A.name === "nsComment" && g.cert) {
    if (!/^[\x00-\x7F]*$/.test(A.comment) || A.comment.length < 1 || A.comment.length > 128)
      throw new Error('Invalid "nsComment" content.');
    A.value = q.create(
      q.Class.UNIVERSAL,
      q.Type.IA5STRING,
      !1,
      A.comment
    );
  } else if (A.name === "subjectKeyIdentifier" && g.cert) {
    var a = g.cert.generateSubjectKeyIdentifier();
    A.subjectKeyIdentifier = a.toHex(), A.value = q.create(
      q.Class.UNIVERSAL,
      q.Type.OCTETSTRING,
      !1,
      a.getBytes()
    );
  } else if (A.name === "authorityKeyIdentifier" && g.cert) {
    A.value = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, []);
    var o = A.value.value;
    if (A.keyIdentifier) {
      var r = A.keyIdentifier === !0 ? g.cert.generateSubjectKeyIdentifier().getBytes() : A.keyIdentifier;
      o.push(
        q.create(q.Class.CONTEXT_SPECIFIC, 0, !1, r)
      );
    }
    if (A.authorityCertIssuer) {
      var h = [
        q.create(q.Class.CONTEXT_SPECIFIC, 4, !0, [
          xC(A.authorityCertIssuer === !0 ? g.cert.issuer : A.authorityCertIssuer)
        ])
      ];
      o.push(
        q.create(q.Class.CONTEXT_SPECIFIC, 1, !0, h)
      );
    }
    if (A.serialNumber) {
      var n = og.util.hexToBytes(A.serialNumber === !0 ? g.cert.serialNumber : A.serialNumber);
      o.push(
        q.create(q.Class.CONTEXT_SPECIFIC, 2, !1, n)
      );
    }
  } else if (A.name === "cRLDistributionPoints") {
    A.value = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, []);
    for (var o = A.value.value, l = q.create(
      q.Class.UNIVERSAL,
      q.Type.SEQUENCE,
      !0,
      []
    ), y = q.create(
      q.Class.CONTEXT_SPECIFIC,
      0,
      !0,
      []
    ), e, i = 0; i < A.altNames.length; ++i) {
      e = A.altNames[i];
      var C = e.value;
      if (e.type === 7 && e.ip) {
        if (C = og.util.bytesFromIP(e.ip), C === null) {
          var I = new Error(
            'Extension "ip" value is not a valid IPv4 or IPv6 address.'
          );
          throw I.extension = A, I;
        }
      } else e.type === 8 && (e.oid ? C = q.oidToDer(q.oidToDer(e.oid)) : C = q.oidToDer(C));
      y.value.push(q.create(
        q.Class.CONTEXT_SPECIFIC,
        e.type,
        !1,
        C
      ));
    }
    l.value.push(q.create(
      q.Class.CONTEXT_SPECIFIC,
      0,
      !0,
      [y]
    )), o.push(l);
  }
  if (typeof A.value > "u") {
    var I = new Error("Extension value not specified.");
    throw I.extension = A, I;
  }
  return A;
}
function Xr(A, g) {
  switch (A) {
    case _g["RSASSA-PSS"]:
      var I = [];
      return g.hash.algorithmOid !== void 0 && I.push(q.create(q.Class.CONTEXT_SPECIFIC, 0, !0, [
        q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
          q.create(
            q.Class.UNIVERSAL,
            q.Type.OID,
            !1,
            q.oidToDer(g.hash.algorithmOid).getBytes()
          ),
          q.create(q.Class.UNIVERSAL, q.Type.NULL, !1, "")
        ])
      ])), g.mgf.algorithmOid !== void 0 && I.push(q.create(q.Class.CONTEXT_SPECIFIC, 1, !0, [
        q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
          q.create(
            q.Class.UNIVERSAL,
            q.Type.OID,
            !1,
            q.oidToDer(g.mgf.algorithmOid).getBytes()
          ),
          q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
            q.create(
              q.Class.UNIVERSAL,
              q.Type.OID,
              !1,
              q.oidToDer(g.mgf.hash.algorithmOid).getBytes()
            ),
            q.create(q.Class.UNIVERSAL, q.Type.NULL, !1, "")
          ])
        ])
      ])), g.saltLength !== void 0 && I.push(q.create(q.Class.CONTEXT_SPECIFIC, 2, !0, [
        q.create(
          q.Class.UNIVERSAL,
          q.Type.INTEGER,
          !1,
          q.integerToDer(g.saltLength).getBytes()
        )
      ])), q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, I);
    default:
      return q.create(q.Class.UNIVERSAL, q.Type.NULL, !1, "");
  }
}
function sf(A) {
  var g = q.create(q.Class.CONTEXT_SPECIFIC, 0, !0, []);
  if (A.attributes.length === 0)
    return g;
  for (var I = A.attributes, B = 0; B < I.length; ++B) {
    var Q = I[B], E = Q.value, C = q.Type.UTF8;
    "valueTagClass" in Q && (C = Q.valueTagClass), C === q.Type.UTF8 && (E = og.util.encodeUtf8(E));
    var o = !1;
    "valueConstructed" in Q && (o = Q.valueConstructed);
    var t = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
      // AttributeType
      q.create(
        q.Class.UNIVERSAL,
        q.Type.OID,
        !1,
        q.oidToDer(Q.type).getBytes()
      ),
      q.create(q.Class.UNIVERSAL, q.Type.SET, !0, [
        // AttributeValue
        q.create(
          q.Class.UNIVERSAL,
          C,
          o,
          E
        )
      ])
    ]);
    g.value.push(t);
  }
  return g;
}
var nf = /* @__PURE__ */ new Date("1950-01-01T00:00:00Z"), cf = /* @__PURE__ */ new Date("2050-01-01T00:00:00Z");
function Bc(A) {
  return A >= nf && A < cf ? q.create(
    q.Class.UNIVERSAL,
    q.Type.UTCTIME,
    !1,
    q.dateToUtcTime(A)
  ) : q.create(
    q.Class.UNIVERSAL,
    q.Type.GENERALIZEDTIME,
    !1,
    q.dateToGeneralizedTime(A)
  );
}
zA.getTBSCertificate = function(A) {
  var g = Bc(A.validity.notBefore), I = Bc(A.validity.notAfter), B = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
    // version
    q.create(q.Class.CONTEXT_SPECIFIC, 0, !0, [
      // integer
      q.create(
        q.Class.UNIVERSAL,
        q.Type.INTEGER,
        !1,
        q.integerToDer(A.version).getBytes()
      )
    ]),
    // serialNumber
    q.create(
      q.Class.UNIVERSAL,
      q.Type.INTEGER,
      !1,
      og.util.hexToBytes(A.serialNumber)
    ),
    // signature
    q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
      // algorithm
      q.create(
        q.Class.UNIVERSAL,
        q.Type.OID,
        !1,
        q.oidToDer(A.siginfo.algorithmOid).getBytes()
      ),
      // parameters
      Xr(
        A.siginfo.algorithmOid,
        A.siginfo.parameters
      )
    ]),
    // issuer
    xC(A.issuer),
    // validity
    q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
      g,
      I
    ]),
    // subject
    xC(A.subject),
    // SubjectPublicKeyInfo
    zA.publicKeyToAsn1(A.publicKey)
  ]);
  return A.issuer.uniqueId && B.value.push(
    q.create(q.Class.CONTEXT_SPECIFIC, 1, !0, [
      q.create(
        q.Class.UNIVERSAL,
        q.Type.BITSTRING,
        !1,
        // TODO: support arbitrary bit length ids
        "\0" + A.issuer.uniqueId
      )
    ])
  ), A.subject.uniqueId && B.value.push(
    q.create(q.Class.CONTEXT_SPECIFIC, 2, !0, [
      q.create(
        q.Class.UNIVERSAL,
        q.Type.BITSTRING,
        !1,
        // TODO: support arbitrary bit length ids
        "\0" + A.subject.uniqueId
      )
    ])
  ), A.extensions.length > 0 && B.value.push(zA.certificateExtensionsToAsn1(A.extensions)), B;
};
zA.getCertificationRequestInfo = function(A) {
  var g = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
    // version
    q.create(
      q.Class.UNIVERSAL,
      q.Type.INTEGER,
      !1,
      q.integerToDer(A.version).getBytes()
    ),
    // subject
    xC(A.subject),
    // SubjectPublicKeyInfo
    zA.publicKeyToAsn1(A.publicKey),
    // attributes
    sf(A)
  ]);
  return g;
};
zA.distinguishedNameToAsn1 = function(A) {
  return xC(A);
};
zA.certificateToAsn1 = function(A) {
  var g = A.tbsCertificate || zA.getTBSCertificate(A);
  return q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
    // TBSCertificate
    g,
    // AlgorithmIdentifier (signature algorithm)
    q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
      // algorithm
      q.create(
        q.Class.UNIVERSAL,
        q.Type.OID,
        !1,
        q.oidToDer(A.signatureOid).getBytes()
      ),
      // parameters
      Xr(A.signatureOid, A.signatureParameters)
    ]),
    // SignatureValue
    q.create(
      q.Class.UNIVERSAL,
      q.Type.BITSTRING,
      !1,
      "\0" + A.signature
    )
  ]);
};
zA.certificateExtensionsToAsn1 = function(A) {
  var g = q.create(q.Class.CONTEXT_SPECIFIC, 3, !0, []), I = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, []);
  g.value.push(I);
  for (var B = 0; B < A.length; ++B)
    I.value.push(zA.certificateExtensionToAsn1(A[B]));
  return g;
};
zA.certificateExtensionToAsn1 = function(A) {
  var g = q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, []);
  g.value.push(q.create(
    q.Class.UNIVERSAL,
    q.Type.OID,
    !1,
    q.oidToDer(A.id).getBytes()
  )), A.critical && g.value.push(q.create(
    q.Class.UNIVERSAL,
    q.Type.BOOLEAN,
    !1,
    "ÿ"
  ));
  var I = A.value;
  return typeof A.value != "string" && (I = q.toDer(I).getBytes()), g.value.push(q.create(
    q.Class.UNIVERSAL,
    q.Type.OCTETSTRING,
    !1,
    I
  )), g;
};
zA.certificationRequestToAsn1 = function(A) {
  var g = A.certificationRequestInfo || zA.getCertificationRequestInfo(A);
  return q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
    // CertificationRequestInfo
    g,
    // AlgorithmIdentifier (signature algorithm)
    q.create(q.Class.UNIVERSAL, q.Type.SEQUENCE, !0, [
      // algorithm
      q.create(
        q.Class.UNIVERSAL,
        q.Type.OID,
        !1,
        q.oidToDer(A.signatureOid).getBytes()
      ),
      // parameters
      Xr(A.signatureOid, A.signatureParameters)
    ]),
    // signature
    q.create(
      q.Class.UNIVERSAL,
      q.Type.BITSTRING,
      !1,
      "\0" + A.signature
    )
  ]);
};
zA.createCaStore = function(A) {
  var g = {
    // stored certificates
    certs: {}
  };
  g.getIssuer = function(C) {
    var o = I(C.issuer);
    return o;
  }, g.addCertificate = function(C) {
    if (typeof C == "string" && (C = og.pki.certificateFromPem(C)), B(C.subject), !g.hasCertificate(C))
      if (C.subject.hash in g.certs) {
        var o = g.certs[C.subject.hash];
        og.util.isArray(o) || (o = [o]), o.push(C), g.certs[C.subject.hash] = o;
      } else
        g.certs[C.subject.hash] = C;
  }, g.hasCertificate = function(C) {
    typeof C == "string" && (C = og.pki.certificateFromPem(C));
    var o = I(C.subject);
    if (!o)
      return !1;
    og.util.isArray(o) || (o = [o]);
    for (var t = q.toDer(zA.certificateToAsn1(C)).getBytes(), e = 0; e < o.length; ++e) {
      var i = q.toDer(zA.certificateToAsn1(o[e])).getBytes();
      if (t === i)
        return !0;
    }
    return !1;
  }, g.listAllCertificates = function() {
    var C = [];
    for (var o in g.certs)
      if (g.certs.hasOwnProperty(o)) {
        var t = g.certs[o];
        if (!og.util.isArray(t))
          C.push(t);
        else
          for (var e = 0; e < t.length; ++e)
            C.push(t[e]);
      }
    return C;
  }, g.removeCertificate = function(C) {
    var o;
    if (typeof C == "string" && (C = og.pki.certificateFromPem(C)), B(C.subject), !g.hasCertificate(C))
      return null;
    var t = I(C.subject);
    if (!og.util.isArray(t))
      return o = g.certs[C.subject.hash], delete g.certs[C.subject.hash], o;
    for (var e = q.toDer(zA.certificateToAsn1(C)).getBytes(), i = 0; i < t.length; ++i) {
      var a = q.toDer(zA.certificateToAsn1(t[i])).getBytes();
      e === a && (o = t[i], t.splice(i, 1));
    }
    return t.length === 0 && delete g.certs[C.subject.hash], o;
  };
  function I(C) {
    return B(C), g.certs[C.hash] || null;
  }
  function B(C) {
    if (!C.hash) {
      var o = og.md.sha1.create();
      C.attributes = zA.RDNAttributesAsArray(xC(C), o), C.hash = o.digest().toHex();
    }
  }
  if (A)
    for (var Q = 0; Q < A.length; ++Q) {
      var E = A[Q];
      g.addCertificate(E);
    }
  return g;
};
zA.certificateError = {
  bad_certificate: "forge.pki.BadCertificate",
  unsupported_certificate: "forge.pki.UnsupportedCertificate",
  certificate_revoked: "forge.pki.CertificateRevoked",
  certificate_expired: "forge.pki.CertificateExpired",
  certificate_unknown: "forge.pki.CertificateUnknown",
  unknown_ca: "forge.pki.UnknownCertificateAuthority"
};
zA.verifyCertificateChain = function(A, g, I) {
  typeof I == "function" && (I = { verify: I }), I = I || {}, g = g.slice(0);
  var B = g.slice(0), Q = I.validityCheckDate;
  typeof Q > "u" && (Q = /* @__PURE__ */ new Date());
  var E = !0, C = null, o = 0;
  do {
    var t = g.shift(), e = null, i = !1;
    if (Q && (Q < t.validity.notBefore || Q > t.validity.notAfter) && (C = {
      message: "Certificate is not valid yet or has expired.",
      error: zA.certificateError.certificate_expired,
      notBefore: t.validity.notBefore,
      notAfter: t.validity.notAfter,
      // TODO: we might want to reconsider renaming 'now' to
      // 'validityCheckDate' should this API be changed in the future.
      now: Q
    }), C === null) {
      if (e = g[0] || A.getIssuer(t), e === null && t.isIssuer(t) && (i = !0, e = t), e) {
        var a = e;
        og.util.isArray(a) || (a = [a]);
        for (var r = !1; !r && a.length > 0; ) {
          e = a.shift();
          try {
            r = e.verify(t);
          } catch {
          }
        }
        r || (C = {
          message: "Certificate signature is invalid.",
          error: zA.certificateError.bad_certificate
        });
      }
      C === null && (!e || i) && !A.hasCertificate(t) && (C = {
        message: "Certificate is not trusted.",
        error: zA.certificateError.unknown_ca
      });
    }
    if (C === null && e && !t.isIssuer(e) && (C = {
      message: "Certificate issuer is invalid.",
      error: zA.certificateError.bad_certificate
    }), C === null)
      for (var h = {
        keyUsage: !0,
        basicConstraints: !0
      }, n = 0; C === null && n < t.extensions.length; ++n) {
        var l = t.extensions[n];
        l.critical && !(l.name in h) && (C = {
          message: "Certificate has an unsupported critical extension.",
          error: zA.certificateError.unsupported_certificate
        });
      }
    if (C === null && (!E || g.length === 0 && (!e || i))) {
      var y = t.getExtension("basicConstraints"), N = t.getExtension("keyUsage");
      if (N !== null && (!N.keyCertSign || y === null) && (C = {
        message: "Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",
        error: zA.certificateError.bad_certificate
      }), C === null && y !== null && !y.cA && (C = {
        message: "Certificate basicConstraints indicates the certificate is not a CA.",
        error: zA.certificateError.bad_certificate
      }), C === null && N !== null && "pathLenConstraint" in y) {
        var s = o - 1;
        s > y.pathLenConstraint && (C = {
          message: "Certificate basicConstraints pathLenConstraint violated.",
          error: zA.certificateError.bad_certificate
        });
      }
    }
    var F = C === null ? !0 : C.error, u = I.verify ? I.verify(F, o, B) : F;
    if (u === !0)
      C = null;
    else
      throw F === !0 && (C = {
        message: "The application rejected the certificate.",
        error: zA.certificateError.bad_certificate
      }), (u || u === 0) && (typeof u == "object" && !og.util.isArray(u) ? (u.message && (C.message = u.message), u.error && (C.error = u.error)) : typeof u == "string" && (C.error = u)), C;
    E = !1, ++o;
  } while (g.length > 0);
  return !0;
};
var hB = bg, nA = hB.asn1, Tg = hB.pki, Ye = hB.pkcs12 = hB.pkcs12 || {}, v0 = {
  name: "ContentInfo",
  tagClass: nA.Class.UNIVERSAL,
  type: nA.Type.SEQUENCE,
  // a ContentInfo
  constructed: !0,
  value: [{
    name: "ContentInfo.contentType",
    tagClass: nA.Class.UNIVERSAL,
    type: nA.Type.OID,
    constructed: !1,
    capture: "contentType"
  }, {
    name: "ContentInfo.content",
    tagClass: nA.Class.CONTEXT_SPECIFIC,
    constructed: !0,
    captureAsn1: "content"
  }]
}, Df = {
  name: "PFX",
  tagClass: nA.Class.UNIVERSAL,
  type: nA.Type.SEQUENCE,
  constructed: !0,
  value: [
    {
      name: "PFX.version",
      tagClass: nA.Class.UNIVERSAL,
      type: nA.Type.INTEGER,
      constructed: !1,
      capture: "version"
    },
    v0,
    {
      name: "PFX.macData",
      tagClass: nA.Class.UNIVERSAL,
      type: nA.Type.SEQUENCE,
      constructed: !0,
      optional: !0,
      captureAsn1: "mac",
      value: [{
        name: "PFX.macData.mac",
        tagClass: nA.Class.UNIVERSAL,
        type: nA.Type.SEQUENCE,
        // DigestInfo
        constructed: !0,
        value: [{
          name: "PFX.macData.mac.digestAlgorithm",
          tagClass: nA.Class.UNIVERSAL,
          type: nA.Type.SEQUENCE,
          // DigestAlgorithmIdentifier
          constructed: !0,
          value: [{
            name: "PFX.macData.mac.digestAlgorithm.algorithm",
            tagClass: nA.Class.UNIVERSAL,
            type: nA.Type.OID,
            constructed: !1,
            capture: "macAlgorithm"
          }, {
            name: "PFX.macData.mac.digestAlgorithm.parameters",
            tagClass: nA.Class.UNIVERSAL,
            captureAsn1: "macAlgorithmParameters"
          }]
        }, {
          name: "PFX.macData.mac.digest",
          tagClass: nA.Class.UNIVERSAL,
          type: nA.Type.OCTETSTRING,
          constructed: !1,
          capture: "macDigest"
        }]
      }, {
        name: "PFX.macData.macSalt",
        tagClass: nA.Class.UNIVERSAL,
        type: nA.Type.OCTETSTRING,
        constructed: !1,
        capture: "macSalt"
      }, {
        name: "PFX.macData.iterations",
        tagClass: nA.Class.UNIVERSAL,
        type: nA.Type.INTEGER,
        constructed: !1,
        optional: !0,
        capture: "macIterations"
      }]
    }
  ]
}, hf = {
  name: "SafeBag",
  tagClass: nA.Class.UNIVERSAL,
  type: nA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "SafeBag.bagId",
    tagClass: nA.Class.UNIVERSAL,
    type: nA.Type.OID,
    constructed: !1,
    capture: "bagId"
  }, {
    name: "SafeBag.bagValue",
    tagClass: nA.Class.CONTEXT_SPECIFIC,
    constructed: !0,
    captureAsn1: "bagValue"
  }, {
    name: "SafeBag.bagAttributes",
    tagClass: nA.Class.UNIVERSAL,
    type: nA.Type.SET,
    constructed: !0,
    optional: !0,
    capture: "bagAttributes"
  }]
}, lf = {
  name: "Attribute",
  tagClass: nA.Class.UNIVERSAL,
  type: nA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "Attribute.attrId",
    tagClass: nA.Class.UNIVERSAL,
    type: nA.Type.OID,
    constructed: !1,
    capture: "oid"
  }, {
    name: "Attribute.attrValues",
    tagClass: nA.Class.UNIVERSAL,
    type: nA.Type.SET,
    constructed: !0,
    capture: "values"
  }]
}, yf = {
  name: "CertBag",
  tagClass: nA.Class.UNIVERSAL,
  type: nA.Type.SEQUENCE,
  constructed: !0,
  value: [{
    name: "CertBag.certId",
    tagClass: nA.Class.UNIVERSAL,
    type: nA.Type.OID,
    constructed: !1,
    capture: "certId"
  }, {
    name: "CertBag.certValue",
    tagClass: nA.Class.CONTEXT_SPECIFIC,
    constructed: !0,
    /* So far we only support X.509 certificates (which are wrapped in
       an OCTET STRING, hence hard code that here). */
    value: [{
      name: "CertBag.certValue[0]",
      tagClass: nA.Class.UNIVERSAL,
      type: nA.Class.OCTETSTRING,
      constructed: !1,
      capture: "cert"
    }]
  }]
};
function ye(A, g, I, B) {
  for (var Q = [], E = 0; E < A.length; E++)
    for (var C = 0; C < A[E].safeBags.length; C++) {
      var o = A[E].safeBags[C];
      if (!(B !== void 0 && o.type !== B)) {
        if (g === null) {
          Q.push(o);
          continue;
        }
        o.attributes[g] !== void 0 && o.attributes[g].indexOf(I) >= 0 && Q.push(o);
      }
    }
  return Q;
}
Ye.pkcs12FromAsn1 = function(A, g, I) {
  typeof g == "string" ? (I = g, g = !0) : g === void 0 && (g = !0);
  var B = {}, Q = [];
  if (!nA.validate(A, Df, B, Q)) {
    var E = new Error("Cannot read PKCS#12 PFX. ASN.1 object is not an PKCS#12 PFX.");
    throw E.errors = E, E;
  }
  var C = {
    version: B.version.charCodeAt(0),
    safeContents: [],
    /**
     * Gets bags with matching attributes.
     *
     * @param filter the attributes to filter by:
     *          [localKeyId] the localKeyId to search for.
     *          [localKeyIdHex] the localKeyId in hex to search for.
     *          [friendlyName] the friendly name to search for.
     *          [bagType] bag type to narrow each attribute search by.
     *
     * @return a map of attribute type to an array of matching bags or, if no
     *           attribute was given but a bag type, the map key will be the
     *           bag type.
     */
    getBags: function(y) {
      var N = {}, s;
      return "localKeyId" in y ? s = y.localKeyId : "localKeyIdHex" in y && (s = hB.util.hexToBytes(y.localKeyIdHex)), s === void 0 && !("friendlyName" in y) && "bagType" in y && (N[y.bagType] = ye(
        C.safeContents,
        null,
        null,
        y.bagType
      )), s !== void 0 && (N.localKeyId = ye(
        C.safeContents,
        "localKeyId",
        s,
        y.bagType
      )), "friendlyName" in y && (N.friendlyName = ye(
        C.safeContents,
        "friendlyName",
        y.friendlyName,
        y.bagType
      )), N;
    },
    /**
     * DEPRECATED: use getBags() instead.
     *
     * Get bags with matching friendlyName attribute.
     *
     * @param friendlyName the friendly name to search for.
     * @param [bagType] bag type to narrow search by.
     *
     * @return an array of bags with matching friendlyName attribute.
     */
    getBagsByFriendlyName: function(y, N) {
      return ye(
        C.safeContents,
        "friendlyName",
        y,
        N
      );
    },
    /**
     * DEPRECATED: use getBags() instead.
     *
     * Get bags with matching localKeyId attribute.
     *
     * @param localKeyId the localKeyId to search for.
     * @param [bagType] bag type to narrow search by.
     *
     * @return an array of bags with matching localKeyId attribute.
     */
    getBagsByLocalKeyId: function(y, N) {
      return ye(
        C.safeContents,
        "localKeyId",
        y,
        N
      );
    }
  };
  if (B.version.charCodeAt(0) !== 3) {
    var E = new Error("PKCS#12 PFX of version other than 3 not supported.");
    throw E.version = B.version.charCodeAt(0), E;
  }
  if (nA.derToOid(B.contentType) !== Tg.oids.data) {
    var E = new Error("Only PKCS#12 PFX in password integrity mode supported.");
    throw E.oid = nA.derToOid(B.contentType), E;
  }
  var o = B.content.value[0];
  if (o.tagClass !== nA.Class.UNIVERSAL || o.type !== nA.Type.OCTETSTRING)
    throw new Error("PKCS#12 authSafe content data is not an OCTET STRING.");
  if (o = zr(o), B.mac) {
    var t = null, e = 0, i = nA.derToOid(B.macAlgorithm);
    switch (i) {
      case Tg.oids.sha1:
        t = hB.md.sha1.create(), e = 20;
        break;
      case Tg.oids.sha256:
        t = hB.md.sha256.create(), e = 32;
        break;
      case Tg.oids.sha384:
        t = hB.md.sha384.create(), e = 48;
        break;
      case Tg.oids.sha512:
        t = hB.md.sha512.create(), e = 64;
        break;
      case Tg.oids.md5:
        t = hB.md.md5.create(), e = 16;
        break;
    }
    if (t === null)
      throw new Error("PKCS#12 uses unsupported MAC algorithm: " + i);
    var a = new hB.util.ByteBuffer(B.macSalt), r = "macIterations" in B ? parseInt(hB.util.bytesToHex(B.macIterations), 16) : 1, h = Ye.generateKey(
      I,
      a,
      3,
      r,
      e,
      t
    ), n = hB.hmac.create();
    n.start(t, h), n.update(o.value);
    var l = n.getMac();
    if (l.getBytes() !== B.macDigest)
      throw new Error("PKCS#12 MAC could not be verified. Invalid password?");
  }
  return wf(C, o.value, g, I), C;
};
function zr(A) {
  if (A.composed || A.constructed) {
    for (var g = hB.util.createBuffer(), I = 0; I < A.value.length; ++I)
      g.putBytes(A.value[I].value);
    A.composed = A.constructed = !1, A.value = g.getBytes();
  }
  return A;
}
function wf(A, g, I, B) {
  if (g = nA.fromDer(g, I), g.tagClass !== nA.Class.UNIVERSAL || g.type !== nA.Type.SEQUENCE || g.constructed !== !0)
    throw new Error("PKCS#12 AuthenticatedSafe expected to be a SEQUENCE OF ContentInfo");
  for (var Q = 0; Q < g.value.length; Q++) {
    var E = g.value[Q], C = {}, o = [];
    if (!nA.validate(E, v0, C, o)) {
      var t = new Error("Cannot read ContentInfo.");
      throw t.errors = o, t;
    }
    var e = {
      encrypted: !1
    }, i = null, a = C.content.value[0];
    switch (nA.derToOid(C.contentType)) {
      case Tg.oids.data:
        if (a.tagClass !== nA.Class.UNIVERSAL || a.type !== nA.Type.OCTETSTRING)
          throw new Error("PKCS#12 SafeContents Data is not an OCTET STRING.");
        i = zr(a).value;
        break;
      case Tg.oids.encryptedData:
        i = df(a, B), e.encrypted = !0;
        break;
      default:
        var t = new Error("Unsupported PKCS#12 contentType.");
        throw t.contentType = nA.derToOid(C.contentType), t;
    }
    e.safeBags = Ff(i, I, B), A.safeContents.push(e);
  }
}
function df(A, g) {
  var I = {}, B = [];
  if (!nA.validate(
    A,
    hB.pkcs7.asn1.encryptedDataValidator,
    I,
    B
  )) {
    var Q = new Error("Cannot read EncryptedContentInfo.");
    throw Q.errors = B, Q;
  }
  var E = nA.derToOid(I.contentType);
  if (E !== Tg.oids.data) {
    var Q = new Error(
      "PKCS#12 EncryptedContentInfo ContentType is not Data."
    );
    throw Q.oid = E, Q;
  }
  E = nA.derToOid(I.encAlgorithm);
  var C = Tg.pbe.getCipher(E, I.encParameter, g), o = zr(I.encryptedContentAsn1), t = hB.util.createBuffer(o.value);
  if (C.update(t), !C.finish())
    throw new Error("Failed to decrypt PKCS#12 SafeContents.");
  return C.output.getBytes();
}
function Ff(A, g, I) {
  if (!g && A.length === 0)
    return [];
  if (A = nA.fromDer(A, g), A.tagClass !== nA.Class.UNIVERSAL || A.type !== nA.Type.SEQUENCE || A.constructed !== !0)
    throw new Error(
      "PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag."
    );
  for (var B = [], Q = 0; Q < A.value.length; Q++) {
    var E = A.value[Q], C = {}, o = [];
    if (!nA.validate(E, hf, C, o)) {
      var t = new Error("Cannot read SafeBag.");
      throw t.errors = o, t;
    }
    var e = {
      type: nA.derToOid(C.bagId),
      attributes: Rf(C.bagAttributes)
    };
    B.push(e);
    var i, a, r = C.bagValue.value[0];
    switch (e.type) {
      case Tg.oids.pkcs8ShroudedKeyBag:
        if (r = Tg.decryptPrivateKeyInfo(r, I), r === null)
          throw new Error(
            "Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?"
          );
      case Tg.oids.keyBag:
        try {
          e.key = Tg.privateKeyFromAsn1(r);
        } catch {
          e.key = null, e.asn1 = r;
        }
        continue;
      case Tg.oids.certBag:
        i = yf, a = function() {
          if (nA.derToOid(C.certId) !== Tg.oids.x509Certificate) {
            var n = new Error(
              "Unsupported certificate type, only X.509 supported."
            );
            throw n.oid = nA.derToOid(C.certId), n;
          }
          var l = nA.fromDer(C.cert, g);
          try {
            e.cert = Tg.certificateFromAsn1(l, !0);
          } catch {
            e.cert = null, e.asn1 = l;
          }
        };
        break;
      default:
        var t = new Error("Unsupported PKCS#12 SafeBag type.");
        throw t.oid = e.type, t;
    }
    if (i !== void 0 && !nA.validate(r, i, C, o)) {
      var t = new Error("Cannot read PKCS#12 " + i.name);
      throw t.errors = o, t;
    }
    a();
  }
  return B;
}
function Rf(A) {
  var g = {};
  if (A !== void 0)
    for (var I = 0; I < A.length; ++I) {
      var B = {}, Q = [];
      if (!nA.validate(A[I], lf, B, Q)) {
        var E = new Error("Cannot read PKCS#12 BagAttribute.");
        throw E.errors = Q, E;
      }
      var C = nA.derToOid(B.oid);
      if (Tg.oids[C] !== void 0) {
        g[Tg.oids[C]] = [];
        for (var o = 0; o < B.values.length; ++o)
          g[Tg.oids[C]].push(B.values[o].value);
      }
    }
  return g;
}
Ye.toPkcs12Asn1 = function(A, g, I, B) {
  B = B || {}, B.saltSize = B.saltSize || 8, B.count = B.count || 2048, B.algorithm = B.algorithm || B.encAlgorithm || "aes128", "useMac" in B || (B.useMac = !0), "localKeyId" in B || (B.localKeyId = null), "generateLocalKeyId" in B || (B.generateLocalKeyId = !0);
  var Q = B.localKeyId, E;
  if (Q !== null)
    Q = hB.util.hexToBytes(Q);
  else if (B.generateLocalKeyId)
    if (g) {
      var C = hB.util.isArray(g) ? g[0] : g;
      typeof C == "string" && (C = Tg.certificateFromPem(C));
      var o = hB.md.sha1.create();
      o.update(nA.toDer(Tg.certificateToAsn1(C)).getBytes()), Q = o.digest().getBytes();
    } else
      Q = hB.random.getBytes(20);
  var t = [];
  Q !== null && t.push(
    // localKeyID
    nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
      // attrId
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.OID,
        !1,
        nA.oidToDer(Tg.oids.localKeyId).getBytes()
      ),
      // attrValues
      nA.create(nA.Class.UNIVERSAL, nA.Type.SET, !0, [
        nA.create(
          nA.Class.UNIVERSAL,
          nA.Type.OCTETSTRING,
          !1,
          Q
        )
      ])
    ])
  ), "friendlyName" in B && t.push(
    // friendlyName
    nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
      // attrId
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.OID,
        !1,
        nA.oidToDer(Tg.oids.friendlyName).getBytes()
      ),
      // attrValues
      nA.create(nA.Class.UNIVERSAL, nA.Type.SET, !0, [
        nA.create(
          nA.Class.UNIVERSAL,
          nA.Type.BMPSTRING,
          !1,
          B.friendlyName
        )
      ])
    ])
  ), t.length > 0 && (E = nA.create(nA.Class.UNIVERSAL, nA.Type.SET, !0, t));
  var e = [], i = [];
  g !== null && (hB.util.isArray(g) ? i = g : i = [g]);
  for (var a = [], r = 0; r < i.length; ++r) {
    g = i[r], typeof g == "string" && (g = Tg.certificateFromPem(g));
    var h = r === 0 ? E : void 0, n = Tg.certificateToAsn1(g), l = nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
      // bagId
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.OID,
        !1,
        nA.oidToDer(Tg.oids.certBag).getBytes()
      ),
      // bagValue
      nA.create(nA.Class.CONTEXT_SPECIFIC, 0, !0, [
        // CertBag
        nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
          // certId
          nA.create(
            nA.Class.UNIVERSAL,
            nA.Type.OID,
            !1,
            nA.oidToDer(Tg.oids.x509Certificate).getBytes()
          ),
          // certValue (x509Certificate)
          nA.create(nA.Class.CONTEXT_SPECIFIC, 0, !0, [
            nA.create(
              nA.Class.UNIVERSAL,
              nA.Type.OCTETSTRING,
              !1,
              nA.toDer(n).getBytes()
            )
          ])
        ])
      ]),
      // bagAttributes (OPTIONAL)
      h
    ]);
    a.push(l);
  }
  if (a.length > 0) {
    var y = nA.create(
      nA.Class.UNIVERSAL,
      nA.Type.SEQUENCE,
      !0,
      a
    ), N = (
      // PKCS#7 ContentInfo
      nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
        // contentType
        nA.create(
          nA.Class.UNIVERSAL,
          nA.Type.OID,
          !1,
          // OID for the content type is 'data'
          nA.oidToDer(Tg.oids.data).getBytes()
        ),
        // content
        nA.create(nA.Class.CONTEXT_SPECIFIC, 0, !0, [
          nA.create(
            nA.Class.UNIVERSAL,
            nA.Type.OCTETSTRING,
            !1,
            nA.toDer(y).getBytes()
          )
        ])
      ])
    );
    e.push(N);
  }
  var s = null;
  if (A !== null) {
    var F = Tg.wrapRsaPrivateKey(Tg.privateKeyToAsn1(A));
    I === null ? s = nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
      // bagId
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.OID,
        !1,
        nA.oidToDer(Tg.oids.keyBag).getBytes()
      ),
      // bagValue
      nA.create(nA.Class.CONTEXT_SPECIFIC, 0, !0, [
        // PrivateKeyInfo
        F
      ]),
      // bagAttributes (OPTIONAL)
      E
    ]) : s = nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
      // bagId
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.OID,
        !1,
        nA.oidToDer(Tg.oids.pkcs8ShroudedKeyBag).getBytes()
      ),
      // bagValue
      nA.create(nA.Class.CONTEXT_SPECIFIC, 0, !0, [
        // EncryptedPrivateKeyInfo
        Tg.encryptPrivateKeyInfo(F, I, B)
      ]),
      // bagAttributes (OPTIONAL)
      E
    ]);
    var u = nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [s]), U = (
      // PKCS#7 ContentInfo
      nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
        // contentType
        nA.create(
          nA.Class.UNIVERSAL,
          nA.Type.OID,
          !1,
          // OID for the content type is 'data'
          nA.oidToDer(Tg.oids.data).getBytes()
        ),
        // content
        nA.create(nA.Class.CONTEXT_SPECIFIC, 0, !0, [
          nA.create(
            nA.Class.UNIVERSAL,
            nA.Type.OCTETSTRING,
            !1,
            nA.toDer(u).getBytes()
          )
        ])
      ])
    );
    e.push(U);
  }
  var J = nA.create(
    nA.Class.UNIVERSAL,
    nA.Type.SEQUENCE,
    !0,
    e
  ), L;
  if (B.useMac) {
    var o = hB.md.sha1.create(), f = new hB.util.ByteBuffer(
      hB.random.getBytes(B.saltSize)
    ), d = B.count, A = Ye.generateKey(I, f, 3, d, 20), p = hB.hmac.create();
    p.start(o, A), p.update(nA.toDer(J).getBytes());
    var x = p.getMac();
    L = nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
      // mac DigestInfo
      nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
        // digestAlgorithm
        nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
          // algorithm = SHA-1
          nA.create(
            nA.Class.UNIVERSAL,
            nA.Type.OID,
            !1,
            nA.oidToDer(Tg.oids.sha1).getBytes()
          ),
          // parameters = Null
          nA.create(nA.Class.UNIVERSAL, nA.Type.NULL, !1, "")
        ]),
        // digest
        nA.create(
          nA.Class.UNIVERSAL,
          nA.Type.OCTETSTRING,
          !1,
          x.getBytes()
        )
      ]),
      // macSalt OCTET STRING
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.OCTETSTRING,
        !1,
        f.getBytes()
      ),
      // iterations INTEGER (XXX: Only support count < 65536)
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.INTEGER,
        !1,
        nA.integerToDer(d).getBytes()
      )
    ]);
  }
  return nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
    // version (3)
    nA.create(
      nA.Class.UNIVERSAL,
      nA.Type.INTEGER,
      !1,
      nA.integerToDer(3).getBytes()
    ),
    // PKCS#7 ContentInfo
    nA.create(nA.Class.UNIVERSAL, nA.Type.SEQUENCE, !0, [
      // contentType
      nA.create(
        nA.Class.UNIVERSAL,
        nA.Type.OID,
        !1,
        // OID for the content type is 'data'
        nA.oidToDer(Tg.oids.data).getBytes()
      ),
      // content
      nA.create(nA.Class.CONTEXT_SPECIFIC, 0, !0, [
        nA.create(
          nA.Class.UNIVERSAL,
          nA.Type.OCTETSTRING,
          !1,
          nA.toDer(J).getBytes()
        )
      ])
    ]),
    L
  ]);
};
Ye.generateKey = hB.pbe.generatePkcs12Key;
var CE = bg, Vr = CE.asn1, vC = CE.pki = CE.pki || {};
vC.pemToDer = function(A) {
  var g = CE.pem.decode(A)[0];
  if (g.procType && g.procType.type === "ENCRYPTED")
    throw new Error("Could not convert PEM to DER; PEM is encrypted.");
  return CE.util.createBuffer(g.body);
};
vC.privateKeyFromPem = function(A) {
  var g = CE.pem.decode(A)[0];
  if (g.type !== "PRIVATE KEY" && g.type !== "RSA PRIVATE KEY") {
    var I = new Error('Could not convert private key from PEM; PEM header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".');
    throw I.headerType = g.type, I;
  }
  if (g.procType && g.procType.type === "ENCRYPTED")
    throw new Error("Could not convert private key from PEM; PEM is encrypted.");
  var B = Vr.fromDer(g.body);
  return vC.privateKeyFromAsn1(B);
};
vC.privateKeyToPem = function(A, g) {
  var I = {
    type: "RSA PRIVATE KEY",
    body: Vr.toDer(vC.privateKeyToAsn1(A)).getBytes()
  };
  return CE.pem.encode(I, { maxline: g });
};
vC.privateKeyInfoToPem = function(A, g) {
  var I = {
    type: "PRIVATE KEY",
    body: Vr.toDer(A).getBytes()
  };
  return CE.pem.encode(I, { maxline: g });
};
var KA = bg, Hi = function(A, g, I, B) {
  var Q = KA.util.createBuffer(), E = A.length >> 1, C = E + (A.length & 1), o = A.substr(0, C), t = A.substr(E, C), e = KA.util.createBuffer(), i = KA.hmac.create();
  I = g + I;
  var a = Math.ceil(B / 16), r = Math.ceil(B / 20);
  i.start("MD5", o);
  var h = KA.util.createBuffer();
  e.putBytes(I);
  for (var n = 0; n < a; ++n)
    i.start(null, null), i.update(e.getBytes()), e.putBuffer(i.digest()), i.start(null, null), i.update(e.bytes() + I), h.putBuffer(i.digest());
  i.start("SHA1", t);
  var l = KA.util.createBuffer();
  e.clear(), e.putBytes(I);
  for (var n = 0; n < r; ++n)
    i.start(null, null), i.update(e.getBytes()), e.putBuffer(i.digest()), i.start(null, null), i.update(e.bytes() + I), l.putBuffer(i.digest());
  return Q.putBytes(KA.util.xorBytes(
    h.getBytes(),
    l.getBytes(),
    B
  )), Q;
}, ff = function(A, g, I) {
  var B = KA.hmac.create();
  B.start("SHA1", A);
  var Q = KA.util.createBuffer();
  return Q.putInt32(g[0]), Q.putInt32(g[1]), Q.putByte(I.type), Q.putByte(I.version.major), Q.putByte(I.version.minor), Q.putInt16(I.length), Q.putBytes(I.fragment.bytes()), B.update(Q.getBytes()), B.digest().getBytes();
}, Gf = function(A, g, I) {
  var B = !1;
  try {
    var Q = A.deflate(g.fragment.getBytes());
    g.fragment = KA.util.createBuffer(Q), g.length = Q.length, B = !0;
  } catch {
  }
  return B;
}, Mf = function(A, g, I) {
  var B = !1;
  try {
    var Q = A.inflate(g.fragment.getBytes());
    g.fragment = KA.util.createBuffer(Q), g.length = Q.length, B = !0;
  } catch {
  }
  return B;
}, kI = function(A, g) {
  var I = 0;
  switch (g) {
    case 1:
      I = A.getByte();
      break;
    case 2:
      I = A.getInt16();
      break;
    case 3:
      I = A.getInt24();
      break;
    case 4:
      I = A.getInt32();
      break;
  }
  return KA.util.createBuffer(A.getBytes(I));
}, vI = function(A, g, I) {
  A.putInt(I.length(), g << 3), A.putBuffer(I);
}, j = {};
j.Versions = {
  TLS_1_0: { major: 3, minor: 1 },
  TLS_1_1: { major: 3, minor: 2 },
  TLS_1_2: { major: 3, minor: 3 }
};
j.SupportedVersions = [
  j.Versions.TLS_1_1,
  j.Versions.TLS_1_0
];
j.Version = j.SupportedVersions[0];
j.MaxFragment = 15360;
j.ConnectionEnd = {
  server: 0,
  client: 1
};
j.PRFAlgorithm = {
  tls_prf_sha256: 0
};
j.BulkCipherAlgorithm = {
  none: null,
  rc4: 0,
  des3: 1,
  aes: 2
};
j.CipherType = {
  stream: 0,
  block: 1,
  aead: 2
};
j.MACAlgorithm = {
  none: null,
  hmac_md5: 0,
  hmac_sha1: 1,
  hmac_sha256: 2,
  hmac_sha384: 3,
  hmac_sha512: 4
};
j.CompressionMethod = {
  none: 0,
  deflate: 1
};
j.ContentType = {
  change_cipher_spec: 20,
  alert: 21,
  handshake: 22,
  application_data: 23,
  heartbeat: 24
};
j.HandshakeType = {
  hello_request: 0,
  client_hello: 1,
  server_hello: 2,
  certificate: 11,
  server_key_exchange: 12,
  certificate_request: 13,
  server_hello_done: 14,
  certificate_verify: 15,
  client_key_exchange: 16,
  finished: 20
};
j.Alert = {};
j.Alert.Level = {
  warning: 1,
  fatal: 2
};
j.Alert.Description = {
  close_notify: 0,
  unexpected_message: 10,
  bad_record_mac: 20,
  decryption_failed: 21,
  record_overflow: 22,
  decompression_failure: 30,
  handshake_failure: 40,
  bad_certificate: 42,
  unsupported_certificate: 43,
  certificate_revoked: 44,
  certificate_expired: 45,
  certificate_unknown: 46,
  illegal_parameter: 47,
  unknown_ca: 48,
  access_denied: 49,
  decode_error: 50,
  decrypt_error: 51,
  export_restriction: 60,
  protocol_version: 70,
  insufficient_security: 71,
  internal_error: 80,
  user_canceled: 90,
  no_renegotiation: 100
};
j.HeartbeatMessageType = {
  heartbeat_request: 1,
  heartbeat_response: 2
};
j.CipherSuites = {};
j.getCipherSuite = function(A) {
  var g = null;
  for (var I in j.CipherSuites) {
    var B = j.CipherSuites[I];
    if (B.id[0] === A.charCodeAt(0) && B.id[1] === A.charCodeAt(1)) {
      g = B;
      break;
    }
  }
  return g;
};
j.handleUnexpected = function(A, g) {
  var I = !A.open && A.entity === j.ConnectionEnd.client;
  I || A.error(A, {
    message: "Unexpected message. Received TLS record out of order.",
    send: !0,
    alert: {
      level: j.Alert.Level.fatal,
      description: j.Alert.Description.unexpected_message
    }
  });
};
j.handleHelloRequest = function(A, g, I) {
  !A.handshaking && A.handshakes > 0 && (j.queue(A, j.createAlert(A, {
    level: j.Alert.Level.warning,
    description: j.Alert.Description.no_renegotiation
  })), j.flush(A)), A.process();
};
j.parseHelloMessage = function(A, g, I) {
  var B = null, Q = A.entity === j.ConnectionEnd.client;
  if (I < 38)
    A.error(A, {
      message: Q ? "Invalid ServerHello message. Message too short." : "Invalid ClientHello message. Message too short.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.illegal_parameter
      }
    });
  else {
    var E = g.fragment, C = E.length();
    if (B = {
      version: {
        major: E.getByte(),
        minor: E.getByte()
      },
      random: KA.util.createBuffer(E.getBytes(32)),
      session_id: kI(E, 1),
      extensions: []
    }, Q ? (B.cipher_suite = E.getBytes(2), B.compression_method = E.getByte()) : (B.cipher_suites = kI(E, 2), B.compression_methods = kI(E, 1)), C = I - (C - E.length()), C > 0) {
      for (var o = kI(E, 2); o.length() > 0; )
        B.extensions.push({
          type: [o.getByte(), o.getByte()],
          data: kI(o, 2)
        });
      if (!Q)
        for (var t = 0; t < B.extensions.length; ++t) {
          var e = B.extensions[t];
          if (e.type[0] === 0 && e.type[1] === 0)
            for (var i = kI(e.data, 2); i.length() > 0; ) {
              var a = i.getByte();
              if (a !== 0)
                break;
              A.session.extensions.server_name.serverNameList.push(
                kI(i, 2).getBytes()
              );
            }
        }
    }
    if (A.session.version && (B.version.major !== A.session.version.major || B.version.minor !== A.session.version.minor))
      return A.error(A, {
        message: "TLS version change is disallowed during renegotiation.",
        send: !0,
        alert: {
          level: j.Alert.Level.fatal,
          description: j.Alert.Description.protocol_version
        }
      });
    if (Q)
      A.session.cipherSuite = j.getCipherSuite(B.cipher_suite);
    else
      for (var r = KA.util.createBuffer(B.cipher_suites.bytes()); r.length() > 0 && (A.session.cipherSuite = j.getCipherSuite(r.getBytes(2)), A.session.cipherSuite === null); )
        ;
    if (A.session.cipherSuite === null)
      return A.error(A, {
        message: "No cipher suites in common.",
        send: !0,
        alert: {
          level: j.Alert.Level.fatal,
          description: j.Alert.Description.handshake_failure
        },
        cipherSuite: KA.util.bytesToHex(B.cipher_suite)
      });
    Q ? A.session.compressionMethod = B.compression_method : A.session.compressionMethod = j.CompressionMethod.none;
  }
  return B;
};
j.createSecurityParameters = function(A, g) {
  var I = A.entity === j.ConnectionEnd.client, B = g.random.bytes(), Q = I ? A.session.sp.client_random : B, E = I ? B : j.createRandom().getBytes();
  A.session.sp = {
    entity: A.entity,
    prf_algorithm: j.PRFAlgorithm.tls_prf_sha256,
    bulk_cipher_algorithm: null,
    cipher_type: null,
    enc_key_length: null,
    block_length: null,
    fixed_iv_length: null,
    record_iv_length: null,
    mac_algorithm: null,
    mac_length: null,
    mac_key_length: null,
    compression_algorithm: A.session.compressionMethod,
    pre_master_secret: null,
    master_secret: null,
    client_random: Q,
    server_random: E
  };
};
j.handleServerHello = function(A, g, I) {
  var B = j.parseHelloMessage(A, g, I);
  if (!A.fail) {
    if (B.version.minor <= A.version.minor)
      A.version.minor = B.version.minor;
    else
      return A.error(A, {
        message: "Incompatible TLS version.",
        send: !0,
        alert: {
          level: j.Alert.Level.fatal,
          description: j.Alert.Description.protocol_version
        }
      });
    A.session.version = A.version;
    var Q = B.session_id.bytes();
    Q.length > 0 && Q === A.session.id ? (A.expect = b0, A.session.resuming = !0, A.session.sp.server_random = B.random.bytes()) : (A.expect = uf, A.session.resuming = !1, j.createSecurityParameters(A, B)), A.session.id = Q, A.process();
  }
};
j.handleClientHello = function(A, g, I) {
  var B = j.parseHelloMessage(A, g, I);
  if (!A.fail) {
    var Q = B.session_id.bytes(), E = null;
    if (A.sessionCache && (E = A.sessionCache.getSession(Q), E === null ? Q = "" : (E.version.major !== B.version.major || E.version.minor > B.version.minor) && (E = null, Q = "")), Q.length === 0 && (Q = KA.random.getBytes(32)), A.session.id = Q, A.session.clientHelloVersion = B.version, A.session.sp = {}, E)
      A.version = A.session.version = E.version, A.session.sp = E.sp;
    else {
      for (var C, o = 1; o < j.SupportedVersions.length && (C = j.SupportedVersions[o], !(C.minor <= B.version.minor)); ++o)
        ;
      A.version = { major: C.major, minor: C.minor }, A.session.version = A.version;
    }
    E !== null ? (A.expect = qr, A.session.resuming = !0, A.session.sp.client_random = B.random.bytes()) : (A.expect = A.verifyClient !== !1 ? Jf : ta, A.session.resuming = !1, j.createSecurityParameters(A, B)), A.open = !0, j.queue(A, j.createRecord(A, {
      type: j.ContentType.handshake,
      data: j.createServerHello(A)
    })), A.session.resuming ? (j.queue(A, j.createRecord(A, {
      type: j.ContentType.change_cipher_spec,
      data: j.createChangeCipherSpec()
    })), A.state.pending = j.createConnectionState(A), A.state.current.write = A.state.pending.write, j.queue(A, j.createRecord(A, {
      type: j.ContentType.handshake,
      data: j.createFinished(A)
    }))) : (j.queue(A, j.createRecord(A, {
      type: j.ContentType.handshake,
      data: j.createCertificate(A)
    })), A.fail || (j.queue(A, j.createRecord(A, {
      type: j.ContentType.handshake,
      data: j.createServerKeyExchange(A)
    })), A.verifyClient !== !1 && j.queue(A, j.createRecord(A, {
      type: j.ContentType.handshake,
      data: j.createCertificateRequest(A)
    })), j.queue(A, j.createRecord(A, {
      type: j.ContentType.handshake,
      data: j.createServerHelloDone(A)
    })))), j.flush(A), A.process();
  }
};
j.handleCertificate = function(A, g, I) {
  if (I < 3)
    return A.error(A, {
      message: "Invalid Certificate message. Message too short.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.illegal_parameter
      }
    });
  var B = g.fragment, Q = {
    certificate_list: kI(B, 3)
  }, E, C, o = [];
  try {
    for (; Q.certificate_list.length() > 0; )
      E = kI(Q.certificate_list, 3), C = KA.asn1.fromDer(E), E = KA.pki.certificateFromAsn1(C, !0), o.push(E);
  } catch (e) {
    return A.error(A, {
      message: "Could not parse certificate list.",
      cause: e,
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.bad_certificate
      }
    });
  }
  var t = A.entity === j.ConnectionEnd.client;
  (t || A.verifyClient === !0) && o.length === 0 ? A.error(A, {
    message: t ? "No server certificate provided." : "No client certificate provided.",
    send: !0,
    alert: {
      level: j.Alert.Level.fatal,
      description: j.Alert.Description.illegal_parameter
    }
  }) : o.length === 0 ? A.expect = t ? Ic : ta : (t ? A.session.serverCertificate = o[0] : A.session.clientCertificate = o[0], j.verifyCertificateChain(A, o) && (A.expect = t ? Ic : ta)), A.process();
};
j.handleServerKeyExchange = function(A, g, I) {
  if (I > 0)
    return A.error(A, {
      message: "Invalid key parameters. Only RSA is supported.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.unsupported_certificate
      }
    });
  A.expect = Sf, A.process();
};
j.handleClientKeyExchange = function(A, g, I) {
  if (I < 48)
    return A.error(A, {
      message: "Invalid key parameters. Only RSA is supported.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.unsupported_certificate
      }
    });
  var B = g.fragment, Q = {
    enc_pre_master_secret: kI(B, 2).getBytes()
  }, E = null;
  if (A.getPrivateKey)
    try {
      E = A.getPrivateKey(A, A.session.serverCertificate), E = KA.pki.privateKeyFromPem(E);
    } catch (t) {
      A.error(A, {
        message: "Could not get private key.",
        cause: t,
        send: !0,
        alert: {
          level: j.Alert.Level.fatal,
          description: j.Alert.Description.internal_error
        }
      });
    }
  if (E === null)
    return A.error(A, {
      message: "No private key set.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.internal_error
      }
    });
  try {
    var C = A.session.sp;
    C.pre_master_secret = E.decrypt(Q.enc_pre_master_secret);
    var o = A.session.clientHelloVersion;
    if (o.major !== C.pre_master_secret.charCodeAt(0) || o.minor !== C.pre_master_secret.charCodeAt(1))
      throw new Error("TLS version rollback attack detected.");
  } catch {
    C.pre_master_secret = KA.random.getBytes(48);
  }
  A.expect = qr, A.session.clientCertificate !== null && (A.expect = Lf), A.process();
};
j.handleCertificateRequest = function(A, g, I) {
  if (I < 3)
    return A.error(A, {
      message: "Invalid CertificateRequest. Message too short.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.illegal_parameter
      }
    });
  var B = g.fragment, Q = {
    certificate_types: kI(B, 1),
    certificate_authorities: kI(B, 2)
  };
  A.session.certificateRequest = Q, A.expect = Uf, A.process();
};
j.handleCertificateVerify = function(A, g, I) {
  if (I < 2)
    return A.error(A, {
      message: "Invalid CertificateVerify. Message too short.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.illegal_parameter
      }
    });
  var B = g.fragment;
  B.read -= 4;
  var Q = B.bytes();
  B.read += 4;
  var E = {
    signature: kI(B, 2).getBytes()
  }, C = KA.util.createBuffer();
  C.putBuffer(A.session.md5.digest()), C.putBuffer(A.session.sha1.digest()), C = C.getBytes();
  try {
    var o = A.session.clientCertificate;
    if (!o.publicKey.verify(C, E.signature, "NONE"))
      throw new Error("CertificateVerify signature does not match.");
    A.session.md5.update(Q), A.session.sha1.update(Q);
  } catch {
    return A.error(A, {
      message: "Bad signature in CertificateVerify.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.handshake_failure
      }
    });
  }
  A.expect = qr, A.process();
};
j.handleServerHelloDone = function(A, g, I) {
  if (I > 0)
    return A.error(A, {
      message: "Invalid ServerHelloDone message. Invalid length.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.record_overflow
      }
    });
  if (A.serverCertificate === null) {
    var B = {
      message: "No server certificate provided. Not enough security.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.insufficient_security
      }
    }, Q = 0, E = A.verify(A, B.alert.description, Q, []);
    if (E !== !0)
      return (E || E === 0) && (typeof E == "object" && !KA.util.isArray(E) ? (E.message && (B.message = E.message), E.alert && (B.alert.description = E.alert)) : typeof E == "number" && (B.alert.description = E)), A.error(A, B);
  }
  A.session.certificateRequest !== null && (g = j.createRecord(A, {
    type: j.ContentType.handshake,
    data: j.createCertificate(A)
  }), j.queue(A, g)), g = j.createRecord(A, {
    type: j.ContentType.handshake,
    data: j.createClientKeyExchange(A)
  }), j.queue(A, g), A.expect = pf;
  var C = function(o, t) {
    o.session.certificateRequest !== null && o.session.clientCertificate !== null && j.queue(o, j.createRecord(o, {
      type: j.ContentType.handshake,
      data: j.createCertificateVerify(o, t)
    })), j.queue(o, j.createRecord(o, {
      type: j.ContentType.change_cipher_spec,
      data: j.createChangeCipherSpec()
    })), o.state.pending = j.createConnectionState(o), o.state.current.write = o.state.pending.write, j.queue(o, j.createRecord(o, {
      type: j.ContentType.handshake,
      data: j.createFinished(o)
    })), o.expect = b0, j.flush(o), o.process();
  };
  if (A.session.certificateRequest === null || A.session.clientCertificate === null)
    return C(A, null);
  j.getClientSignature(A, C);
};
j.handleChangeCipherSpec = function(A, g) {
  if (g.fragment.getByte() !== 1)
    return A.error(A, {
      message: "Invalid ChangeCipherSpec message received.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.illegal_parameter
      }
    });
  var I = A.entity === j.ConnectionEnd.client;
  (A.session.resuming && I || !A.session.resuming && !I) && (A.state.pending = j.createConnectionState(A)), A.state.current.read = A.state.pending.read, (!A.session.resuming && I || A.session.resuming && !I) && (A.state.pending = null), A.expect = I ? kf : Kf, A.process();
};
j.handleFinished = function(A, g, I) {
  var B = g.fragment;
  B.read -= 4;
  var Q = B.bytes();
  B.read += 4;
  var E = g.fragment.getBytes();
  B = KA.util.createBuffer(), B.putBuffer(A.session.md5.digest()), B.putBuffer(A.session.sha1.digest());
  var C = A.entity === j.ConnectionEnd.client, o = C ? "server finished" : "client finished", t = A.session.sp, e = 12, i = Hi;
  if (B = i(t.master_secret, o, B.getBytes(), e), B.getBytes() !== E)
    return A.error(A, {
      message: "Invalid verify_data in Finished message.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.decrypt_error
      }
    });
  A.session.md5.update(Q), A.session.sha1.update(Q), (A.session.resuming && C || !A.session.resuming && !C) && (j.queue(A, j.createRecord(A, {
    type: j.ContentType.change_cipher_spec,
    data: j.createChangeCipherSpec()
  })), A.state.current.write = A.state.pending.write, A.state.pending = null, j.queue(A, j.createRecord(A, {
    type: j.ContentType.handshake,
    data: j.createFinished(A)
  }))), A.expect = C ? Hf : mf, A.handshaking = !1, ++A.handshakes, A.peerCertificate = C ? A.session.serverCertificate : A.session.clientCertificate, j.flush(A), A.isConnected = !0, A.connected(A), A.process();
};
j.handleAlert = function(A, g) {
  var I = g.fragment, B = {
    level: I.getByte(),
    description: I.getByte()
  }, Q;
  switch (B.description) {
    case j.Alert.Description.close_notify:
      Q = "Connection closed.";
      break;
    case j.Alert.Description.unexpected_message:
      Q = "Unexpected message.";
      break;
    case j.Alert.Description.bad_record_mac:
      Q = "Bad record MAC.";
      break;
    case j.Alert.Description.decryption_failed:
      Q = "Decryption failed.";
      break;
    case j.Alert.Description.record_overflow:
      Q = "Record overflow.";
      break;
    case j.Alert.Description.decompression_failure:
      Q = "Decompression failed.";
      break;
    case j.Alert.Description.handshake_failure:
      Q = "Handshake failure.";
      break;
    case j.Alert.Description.bad_certificate:
      Q = "Bad certificate.";
      break;
    case j.Alert.Description.unsupported_certificate:
      Q = "Unsupported certificate.";
      break;
    case j.Alert.Description.certificate_revoked:
      Q = "Certificate revoked.";
      break;
    case j.Alert.Description.certificate_expired:
      Q = "Certificate expired.";
      break;
    case j.Alert.Description.certificate_unknown:
      Q = "Certificate unknown.";
      break;
    case j.Alert.Description.illegal_parameter:
      Q = "Illegal parameter.";
      break;
    case j.Alert.Description.unknown_ca:
      Q = "Unknown certificate authority.";
      break;
    case j.Alert.Description.access_denied:
      Q = "Access denied.";
      break;
    case j.Alert.Description.decode_error:
      Q = "Decode error.";
      break;
    case j.Alert.Description.decrypt_error:
      Q = "Decrypt error.";
      break;
    case j.Alert.Description.export_restriction:
      Q = "Export restriction.";
      break;
    case j.Alert.Description.protocol_version:
      Q = "Unsupported protocol version.";
      break;
    case j.Alert.Description.insufficient_security:
      Q = "Insufficient security.";
      break;
    case j.Alert.Description.internal_error:
      Q = "Internal error.";
      break;
    case j.Alert.Description.user_canceled:
      Q = "User canceled.";
      break;
    case j.Alert.Description.no_renegotiation:
      Q = "Renegotiation not supported.";
      break;
    default:
      Q = "Unknown error.";
      break;
  }
  if (B.description === j.Alert.Description.close_notify)
    return A.close();
  A.error(A, {
    message: Q,
    send: !1,
    // origin is the opposite end
    origin: A.entity === j.ConnectionEnd.client ? "server" : "client",
    alert: B
  }), A.process();
};
j.handleHandshake = function(A, g) {
  var I = g.fragment, B = I.getByte(), Q = I.getInt24();
  if (Q > I.length())
    return A.fragmented = g, g.fragment = KA.util.createBuffer(), I.read -= 4, A.process();
  A.fragmented = null, I.read -= 4;
  var E = I.bytes(Q + 4);
  I.read += 4, B in ii[A.entity][A.expect] ? (A.entity === j.ConnectionEnd.server && !A.open && !A.fail && (A.handshaking = !0, A.session = {
    version: null,
    extensions: {
      server_name: {
        serverNameList: []
      }
    },
    cipherSuite: null,
    compressionMethod: null,
    serverCertificate: null,
    clientCertificate: null,
    md5: KA.md.md5.create(),
    sha1: KA.md.sha1.create()
  }), B !== j.HandshakeType.hello_request && B !== j.HandshakeType.certificate_verify && B !== j.HandshakeType.finished && (A.session.md5.update(E), A.session.sha1.update(E)), ii[A.entity][A.expect][B](A, g, Q)) : j.handleUnexpected(A, g);
};
j.handleApplicationData = function(A, g) {
  A.data.putBuffer(g.fragment), A.dataReady(A), A.process();
};
j.handleHeartbeat = function(A, g) {
  var I = g.fragment, B = I.getByte(), Q = I.getInt16(), E = I.getBytes(Q);
  if (B === j.HeartbeatMessageType.heartbeat_request) {
    if (A.handshaking || Q > E.length)
      return A.process();
    j.queue(A, j.createRecord(A, {
      type: j.ContentType.heartbeat,
      data: j.createHeartbeat(
        j.HeartbeatMessageType.heartbeat_response,
        E
      )
    })), j.flush(A);
  } else if (B === j.HeartbeatMessageType.heartbeat_response) {
    if (E !== A.expectedHeartbeatPayload)
      return A.process();
    A.heartbeatReceived && A.heartbeatReceived(A, KA.util.createBuffer(E));
  }
  A.process();
};
var Nf = 0, uf = 1, Ic = 2, Sf = 3, Uf = 4, b0 = 5, kf = 6, Hf = 7, pf = 8, Yf = 0, Jf = 1, ta = 2, Lf = 3, qr = 4, Kf = 5, mf = 6, P = j.handleUnexpected, Z0 = j.handleChangeCipherSpec, AI = j.handleAlert, cI = j.handleHandshake, T0 = j.handleApplicationData, gI = j.handleHeartbeat, Pr = [];
Pr[j.ConnectionEnd.client] = [
  //      CC,AL,HS,AD,HB
  /*SHE*/
  [P, AI, cI, P, gI],
  /*SCE*/
  [P, AI, cI, P, gI],
  /*SKE*/
  [P, AI, cI, P, gI],
  /*SCR*/
  [P, AI, cI, P, gI],
  /*SHD*/
  [P, AI, cI, P, gI],
  /*SCC*/
  [Z0, AI, P, P, gI],
  /*SFI*/
  [P, AI, cI, P, gI],
  /*SAD*/
  [P, AI, cI, T0, gI],
  /*SER*/
  [P, AI, cI, P, gI]
];
Pr[j.ConnectionEnd.server] = [
  //      CC,AL,HS,AD
  /*CHE*/
  [P, AI, cI, P, gI],
  /*CCE*/
  [P, AI, cI, P, gI],
  /*CKE*/
  [P, AI, cI, P, gI],
  /*CCV*/
  [P, AI, cI, P, gI],
  /*CCC*/
  [Z0, AI, P, P, gI],
  /*CFI*/
  [P, AI, cI, P, gI],
  /*CAD*/
  [P, AI, cI, T0, gI],
  /*CER*/
  [P, AI, cI, P, gI]
];
var xQ = j.handleHelloRequest, xf = j.handleServerHello, X0 = j.handleCertificate, Qc = j.handleServerKeyExchange, Ro = j.handleCertificateRequest, ft = j.handleServerHelloDone, z0 = j.handleFinished, ii = [];
ii[j.ConnectionEnd.client] = [
  //      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI
  /*SHE*/
  [P, P, xf, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P],
  /*SCE*/
  [xQ, P, P, P, P, P, P, P, P, P, P, X0, Qc, Ro, ft, P, P, P, P, P, P],
  /*SKE*/
  [xQ, P, P, P, P, P, P, P, P, P, P, P, Qc, Ro, ft, P, P, P, P, P, P],
  /*SCR*/
  [xQ, P, P, P, P, P, P, P, P, P, P, P, P, Ro, ft, P, P, P, P, P, P],
  /*SHD*/
  [xQ, P, P, P, P, P, P, P, P, P, P, P, P, P, ft, P, P, P, P, P, P],
  /*SCC*/
  [xQ, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P],
  /*SFI*/
  [xQ, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, z0],
  /*SAD*/
  [xQ, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P],
  /*SER*/
  [xQ, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P]
];
var vf = j.handleClientHello, bf = j.handleClientKeyExchange, Zf = j.handleCertificateVerify;
ii[j.ConnectionEnd.server] = [
  //      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI
  /*CHE*/
  [P, vf, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P],
  /*CCE*/
  [P, P, P, P, P, P, P, P, P, P, P, X0, P, P, P, P, P, P, P, P, P],
  /*CKE*/
  [P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, bf, P, P, P, P],
  /*CCV*/
  [P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, Zf, P, P, P, P, P],
  /*CCC*/
  [P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P],
  /*CFI*/
  [P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, z0],
  /*CAD*/
  [P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P],
  /*CER*/
  [P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P, P]
];
j.generateKeys = function(A, g) {
  var I = Hi, B = g.client_random + g.server_random;
  A.session.resuming || (g.master_secret = I(
    g.pre_master_secret,
    "master secret",
    B,
    48
  ).bytes(), g.pre_master_secret = null), B = g.server_random + g.client_random;
  var Q = 2 * g.mac_key_length + 2 * g.enc_key_length, E = A.version.major === j.Versions.TLS_1_0.major && A.version.minor === j.Versions.TLS_1_0.minor;
  E && (Q += 2 * g.fixed_iv_length);
  var C = I(g.master_secret, "key expansion", B, Q), o = {
    client_write_MAC_key: C.getBytes(g.mac_key_length),
    server_write_MAC_key: C.getBytes(g.mac_key_length),
    client_write_key: C.getBytes(g.enc_key_length),
    server_write_key: C.getBytes(g.enc_key_length)
  };
  return E && (o.client_write_IV = C.getBytes(g.fixed_iv_length), o.server_write_IV = C.getBytes(g.fixed_iv_length)), o;
};
j.createConnectionState = function(A) {
  var g = A.entity === j.ConnectionEnd.client, I = function() {
    var E = {
      // two 32-bit numbers, first is most significant
      sequenceNumber: [0, 0],
      macKey: null,
      macLength: 0,
      macFunction: null,
      cipherState: null,
      cipherFunction: function(C) {
        return !0;
      },
      compressionState: null,
      compressFunction: function(C) {
        return !0;
      },
      updateSequenceNumber: function() {
        E.sequenceNumber[1] === 4294967295 ? (E.sequenceNumber[1] = 0, ++E.sequenceNumber[0]) : ++E.sequenceNumber[1];
      }
    };
    return E;
  }, B = {
    read: I(),
    write: I()
  };
  if (B.read.update = function(E, C) {
    return B.read.cipherFunction(C, B.read) ? B.read.compressFunction(E, C, B.read) || E.error(E, {
      message: "Could not decompress record.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.decompression_failure
      }
    }) : E.error(E, {
      message: "Could not decrypt record or bad MAC.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        // doesn't matter if decryption failed or MAC was
        // invalid, return the same error so as not to reveal
        // which one occurred
        description: j.Alert.Description.bad_record_mac
      }
    }), !E.fail;
  }, B.write.update = function(E, C) {
    return B.write.compressFunction(E, C, B.write) ? B.write.cipherFunction(C, B.write) || E.error(E, {
      message: "Could not encrypt record.",
      send: !1,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.internal_error
      }
    }) : E.error(E, {
      message: "Could not compress record.",
      send: !1,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.internal_error
      }
    }), !E.fail;
  }, A.session) {
    var Q = A.session.sp;
    switch (A.session.cipherSuite.initSecurityParameters(Q), Q.keys = j.generateKeys(A, Q), B.read.macKey = g ? Q.keys.server_write_MAC_key : Q.keys.client_write_MAC_key, B.write.macKey = g ? Q.keys.client_write_MAC_key : Q.keys.server_write_MAC_key, A.session.cipherSuite.initConnectionState(B, A, Q), Q.compression_algorithm) {
      case j.CompressionMethod.none:
        break;
      case j.CompressionMethod.deflate:
        B.read.compressFunction = Mf, B.write.compressFunction = Gf;
        break;
      default:
        throw new Error("Unsupported compression algorithm.");
    }
  }
  return B;
};
j.createRandom = function() {
  var A = /* @__PURE__ */ new Date(), g = +A + A.getTimezoneOffset() * 6e4, I = KA.util.createBuffer();
  return I.putInt32(g), I.putBytes(KA.random.getBytes(28)), I;
};
j.createRecord = function(A, g) {
  if (!g.data)
    return null;
  var I = {
    type: g.type,
    version: {
      major: A.version.major,
      minor: A.version.minor
    },
    length: g.data.length(),
    fragment: g.data
  };
  return I;
};
j.createAlert = function(A, g) {
  var I = KA.util.createBuffer();
  return I.putByte(g.level), I.putByte(g.description), j.createRecord(A, {
    type: j.ContentType.alert,
    data: I
  });
};
j.createClientHello = function(A) {
  A.session.clientHelloVersion = {
    major: A.version.major,
    minor: A.version.minor
  };
  for (var g = KA.util.createBuffer(), I = 0; I < A.cipherSuites.length; ++I) {
    var B = A.cipherSuites[I];
    g.putByte(B.id[0]), g.putByte(B.id[1]);
  }
  var Q = g.length(), E = KA.util.createBuffer();
  E.putByte(j.CompressionMethod.none);
  var C = E.length(), o = KA.util.createBuffer();
  if (A.virtualHost) {
    var t = KA.util.createBuffer();
    t.putByte(0), t.putByte(0);
    var e = KA.util.createBuffer();
    e.putByte(0), vI(e, 2, KA.util.createBuffer(A.virtualHost));
    var i = KA.util.createBuffer();
    vI(i, 2, e), vI(t, 2, i), o.putBuffer(t);
  }
  var a = o.length();
  a > 0 && (a += 2);
  var r = A.session.id, h = r.length + 1 + // session ID vector
  2 + // version (major + minor)
  4 + 28 + // random time and random bytes
  2 + Q + // cipher suites vector
  1 + C + // compression methods vector
  a, n = KA.util.createBuffer();
  return n.putByte(j.HandshakeType.client_hello), n.putInt24(h), n.putByte(A.version.major), n.putByte(A.version.minor), n.putBytes(A.session.sp.client_random), vI(n, 1, KA.util.createBuffer(r)), vI(n, 2, g), vI(n, 1, E), a > 0 && vI(n, 2, o), n;
};
j.createServerHello = function(A) {
  var g = A.session.id, I = g.length + 1 + // session ID vector
  2 + // version (major + minor)
  4 + 28 + // random time and random bytes
  2 + // chosen cipher suite
  1, B = KA.util.createBuffer();
  return B.putByte(j.HandshakeType.server_hello), B.putInt24(I), B.putByte(A.version.major), B.putByte(A.version.minor), B.putBytes(A.session.sp.server_random), vI(B, 1, KA.util.createBuffer(g)), B.putByte(A.session.cipherSuite.id[0]), B.putByte(A.session.cipherSuite.id[1]), B.putByte(A.session.compressionMethod), B;
};
j.createCertificate = function(A) {
  var g = A.entity === j.ConnectionEnd.client, I = null;
  if (A.getCertificate) {
    var B;
    g ? B = A.session.certificateRequest : B = A.session.extensions.server_name.serverNameList, I = A.getCertificate(A, B);
  }
  var Q = KA.util.createBuffer();
  if (I !== null)
    try {
      KA.util.isArray(I) || (I = [I]);
      for (var E = null, C = 0; C < I.length; ++C) {
        var o = KA.pem.decode(I[C])[0];
        if (o.type !== "CERTIFICATE" && o.type !== "X509 CERTIFICATE" && o.type !== "TRUSTED CERTIFICATE") {
          var t = new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
          throw t.headerType = o.type, t;
        }
        if (o.procType && o.procType.type === "ENCRYPTED")
          throw new Error("Could not convert certificate from PEM; PEM is encrypted.");
        var e = KA.util.createBuffer(o.body);
        E === null && (E = KA.asn1.fromDer(e.bytes(), !1));
        var i = KA.util.createBuffer();
        vI(i, 3, e), Q.putBuffer(i);
      }
      I = KA.pki.certificateFromAsn1(E), g ? A.session.clientCertificate = I : A.session.serverCertificate = I;
    } catch (h) {
      return A.error(A, {
        message: "Could not send certificate list.",
        cause: h,
        send: !0,
        alert: {
          level: j.Alert.Level.fatal,
          description: j.Alert.Description.bad_certificate
        }
      });
    }
  var a = 3 + Q.length(), r = KA.util.createBuffer();
  return r.putByte(j.HandshakeType.certificate), r.putInt24(a), vI(r, 3, Q), r;
};
j.createClientKeyExchange = function(A) {
  var g = KA.util.createBuffer();
  g.putByte(A.session.clientHelloVersion.major), g.putByte(A.session.clientHelloVersion.minor), g.putBytes(KA.random.getBytes(46));
  var I = A.session.sp;
  I.pre_master_secret = g.getBytes();
  var B = A.session.serverCertificate.publicKey;
  g = B.encrypt(I.pre_master_secret);
  var Q = g.length + 2, E = KA.util.createBuffer();
  return E.putByte(j.HandshakeType.client_key_exchange), E.putInt24(Q), E.putInt16(g.length), E.putBytes(g), E;
};
j.createServerKeyExchange = function(A) {
  var g = KA.util.createBuffer();
  return g;
};
j.getClientSignature = function(A, g) {
  var I = KA.util.createBuffer();
  I.putBuffer(A.session.md5.digest()), I.putBuffer(A.session.sha1.digest()), I = I.getBytes(), A.getSignature = A.getSignature || function(B, Q, E) {
    var C = null;
    if (B.getPrivateKey)
      try {
        C = B.getPrivateKey(B, B.session.clientCertificate), C = KA.pki.privateKeyFromPem(C);
      } catch (o) {
        B.error(B, {
          message: "Could not get private key.",
          cause: o,
          send: !0,
          alert: {
            level: j.Alert.Level.fatal,
            description: j.Alert.Description.internal_error
          }
        });
      }
    C === null ? B.error(B, {
      message: "No private key set.",
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: j.Alert.Description.internal_error
      }
    }) : Q = C.sign(Q, null), E(B, Q);
  }, A.getSignature(A, I, g);
};
j.createCertificateVerify = function(A, g) {
  var I = g.length + 2, B = KA.util.createBuffer();
  return B.putByte(j.HandshakeType.certificate_verify), B.putInt24(I), B.putInt16(g.length), B.putBytes(g), B;
};
j.createCertificateRequest = function(A) {
  var g = KA.util.createBuffer();
  g.putByte(1);
  var I = KA.util.createBuffer();
  for (var B in A.caStore.certs) {
    var Q = A.caStore.certs[B], E = KA.pki.distinguishedNameToAsn1(Q.subject), C = KA.asn1.toDer(E);
    I.putInt16(C.length()), I.putBuffer(C);
  }
  var o = 1 + g.length() + 2 + I.length(), t = KA.util.createBuffer();
  return t.putByte(j.HandshakeType.certificate_request), t.putInt24(o), vI(t, 1, g), vI(t, 2, I), t;
};
j.createServerHelloDone = function(A) {
  var g = KA.util.createBuffer();
  return g.putByte(j.HandshakeType.server_hello_done), g.putInt24(0), g;
};
j.createChangeCipherSpec = function() {
  var A = KA.util.createBuffer();
  return A.putByte(1), A;
};
j.createFinished = function(A) {
  var g = KA.util.createBuffer();
  g.putBuffer(A.session.md5.digest()), g.putBuffer(A.session.sha1.digest());
  var I = A.entity === j.ConnectionEnd.client, B = A.session.sp, Q = 12, E = Hi, C = I ? "client finished" : "server finished";
  g = E(B.master_secret, C, g.getBytes(), Q);
  var o = KA.util.createBuffer();
  return o.putByte(j.HandshakeType.finished), o.putInt24(g.length()), o.putBuffer(g), o;
};
j.createHeartbeat = function(A, g, I) {
  typeof I > "u" && (I = g.length);
  var B = KA.util.createBuffer();
  B.putByte(A), B.putInt16(I), B.putBytes(g);
  var Q = B.length(), E = Math.max(16, Q - I - 3);
  return B.putBytes(KA.random.getBytes(E)), B;
};
j.queue = function(A, g) {
  if (g && !(g.fragment.length() === 0 && (g.type === j.ContentType.handshake || g.type === j.ContentType.alert || g.type === j.ContentType.change_cipher_spec))) {
    if (g.type === j.ContentType.handshake) {
      var I = g.fragment.bytes();
      A.session.md5.update(I), A.session.sha1.update(I), I = null;
    }
    var B;
    if (g.fragment.length() <= j.MaxFragment)
      B = [g];
    else {
      B = [];
      for (var Q = g.fragment.bytes(); Q.length > j.MaxFragment; )
        B.push(j.createRecord(A, {
          type: g.type,
          data: KA.util.createBuffer(Q.slice(0, j.MaxFragment))
        })), Q = Q.slice(j.MaxFragment);
      Q.length > 0 && B.push(j.createRecord(A, {
        type: g.type,
        data: KA.util.createBuffer(Q)
      }));
    }
    for (var E = 0; E < B.length && !A.fail; ++E) {
      var C = B[E], o = A.state.current.write;
      o.update(A, C) && A.records.push(C);
    }
  }
};
j.flush = function(A) {
  for (var g = 0; g < A.records.length; ++g) {
    var I = A.records[g];
    A.tlsData.putByte(I.type), A.tlsData.putByte(I.version.major), A.tlsData.putByte(I.version.minor), A.tlsData.putInt16(I.fragment.length()), A.tlsData.putBuffer(A.records[g].fragment);
  }
  return A.records = [], A.tlsDataReady(A);
};
var fo = function(A) {
  switch (A) {
    case !0:
      return !0;
    case KA.pki.certificateError.bad_certificate:
      return j.Alert.Description.bad_certificate;
    case KA.pki.certificateError.unsupported_certificate:
      return j.Alert.Description.unsupported_certificate;
    case KA.pki.certificateError.certificate_revoked:
      return j.Alert.Description.certificate_revoked;
    case KA.pki.certificateError.certificate_expired:
      return j.Alert.Description.certificate_expired;
    case KA.pki.certificateError.certificate_unknown:
      return j.Alert.Description.certificate_unknown;
    case KA.pki.certificateError.unknown_ca:
      return j.Alert.Description.unknown_ca;
    default:
      return j.Alert.Description.bad_certificate;
  }
}, Tf = function(A) {
  switch (A) {
    case !0:
      return !0;
    case j.Alert.Description.bad_certificate:
      return KA.pki.certificateError.bad_certificate;
    case j.Alert.Description.unsupported_certificate:
      return KA.pki.certificateError.unsupported_certificate;
    case j.Alert.Description.certificate_revoked:
      return KA.pki.certificateError.certificate_revoked;
    case j.Alert.Description.certificate_expired:
      return KA.pki.certificateError.certificate_expired;
    case j.Alert.Description.certificate_unknown:
      return KA.pki.certificateError.certificate_unknown;
    case j.Alert.Description.unknown_ca:
      return KA.pki.certificateError.unknown_ca;
    default:
      return KA.pki.certificateError.bad_certificate;
  }
};
j.verifyCertificateChain = function(A, g) {
  try {
    var I = {};
    for (var B in A.verifyOptions)
      I[B] = A.verifyOptions[B];
    I.verify = function(E, C, o) {
      var t = fo(E), e = A.verify(A, E, C, o);
      if (e !== !0) {
        if (typeof e == "object" && !KA.util.isArray(e)) {
          var i = new Error("The application rejected the certificate.");
          throw i.send = !0, i.alert = {
            level: j.Alert.Level.fatal,
            description: j.Alert.Description.bad_certificate
          }, e.message && (i.message = e.message), e.alert && (i.alert.description = e.alert), i;
        }
        e !== E && (e = Tf(e));
      }
      return e;
    }, KA.pki.verifyCertificateChain(A.caStore, g, I);
  } catch (E) {
    var Q = E;
    (typeof Q != "object" || KA.util.isArray(Q)) && (Q = {
      send: !0,
      alert: {
        level: j.Alert.Level.fatal,
        description: fo(E)
      }
    }), "send" in Q || (Q.send = !0), "alert" in Q || (Q.alert = {
      level: j.Alert.Level.fatal,
      description: fo(Q.error)
    }), A.error(A, Q);
  }
  return !A.fail;
};
j.createSessionCache = function(A, g) {
  var I = null;
  if (A && A.getSession && A.setSession && A.order)
    I = A;
  else {
    I = {}, I.cache = A || {}, I.capacity = Math.max(g || 100, 1), I.order = [];
    for (var B in A)
      I.order.length <= g ? I.order.push(B) : delete A[B];
    I.getSession = function(Q) {
      var E = null, C = null;
      if (Q ? C = KA.util.bytesToHex(Q) : I.order.length > 0 && (C = I.order[0]), C !== null && C in I.cache) {
        E = I.cache[C], delete I.cache[C];
        for (var o in I.order)
          if (I.order[o] === C) {
            I.order.splice(o, 1);
            break;
          }
      }
      return E;
    }, I.setSession = function(Q, E) {
      if (I.order.length === I.capacity) {
        var C = I.order.shift();
        delete I.cache[C];
      }
      var C = KA.util.bytesToHex(Q);
      I.order.push(C), I.cache[C] = E;
    };
  }
  return I;
};
j.createConnection = function(A) {
  var g = null;
  A.caStore ? KA.util.isArray(A.caStore) ? g = KA.pki.createCaStore(A.caStore) : g = A.caStore : g = KA.pki.createCaStore();
  var I = A.cipherSuites || null;
  if (I === null) {
    I = [];
    for (var B in j.CipherSuites)
      I.push(j.CipherSuites[B]);
  }
  var Q = A.server ? j.ConnectionEnd.server : j.ConnectionEnd.client, E = A.sessionCache ? j.createSessionCache(A.sessionCache) : null, C = {
    version: { major: j.Version.major, minor: j.Version.minor },
    entity: Q,
    sessionId: A.sessionId,
    caStore: g,
    sessionCache: E,
    cipherSuites: I,
    connected: A.connected,
    virtualHost: A.virtualHost || null,
    verifyClient: A.verifyClient || !1,
    verify: A.verify || function(i, a, r, h) {
      return a;
    },
    verifyOptions: A.verifyOptions || {},
    getCertificate: A.getCertificate || null,
    getPrivateKey: A.getPrivateKey || null,
    getSignature: A.getSignature || null,
    input: KA.util.createBuffer(),
    tlsData: KA.util.createBuffer(),
    data: KA.util.createBuffer(),
    tlsDataReady: A.tlsDataReady,
    dataReady: A.dataReady,
    heartbeatReceived: A.heartbeatReceived,
    closed: A.closed,
    error: function(i, a) {
      a.origin = a.origin || (i.entity === j.ConnectionEnd.client ? "client" : "server"), a.send && (j.queue(i, j.createAlert(i, a.alert)), j.flush(i));
      var r = a.fatal !== !1;
      r && (i.fail = !0), A.error(i, a), r && i.close(!1);
    },
    deflate: A.deflate || null,
    inflate: A.inflate || null
  };
  C.reset = function(i) {
    C.version = { major: j.Version.major, minor: j.Version.minor }, C.record = null, C.session = null, C.peerCertificate = null, C.state = {
      pending: null,
      current: null
    }, C.expect = C.entity === j.ConnectionEnd.client ? Nf : Yf, C.fragmented = null, C.records = [], C.open = !1, C.handshakes = 0, C.handshaking = !1, C.isConnected = !1, C.fail = !(i || typeof i > "u"), C.input.clear(), C.tlsData.clear(), C.data.clear(), C.state.current = j.createConnectionState(C);
  }, C.reset();
  var o = function(i, a) {
    var r = a.type - j.ContentType.change_cipher_spec, h = Pr[i.entity][i.expect];
    r in h ? h[r](i, a) : j.handleUnexpected(i, a);
  }, t = function(i) {
    var a = 0, r = i.input, h = r.length();
    if (h < 5)
      a = 5 - h;
    else {
      i.record = {
        type: r.getByte(),
        version: {
          major: r.getByte(),
          minor: r.getByte()
        },
        length: r.getInt16(),
        fragment: KA.util.createBuffer(),
        ready: !1
      };
      var n = i.record.version.major === i.version.major;
      n && i.session && i.session.version && (n = i.record.version.minor === i.version.minor), n || i.error(i, {
        message: "Incompatible TLS version.",
        send: !0,
        alert: {
          level: j.Alert.Level.fatal,
          description: j.Alert.Description.protocol_version
        }
      });
    }
    return a;
  }, e = function(i) {
    var a = 0, r = i.input, h = r.length();
    if (h < i.record.length)
      a = i.record.length - h;
    else {
      i.record.fragment.putBytes(r.getBytes(i.record.length)), r.compact();
      var n = i.state.current.read;
      n.update(i, i.record) && (i.fragmented !== null && (i.fragmented.type === i.record.type ? (i.fragmented.fragment.putBuffer(i.record.fragment), i.record = i.fragmented) : i.error(i, {
        message: "Invalid fragmented record.",
        send: !0,
        alert: {
          level: j.Alert.Level.fatal,
          description: j.Alert.Description.unexpected_message
        }
      })), i.record.ready = !0);
    }
    return a;
  };
  return C.handshake = function(i) {
    if (C.entity !== j.ConnectionEnd.client)
      C.error(C, {
        message: "Cannot initiate handshake as a server.",
        fatal: !1
      });
    else if (C.handshaking)
      C.error(C, {
        message: "Handshake already in progress.",
        fatal: !1
      });
    else {
      C.fail && !C.open && C.handshakes === 0 && (C.fail = !1), C.handshaking = !0, i = i || "";
      var a = null;
      i.length > 0 && (C.sessionCache && (a = C.sessionCache.getSession(i)), a === null && (i = "")), i.length === 0 && C.sessionCache && (a = C.sessionCache.getSession(), a !== null && (i = a.id)), C.session = {
        id: i,
        version: null,
        cipherSuite: null,
        compressionMethod: null,
        serverCertificate: null,
        certificateRequest: null,
        clientCertificate: null,
        sp: {},
        md5: KA.md.md5.create(),
        sha1: KA.md.sha1.create()
      }, a && (C.version = a.version, C.session.sp = a.sp), C.session.sp.client_random = j.createRandom().getBytes(), C.open = !0, j.queue(C, j.createRecord(C, {
        type: j.ContentType.handshake,
        data: j.createClientHello(C)
      })), j.flush(C);
    }
  }, C.process = function(i) {
    var a = 0;
    return i && C.input.putBytes(i), C.fail || (C.record !== null && C.record.ready && C.record.fragment.isEmpty() && (C.record = null), C.record === null && (a = t(C)), !C.fail && C.record !== null && !C.record.ready && (a = e(C)), !C.fail && C.record !== null && C.record.ready && o(C, C.record)), a;
  }, C.prepare = function(i) {
    return j.queue(C, j.createRecord(C, {
      type: j.ContentType.application_data,
      data: KA.util.createBuffer(i)
    })), j.flush(C);
  }, C.prepareHeartbeatRequest = function(i, a) {
    return i instanceof KA.util.ByteBuffer && (i = i.bytes()), typeof a > "u" && (a = i.length), C.expectedHeartbeatPayload = i, j.queue(C, j.createRecord(C, {
      type: j.ContentType.heartbeat,
      data: j.createHeartbeat(
        j.HeartbeatMessageType.heartbeat_request,
        i,
        a
      )
    })), j.flush(C);
  }, C.close = function(i) {
    if (!C.fail && C.sessionCache && C.session) {
      var a = {
        id: C.session.id,
        version: C.session.version,
        sp: C.session.sp
      };
      a.sp.keys = null, C.sessionCache.setSession(a.id, a);
    }
    C.open && (C.open = !1, C.input.clear(), (C.isConnected || C.handshaking) && (C.isConnected = C.handshaking = !1, j.queue(C, j.createAlert(C, {
      level: j.Alert.Level.warning,
      description: j.Alert.Description.close_notify
    })), j.flush(C)), C.closed(C)), C.reset(i);
  }, C;
};
KA.tls = KA.tls || {};
for (var Go in j)
  typeof j[Go] != "function" && (KA.tls[Go] = j[Go]);
KA.tls.prf_tls1 = Hi;
KA.tls.hmac_sha1 = ff;
KA.tls.createSessionCache = j.createSessionCache;
KA.tls.createConnection = j.createConnection;
var QE = bg, XI = QE.tls;
XI.CipherSuites.TLS_RSA_WITH_AES_128_CBC_SHA = {
  id: [0, 47],
  name: "TLS_RSA_WITH_AES_128_CBC_SHA",
  initSecurityParameters: function(A) {
    A.bulk_cipher_algorithm = XI.BulkCipherAlgorithm.aes, A.cipher_type = XI.CipherType.block, A.enc_key_length = 16, A.block_length = 16, A.fixed_iv_length = 16, A.record_iv_length = 16, A.mac_algorithm = XI.MACAlgorithm.hmac_sha1, A.mac_length = 20, A.mac_key_length = 20;
  },
  initConnectionState: V0
};
XI.CipherSuites.TLS_RSA_WITH_AES_256_CBC_SHA = {
  id: [0, 53],
  name: "TLS_RSA_WITH_AES_256_CBC_SHA",
  initSecurityParameters: function(A) {
    A.bulk_cipher_algorithm = XI.BulkCipherAlgorithm.aes, A.cipher_type = XI.CipherType.block, A.enc_key_length = 32, A.block_length = 16, A.fixed_iv_length = 16, A.record_iv_length = 16, A.mac_algorithm = XI.MACAlgorithm.hmac_sha1, A.mac_length = 20, A.mac_key_length = 20;
  },
  initConnectionState: V0
};
function V0(A, g, I) {
  var B = g.entity === QE.tls.ConnectionEnd.client;
  A.read.cipherState = {
    init: !1,
    cipher: QE.cipher.createDecipher("AES-CBC", B ? I.keys.server_write_key : I.keys.client_write_key),
    iv: B ? I.keys.server_write_IV : I.keys.client_write_IV
  }, A.write.cipherState = {
    init: !1,
    cipher: QE.cipher.createCipher("AES-CBC", B ? I.keys.client_write_key : I.keys.server_write_key),
    iv: B ? I.keys.client_write_IV : I.keys.server_write_IV
  }, A.read.cipherFunction = qf, A.write.cipherFunction = Xf, A.read.macLength = A.write.macLength = I.mac_length, A.read.macFunction = A.write.macFunction = XI.hmac_sha1;
}
function Xf(A, g) {
  var I = !1, B = g.macFunction(g.macKey, g.sequenceNumber, A);
  A.fragment.putBytes(B), g.updateSequenceNumber();
  var Q;
  A.version.minor === XI.Versions.TLS_1_0.minor ? Q = g.cipherState.init ? null : g.cipherState.iv : Q = QE.random.getBytesSync(16), g.cipherState.init = !0;
  var E = g.cipherState.cipher;
  return E.start({ iv: Q }), A.version.minor >= XI.Versions.TLS_1_1.minor && E.output.putBytes(Q), E.update(A.fragment), E.finish(zf) && (A.fragment = E.output, A.length = A.fragment.length(), I = !0), I;
}
function zf(A, g, I) {
  if (!I) {
    var B = A - g.length() % A;
    g.fillWithByte(B - 1, B);
  }
  return !0;
}
function Vf(A, g, I) {
  var B = !0;
  if (I) {
    for (var Q = g.length(), E = g.last(), C = Q - 1 - E; C < Q - 1; ++C)
      B = B && g.at(C) == E;
    B && g.truncate(E + 1);
  }
  return B;
}
function qf(A, g) {
  var I = !1, B;
  A.version.minor === XI.Versions.TLS_1_0.minor ? B = g.cipherState.init ? null : g.cipherState.iv : B = A.fragment.getBytes(16), g.cipherState.init = !0;
  var Q = g.cipherState.cipher;
  Q.start({ iv: B }), Q.update(A.fragment), I = Q.finish(Vf);
  var E = g.macLength, C = QE.random.getBytesSync(E), o = Q.output.length();
  o >= E ? (A.fragment = Q.output.getBytes(o - E), C = Q.output.getBytes(E)) : A.fragment = Q.output.getBytes(), A.fragment = QE.util.createBuffer(A.fragment), A.length = A.fragment.length();
  var t = g.macFunction(g.macKey, g.sequenceNumber, A);
  return g.updateSequenceNumber(), I = Pf(g.macKey, C, t) && I, I;
}
function Pf(A, g, I) {
  var B = QE.hmac.create();
  return B.start("SHA1", A), B.update(g), g = B.digest().getBytes(), B.start(null, null), B.update(I), I = B.digest().getBytes(), g === I;
}
var GB = bg, $e = GB.sha512 = GB.sha512 || {};
GB.md.sha512 = GB.md.algorithms.sha512 = $e;
var q0 = GB.sha384 = GB.sha512.sha384 = GB.sha512.sha384 || {};
q0.create = function() {
  return $e.create("SHA-384");
};
GB.md.sha384 = GB.md.algorithms.sha384 = q0;
GB.sha512.sha256 = GB.sha512.sha256 || {
  create: function() {
    return $e.create("SHA-512/256");
  }
};
GB.md["sha512/256"] = GB.md.algorithms["sha512/256"] = GB.sha512.sha256;
GB.sha512.sha224 = GB.sha512.sha224 || {
  create: function() {
    return $e.create("SHA-512/224");
  }
};
GB.md["sha512/224"] = GB.md.algorithms["sha512/224"] = GB.sha512.sha224;
$e.create = function(A) {
  if (P0 || Wf(), typeof A > "u" && (A = "SHA-512"), !(A in fE))
    throw new Error("Invalid SHA-512 algorithm: " + A);
  for (var g = fE[A], I = null, B = GB.util.createBuffer(), Q = new Array(80), E = 0; E < 80; ++E)
    Q[E] = new Array(2);
  var C = 64;
  switch (A) {
    case "SHA-384":
      C = 48;
      break;
    case "SHA-512/256":
      C = 32;
      break;
    case "SHA-512/224":
      C = 28;
      break;
  }
  var o = {
    // SHA-512 => sha512
    algorithm: A.replace("-", "").toLowerCase(),
    blockLength: 128,
    digestLength: C,
    // 56-bit length of message so far (does not including padding)
    messageLength: 0,
    // true message length
    fullMessageLength: null,
    // size of message length in bytes
    messageLengthSize: 16
  };
  return o.start = function() {
    o.messageLength = 0, o.fullMessageLength = o.messageLength128 = [];
    for (var t = o.messageLengthSize / 4, e = 0; e < t; ++e)
      o.fullMessageLength.push(0);
    B = GB.util.createBuffer(), I = new Array(g.length);
    for (var e = 0; e < g.length; ++e)
      I[e] = g[e].slice(0);
    return o;
  }, o.start(), o.update = function(t, e) {
    e === "utf8" && (t = GB.util.encodeUtf8(t));
    var i = t.length;
    o.messageLength += i, i = [i / 4294967296 >>> 0, i >>> 0];
    for (var a = o.fullMessageLength.length - 1; a >= 0; --a)
      o.fullMessageLength[a] += i[1], i[1] = i[0] + (o.fullMessageLength[a] / 4294967296 >>> 0), o.fullMessageLength[a] = o.fullMessageLength[a] >>> 0, i[0] = i[1] / 4294967296 >>> 0;
    return B.putBytes(t), Ec(I, Q, B), (B.read > 2048 || B.length() === 0) && B.compact(), o;
  }, o.digest = function() {
    var t = GB.util.createBuffer();
    t.putBytes(B.bytes());
    var e = o.fullMessageLength[o.fullMessageLength.length - 1] + o.messageLengthSize, i = e & o.blockLength - 1;
    t.putBytes(ia.substr(0, o.blockLength - i));
    for (var a, r, h = o.fullMessageLength[0] * 8, n = 0; n < o.fullMessageLength.length - 1; ++n)
      a = o.fullMessageLength[n + 1] * 8, r = a / 4294967296 >>> 0, h += r, t.putInt32(h >>> 0), h = a >>> 0;
    t.putInt32(h);
    for (var l = new Array(I.length), n = 0; n < I.length; ++n)
      l[n] = I[n].slice(0);
    Ec(l, Q, t);
    var y = GB.util.createBuffer(), N;
    A === "SHA-512" ? N = l.length : A === "SHA-384" ? N = l.length - 2 : N = l.length - 4;
    for (var n = 0; n < N; ++n)
      y.putInt32(l[n][0]), (n !== N - 1 || A !== "SHA-512/224") && y.putInt32(l[n][1]);
    return y;
  }, o;
};
var ia = null, P0 = !1, oa = null, fE = null;
function Wf() {
  ia = "", ia += GB.util.fillString("\0", 128), oa = [
    [1116352408, 3609767458],
    [1899447441, 602891725],
    [3049323471, 3964484399],
    [3921009573, 2173295548],
    [961987163, 4081628472],
    [1508970993, 3053834265],
    [2453635748, 2937671579],
    [2870763221, 3664609560],
    [3624381080, 2734883394],
    [310598401, 1164996542],
    [607225278, 1323610764],
    [1426881987, 3590304994],
    [1925078388, 4068182383],
    [2162078206, 991336113],
    [2614888103, 633803317],
    [3248222580, 3479774868],
    [3835390401, 2666613458],
    [4022224774, 944711139],
    [264347078, 2341262773],
    [604807628, 2007800933],
    [770255983, 1495990901],
    [1249150122, 1856431235],
    [1555081692, 3175218132],
    [1996064986, 2198950837],
    [2554220882, 3999719339],
    [2821834349, 766784016],
    [2952996808, 2566594879],
    [3210313671, 3203337956],
    [3336571891, 1034457026],
    [3584528711, 2466948901],
    [113926993, 3758326383],
    [338241895, 168717936],
    [666307205, 1188179964],
    [773529912, 1546045734],
    [1294757372, 1522805485],
    [1396182291, 2643833823],
    [1695183700, 2343527390],
    [1986661051, 1014477480],
    [2177026350, 1206759142],
    [2456956037, 344077627],
    [2730485921, 1290863460],
    [2820302411, 3158454273],
    [3259730800, 3505952657],
    [3345764771, 106217008],
    [3516065817, 3606008344],
    [3600352804, 1432725776],
    [4094571909, 1467031594],
    [275423344, 851169720],
    [430227734, 3100823752],
    [506948616, 1363258195],
    [659060556, 3750685593],
    [883997877, 3785050280],
    [958139571, 3318307427],
    [1322822218, 3812723403],
    [1537002063, 2003034995],
    [1747873779, 3602036899],
    [1955562222, 1575990012],
    [2024104815, 1125592928],
    [2227730452, 2716904306],
    [2361852424, 442776044],
    [2428436474, 593698344],
    [2756734187, 3733110249],
    [3204031479, 2999351573],
    [3329325298, 3815920427],
    [3391569614, 3928383900],
    [3515267271, 566280711],
    [3940187606, 3454069534],
    [4118630271, 4000239992],
    [116418474, 1914138554],
    [174292421, 2731055270],
    [289380356, 3203993006],
    [460393269, 320620315],
    [685471733, 587496836],
    [852142971, 1086792851],
    [1017036298, 365543100],
    [1126000580, 2618297676],
    [1288033470, 3409855158],
    [1501505948, 4234509866],
    [1607167915, 987167468],
    [1816402316, 1246189591]
  ], fE = {}, fE["SHA-512"] = [
    [1779033703, 4089235720],
    [3144134277, 2227873595],
    [1013904242, 4271175723],
    [2773480762, 1595750129],
    [1359893119, 2917565137],
    [2600822924, 725511199],
    [528734635, 4215389547],
    [1541459225, 327033209]
  ], fE["SHA-384"] = [
    [3418070365, 3238371032],
    [1654270250, 914150663],
    [2438529370, 812702999],
    [355462360, 4144912697],
    [1731405415, 4290775857],
    [2394180231, 1750603025],
    [3675008525, 1694076839],
    [1203062813, 3204075428]
  ], fE["SHA-512/256"] = [
    [573645204, 4230739756],
    [2673172387, 3360449730],
    [596883563, 1867755857],
    [2520282905, 1497426621],
    [2519219938, 2827943907],
    [3193839141, 1401305490],
    [721525244, 746961066],
    [246885852, 2177182882]
  ], fE["SHA-512/224"] = [
    [2352822216, 424955298],
    [1944164710, 2312950998],
    [502970286, 855612546],
    [1738396948, 1479516111],
    [258812777, 2077511080],
    [2011393907, 79989058],
    [1067287976, 1780299464],
    [286451373, 2446758561]
  ], P0 = !0;
}
function Ec(A, g, I) {
  for (var B, Q, E, C, o, t, e, i, a, r, h, n, l, y, N, s, F, u, U, J, L, f, d, p, x, M, S, k, v, m, T, $, AA, lA, FA, cA = I.length(); cA >= 128; ) {
    for (v = 0; v < 16; ++v)
      g[v][0] = I.getInt32() >>> 0, g[v][1] = I.getInt32() >>> 0;
    for (; v < 80; ++v)
      $ = g[v - 2], m = $[0], T = $[1], B = ((m >>> 19 | T << 13) ^ // ROTR 19
      (T >>> 29 | m << 3) ^ // ROTR 61/(swap + ROTR 29)
      m >>> 6) >>> 0, Q = ((m << 13 | T >>> 19) ^ // ROTR 19
      (T << 3 | m >>> 29) ^ // ROTR 61/(swap + ROTR 29)
      (m << 26 | T >>> 6)) >>> 0, lA = g[v - 15], m = lA[0], T = lA[1], E = ((m >>> 1 | T << 31) ^ // ROTR 1
      (m >>> 8 | T << 24) ^ // ROTR 8
      m >>> 7) >>> 0, C = ((m << 31 | T >>> 1) ^ // ROTR 1
      (m << 24 | T >>> 8) ^ // ROTR 8
      (m << 25 | T >>> 7)) >>> 0, AA = g[v - 7], FA = g[v - 16], T = Q + AA[1] + C + FA[1], g[v][0] = B + AA[0] + E + FA[0] + (T / 4294967296 >>> 0) >>> 0, g[v][1] = T >>> 0;
    for (l = A[0][0], y = A[0][1], N = A[1][0], s = A[1][1], F = A[2][0], u = A[2][1], U = A[3][0], J = A[3][1], L = A[4][0], f = A[4][1], d = A[5][0], p = A[5][1], x = A[6][0], M = A[6][1], S = A[7][0], k = A[7][1], v = 0; v < 80; ++v)
      e = ((L >>> 14 | f << 18) ^ // ROTR 14
      (L >>> 18 | f << 14) ^ // ROTR 18
      (f >>> 9 | L << 23)) >>> 0, i = ((L << 18 | f >>> 14) ^ // ROTR 14
      (L << 14 | f >>> 18) ^ // ROTR 18
      (f << 23 | L >>> 9)) >>> 0, a = (x ^ L & (d ^ x)) >>> 0, r = (M ^ f & (p ^ M)) >>> 0, o = ((l >>> 28 | y << 4) ^ // ROTR 28
      (y >>> 2 | l << 30) ^ // ROTR 34/(swap + ROTR 2)
      (y >>> 7 | l << 25)) >>> 0, t = ((l << 4 | y >>> 28) ^ // ROTR 28
      (y << 30 | l >>> 2) ^ // ROTR 34/(swap + ROTR 2)
      (y << 25 | l >>> 7)) >>> 0, h = (l & N | F & (l ^ N)) >>> 0, n = (y & s | u & (y ^ s)) >>> 0, T = k + i + r + oa[v][1] + g[v][1], B = S + e + a + oa[v][0] + g[v][0] + (T / 4294967296 >>> 0) >>> 0, Q = T >>> 0, T = t + n, E = o + h + (T / 4294967296 >>> 0) >>> 0, C = T >>> 0, S = x, k = M, x = d, M = p, d = L, p = f, T = J + Q, L = U + B + (T / 4294967296 >>> 0) >>> 0, f = T >>> 0, U = F, J = u, F = N, u = s, N = l, s = y, T = Q + C, l = B + E + (T / 4294967296 >>> 0) >>> 0, y = T >>> 0;
    T = A[0][1] + y, A[0][0] = A[0][0] + l + (T / 4294967296 >>> 0) >>> 0, A[0][1] = T >>> 0, T = A[1][1] + s, A[1][0] = A[1][0] + N + (T / 4294967296 >>> 0) >>> 0, A[1][1] = T >>> 0, T = A[2][1] + u, A[2][0] = A[2][0] + F + (T / 4294967296 >>> 0) >>> 0, A[2][1] = T >>> 0, T = A[3][1] + J, A[3][0] = A[3][0] + U + (T / 4294967296 >>> 0) >>> 0, A[3][1] = T >>> 0, T = A[4][1] + f, A[4][0] = A[4][0] + L + (T / 4294967296 >>> 0) >>> 0, A[4][1] = T >>> 0, T = A[5][1] + p, A[5][0] = A[5][0] + d + (T / 4294967296 >>> 0) >>> 0, A[5][1] = T >>> 0, T = A[6][1] + M, A[6][0] = A[6][0] + x + (T / 4294967296 >>> 0) >>> 0, A[6][1] = T >>> 0, T = A[7][1] + k, A[7][0] = A[7][0] + S + (T / 4294967296 >>> 0) >>> 0, A[7][1] = T >>> 0, cA -= 128;
  }
}
var Wr = {}, Of = bg, WB = Of.asn1;
Wr.privateKeyValidator = {
  // PrivateKeyInfo
  name: "PrivateKeyInfo",
  tagClass: WB.Class.UNIVERSAL,
  type: WB.Type.SEQUENCE,
  constructed: !0,
  value: [{
    // Version (INTEGER)
    name: "PrivateKeyInfo.version",
    tagClass: WB.Class.UNIVERSAL,
    type: WB.Type.INTEGER,
    constructed: !1,
    capture: "privateKeyVersion"
  }, {
    // privateKeyAlgorithm
    name: "PrivateKeyInfo.privateKeyAlgorithm",
    tagClass: WB.Class.UNIVERSAL,
    type: WB.Type.SEQUENCE,
    constructed: !0,
    value: [{
      name: "AlgorithmIdentifier.algorithm",
      tagClass: WB.Class.UNIVERSAL,
      type: WB.Type.OID,
      constructed: !1,
      capture: "privateKeyOid"
    }]
  }, {
    // PrivateKey
    name: "PrivateKeyInfo",
    tagClass: WB.Class.UNIVERSAL,
    type: WB.Type.OCTETSTRING,
    constructed: !1,
    capture: "privateKey"
  }]
};
Wr.publicKeyValidator = {
  name: "SubjectPublicKeyInfo",
  tagClass: WB.Class.UNIVERSAL,
  type: WB.Type.SEQUENCE,
  constructed: !0,
  captureAsn1: "subjectPublicKeyInfo",
  value: [
    {
      name: "SubjectPublicKeyInfo.AlgorithmIdentifier",
      tagClass: WB.Class.UNIVERSAL,
      type: WB.Type.SEQUENCE,
      constructed: !0,
      value: [{
        name: "AlgorithmIdentifier.algorithm",
        tagClass: WB.Class.UNIVERSAL,
        type: WB.Type.OID,
        constructed: !1,
        capture: "publicKeyOid"
      }]
    },
    // capture group for ed25519PublicKey
    {
      tagClass: WB.Class.UNIVERSAL,
      type: WB.Type.BITSTRING,
      constructed: !1,
      composed: !0,
      captureBitStringValue: "ed25519PublicKey"
    }
    // FIXME: this is capture group for rsaPublicKey, use it in this API or
    // discard?
    /* {
      // subjectPublicKey
      name: 'SubjectPublicKeyInfo.subjectPublicKey',
      tagClass: asn1.Class.UNIVERSAL,
      type: asn1.Type.BITSTRING,
      constructed: false,
      value: [{
        // RSAPublicKey
        name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',
        tagClass: asn1.Class.UNIVERSAL,
        type: asn1.Type.SEQUENCE,
        constructed: true,
        optional: true,
        captureAsn1: 'rsaPublicKey'
      }]
    } */
  ]
};
var II = bg, W0 = Wr, jf = W0.publicKeyValidator, _f = W0.privateKeyValidator;
if (typeof $f > "u")
  var $f = II.jsbn.BigInteger;
var aa = II.util.ByteBuffer, GI = typeof FB > "u" ? Uint8Array : FB;
II.pki = II.pki || {};
II.pki.ed25519 = II.ed25519 = II.ed25519 || {};
var Xg = II.ed25519;
Xg.constants = {};
Xg.constants.PUBLIC_KEY_BYTE_LENGTH = 32;
Xg.constants.PRIVATE_KEY_BYTE_LENGTH = 64;
Xg.constants.SEED_BYTE_LENGTH = 32;
Xg.constants.SIGN_BYTE_LENGTH = 64;
Xg.constants.HASH_BYTE_LENGTH = 64;
Xg.generateKeyPair = function(A) {
  A = A || {};
  var g = A.seed;
  if (g === void 0)
    g = II.random.getBytesSync(Xg.constants.SEED_BYTE_LENGTH);
  else if (typeof g == "string") {
    if (g.length !== Xg.constants.SEED_BYTE_LENGTH)
      throw new TypeError(
        '"seed" must be ' + Xg.constants.SEED_BYTE_LENGTH + " bytes in length."
      );
  } else if (!(g instanceof Uint8Array))
    throw new TypeError(
      '"seed" must be a node.js Buffer, Uint8Array, or a binary string.'
    );
  g = YQ({ message: g, encoding: "binary" });
  for (var I = new GI(Xg.constants.PUBLIC_KEY_BYTE_LENGTH), B = new GI(Xg.constants.PRIVATE_KEY_BYTE_LENGTH), Q = 0; Q < 32; ++Q)
    B[Q] = g[Q];
  return IG(I, B), { publicKey: I, privateKey: B };
};
Xg.privateKeyFromAsn1 = function(A) {
  var g = {}, I = [], B = II.asn1.validate(A, _f, g, I);
  if (!B) {
    var Q = new Error("Invalid Key.");
    throw Q.errors = I, Q;
  }
  var E = II.asn1.derToOid(g.privateKeyOid), C = II.oids.EdDSA25519;
  if (E !== C)
    throw new Error('Invalid OID "' + E + '"; OID must be "' + C + '".');
  var o = g.privateKey, t = YQ({
    message: II.asn1.fromDer(o).value,
    encoding: "binary"
  });
  return { privateKeyBytes: t };
};
Xg.publicKeyFromAsn1 = function(A) {
  var g = {}, I = [], B = II.asn1.validate(A, jf, g, I);
  if (!B) {
    var Q = new Error("Invalid Key.");
    throw Q.errors = I, Q;
  }
  var E = II.asn1.derToOid(g.publicKeyOid), C = II.oids.EdDSA25519;
  if (E !== C)
    throw new Error('Invalid OID "' + E + '"; OID must be "' + C + '".');
  var o = g.ed25519PublicKey;
  if (o.length !== Xg.constants.PUBLIC_KEY_BYTE_LENGTH)
    throw new Error("Key length is invalid.");
  return YQ({
    message: o,
    encoding: "binary"
  });
};
Xg.publicKeyFromPrivateKey = function(A) {
  A = A || {};
  var g = YQ({
    message: A.privateKey,
    encoding: "binary"
  });
  if (g.length !== Xg.constants.PRIVATE_KEY_BYTE_LENGTH)
    throw new TypeError(
      '"options.privateKey" must have a byte length of ' + Xg.constants.PRIVATE_KEY_BYTE_LENGTH
    );
  for (var I = new GI(Xg.constants.PUBLIC_KEY_BYTE_LENGTH), B = 0; B < I.length; ++B)
    I[B] = g[32 + B];
  return I;
};
Xg.sign = function(A) {
  A = A || {};
  var g = YQ(A), I = YQ({
    message: A.privateKey,
    encoding: "binary"
  });
  if (I.length === Xg.constants.SEED_BYTE_LENGTH) {
    var B = Xg.generateKeyPair({ seed: I });
    I = B.privateKey;
  } else if (I.length !== Xg.constants.PRIVATE_KEY_BYTE_LENGTH)
    throw new TypeError(
      '"options.privateKey" must have a byte length of ' + Xg.constants.SEED_BYTE_LENGTH + " or " + Xg.constants.PRIVATE_KEY_BYTE_LENGTH
    );
  var Q = new GI(
    Xg.constants.SIGN_BYTE_LENGTH + g.length
  );
  QG(Q, g, g.length, I);
  for (var E = new GI(Xg.constants.SIGN_BYTE_LENGTH), C = 0; C < E.length; ++C)
    E[C] = Q[C];
  return E;
};
Xg.verify = function(A) {
  A = A || {};
  var g = YQ(A);
  if (A.signature === void 0)
    throw new TypeError(
      '"options.signature" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a binary string.'
    );
  var I = YQ({
    message: A.signature,
    encoding: "binary"
  });
  if (I.length !== Xg.constants.SIGN_BYTE_LENGTH)
    throw new TypeError(
      '"options.signature" must have a byte length of ' + Xg.constants.SIGN_BYTE_LENGTH
    );
  var B = YQ({
    message: A.publicKey,
    encoding: "binary"
  });
  if (B.length !== Xg.constants.PUBLIC_KEY_BYTE_LENGTH)
    throw new TypeError(
      '"options.publicKey" must have a byte length of ' + Xg.constants.PUBLIC_KEY_BYTE_LENGTH
    );
  var Q = new GI(Xg.constants.SIGN_BYTE_LENGTH + g.length), E = new GI(Xg.constants.SIGN_BYTE_LENGTH + g.length), C;
  for (C = 0; C < Xg.constants.SIGN_BYTE_LENGTH; ++C)
    Q[C] = I[C];
  for (C = 0; C < g.length; ++C)
    Q[C + Xg.constants.SIGN_BYTE_LENGTH] = g[C];
  return EG(E, Q, Q.length, B) >= 0;
};
function YQ(A) {
  var g = A.message;
  if (g instanceof Uint8Array || g instanceof GI)
    return g;
  var I = A.encoding;
  if (g === void 0)
    if (A.md)
      g = A.md.digest().getBytes(), I = "binary";
    else
      throw new TypeError('"options.message" or "options.md" not specified.');
  if (typeof g == "string" && !I)
    throw new TypeError('"options.encoding" must be "binary" or "utf8".');
  if (typeof g == "string") {
    if (typeof FB < "u")
      return FB.from(g, I);
    g = new aa(g, I);
  } else if (!(g instanceof aa))
    throw new TypeError(
      '"options.message" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a string with "options.encoding" specifying its encoding.'
    );
  for (var B = new GI(g.length()), Q = 0; Q < B.length; ++Q)
    B[Q] = g.at(Q);
  return B;
}
var ra = sg(), oi = sg([1]), AG = sg([
  30883,
  4953,
  19914,
  30187,
  55467,
  16705,
  2637,
  112,
  59544,
  30585,
  16505,
  36039,
  65139,
  11119,
  27886,
  20995
]), gG = sg([
  61785,
  9906,
  39828,
  60374,
  45398,
  33411,
  5274,
  224,
  53552,
  61171,
  33010,
  6542,
  64743,
  22239,
  55772,
  9222
]), Cc = sg([
  54554,
  36645,
  11616,
  51542,
  42930,
  38181,
  51040,
  26924,
  56412,
  64982,
  57905,
  49316,
  21502,
  52590,
  14035,
  8553
]), ec = sg([
  26200,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214,
  26214
]), Mo = new Float64Array([
  237,
  211,
  245,
  92,
  26,
  99,
  18,
  88,
  214,
  156,
  247,
  162,
  222,
  249,
  222,
  20,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  16
]), BG = sg([
  41136,
  18958,
  6951,
  50414,
  58488,
  44335,
  6150,
  12099,
  55207,
  15867,
  153,
  11085,
  57099,
  20417,
  9344,
  11139
]);
function Se(A, g) {
  var I = II.md.sha512.create(), B = new aa(A);
  I.update(B.getBytes(g), "binary");
  var Q = I.digest().getBytes();
  if (typeof FB < "u")
    return FB.from(Q, "binary");
  for (var E = new GI(Xg.constants.HASH_BYTE_LENGTH), C = 0; C < 64; ++C)
    E[C] = Q.charCodeAt(C);
  return E;
}
function IG(A, g) {
  var I = [sg(), sg(), sg(), sg()], B, Q = Se(g, 32);
  for (Q[0] &= 248, Q[31] &= 127, Q[31] |= 64, jr(I, Q), Or(A, I), B = 0; B < 32; ++B)
    g[B + 32] = A[B];
  return 0;
}
function QG(A, g, I, B) {
  var Q, E, C = new Float64Array(64), o = [sg(), sg(), sg(), sg()], t = Se(B, 32);
  t[0] &= 248, t[31] &= 127, t[31] |= 64;
  var e = I + 64;
  for (Q = 0; Q < I; ++Q)
    A[64 + Q] = g[Q];
  for (Q = 0; Q < 32; ++Q)
    A[32 + Q] = t[32 + Q];
  var i = Se(A.subarray(32), I + 32);
  for (sa(i), jr(o, i), Or(A, o), Q = 32; Q < 64; ++Q)
    A[Q] = B[Q];
  var a = Se(A, I + 64);
  for (sa(a), Q = 32; Q < 64; ++Q)
    C[Q] = 0;
  for (Q = 0; Q < 32; ++Q)
    C[Q] = i[Q];
  for (Q = 0; Q < 32; ++Q)
    for (E = 0; E < 32; E++)
      C[Q + E] += a[Q] * t[E];
  return O0(A.subarray(32), C), e;
}
function EG(A, g, I, B) {
  var Q, E, C = new GI(32), o = [sg(), sg(), sg(), sg()], t = [sg(), sg(), sg(), sg()];
  if (E = -1, I < 64 || CG(t, B))
    return -1;
  for (Q = 0; Q < I; ++Q)
    A[Q] = g[Q];
  for (Q = 0; Q < 32; ++Q)
    A[Q + 32] = B[Q];
  var e = Se(A, I);
  if (sa(e), $0(o, t, e), jr(t, g.subarray(32)), na(o, t), Or(C, o), I -= 64, j0(g, 0, C, 0)) {
    for (Q = 0; Q < I; ++Q)
      A[Q] = 0;
    return -1;
  }
  for (Q = 0; Q < I; ++Q)
    A[Q] = g[Q + 64];
  return E = I, E;
}
function O0(A, g) {
  var I, B, Q, E;
  for (B = 63; B >= 32; --B) {
    for (I = 0, Q = B - 32, E = B - 12; Q < E; ++Q)
      g[Q] += I - 16 * g[B] * Mo[Q - (B - 32)], I = g[Q] + 128 >> 8, g[Q] -= I * 256;
    g[Q] += I, g[B] = 0;
  }
  for (I = 0, Q = 0; Q < 32; ++Q)
    g[Q] += I - (g[31] >> 4) * Mo[Q], I = g[Q] >> 8, g[Q] &= 255;
  for (Q = 0; Q < 32; ++Q)
    g[Q] -= I * Mo[Q];
  for (B = 0; B < 32; ++B)
    g[B + 1] += g[B] >> 8, A[B] = g[B] & 255;
}
function sa(A) {
  for (var g = new Float64Array(64), I = 0; I < 64; ++I)
    g[I] = A[I], A[I] = 0;
  O0(A, g);
}
function na(A, g) {
  var I = sg(), B = sg(), Q = sg(), E = sg(), C = sg(), o = sg(), t = sg(), e = sg(), i = sg();
  hC(I, A[1], A[0]), hC(i, g[1], g[0]), cB(I, I, i), sC(B, A[0], A[1]), sC(i, g[0], g[1]), cB(B, B, i), cB(Q, A[3], g[3]), cB(Q, Q, gG), cB(E, A[2], g[2]), sC(E, E, E), hC(C, B, I), hC(o, E, Q), sC(t, E, Q), sC(e, B, I), cB(A[0], C, o), cB(A[1], e, t), cB(A[2], t, o), cB(A[3], C, e);
}
function tc(A, g, I) {
  for (var B = 0; B < 4; ++B)
    Ah(A[B], g[B], I);
}
function Or(A, g) {
  var I = sg(), B = sg(), Q = sg();
  oG(Q, g[2]), cB(I, g[0], Q), cB(B, g[1], Q), ai(A, B), A[31] ^= _0(I) << 7;
}
function ai(A, g) {
  var I, B, Q, E = sg(), C = sg();
  for (I = 0; I < 16; ++I)
    C[I] = g[I];
  for (No(C), No(C), No(C), B = 0; B < 2; ++B) {
    for (E[0] = C[0] - 65517, I = 1; I < 15; ++I)
      E[I] = C[I] - 65535 - (E[I - 1] >> 16 & 1), E[I - 1] &= 65535;
    E[15] = C[15] - 32767 - (E[14] >> 16 & 1), Q = E[15] >> 16 & 1, E[14] &= 65535, Ah(C, E, 1 - Q);
  }
  for (I = 0; I < 16; I++)
    A[2 * I] = C[I] & 255, A[2 * I + 1] = C[I] >> 8;
}
function CG(A, g) {
  var I = sg(), B = sg(), Q = sg(), E = sg(), C = sg(), o = sg(), t = sg();
  return _Q(A[2], oi), eG(A[1], g), GE(Q, A[1]), cB(E, Q, AG), hC(Q, Q, A[2]), sC(E, A[2], E), GE(C, E), GE(o, C), cB(t, o, C), cB(I, t, Q), cB(I, I, E), tG(I, I), cB(I, I, Q), cB(I, I, E), cB(I, I, E), cB(A[0], I, E), GE(B, A[0]), cB(B, B, E), ic(B, Q) && cB(A[0], A[0], BG), GE(B, A[0]), cB(B, B, E), ic(B, Q) ? -1 : (_0(A[0]) === g[31] >> 7 && hC(A[0], ra, A[0]), cB(A[3], A[0], A[1]), 0);
}
function eG(A, g) {
  var I;
  for (I = 0; I < 16; ++I)
    A[I] = g[2 * I] + (g[2 * I + 1] << 8);
  A[15] &= 32767;
}
function tG(A, g) {
  var I = sg(), B;
  for (B = 0; B < 16; ++B)
    I[B] = g[B];
  for (B = 250; B >= 0; --B)
    GE(I, I), B !== 1 && cB(I, I, g);
  for (B = 0; B < 16; ++B)
    A[B] = I[B];
}
function ic(A, g) {
  var I = new GI(32), B = new GI(32);
  return ai(I, A), ai(B, g), j0(I, 0, B, 0);
}
function j0(A, g, I, B) {
  return iG(A, g, I, B, 32);
}
function iG(A, g, I, B, Q) {
  var E, C = 0;
  for (E = 0; E < Q; ++E)
    C |= A[g + E] ^ I[B + E];
  return (1 & C - 1 >>> 8) - 1;
}
function _0(A) {
  var g = new GI(32);
  return ai(g, A), g[0] & 1;
}
function $0(A, g, I) {
  var B, Q;
  for (_Q(A[0], ra), _Q(A[1], oi), _Q(A[2], oi), _Q(A[3], ra), Q = 255; Q >= 0; --Q)
    B = I[Q / 8 | 0] >> (Q & 7) & 1, tc(A, g, B), na(g, A), na(A, A), tc(A, g, B);
}
function jr(A, g) {
  var I = [sg(), sg(), sg(), sg()];
  _Q(I[0], Cc), _Q(I[1], ec), _Q(I[2], oi), cB(I[3], Cc, ec), $0(A, I, g);
}
function _Q(A, g) {
  var I;
  for (I = 0; I < 16; I++)
    A[I] = g[I] | 0;
}
function oG(A, g) {
  var I = sg(), B;
  for (B = 0; B < 16; ++B)
    I[B] = g[B];
  for (B = 253; B >= 0; --B)
    GE(I, I), B !== 2 && B !== 4 && cB(I, I, g);
  for (B = 0; B < 16; ++B)
    A[B] = I[B];
}
function No(A) {
  var g, I, B = 1;
  for (g = 0; g < 16; ++g)
    I = A[g] + B + 65535, B = Math.floor(I / 65536), A[g] = I - B * 65536;
  A[0] += B - 1 + 37 * (B - 1);
}
function Ah(A, g, I) {
  for (var B, Q = ~(I - 1), E = 0; E < 16; ++E)
    B = Q & (A[E] ^ g[E]), A[E] ^= B, g[E] ^= B;
}
function sg(A) {
  var g, I = new Float64Array(16);
  if (A)
    for (g = 0; g < A.length; ++g)
      I[g] = A[g];
  return I;
}
function sC(A, g, I) {
  for (var B = 0; B < 16; ++B)
    A[B] = g[B] + I[B];
}
function hC(A, g, I) {
  for (var B = 0; B < 16; ++B)
    A[B] = g[B] - I[B];
}
function GE(A, g) {
  cB(A, g, g);
}
function cB(A, g, I) {
  var B, Q, E = 0, C = 0, o = 0, t = 0, e = 0, i = 0, a = 0, r = 0, h = 0, n = 0, l = 0, y = 0, N = 0, s = 0, F = 0, u = 0, U = 0, J = 0, L = 0, f = 0, d = 0, p = 0, x = 0, M = 0, S = 0, k = 0, v = 0, m = 0, T = 0, $ = 0, AA = 0, lA = I[0], FA = I[1], cA = I[2], yA = I[3], aA = I[4], eA = I[5], CA = I[6], b = I[7], Y = I[8], QA = I[9], BA = I[10], iA = I[11], rA = I[12], GA = I[13], _ = I[14], uA = I[15];
  B = g[0], E += B * lA, C += B * FA, o += B * cA, t += B * yA, e += B * aA, i += B * eA, a += B * CA, r += B * b, h += B * Y, n += B * QA, l += B * BA, y += B * iA, N += B * rA, s += B * GA, F += B * _, u += B * uA, B = g[1], C += B * lA, o += B * FA, t += B * cA, e += B * yA, i += B * aA, a += B * eA, r += B * CA, h += B * b, n += B * Y, l += B * QA, y += B * BA, N += B * iA, s += B * rA, F += B * GA, u += B * _, U += B * uA, B = g[2], o += B * lA, t += B * FA, e += B * cA, i += B * yA, a += B * aA, r += B * eA, h += B * CA, n += B * b, l += B * Y, y += B * QA, N += B * BA, s += B * iA, F += B * rA, u += B * GA, U += B * _, J += B * uA, B = g[3], t += B * lA, e += B * FA, i += B * cA, a += B * yA, r += B * aA, h += B * eA, n += B * CA, l += B * b, y += B * Y, N += B * QA, s += B * BA, F += B * iA, u += B * rA, U += B * GA, J += B * _, L += B * uA, B = g[4], e += B * lA, i += B * FA, a += B * cA, r += B * yA, h += B * aA, n += B * eA, l += B * CA, y += B * b, N += B * Y, s += B * QA, F += B * BA, u += B * iA, U += B * rA, J += B * GA, L += B * _, f += B * uA, B = g[5], i += B * lA, a += B * FA, r += B * cA, h += B * yA, n += B * aA, l += B * eA, y += B * CA, N += B * b, s += B * Y, F += B * QA, u += B * BA, U += B * iA, J += B * rA, L += B * GA, f += B * _, d += B * uA, B = g[6], a += B * lA, r += B * FA, h += B * cA, n += B * yA, l += B * aA, y += B * eA, N += B * CA, s += B * b, F += B * Y, u += B * QA, U += B * BA, J += B * iA, L += B * rA, f += B * GA, d += B * _, p += B * uA, B = g[7], r += B * lA, h += B * FA, n += B * cA, l += B * yA, y += B * aA, N += B * eA, s += B * CA, F += B * b, u += B * Y, U += B * QA, J += B * BA, L += B * iA, f += B * rA, d += B * GA, p += B * _, x += B * uA, B = g[8], h += B * lA, n += B * FA, l += B * cA, y += B * yA, N += B * aA, s += B * eA, F += B * CA, u += B * b, U += B * Y, J += B * QA, L += B * BA, f += B * iA, d += B * rA, p += B * GA, x += B * _, M += B * uA, B = g[9], n += B * lA, l += B * FA, y += B * cA, N += B * yA, s += B * aA, F += B * eA, u += B * CA, U += B * b, J += B * Y, L += B * QA, f += B * BA, d += B * iA, p += B * rA, x += B * GA, M += B * _, S += B * uA, B = g[10], l += B * lA, y += B * FA, N += B * cA, s += B * yA, F += B * aA, u += B * eA, U += B * CA, J += B * b, L += B * Y, f += B * QA, d += B * BA, p += B * iA, x += B * rA, M += B * GA, S += B * _, k += B * uA, B = g[11], y += B * lA, N += B * FA, s += B * cA, F += B * yA, u += B * aA, U += B * eA, J += B * CA, L += B * b, f += B * Y, d += B * QA, p += B * BA, x += B * iA, M += B * rA, S += B * GA, k += B * _, v += B * uA, B = g[12], N += B * lA, s += B * FA, F += B * cA, u += B * yA, U += B * aA, J += B * eA, L += B * CA, f += B * b, d += B * Y, p += B * QA, x += B * BA, M += B * iA, S += B * rA, k += B * GA, v += B * _, m += B * uA, B = g[13], s += B * lA, F += B * FA, u += B * cA, U += B * yA, J += B * aA, L += B * eA, f += B * CA, d += B * b, p += B * Y, x += B * QA, M += B * BA, S += B * iA, k += B * rA, v += B * GA, m += B * _, T += B * uA, B = g[14], F += B * lA, u += B * FA, U += B * cA, J += B * yA, L += B * aA, f += B * eA, d += B * CA, p += B * b, x += B * Y, M += B * QA, S += B * BA, k += B * iA, v += B * rA, m += B * GA, T += B * _, $ += B * uA, B = g[15], u += B * lA, U += B * FA, J += B * cA, L += B * yA, f += B * aA, d += B * eA, p += B * CA, x += B * b, M += B * Y, S += B * QA, k += B * BA, v += B * iA, m += B * rA, T += B * GA, $ += B * _, AA += B * uA, E += 38 * U, C += 38 * J, o += 38 * L, t += 38 * f, e += 38 * d, i += 38 * p, a += 38 * x, r += 38 * M, h += 38 * S, n += 38 * k, l += 38 * v, y += 38 * m, N += 38 * T, s += 38 * $, F += 38 * AA, Q = 1, B = E + Q + 65535, Q = Math.floor(B / 65536), E = B - Q * 65536, B = C + Q + 65535, Q = Math.floor(B / 65536), C = B - Q * 65536, B = o + Q + 65535, Q = Math.floor(B / 65536), o = B - Q * 65536, B = t + Q + 65535, Q = Math.floor(B / 65536), t = B - Q * 65536, B = e + Q + 65535, Q = Math.floor(B / 65536), e = B - Q * 65536, B = i + Q + 65535, Q = Math.floor(B / 65536), i = B - Q * 65536, B = a + Q + 65535, Q = Math.floor(B / 65536), a = B - Q * 65536, B = r + Q + 65535, Q = Math.floor(B / 65536), r = B - Q * 65536, B = h + Q + 65535, Q = Math.floor(B / 65536), h = B - Q * 65536, B = n + Q + 65535, Q = Math.floor(B / 65536), n = B - Q * 65536, B = l + Q + 65535, Q = Math.floor(B / 65536), l = B - Q * 65536, B = y + Q + 65535, Q = Math.floor(B / 65536), y = B - Q * 65536, B = N + Q + 65535, Q = Math.floor(B / 65536), N = B - Q * 65536, B = s + Q + 65535, Q = Math.floor(B / 65536), s = B - Q * 65536, B = F + Q + 65535, Q = Math.floor(B / 65536), F = B - Q * 65536, B = u + Q + 65535, Q = Math.floor(B / 65536), u = B - Q * 65536, E += Q - 1 + 37 * (Q - 1), Q = 1, B = E + Q + 65535, Q = Math.floor(B / 65536), E = B - Q * 65536, B = C + Q + 65535, Q = Math.floor(B / 65536), C = B - Q * 65536, B = o + Q + 65535, Q = Math.floor(B / 65536), o = B - Q * 65536, B = t + Q + 65535, Q = Math.floor(B / 65536), t = B - Q * 65536, B = e + Q + 65535, Q = Math.floor(B / 65536), e = B - Q * 65536, B = i + Q + 65535, Q = Math.floor(B / 65536), i = B - Q * 65536, B = a + Q + 65535, Q = Math.floor(B / 65536), a = B - Q * 65536, B = r + Q + 65535, Q = Math.floor(B / 65536), r = B - Q * 65536, B = h + Q + 65535, Q = Math.floor(B / 65536), h = B - Q * 65536, B = n + Q + 65535, Q = Math.floor(B / 65536), n = B - Q * 65536, B = l + Q + 65535, Q = Math.floor(B / 65536), l = B - Q * 65536, B = y + Q + 65535, Q = Math.floor(B / 65536), y = B - Q * 65536, B = N + Q + 65535, Q = Math.floor(B / 65536), N = B - Q * 65536, B = s + Q + 65535, Q = Math.floor(B / 65536), s = B - Q * 65536, B = F + Q + 65535, Q = Math.floor(B / 65536), F = B - Q * 65536, B = u + Q + 65535, Q = Math.floor(B / 65536), u = B - Q * 65536, E += Q - 1 + 37 * (Q - 1), A[0] = E, A[1] = C, A[2] = o, A[3] = t, A[4] = e, A[5] = i, A[6] = a, A[7] = r, A[8] = h, A[9] = n, A[10] = l, A[11] = y, A[12] = N, A[13] = s, A[14] = F, A[15] = u;
}
var HI = bg;
HI.kem = HI.kem || {};
var oc = HI.jsbn.BigInteger;
HI.kem.rsa = {};
HI.kem.rsa.create = function(A, g) {
  g = g || {};
  var I = g.prng || HI.random, B = {};
  return B.encrypt = function(Q, E) {
    var C = Math.ceil(Q.n.bitLength() / 8), o;
    do
      o = new oc(
        HI.util.bytesToHex(I.getBytesSync(C)),
        16
      ).mod(Q.n);
    while (o.compareTo(oc.ONE) <= 0);
    o = HI.util.hexToBytes(o.toString(16));
    var t = C - o.length;
    t > 0 && (o = HI.util.fillString("\0", t) + o);
    var e = Q.encrypt(o, "NONE"), i = A.generate(o, E);
    return { encapsulation: e, key: i };
  }, B.decrypt = function(Q, E, C) {
    var o = Q.decrypt(E, "NONE");
    return A.generate(o, C);
  }, B;
};
HI.kem.kdf1 = function(A, g) {
  gh(this, A, 0, g || A.digestLength);
};
HI.kem.kdf2 = function(A, g) {
  gh(this, A, 1, g || A.digestLength);
};
function gh(A, g, I, B) {
  A.generate = function(Q, E) {
    for (var C = new HI.util.ByteBuffer(), o = Math.ceil(E / B) + I, t = new HI.util.ByteBuffer(), e = I; e < o; ++e) {
      t.putInt32(e), g.start(), g.update(Q + t.getBytes());
      var i = g.digest();
      C.putBytes(i.getBytes(B));
    }
    return C.truncate(C.length() - E), C.getBytes();
  };
}
var Pg = bg;
Pg.log = Pg.log || {};
Pg.log.levels = [
  "none",
  "error",
  "warning",
  "info",
  "debug",
  "verbose",
  "max"
];
var ri = {}, ca = [], Ue = null;
Pg.log.LEVEL_LOCKED = 2;
Pg.log.NO_LEVEL_CHECK = 4;
Pg.log.INTERPOLATE = 8;
for (var $Q = 0; $Q < Pg.log.levels.length; ++$Q) {
  var ac = Pg.log.levels[$Q];
  ri[ac] = {
    index: $Q,
    name: ac.toUpperCase()
  };
}
Pg.log.logMessage = function(A) {
  for (var g = ri[A.level].index, I = 0; I < ca.length; ++I) {
    var B = ca[I];
    if (B.flags & Pg.log.NO_LEVEL_CHECK)
      B.f(A);
    else {
      var Q = ri[B.level].index;
      g <= Q && B.f(B, A);
    }
  }
};
Pg.log.prepareStandard = function(A) {
  "standard" in A || (A.standard = ri[A.level].name + //' ' + +message.timestamp +
  " [" + A.category + "] " + A.message);
};
Pg.log.prepareFull = function(A) {
  if (!("full" in A)) {
    var g = [A.message];
    g = g.concat([]), A.full = Pg.util.format.apply(this, g);
  }
};
Pg.log.prepareStandardFull = function(A) {
  "standardFull" in A || (Pg.log.prepareStandard(A), A.standardFull = A.standard);
};
for (var rc = ["error", "warning", "info", "debug", "verbose"], $Q = 0; $Q < rc.length; ++$Q)
  (function(g) {
    Pg.log[g] = function(I, B) {
      var Q = Array.prototype.slice.call(arguments).slice(2), E = {
        timestamp: /* @__PURE__ */ new Date(),
        level: g,
        category: I,
        message: B,
        arguments: Q
        /*standard*/
        /*full*/
        /*fullMessage*/
      };
      Pg.log.logMessage(E);
    };
  })(rc[$Q]);
Pg.log.makeLogger = function(A) {
  var g = {
    flags: 0,
    f: A
  };
  return Pg.log.setLevel(g, "none"), g;
};
Pg.log.setLevel = function(A, g) {
  var I = !1;
  if (A && !(A.flags & Pg.log.LEVEL_LOCKED))
    for (var B = 0; B < Pg.log.levels.length; ++B) {
      var Q = Pg.log.levels[B];
      if (g == Q) {
        A.level = g, I = !0;
        break;
      }
    }
  return I;
};
Pg.log.lock = function(A, g) {
  typeof g > "u" || g ? A.flags |= Pg.log.LEVEL_LOCKED : A.flags &= ~Pg.log.LEVEL_LOCKED;
};
Pg.log.addLogger = function(A) {
  ca.push(A);
};
if (typeof console < "u" && "log" in console) {
  var we;
  if (console.error && console.warn && console.info && console.debug) {
    var aG = {
      error: console.error,
      warning: console.warn,
      info: console.info,
      debug: console.debug,
      verbose: console.debug
    }, _r = function(A, g) {
      Pg.log.prepareStandard(g);
      var I = aG[g.level], B = [g.standard];
      B = B.concat(g.arguments.slice()), I.apply(console, B);
    };
    we = Pg.log.makeLogger(_r);
  } else {
    var _r = function(g, I) {
      Pg.log.prepareStandardFull(I), console.log(I.standardFull);
    };
    we = Pg.log.makeLogger(_r);
  }
  Pg.log.setLevel(we, "debug"), Pg.log.addLogger(we), Ue = we;
} else
  console = {
    log: function() {
    }
  };
if (Ue !== null && typeof window < "u" && window.location) {
  var Gt = new URL(window.location.href).searchParams;
  if (Gt.has("console.level") && Pg.log.setLevel(
    Ue,
    Gt.get("console.level").slice(-1)[0]
  ), Gt.has("console.lock")) {
    var rG = Gt.get("console.lock").slice(-1)[0];
    rG == "true" && Pg.log.lock(Ue);
  }
}
Pg.log.consoleLogger = Ue;
var qA = bg, dA = qA.asn1, hI = qA.pkcs7 = qA.pkcs7 || {};
hI.messageFromPem = function(A) {
  var g = qA.pem.decode(A)[0];
  if (g.type !== "PKCS7") {
    var I = new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');
    throw I.headerType = g.type, I;
  }
  if (g.procType && g.procType.type === "ENCRYPTED")
    throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");
  var B = dA.fromDer(g.body);
  return hI.messageFromAsn1(B);
};
hI.messageToPem = function(A, g) {
  var I = {
    type: "PKCS7",
    body: dA.toDer(A.toAsn1()).getBytes()
  };
  return qA.pem.encode(I, { maxline: g });
};
hI.messageFromAsn1 = function(A) {
  var g = {}, I = [];
  if (!dA.validate(A, hI.asn1.contentInfoValidator, g, I)) {
    var B = new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");
    throw B.errors = I, B;
  }
  var Q = dA.derToOid(g.contentType), E;
  switch (Q) {
    case qA.pki.oids.envelopedData:
      E = hI.createEnvelopedData();
      break;
    case qA.pki.oids.encryptedData:
      E = hI.createEncryptedData();
      break;
    case qA.pki.oids.signedData:
      E = hI.createSignedData();
      break;
    default:
      throw new Error("Cannot read PKCS#7 message. ContentType with OID " + Q + " is not (yet) supported.");
  }
  return E.fromAsn1(g.content.value[0]), E;
};
hI.createSignedData = function() {
  var A = null;
  return A = {
    type: qA.pki.oids.signedData,
    version: 1,
    certificates: [],
    crls: [],
    // TODO: add json-formatted signer stuff here?
    signers: [],
    // populated during sign()
    digestAlgorithmIdentifiers: [],
    contentInfo: null,
    signerInfos: [],
    fromAsn1: function(B) {
      if ($r(A, B, hI.asn1.signedDataValidator), A.certificates = [], A.crls = [], A.digestAlgorithmIdentifiers = [], A.contentInfo = null, A.signerInfos = [], A.rawCapture.certificates)
        for (var Q = A.rawCapture.certificates.value, E = 0; E < Q.length; ++E)
          A.certificates.push(qA.pki.certificateFromAsn1(Q[E]));
    },
    toAsn1: function() {
      A.contentInfo || A.sign();
      for (var B = [], Q = 0; Q < A.certificates.length; ++Q)
        B.push(qA.pki.certificateToAsn1(A.certificates[Q]));
      var E = [], C = dA.create(dA.Class.CONTEXT_SPECIFIC, 0, !0, [
        dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
          // Version
          dA.create(
            dA.Class.UNIVERSAL,
            dA.Type.INTEGER,
            !1,
            dA.integerToDer(A.version).getBytes()
          ),
          // DigestAlgorithmIdentifiers
          dA.create(
            dA.Class.UNIVERSAL,
            dA.Type.SET,
            !0,
            A.digestAlgorithmIdentifiers
          ),
          // ContentInfo
          A.contentInfo
        ])
      ]);
      return B.length > 0 && C.value[0].value.push(
        dA.create(dA.Class.CONTEXT_SPECIFIC, 0, !0, B)
      ), E.length > 0 && C.value[0].value.push(
        dA.create(dA.Class.CONTEXT_SPECIFIC, 1, !0, E)
      ), C.value[0].value.push(
        dA.create(
          dA.Class.UNIVERSAL,
          dA.Type.SET,
          !0,
          A.signerInfos
        )
      ), dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.SEQUENCE,
        !0,
        [
          // ContentType
          dA.create(
            dA.Class.UNIVERSAL,
            dA.Type.OID,
            !1,
            dA.oidToDer(A.type).getBytes()
          ),
          // [0] SignedData
          C
        ]
      );
    },
    /**
     * Add (another) entity to list of signers.
     *
     * Note: If authenticatedAttributes are provided, then, per RFC 2315,
     * they must include at least two attributes: content type and
     * message digest. The message digest attribute value will be
     * auto-calculated during signing and will be ignored if provided.
     *
     * Here's an example of providing these two attributes:
     *
     * forge.pkcs7.createSignedData();
     * p7.addSigner({
     *   issuer: cert.issuer.attributes,
     *   serialNumber: cert.serialNumber,
     *   key: privateKey,
     *   digestAlgorithm: forge.pki.oids.sha1,
     *   authenticatedAttributes: [{
     *     type: forge.pki.oids.contentType,
     *     value: forge.pki.oids.data
     *   }, {
     *     type: forge.pki.oids.messageDigest
     *   }]
     * });
     *
     * TODO: Support [subjectKeyIdentifier] as signer's ID.
     *
     * @param signer the signer information:
     *          key the signer's private key.
     *          [certificate] a certificate containing the public key
     *            associated with the signer's private key; use this option as
     *            an alternative to specifying signer.issuer and
     *            signer.serialNumber.
     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).
     *          [serialNumber] the signer's certificate's serial number in
     *           hexadecimal (eg: cert.serialNumber).
     *          [digestAlgorithm] the message digest OID, as a string, to use
     *            (eg: forge.pki.oids.sha1).
     *          [authenticatedAttributes] an optional array of attributes
     *            to also sign along with the content.
     */
    addSigner: function(B) {
      var Q = B.issuer, E = B.serialNumber;
      if (B.certificate) {
        var C = B.certificate;
        typeof C == "string" && (C = qA.pki.certificateFromPem(C)), Q = C.issuer.attributes, E = C.serialNumber;
      }
      var o = B.key;
      if (!o)
        throw new Error(
          "Could not add PKCS#7 signer; no private key specified."
        );
      typeof o == "string" && (o = qA.pki.privateKeyFromPem(o));
      var t = B.digestAlgorithm || qA.pki.oids.sha1;
      switch (t) {
        case qA.pki.oids.sha1:
        case qA.pki.oids.sha256:
        case qA.pki.oids.sha384:
        case qA.pki.oids.sha512:
        case qA.pki.oids.md5:
          break;
        default:
          throw new Error(
            "Could not add PKCS#7 signer; unknown message digest algorithm: " + t
          );
      }
      var e = B.authenticatedAttributes || [];
      if (e.length > 0) {
        for (var i = !1, a = !1, r = 0; r < e.length; ++r) {
          var h = e[r];
          if (!i && h.type === qA.pki.oids.contentType) {
            if (i = !0, a)
              break;
            continue;
          }
          if (!a && h.type === qA.pki.oids.messageDigest) {
            if (a = !0, i)
              break;
            continue;
          }
        }
        if (!i || !a)
          throw new Error("Invalid signer.authenticatedAttributes. If signer.authenticatedAttributes is specified, then it must contain at least two attributes, PKCS #9 content-type and PKCS #9 message-digest.");
      }
      A.signers.push({
        key: o,
        version: 1,
        issuer: Q,
        serialNumber: E,
        digestAlgorithm: t,
        signatureAlgorithm: qA.pki.oids.rsaEncryption,
        signature: null,
        authenticatedAttributes: e,
        unauthenticatedAttributes: []
      });
    },
    /**
     * Signs the content.
     * @param options Options to apply when signing:
     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.
     */
    sign: function(B) {
      if (B = B || {}, (typeof A.content != "object" || A.contentInfo === null) && (A.contentInfo = dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.SEQUENCE,
        !0,
        [
          // ContentType
          dA.create(
            dA.Class.UNIVERSAL,
            dA.Type.OID,
            !1,
            dA.oidToDer(qA.pki.oids.data).getBytes()
          )
        ]
      ), "content" in A)) {
        var Q;
        A.content instanceof qA.util.ByteBuffer ? Q = A.content.bytes() : typeof A.content == "string" && (Q = qA.util.encodeUtf8(A.content)), B.detached ? A.detachedContent = dA.create(dA.Class.UNIVERSAL, dA.Type.OCTETSTRING, !1, Q) : A.contentInfo.value.push(
          // [0] EXPLICIT content
          dA.create(dA.Class.CONTEXT_SPECIFIC, 0, !0, [
            dA.create(
              dA.Class.UNIVERSAL,
              dA.Type.OCTETSTRING,
              !1,
              Q
            )
          ])
        );
      }
      if (A.signers.length !== 0) {
        var E = g();
        I(E);
      }
    },
    verify: function() {
      throw new Error("PKCS#7 signature verification not yet implemented.");
    },
    /**
     * Add a certificate.
     *
     * @param cert the certificate to add.
     */
    addCertificate: function(B) {
      typeof B == "string" && (B = qA.pki.certificateFromPem(B)), A.certificates.push(B);
    },
    /**
     * Add a certificate revokation list.
     *
     * @param crl the certificate revokation list to add.
     */
    addCertificateRevokationList: function(B) {
      throw new Error("PKCS#7 CRL support not yet implemented.");
    }
  }, A;
  function g() {
    for (var B = {}, Q = 0; Q < A.signers.length; ++Q) {
      var E = A.signers[Q], C = E.digestAlgorithm;
      C in B || (B[C] = qA.md[qA.pki.oids[C]].create()), E.authenticatedAttributes.length === 0 ? E.md = B[C] : E.md = qA.md[qA.pki.oids[C]].create();
    }
    A.digestAlgorithmIdentifiers = [];
    for (var C in B)
      A.digestAlgorithmIdentifiers.push(
        // AlgorithmIdentifier
        dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
          // algorithm
          dA.create(
            dA.Class.UNIVERSAL,
            dA.Type.OID,
            !1,
            dA.oidToDer(C).getBytes()
          ),
          // parameters (null)
          dA.create(dA.Class.UNIVERSAL, dA.Type.NULL, !1, "")
        ])
      );
    return B;
  }
  function I(B) {
    var Q;
    if (A.detachedContent ? Q = A.detachedContent : (Q = A.contentInfo.value[1], Q = Q.value[0]), !Q)
      throw new Error(
        "Could not sign PKCS#7 message; there is no content to sign."
      );
    var E = dA.derToOid(A.contentInfo.value[0].value), C = dA.toDer(Q);
    C.getByte(), dA.getBerValueLength(C), C = C.getBytes();
    for (var o in B)
      B[o].start().update(C);
    for (var t = /* @__PURE__ */ new Date(), e = 0; e < A.signers.length; ++e) {
      var i = A.signers[e];
      if (i.authenticatedAttributes.length === 0) {
        if (E !== qA.pki.oids.data)
          throw new Error(
            "Invalid signer; authenticatedAttributes must be present when the ContentInfo content type is not PKCS#7 Data."
          );
      } else {
        i.authenticatedAttributesAsn1 = dA.create(
          dA.Class.CONTEXT_SPECIFIC,
          0,
          !0,
          []
        );
        for (var a = dA.create(
          dA.Class.UNIVERSAL,
          dA.Type.SET,
          !0,
          []
        ), r = 0; r < i.authenticatedAttributes.length; ++r) {
          var h = i.authenticatedAttributes[r];
          h.type === qA.pki.oids.messageDigest ? h.value = B[i.digestAlgorithm].digest() : h.type === qA.pki.oids.signingTime && (h.value || (h.value = t)), a.value.push(Da(h)), i.authenticatedAttributesAsn1.value.push(Da(h));
        }
        C = dA.toDer(a).getBytes(), i.md.start().update(C);
      }
      i.signature = i.key.sign(i.md, "RSASSA-PKCS1-V1_5");
    }
    A.signerInfos = lG(A.signers);
  }
};
hI.createEncryptedData = function() {
  var A = null;
  return A = {
    type: qA.pki.oids.encryptedData,
    version: 0,
    encryptedContent: {
      algorithm: qA.pki.oids["aes256-CBC"]
    },
    /**
     * Reads an EncryptedData content block (in ASN.1 format)
     *
     * @param obj The ASN.1 representation of the EncryptedData content block
     */
    fromAsn1: function(g) {
      $r(A, g, hI.asn1.encryptedDataValidator);
    },
    /**
     * Decrypt encrypted content
     *
     * @param key The (symmetric) key as a byte buffer
     */
    decrypt: function(g) {
      g !== void 0 && (A.encryptedContent.key = g), Bh(A);
    }
  }, A;
};
hI.createEnvelopedData = function() {
  var A = null;
  return A = {
    type: qA.pki.oids.envelopedData,
    version: 0,
    recipients: [],
    encryptedContent: {
      algorithm: qA.pki.oids["aes256-CBC"]
    },
    /**
     * Reads an EnvelopedData content block (in ASN.1 format)
     *
     * @param obj the ASN.1 representation of the EnvelopedData content block.
     */
    fromAsn1: function(g) {
      var I = $r(A, g, hI.asn1.envelopedDataValidator);
      A.recipients = cG(I.recipientInfos.value);
    },
    toAsn1: function() {
      return dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
        // ContentType
        dA.create(
          dA.Class.UNIVERSAL,
          dA.Type.OID,
          !1,
          dA.oidToDer(A.type).getBytes()
        ),
        // [0] EnvelopedData
        dA.create(dA.Class.CONTEXT_SPECIFIC, 0, !0, [
          dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
            // Version
            dA.create(
              dA.Class.UNIVERSAL,
              dA.Type.INTEGER,
              !1,
              dA.integerToDer(A.version).getBytes()
            ),
            // RecipientInfos
            dA.create(
              dA.Class.UNIVERSAL,
              dA.Type.SET,
              !0,
              DG(A.recipients)
            ),
            // EncryptedContentInfo
            dA.create(
              dA.Class.UNIVERSAL,
              dA.Type.SEQUENCE,
              !0,
              yG(A.encryptedContent)
            )
          ])
        ])
      ]);
    },
    /**
     * Find recipient by X.509 certificate's issuer.
     *
     * @param cert the certificate with the issuer to look for.
     *
     * @return the recipient object.
     */
    findRecipient: function(g) {
      for (var I = g.issuer.attributes, B = 0; B < A.recipients.length; ++B) {
        var Q = A.recipients[B], E = Q.issuer;
        if (Q.serialNumber === g.serialNumber && E.length === I.length) {
          for (var C = !0, o = 0; o < I.length; ++o)
            if (E[o].type !== I[o].type || E[o].value !== I[o].value) {
              C = !1;
              break;
            }
          if (C)
            return Q;
        }
      }
      return null;
    },
    /**
     * Decrypt enveloped content
     *
     * @param recipient The recipient object related to the private key
     * @param privKey The (RSA) private key object
     */
    decrypt: function(g, I) {
      if (A.encryptedContent.key === void 0 && g !== void 0 && I !== void 0)
        switch (g.encryptedContent.algorithm) {
          case qA.pki.oids.rsaEncryption:
          case qA.pki.oids.desCBC:
            var B = I.decrypt(g.encryptedContent.content);
            A.encryptedContent.key = qA.util.createBuffer(B);
            break;
          default:
            throw new Error("Unsupported asymmetric cipher, OID " + g.encryptedContent.algorithm);
        }
      Bh(A);
    },
    /**
     * Add (another) entity to list of recipients.
     *
     * @param cert The certificate of the entity to add.
     */
    addRecipient: function(g) {
      A.recipients.push({
        version: 0,
        issuer: g.issuer.attributes,
        serialNumber: g.serialNumber,
        encryptedContent: {
          // We simply assume rsaEncryption here, since forge.pki only
          // supports RSA so far.  If the PKI module supports other
          // ciphers one day, we need to modify this one as well.
          algorithm: qA.pki.oids.rsaEncryption,
          key: g.publicKey
        }
      });
    },
    /**
     * Encrypt enveloped content.
     *
     * This function supports two optional arguments, cipher and key, which
     * can be used to influence symmetric encryption.  Unless cipher is
     * provided, the cipher specified in encryptedContent.algorithm is used
     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key
     * is (re-)used.  If that one's not set, a random key will be generated
     * automatically.
     *
     * @param [key] The key to be used for symmetric encryption.
     * @param [cipher] The OID of the symmetric cipher to use.
     */
    encrypt: function(g, I) {
      if (A.encryptedContent.content === void 0) {
        I = I || A.encryptedContent.algorithm, g = g || A.encryptedContent.key;
        var B, Q, E;
        switch (I) {
          case qA.pki.oids["aes128-CBC"]:
            B = 16, Q = 16, E = qA.aes.createEncryptionCipher;
            break;
          case qA.pki.oids["aes192-CBC"]:
            B = 24, Q = 16, E = qA.aes.createEncryptionCipher;
            break;
          case qA.pki.oids["aes256-CBC"]:
            B = 32, Q = 16, E = qA.aes.createEncryptionCipher;
            break;
          case qA.pki.oids["des-EDE3-CBC"]:
            B = 24, Q = 8, E = qA.des.createEncryptionCipher;
            break;
          default:
            throw new Error("Unsupported symmetric cipher, OID " + I);
        }
        if (g === void 0)
          g = qA.util.createBuffer(qA.random.getBytes(B));
        else if (g.length() != B)
          throw new Error("Symmetric key has wrong length; got " + g.length() + " bytes, expected " + B + ".");
        A.encryptedContent.algorithm = I, A.encryptedContent.key = g, A.encryptedContent.parameter = qA.util.createBuffer(
          qA.random.getBytes(Q)
        );
        var C = E(g);
        if (C.start(A.encryptedContent.parameter.copy()), C.update(A.content), !C.finish())
          throw new Error("Symmetric encryption failed.");
        A.encryptedContent.content = C.output;
      }
      for (var o = 0; o < A.recipients.length; ++o) {
        var t = A.recipients[o];
        if (t.encryptedContent.content === void 0)
          switch (t.encryptedContent.algorithm) {
            case qA.pki.oids.rsaEncryption:
              t.encryptedContent.content = t.encryptedContent.key.encrypt(
                A.encryptedContent.key.data
              );
              break;
            default:
              throw new Error("Unsupported asymmetric cipher, OID " + t.encryptedContent.algorithm);
          }
      }
    }
  }, A;
};
function sG(A) {
  var g = {}, I = [];
  if (!dA.validate(A, hI.asn1.recipientInfoValidator, g, I)) {
    var B = new Error("Cannot read PKCS#7 RecipientInfo. ASN.1 object is not an PKCS#7 RecipientInfo.");
    throw B.errors = I, B;
  }
  return {
    version: g.version.charCodeAt(0),
    issuer: qA.pki.RDNAttributesAsArray(g.issuer),
    serialNumber: qA.util.createBuffer(g.serial).toHex(),
    encryptedContent: {
      algorithm: dA.derToOid(g.encAlgorithm),
      parameter: g.encParameter ? g.encParameter.value : void 0,
      content: g.encKey
    }
  };
}
function nG(A) {
  return dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
    // Version
    dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.INTEGER,
      !1,
      dA.integerToDer(A.version).getBytes()
    ),
    // IssuerAndSerialNumber
    dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
      // Name
      qA.pki.distinguishedNameToAsn1({ attributes: A.issuer }),
      // Serial
      dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.INTEGER,
        !1,
        qA.util.hexToBytes(A.serialNumber)
      )
    ]),
    // KeyEncryptionAlgorithmIdentifier
    dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
      // Algorithm
      dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.OID,
        !1,
        dA.oidToDer(A.encryptedContent.algorithm).getBytes()
      ),
      // Parameter, force NULL, only RSA supported for now.
      dA.create(dA.Class.UNIVERSAL, dA.Type.NULL, !1, "")
    ]),
    // EncryptedKey
    dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.OCTETSTRING,
      !1,
      A.encryptedContent.content
    )
  ]);
}
function cG(A) {
  for (var g = [], I = 0; I < A.length; ++I)
    g.push(sG(A[I]));
  return g;
}
function DG(A) {
  for (var g = [], I = 0; I < A.length; ++I)
    g.push(nG(A[I]));
  return g;
}
function hG(A) {
  var g = dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
    // version
    dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.INTEGER,
      !1,
      dA.integerToDer(A.version).getBytes()
    ),
    // issuerAndSerialNumber
    dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
      // name
      qA.pki.distinguishedNameToAsn1({ attributes: A.issuer }),
      // serial
      dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.INTEGER,
        !1,
        qA.util.hexToBytes(A.serialNumber)
      )
    ]),
    // digestAlgorithm
    dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
      // algorithm
      dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.OID,
        !1,
        dA.oidToDer(A.digestAlgorithm).getBytes()
      ),
      // parameters (null)
      dA.create(dA.Class.UNIVERSAL, dA.Type.NULL, !1, "")
    ])
  ]);
  if (A.authenticatedAttributesAsn1 && g.value.push(A.authenticatedAttributesAsn1), g.value.push(dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
    // algorithm
    dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.OID,
      !1,
      dA.oidToDer(A.signatureAlgorithm).getBytes()
    ),
    // parameters (null)
    dA.create(dA.Class.UNIVERSAL, dA.Type.NULL, !1, "")
  ])), g.value.push(dA.create(
    dA.Class.UNIVERSAL,
    dA.Type.OCTETSTRING,
    !1,
    A.signature
  )), A.unauthenticatedAttributes.length > 0) {
    for (var I = dA.create(dA.Class.CONTEXT_SPECIFIC, 1, !0, []), B = 0; B < A.unauthenticatedAttributes.length; ++B) {
      var Q = A.unauthenticatedAttributes[B];
      I.values.push(Da(Q));
    }
    g.value.push(I);
  }
  return g;
}
function lG(A) {
  for (var g = [], I = 0; I < A.length; ++I)
    g.push(hG(A[I]));
  return g;
}
function Da(A) {
  var g;
  if (A.type === qA.pki.oids.contentType)
    g = dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.OID,
      !1,
      dA.oidToDer(A.value).getBytes()
    );
  else if (A.type === qA.pki.oids.messageDigest)
    g = dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.OCTETSTRING,
      !1,
      A.value.bytes()
    );
  else if (A.type === qA.pki.oids.signingTime) {
    var I = /* @__PURE__ */ new Date("1950-01-01T00:00:00Z"), B = /* @__PURE__ */ new Date("2050-01-01T00:00:00Z"), Q = A.value;
    if (typeof Q == "string") {
      var E = Date.parse(Q);
      isNaN(E) ? Q.length === 13 ? Q = dA.utcTimeToDate(Q) : Q = dA.generalizedTimeToDate(Q) : Q = new Date(E);
    }
    Q >= I && Q < B ? g = dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.UTCTIME,
      !1,
      dA.dateToUtcTime(Q)
    ) : g = dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.GENERALIZEDTIME,
      !1,
      dA.dateToGeneralizedTime(Q)
    );
  }
  return dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
    // AttributeType
    dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.OID,
      !1,
      dA.oidToDer(A.type).getBytes()
    ),
    dA.create(dA.Class.UNIVERSAL, dA.Type.SET, !0, [
      // AttributeValue
      g
    ])
  ]);
}
function yG(A) {
  return [
    // ContentType, always Data for the moment
    dA.create(
      dA.Class.UNIVERSAL,
      dA.Type.OID,
      !1,
      dA.oidToDer(qA.pki.oids.data).getBytes()
    ),
    // ContentEncryptionAlgorithmIdentifier
    dA.create(dA.Class.UNIVERSAL, dA.Type.SEQUENCE, !0, [
      // Algorithm
      dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.OID,
        !1,
        dA.oidToDer(A.algorithm).getBytes()
      ),
      // Parameters (IV)
      A.parameter ? dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.OCTETSTRING,
        !1,
        A.parameter.getBytes()
      ) : void 0
    ]),
    // [0] EncryptedContent
    dA.create(dA.Class.CONTEXT_SPECIFIC, 0, !0, [
      dA.create(
        dA.Class.UNIVERSAL,
        dA.Type.OCTETSTRING,
        !1,
        A.content.getBytes()
      )
    ])
  ];
}
function $r(A, g, I) {
  var B = {}, Q = [];
  if (!dA.validate(g, I, B, Q)) {
    var E = new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");
    throw E.errors = E, E;
  }
  var C = dA.derToOid(B.contentType);
  if (C !== qA.pki.oids.data)
    throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");
  if (B.encryptedContent) {
    var o = "";
    if (qA.util.isArray(B.encryptedContent))
      for (var t = 0; t < B.encryptedContent.length; ++t) {
        if (B.encryptedContent[t].type !== dA.Type.OCTETSTRING)
          throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");
        o += B.encryptedContent[t].value;
      }
    else
      o = B.encryptedContent;
    A.encryptedContent = {
      algorithm: dA.derToOid(B.encAlgorithm),
      parameter: qA.util.createBuffer(B.encParameter.value),
      content: qA.util.createBuffer(o)
    };
  }
  if (B.content) {
    var o = "";
    if (qA.util.isArray(B.content))
      for (var t = 0; t < B.content.length; ++t) {
        if (B.content[t].type !== dA.Type.OCTETSTRING)
          throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");
        o += B.content[t].value;
      }
    else
      o = B.content;
    A.content = qA.util.createBuffer(o);
  }
  return A.version = B.version.charCodeAt(0), A.rawCapture = B, B;
}
function Bh(A) {
  if (A.encryptedContent.key === void 0)
    throw new Error("Symmetric key not available.");
  if (A.content === void 0) {
    var g;
    switch (A.encryptedContent.algorithm) {
      case qA.pki.oids["aes128-CBC"]:
      case qA.pki.oids["aes192-CBC"]:
      case qA.pki.oids["aes256-CBC"]:
        g = qA.aes.createDecryptionCipher(A.encryptedContent.key);
        break;
      case qA.pki.oids.desCBC:
      case qA.pki.oids["des-EDE3-CBC"]:
        g = qA.des.createDecryptionCipher(A.encryptedContent.key);
        break;
      default:
        throw new Error("Unsupported symmetric cipher, OID " + A.encryptedContent.algorithm);
    }
    if (g.start(A.encryptedContent.parameter), g.update(A.encryptedContent.content), !g.finish())
      throw new Error("Symmetric decryption failed.");
    A.content = g.output;
  }
}
var bB = bg, pi = bB.ssh = bB.ssh || {};
pi.privateKeyToPutty = function(A, g, I) {
  I = I || "", g = g || "";
  var B = "ssh-rsa", Q = g === "" ? "none" : "aes256-cbc", E = "PuTTY-User-Key-File-2: " + B + `\r
`;
  E += "Encryption: " + Q + `\r
`, E += "Comment: " + I + `\r
`;
  var C = bB.util.createBuffer();
  lC(C, B), rQ(C, A.e), rQ(C, A.n);
  var o = bB.util.encode64(C.bytes(), 64), t = Math.floor(o.length / 66) + 1;
  E += "Public-Lines: " + t + `\r
`, E += o;
  var e = bB.util.createBuffer();
  rQ(e, A.d), rQ(e, A.p), rQ(e, A.q), rQ(e, A.qInv);
  var i;
  if (!g)
    i = bB.util.encode64(e.bytes(), 64);
  else {
    var a = e.length() + 16 - 1;
    a -= a % 16;
    var r = Mt(e.bytes());
    r.truncate(r.length() - a + e.length()), e.putBuffer(r);
    var h = bB.util.createBuffer();
    h.putBuffer(Mt("\0\0\0\0", g)), h.putBuffer(Mt("\0\0\0", g));
    var n = bB.aes.createEncryptionCipher(h.truncate(8), "CBC");
    n.start(bB.util.createBuffer().fillWithByte(0, 16)), n.update(e.copy()), n.finish();
    var l = n.output;
    l.truncate(16), i = bB.util.encode64(l.bytes(), 64);
  }
  t = Math.floor(i.length / 66) + 1, E += `\r
Private-Lines: ` + t + `\r
`, E += i;
  var y = Mt("putty-private-key-file-mac-key", g), N = bB.util.createBuffer();
  lC(N, B), lC(N, Q), lC(N, I), N.putInt32(C.length()), N.putBuffer(C), N.putInt32(e.length()), N.putBuffer(e);
  var s = bB.hmac.create();
  return s.start("sha1", y), s.update(N.bytes()), E += `\r
Private-MAC: ` + s.digest().toHex() + `\r
`, E;
};
pi.publicKeyToOpenSSH = function(A, g) {
  var I = "ssh-rsa";
  g = g || "";
  var B = bB.util.createBuffer();
  return lC(B, I), rQ(B, A.e), rQ(B, A.n), I + " " + bB.util.encode64(B.bytes()) + " " + g;
};
pi.privateKeyToOpenSSH = function(A, g) {
  return g ? bB.pki.encryptRsaPrivateKey(
    A,
    g,
    { legacy: !0, algorithm: "aes128" }
  ) : bB.pki.privateKeyToPem(A);
};
pi.getPublicKeyFingerprint = function(A, g) {
  g = g || {};
  var I = g.md || bB.md.md5.create(), B = "ssh-rsa", Q = bB.util.createBuffer();
  lC(Q, B), rQ(Q, A.e), rQ(Q, A.n), I.start(), I.update(Q.getBytes());
  var E = I.digest();
  if (g.encoding === "hex") {
    var C = E.toHex();
    return g.delimiter ? C.match(/.{2}/g).join(g.delimiter) : C;
  } else {
    if (g.encoding === "binary")
      return E.getBytes();
    if (g.encoding)
      throw new Error('Unknown encoding "' + g.encoding + '".');
  }
  return E;
};
function rQ(A, g) {
  var I = g.toString(16);
  I[0] >= "8" && (I = "00" + I);
  var B = bB.util.hexToBytes(I);
  A.putInt32(B.length), A.putBytes(B);
}
function lC(A, g) {
  A.putInt32(g.length), A.putString(g);
}
function Mt() {
  for (var A = bB.md.sha1.create(), g = arguments.length, I = 0; I < g; ++I)
    A.update(arguments[I]);
  return A.digest();
}
var wG = bg;
class dG extends Nd {
  constructor(I, B) {
    super();
    DA(this, "encKey", null);
    this._salt = I, this._getPassword = B;
  }
  async getAccess() {
    return console.log("getAccess called"), this.encKey = await this._generateEncryptionKey(), async () => {
      console.log("release called"), await this._release();
    };
  }
  async _release() {
    this.encKey = null;
  }
  async get(I) {
    if (!this.encKey)
      throw new Error("Storage locked");
    const B = await super.get(I);
    return B ? (console.log("get called", I), Sd(B, this.encKey, this._salt)) : null;
  }
  async set(I, B) {
    if (!this.encKey)
      throw new Error("Storage locked");
    console.log("set called", I);
    const Q = await Ud(B, this.encKey, this._salt);
    await super.set(I, Q);
  }
  getAllKeys() {
    return Promise.resolve([]);
  }
  clear(I) {
    return Promise.resolve();
  }
  async _generateEncryptionKey() {
    let I = await this._getPassword();
    const B = wG.sha256.create();
    for (let Q = 0; Q < 1e3; ++Q)
      B.update(I), I = B.digest().toHex();
    return I;
  }
}
const FG = new Hd("https://staging.api.vastlink.xyz"), RG = async (A) => {
  let g = null;
  try {
    const I = {
      handleOutgoingMessage: (C) => FG.sendMessage(A, C)
    }, B = {
      handleEvent: (C) => {
        switch (C.type) {
          case "key_descriptor_changed": {
            const o = {};
            o[C.keyDescriptor.algorithm] = C.keyDescriptor, console.log("key_descriptor_changed", o);
            break;
          }
          case "transaction_signature_changed":
            console.log(`Transaction signature status: ${C.transactionSignature.transactionSignatureStatus}`);
            break;
          case "keys_backup":
            console.log(`Key backup status: ${JSON.stringify(C.keysBackup)}`);
            break;
          case "keys_recovery":
            console.log(`Key recover status: ${JSON.stringify(C.keyDescriptor)}`);
            break;
          case "join_wallet_descriptor":
            console.log(`join wallet event: ${JSON.stringify(C.joinWalletDescriptor)}`);
            break;
        }
      }
    }, Q = new dG(A, () => {
      const C = prompt("Enter password", "");
      return C === null ? Promise.reject(new Error("Rejected by user")) : Promise.resolve(C || "");
    }), E = kd(A);
    return E ? g = E : g = await ud({
      env: "sandbox",
      deviceId: A,
      messagesHandler: I,
      eventsHandler: B,
      secureStorageProvider: Q
    }), g;
  } catch (I) {
    console.error(I);
  }
};
class fG extends Ri {
  constructor() {
    super({
      serviceType: KC.FIREBLOCKS
    });
    DA(this, "coreKitInstance");
    DA(this, "fireblocksNCWInstance");
  }
  async init() {
  }
  async initFireblocksNCWInstance(I) {
    const B = await RG(I);
    this.fireblocksNCWInstance = B, this.config.fireblocksNCWInstance = B;
  }
  async generateMPCKeys() {
    var C;
    const I = /* @__PURE__ */ new Set([
      "MPC_CMP_ECDSA_SECP256K1"
      // "MPC_CMP_EDDSA_ED25519",
    ]), B = await ((C = this.fireblocksNCWInstance) == null ? void 0 : C.generateMPCKeys(I));
    console.log("keyDescriptor", B), Array.from(B || []).some(
      (o) => o.keyStatus === "READY" && o.algorithm === "MPC_CMP_ECDSA_SECP256K1"
    ) && console.log("Generated MPC keys successfully");
  }
  async signUp({
    username: I,
    sub: B
  }) {
    const Q = Kn(B), { data: E } = await yB.post("/keymanagement/signup", {
      username: I,
      deviceId: Q
    }), { address: C, displayName: o } = E;
    await this.initFireblocksNCWInstance(Q), fB.saveAuthDataByKey("address", C), fB.saveAuthDataByKey("username", I), o ? fB.saveAuthDataByKey("displayName", o) : fB.removeAuthDataByKey("displayName");
  }
  async signIn({ authUsername: I, sub: B }) {
    const Q = Kn(B), { data: E } = await yB.post("/keymanagement/signin", {
      username: I,
      deviceId: Q
    }), { address: C, displayName: o } = E;
    await this.initFireblocksNCWInstance(Q), fB.saveAuthDataByKey("address", C), fB.saveAuthDataByKey("username", I), o ? fB.saveAuthDataByKey("displayName", o) : fB.removeAuthDataByKey("displayName");
  }
  async signTransaction({
    fromAddress: I,
    toAddress: B,
    amount: Q,
    token: E,
    note: C,
    transactionType: o
  }) {
    const { data: {
      success: t,
      needOtp: e,
      hash: i,
      message: a,
      transactionId: r,
      relayerTransactionId: h,
      // fireblocks
      id: n,
      status: l
    } } = await yB.post("/transaction/sign", {
      from: I ?? fB.all().address,
      to: B,
      amount: Q,
      token: E,
      note: C,
      transactionType: o
    });
    return {
      success: t,
      needOtp: e,
      hash: i,
      message: a,
      transactionId: r,
      relayerTransactionId: h,
      // fireblocks
      id: n,
      status: l
    };
  }
  async signTransactionWithOTP({
    transactionId: I,
    otp: B
  }) {
    const { data: {
      token: Q,
      hash: E,
      // not used
      transactionPayload: C,
      userEmail: o,
      toEmail: t,
      note: e,
      transactionType: i
    } } = await yB.post("/transaction/verify-to-sign", {
      transactionId: I,
      OTP: B
    });
    return {
      success: !0,
      hash: E,
      token: Q
    };
  }
  async waitForTransactionReceipt(I, B) {
    return await NB.getToken(B).publicClient.waitForTransactionReceipt({
      hash: I
    });
  }
  async test() {
    await yB.post("/keymanagement/test-mpc");
  }
}
class GG {
  static getService(g) {
    switch (g) {
      case KC.WEB3AUTH_WITH_MPC:
        return new Rd();
      case KC.FIREBLOCKS:
        return new fG();
      default:
        throw new Error(`Unsupported service type: ${g}`);
    }
  }
}
const MG = KC.FIREBLOCKS, sc = GG.getService(MG), NG = Dw, uG = hw, SG = IA.forwardRef(({ className: A, inset: g, children: I, ...B }, Q) => /* @__PURE__ */ sA.jsxs(
  bD,
  {
    ref: Q,
    className: Rg(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",
      g && "pl-8",
      A
    ),
    ...B,
    children: [
      I,
      /* @__PURE__ */ sA.jsx(kw, { className: "ml-auto h-4 w-4" })
    ]
  }
));
SG.displayName = bD.displayName;
const UG = IA.forwardRef(({ className: A, ...g }, I) => /* @__PURE__ */ sA.jsx(
  ZD,
  {
    ref: I,
    className: Rg(
      "z-[10002] min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      A
    ),
    ...g
  }
));
UG.displayName = ZD.displayName;
const Ih = IA.forwardRef(({ className: A, sideOffset: g = 4, ...I }, B) => /* @__PURE__ */ sA.jsx(cw, { children: /* @__PURE__ */ sA.jsx(
  TD,
  {
    ref: B,
    sideOffset: g,
    className: Rg(
      "z-[10002] min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      A
    ),
    ...I
  }
) }));
Ih.displayName = TD.displayName;
const Qh = IA.forwardRef(({ className: A, inset: g, ...I }, B) => /* @__PURE__ */ sA.jsx(
  XD,
  {
    ref: B,
    className: Rg(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      g && "pl-8",
      A
    ),
    ...I
  }
));
Qh.displayName = XD.displayName;
const kG = IA.forwardRef(({ className: A, children: g, checked: I, ...B }, Q) => /* @__PURE__ */ sA.jsxs(
  zD,
  {
    ref: Q,
    className: Rg(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      A
    ),
    checked: I,
    ...B,
    children: [
      /* @__PURE__ */ sA.jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ sA.jsx(VD, { children: /* @__PURE__ */ sA.jsx(Hw, { className: "h-4 w-4" }) }) }),
      g
    ]
  }
));
kG.displayName = zD.displayName;
const HG = IA.forwardRef(({ className: A, children: g, ...I }, B) => /* @__PURE__ */ sA.jsxs(
  qD,
  {
    ref: B,
    className: Rg(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      A
    ),
    ...I,
    children: [
      /* @__PURE__ */ sA.jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ sA.jsx(VD, { children: /* @__PURE__ */ sA.jsx(pw, { className: "h-2 w-2 fill-current" }) }) }),
      g
    ]
  }
));
HG.displayName = qD.displayName;
const pG = IA.forwardRef(({ className: A, inset: g, ...I }, B) => /* @__PURE__ */ sA.jsx(
  PD,
  {
    ref: B,
    className: Rg(
      "px-2 py-1.5 text-sm font-semibold",
      g && "pl-8",
      A
    ),
    ...I
  }
));
pG.displayName = PD.displayName;
const YG = IA.forwardRef(({ className: A, ...g }, I) => /* @__PURE__ */ sA.jsx(
  WD,
  {
    ref: I,
    className: Rg("-mx-1 my-1 h-px bg-muted", A),
    ...g
  }
));
YG.displayName = WD.displayName;
function nc(A, g) {
  const [I, B] = IA.useState(A);
  return IA.useEffect(() => {
    const Q = setTimeout(() => {
      B(A);
    }, g);
    return () => {
      clearTimeout(Q);
    };
  }, [A, g]), I;
}
var Eh = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(A) {
  (function() {
    var g = {}.hasOwnProperty;
    function I() {
      for (var E = "", C = 0; C < arguments.length; C++) {
        var o = arguments[C];
        o && (E = Q(E, B(o)));
      }
      return E;
    }
    function B(E) {
      if (typeof E == "string" || typeof E == "number")
        return E;
      if (typeof E != "object")
        return "";
      if (Array.isArray(E))
        return I.apply(null, E);
      if (E.toString !== Object.prototype.toString && !E.toString.toString().includes("[native code]"))
        return E.toString();
      var C = "";
      for (var o in E)
        g.call(E, o) && E[o] && (C = Q(C, o));
      return C;
    }
    function Q(E, C) {
      return C ? E ? E + " " + C : E + C : E;
    }
    A.exports ? (I.default = I, A.exports = I) : window.classNames = I;
  })();
})(Eh);
var JG = Eh.exports;
const pI = /* @__PURE__ */ Sr(JG);
var ha = { exports: {} }, eB = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var cc;
function LG() {
  if (cc) return eB;
  cc = 1;
  var A = Symbol.for("react.element"), g = Symbol.for("react.portal"), I = Symbol.for("react.fragment"), B = Symbol.for("react.strict_mode"), Q = Symbol.for("react.profiler"), E = Symbol.for("react.provider"), C = Symbol.for("react.context"), o = Symbol.for("react.server_context"), t = Symbol.for("react.forward_ref"), e = Symbol.for("react.suspense"), i = Symbol.for("react.suspense_list"), a = Symbol.for("react.memo"), r = Symbol.for("react.lazy"), h = Symbol.for("react.offscreen"), n;
  n = Symbol.for("react.module.reference");
  function l(y) {
    if (typeof y == "object" && y !== null) {
      var N = y.$$typeof;
      switch (N) {
        case A:
          switch (y = y.type, y) {
            case I:
            case Q:
            case B:
            case e:
            case i:
              return y;
            default:
              switch (y = y && y.$$typeof, y) {
                case o:
                case C:
                case t:
                case r:
                case a:
                case E:
                  return y;
                default:
                  return N;
              }
          }
        case g:
          return N;
      }
    }
  }
  return eB.ContextConsumer = C, eB.ContextProvider = E, eB.Element = A, eB.ForwardRef = t, eB.Fragment = I, eB.Lazy = r, eB.Memo = a, eB.Portal = g, eB.Profiler = Q, eB.StrictMode = B, eB.Suspense = e, eB.SuspenseList = i, eB.isAsyncMode = function() {
    return !1;
  }, eB.isConcurrentMode = function() {
    return !1;
  }, eB.isContextConsumer = function(y) {
    return l(y) === C;
  }, eB.isContextProvider = function(y) {
    return l(y) === E;
  }, eB.isElement = function(y) {
    return typeof y == "object" && y !== null && y.$$typeof === A;
  }, eB.isForwardRef = function(y) {
    return l(y) === t;
  }, eB.isFragment = function(y) {
    return l(y) === I;
  }, eB.isLazy = function(y) {
    return l(y) === r;
  }, eB.isMemo = function(y) {
    return l(y) === a;
  }, eB.isPortal = function(y) {
    return l(y) === g;
  }, eB.isProfiler = function(y) {
    return l(y) === Q;
  }, eB.isStrictMode = function(y) {
    return l(y) === B;
  }, eB.isSuspense = function(y) {
    return l(y) === e;
  }, eB.isSuspenseList = function(y) {
    return l(y) === i;
  }, eB.isValidElementType = function(y) {
    return typeof y == "string" || typeof y == "function" || y === I || y === Q || y === B || y === e || y === i || y === h || typeof y == "object" && y !== null && (y.$$typeof === r || y.$$typeof === a || y.$$typeof === E || y.$$typeof === C || y.$$typeof === t || y.$$typeof === n || y.getModuleId !== void 0);
  }, eB.typeOf = l, eB;
}
var tB = {}, Dc;
function KG() {
  return Dc || (Dc = 1, PA.env.NODE_ENV !== "production" && function() {
    var A = Symbol.for("react.element"), g = Symbol.for("react.portal"), I = Symbol.for("react.fragment"), B = Symbol.for("react.strict_mode"), Q = Symbol.for("react.profiler"), E = Symbol.for("react.provider"), C = Symbol.for("react.context"), o = Symbol.for("react.server_context"), t = Symbol.for("react.forward_ref"), e = Symbol.for("react.suspense"), i = Symbol.for("react.suspense_list"), a = Symbol.for("react.memo"), r = Symbol.for("react.lazy"), h = Symbol.for("react.offscreen"), n = !1, l = !1, y = !1, N = !1, s = !1, F;
    F = Symbol.for("react.module.reference");
    function u(_) {
      return !!(typeof _ == "string" || typeof _ == "function" || _ === I || _ === Q || s || _ === B || _ === e || _ === i || N || _ === h || n || l || y || typeof _ == "object" && _ !== null && (_.$$typeof === r || _.$$typeof === a || _.$$typeof === E || _.$$typeof === C || _.$$typeof === t || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      _.$$typeof === F || _.getModuleId !== void 0));
    }
    function U(_) {
      if (typeof _ == "object" && _ !== null) {
        var uA = _.$$typeof;
        switch (uA) {
          case A:
            var HA = _.type;
            switch (HA) {
              case I:
              case Q:
              case B:
              case e:
              case i:
                return HA;
              default:
                var JA = HA && HA.$$typeof;
                switch (JA) {
                  case o:
                  case C:
                  case t:
                  case r:
                  case a:
                  case E:
                    return JA;
                  default:
                    return uA;
                }
            }
          case g:
            return uA;
        }
      }
    }
    var J = C, L = E, f = A, d = t, p = I, x = r, M = a, S = g, k = Q, v = B, m = e, T = i, $ = !1, AA = !1;
    function lA(_) {
      return $ || ($ = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function FA(_) {
      return AA || (AA = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function cA(_) {
      return U(_) === C;
    }
    function yA(_) {
      return U(_) === E;
    }
    function aA(_) {
      return typeof _ == "object" && _ !== null && _.$$typeof === A;
    }
    function eA(_) {
      return U(_) === t;
    }
    function CA(_) {
      return U(_) === I;
    }
    function b(_) {
      return U(_) === r;
    }
    function Y(_) {
      return U(_) === a;
    }
    function QA(_) {
      return U(_) === g;
    }
    function BA(_) {
      return U(_) === Q;
    }
    function iA(_) {
      return U(_) === B;
    }
    function rA(_) {
      return U(_) === e;
    }
    function GA(_) {
      return U(_) === i;
    }
    tB.ContextConsumer = J, tB.ContextProvider = L, tB.Element = f, tB.ForwardRef = d, tB.Fragment = p, tB.Lazy = x, tB.Memo = M, tB.Portal = S, tB.Profiler = k, tB.StrictMode = v, tB.Suspense = m, tB.SuspenseList = T, tB.isAsyncMode = lA, tB.isConcurrentMode = FA, tB.isContextConsumer = cA, tB.isContextProvider = yA, tB.isElement = aA, tB.isForwardRef = eA, tB.isFragment = CA, tB.isLazy = b, tB.isMemo = Y, tB.isPortal = QA, tB.isProfiler = BA, tB.isStrictMode = iA, tB.isSuspense = rA, tB.isSuspenseList = GA, tB.isValidElementType = u, tB.typeOf = U;
  }()), tB;
}
PA.env.NODE_ENV === "production" ? ha.exports = LG() : ha.exports = KG();
var Tt = ha.exports, la = {}, As = [], mG = function(g) {
  As.push(g);
};
function gs(A, g) {
  if (PA.env.NODE_ENV !== "production" && !A && console !== void 0) {
    var I = As.reduce(function(B, Q) {
      return Q(B ?? "", "warning");
    }, g);
    I && console.error("Warning: ".concat(I));
  }
}
function xG(A, g) {
  if (PA.env.NODE_ENV !== "production" && !A && console !== void 0) {
    var I = As.reduce(function(B, Q) {
      return Q(B ?? "", "note");
    }, g);
    I && console.warn("Note: ".concat(I));
  }
}
function Ch() {
  la = {};
}
function eh(A, g, I) {
  !g && !la[I] && (A(!1, I), la[I] = !0);
}
function aE(A, g) {
  eh(gs, A, g);
}
function vG(A, g) {
  eh(xG, A, g);
}
aE.preMessage = mG;
aE.resetWarned = Ch;
aE.noteOnce = vG;
function hc(A) {
  return A instanceof HTMLElement || A instanceof SVGElement;
}
function bG(A) {
  return A && DB(A) === "object" && hc(A.nativeElement) ? A.nativeElement : hc(A) ? A : null;
}
function ZG(A) {
  var g = bG(A);
  if (g)
    return g;
  if (A instanceof ig.Component) {
    var I;
    return (I = pe.findDOMNode) === null || I === void 0 ? void 0 : I.call(pe, A);
  }
  return null;
}
function Bs(A, g, I) {
  var B = IA.useRef({});
  return (!("value" in B.current) || I(B.current.condition, g)) && (B.current.value = A(), B.current.condition = g), B.current.value;
}
var th = function(g, I) {
  typeof g == "function" ? g(I) : DB(g) === "object" && g && "current" in g && (g.current = I);
}, TG = function() {
  for (var g = arguments.length, I = new Array(g), B = 0; B < g; B++)
    I[B] = arguments[B];
  var Q = I.filter(Boolean);
  return Q.length <= 1 ? Q[0] : function(E) {
    I.forEach(function(C) {
      th(C, E);
    });
  };
}, Cp = function() {
  for (var g = arguments.length, I = new Array(g), B = 0; B < g; B++)
    I[B] = arguments[B];
  return Bs(function() {
    return TG.apply(void 0, I);
  }, I, function(Q, E) {
    return Q.length !== E.length || Q.every(function(C, o) {
      return C !== E[o];
    });
  });
}, XG = function(g) {
  var I, B, Q = Tt.isMemo(g) ? g.type.type : g.type;
  return !(typeof Q == "function" && !((I = Q.prototype) !== null && I !== void 0 && I.render) && Q.$$typeof !== Tt.ForwardRef || typeof g == "function" && !((B = g.prototype) !== null && B !== void 0 && B.render) && g.$$typeof !== Tt.ForwardRef);
};
function lc(A) {
  return /* @__PURE__ */ IA.isValidElement(A) && !Tt.isFragment(A);
}
Number(IA.version.split(".")[0]) >= 19;
function wQ(A, g) {
  if (!(A instanceof g)) throw new TypeError("Cannot call a class as a function");
}
function yc(A, g) {
  for (var I = 0; I < g.length; I++) {
    var B = g[I];
    B.enumerable = B.enumerable || !1, B.configurable = !0, "value" in B && (B.writable = !0), Object.defineProperty(A, Ad(B.key), B);
  }
}
function dQ(A, g, I) {
  return g && yc(A.prototype, g), I && yc(A, I), Object.defineProperty(A, "prototype", {
    writable: !1
  }), A;
}
function ya(A, g) {
  return ya = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(I, B) {
    return I.__proto__ = B, I;
  }, ya(A, g);
}
function Yi(A, g) {
  if (typeof g != "function" && g !== null) throw new TypeError("Super expression must either be null or a function");
  A.prototype = Object.create(g && g.prototype, {
    constructor: {
      value: A,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(A, "prototype", {
    writable: !1
  }), g && ya(A, g);
}
function si(A) {
  return si = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(g) {
    return g.__proto__ || Object.getPrototypeOf(g);
  }, si(A);
}
function ih() {
  try {
    var A = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch {
  }
  return (ih = function() {
    return !!A;
  })();
}
function ZE(A) {
  if (A === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return A;
}
function zG(A, g) {
  if (g && (DB(g) == "object" || typeof g == "function")) return g;
  if (g !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
  return ZE(A);
}
function Ji(A) {
  var g = ih();
  return function() {
    var I, B = si(A);
    if (g) {
      var Q = si(this).constructor;
      I = Reflect.construct(B, arguments, Q);
    } else I = B.apply(this, arguments);
    return zG(this, I);
  };
}
function wa(A, g) {
  (g == null || g > A.length) && (g = A.length);
  for (var I = 0, B = Array(g); I < g; I++) B[I] = A[I];
  return B;
}
function VG(A) {
  if (Array.isArray(A)) return wa(A);
}
function oh(A) {
  if (typeof Symbol < "u" && A[Symbol.iterator] != null || A["@@iterator"] != null) return Array.from(A);
}
function Is(A, g) {
  if (A) {
    if (typeof A == "string") return wa(A, g);
    var I = {}.toString.call(A).slice(8, -1);
    return I === "Object" && A.constructor && (I = A.constructor.name), I === "Map" || I === "Set" ? Array.from(A) : I === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(I) ? wa(A, g) : void 0;
  }
}
function qG() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function fI(A) {
  return VG(A) || oh(A) || Is(A) || qG();
}
var ah = function(g) {
  return +setTimeout(g, 16);
}, rh = function(g) {
  return clearTimeout(g);
};
typeof window < "u" && "requestAnimationFrame" in window && (ah = function(g) {
  return window.requestAnimationFrame(g);
}, rh = function(g) {
  return window.cancelAnimationFrame(g);
});
var wc = 0, Li = /* @__PURE__ */ new Map();
function sh(A) {
  Li.delete(A);
}
var ni = function(g) {
  var I = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  wc += 1;
  var B = wc;
  function Q(E) {
    if (E === 0)
      sh(B), g();
    else {
      var C = ah(function() {
        Q(E - 1);
      });
      Li.set(B, C);
    }
  }
  return Q(I), B;
};
ni.cancel = function(A) {
  var g = Li.get(A);
  return sh(A), rh(g);
};
PA.env.NODE_ENV !== "production" && (ni.ids = function() {
  return Li;
});
function nh(A) {
  if (Array.isArray(A)) return A;
}
function PG(A, g) {
  var I = A == null ? null : typeof Symbol < "u" && A[Symbol.iterator] || A["@@iterator"];
  if (I != null) {
    var B, Q, E, C, o = [], t = !0, e = !1;
    try {
      if (E = (I = I.call(A)).next, g === 0) {
        if (Object(I) !== I) return;
        t = !1;
      } else for (; !(t = (B = E.call(I)).done) && (o.push(B.value), o.length !== g); t = !0) ;
    } catch (i) {
      e = !0, Q = i;
    } finally {
      try {
        if (!t && I.return != null && (C = I.return(), Object(C) !== C)) return;
      } finally {
        if (e) throw Q;
      }
    }
    return o;
  }
}
function ch() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Dg(A, g) {
  return nh(A) || PG(A, g) || Is(A, g) || ch();
}
function Je(A) {
  for (var g = 0, I, B = 0, Q = A.length; Q >= 4; ++B, Q -= 4)
    I = A.charCodeAt(B) & 255 | (A.charCodeAt(++B) & 255) << 8 | (A.charCodeAt(++B) & 255) << 16 | (A.charCodeAt(++B) & 255) << 24, I = /* Math.imul(k, m): */
    (I & 65535) * 1540483477 + ((I >>> 16) * 59797 << 16), I ^= /* k >>> r: */
    I >>> 24, g = /* Math.imul(k, m): */
    (I & 65535) * 1540483477 + ((I >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (g & 65535) * 1540483477 + ((g >>> 16) * 59797 << 16);
  switch (Q) {
    case 3:
      g ^= (A.charCodeAt(B + 2) & 255) << 16;
    case 2:
      g ^= (A.charCodeAt(B + 1) & 255) << 8;
    case 1:
      g ^= A.charCodeAt(B) & 255, g = /* Math.imul(h, m): */
      (g & 65535) * 1540483477 + ((g >>> 16) * 59797 << 16);
  }
  return g ^= g >>> 13, g = /* Math.imul(h, m): */
  (g & 65535) * 1540483477 + ((g >>> 16) * 59797 << 16), ((g ^ g >>> 15) >>> 0).toString(36);
}
function JQ() {
  return !!(typeof window < "u" && window.document && window.document.createElement);
}
function WG(A, g) {
  if (!A)
    return !1;
  if (A.contains)
    return A.contains(g);
  for (var I = g; I; ) {
    if (I === A)
      return !0;
    I = I.parentNode;
  }
  return !1;
}
var dc = "data-rc-order", Fc = "data-rc-priority", OG = "rc-util-key", da = /* @__PURE__ */ new Map();
function Dh() {
  var A = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, g = A.mark;
  return g ? g.startsWith("data-") ? g : "data-".concat(g) : OG;
}
function Ki(A) {
  if (A.attachTo)
    return A.attachTo;
  var g = document.querySelector("head");
  return g || document.body;
}
function jG(A) {
  return A === "queue" ? "prependQueue" : A ? "prepend" : "append";
}
function Qs(A) {
  return Array.from((da.get(A) || A).children).filter(function(g) {
    return g.tagName === "STYLE";
  });
}
function hh(A) {
  var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (!JQ())
    return null;
  var I = g.csp, B = g.prepend, Q = g.priority, E = Q === void 0 ? 0 : Q, C = jG(B), o = C === "prependQueue", t = document.createElement("style");
  t.setAttribute(dc, C), o && E && t.setAttribute(Fc, "".concat(E)), I != null && I.nonce && (t.nonce = I == null ? void 0 : I.nonce), t.innerHTML = A;
  var e = Ki(g), i = e.firstChild;
  if (B) {
    if (o) {
      var a = (g.styles || Qs(e)).filter(function(r) {
        if (!["prepend", "prependQueue"].includes(r.getAttribute(dc)))
          return !1;
        var h = Number(r.getAttribute(Fc) || 0);
        return E >= h;
      });
      if (a.length)
        return e.insertBefore(t, a[a.length - 1].nextSibling), t;
    }
    e.insertBefore(t, i);
  } else
    e.appendChild(t);
  return t;
}
function lh(A) {
  var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, I = Ki(g);
  return (g.styles || Qs(I)).find(function(B) {
    return B.getAttribute(Dh(g)) === A;
  });
}
function yh(A) {
  var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, I = lh(A, g);
  if (I) {
    var B = Ki(g);
    B.removeChild(I);
  }
}
function _G(A, g) {
  var I = da.get(A);
  if (!I || !WG(document, I)) {
    var B = hh("", g), Q = B.parentNode;
    da.set(A, Q), A.removeChild(B);
  }
}
function TE(A, g) {
  var I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, B = Ki(I), Q = Qs(B), E = gg(gg({}, I), {}, {
    styles: Q
  });
  _G(B, E);
  var C = lh(g, E);
  if (C) {
    var o, t;
    if ((o = E.csp) !== null && o !== void 0 && o.nonce && C.nonce !== ((t = E.csp) === null || t === void 0 ? void 0 : t.nonce)) {
      var e;
      C.nonce = (e = E.csp) === null || e === void 0 ? void 0 : e.nonce;
    }
    return C.innerHTML !== A && (C.innerHTML = A), C;
  }
  var i = hh(A, E);
  return i.setAttribute(Dh(E), g), i;
}
function $G(A, g) {
  var I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, B = /* @__PURE__ */ new Set();
  function Q(E, C) {
    var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, t = B.has(E);
    if (aE(!t, "Warning: There may be circular references"), t)
      return !1;
    if (E === C)
      return !0;
    if (I && o > 1)
      return !1;
    B.add(E);
    var e = o + 1;
    if (Array.isArray(E)) {
      if (!Array.isArray(C) || E.length !== C.length)
        return !1;
      for (var i = 0; i < E.length; i++)
        if (!Q(E[i], C[i], e))
          return !1;
      return !0;
    }
    if (E && C && DB(E) === "object" && DB(C) === "object") {
      var a = Object.keys(E);
      return a.length !== Object.keys(C).length ? !1 : a.every(function(r) {
        return Q(E[r], C[r], e);
      });
    }
    return !1;
  }
  return Q(A, g);
}
var AM = "%";
function Fa(A) {
  return A.join(AM);
}
var gM = /* @__PURE__ */ function() {
  function A(g) {
    wQ(this, A), hg(this, "instanceId", void 0), hg(this, "cache", /* @__PURE__ */ new Map()), this.instanceId = g;
  }
  return dQ(A, [{
    key: "get",
    value: function(I) {
      return this.opGet(Fa(I));
    }
    /** A fast get cache with `get` concat. */
  }, {
    key: "opGet",
    value: function(I) {
      return this.cache.get(I) || null;
    }
  }, {
    key: "update",
    value: function(I, B) {
      return this.opUpdate(Fa(I), B);
    }
    /** A fast get cache with `get` concat. */
  }, {
    key: "opUpdate",
    value: function(I, B) {
      var Q = this.cache.get(I), E = B(Q);
      E === null ? this.cache.delete(I) : this.cache.set(I, E);
    }
  }]), A;
}(), bC = "data-token-hash", gQ = "data-css-hash", BM = "data-cache-path", AE = "__cssinjs_instance__";
function IM() {
  var A = Math.random().toString(12).slice(2);
  if (typeof document < "u" && document.head && document.body) {
    var g = document.body.querySelectorAll("style[".concat(gQ, "]")) || [], I = document.head.firstChild;
    Array.from(g).forEach(function(Q) {
      Q[AE] = Q[AE] || A, Q[AE] === A && document.head.insertBefore(Q, I);
    });
    var B = {};
    Array.from(document.querySelectorAll("style[".concat(gQ, "]"))).forEach(function(Q) {
      var E = Q.getAttribute(gQ);
      if (B[E]) {
        if (Q[AE] === A) {
          var C;
          (C = Q.parentNode) === null || C === void 0 || C.removeChild(Q);
        }
      } else
        B[E] = !0;
    });
  }
  return new gM(A);
}
var mi = /* @__PURE__ */ IA.createContext({
  hashPriority: "low",
  cache: IM(),
  defaultCache: !0
});
function QM(A, g) {
  if (A.length !== g.length)
    return !1;
  for (var I = 0; I < A.length; I++)
    if (A[I] !== g[I])
      return !1;
  return !0;
}
var Es = /* @__PURE__ */ function() {
  function A() {
    wQ(this, A), hg(this, "cache", void 0), hg(this, "keys", void 0), hg(this, "cacheCallTimes", void 0), this.cache = /* @__PURE__ */ new Map(), this.keys = [], this.cacheCallTimes = 0;
  }
  return dQ(A, [{
    key: "size",
    value: function() {
      return this.keys.length;
    }
  }, {
    key: "internalGet",
    value: function(I) {
      var B, Q, E = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, C = {
        map: this.cache
      };
      return I.forEach(function(o) {
        if (!C)
          C = void 0;
        else {
          var t;
          C = (t = C) === null || t === void 0 || (t = t.map) === null || t === void 0 ? void 0 : t.get(o);
        }
      }), (B = C) !== null && B !== void 0 && B.value && E && (C.value[1] = this.cacheCallTimes++), (Q = C) === null || Q === void 0 ? void 0 : Q.value;
    }
  }, {
    key: "get",
    value: function(I) {
      var B;
      return (B = this.internalGet(I, !0)) === null || B === void 0 ? void 0 : B[0];
    }
  }, {
    key: "has",
    value: function(I) {
      return !!this.internalGet(I);
    }
  }, {
    key: "set",
    value: function(I, B) {
      var Q = this;
      if (!this.has(I)) {
        if (this.size() + 1 > A.MAX_CACHE_SIZE + A.MAX_CACHE_OFFSET) {
          var E = this.keys.reduce(function(e, i) {
            var a = Dg(e, 2), r = a[1];
            return Q.internalGet(i)[1] < r ? [i, Q.internalGet(i)[1]] : e;
          }, [this.keys[0], this.cacheCallTimes]), C = Dg(E, 1), o = C[0];
          this.delete(o);
        }
        this.keys.push(I);
      }
      var t = this.cache;
      I.forEach(function(e, i) {
        if (i === I.length - 1)
          t.set(e, {
            value: [B, Q.cacheCallTimes++]
          });
        else {
          var a = t.get(e);
          a ? a.map || (a.map = /* @__PURE__ */ new Map()) : t.set(e, {
            map: /* @__PURE__ */ new Map()
          }), t = t.get(e).map;
        }
      });
    }
  }, {
    key: "deleteByPath",
    value: function(I, B) {
      var Q = I.get(B[0]);
      if (B.length === 1) {
        var E;
        return Q.map ? I.set(B[0], {
          map: Q.map
        }) : I.delete(B[0]), (E = Q.value) === null || E === void 0 ? void 0 : E[0];
      }
      var C = this.deleteByPath(Q.map, B.slice(1));
      return (!Q.map || Q.map.size === 0) && !Q.value && I.delete(B[0]), C;
    }
  }, {
    key: "delete",
    value: function(I) {
      if (this.has(I))
        return this.keys = this.keys.filter(function(B) {
          return !QM(B, I);
        }), this.deleteByPath(this.cache, I);
    }
  }]), A;
}();
hg(Es, "MAX_CACHE_SIZE", 20);
hg(Es, "MAX_CACHE_OFFSET", 5);
var Rc = 0, wh = /* @__PURE__ */ function() {
  function A(g) {
    wQ(this, A), hg(this, "derivatives", void 0), hg(this, "id", void 0), this.derivatives = Array.isArray(g) ? g : [g], this.id = Rc, g.length === 0 && gs(g.length > 0, "[Ant Design CSS-in-JS] Theme should have at least one derivative function."), Rc += 1;
  }
  return dQ(A, [{
    key: "getDerivativeToken",
    value: function(I) {
      return this.derivatives.reduce(function(B, Q) {
        return Q(I, B);
      }, void 0);
    }
  }]), A;
}(), uo = new Es();
function Ra(A) {
  var g = Array.isArray(A) ? A : [A];
  return uo.has(g) || uo.set(g, new wh(g)), uo.get(g);
}
var EM = /* @__PURE__ */ new WeakMap(), So = {};
function CM(A, g) {
  for (var I = EM, B = 0; B < g.length; B += 1) {
    var Q = g[B];
    I.has(Q) || I.set(Q, /* @__PURE__ */ new WeakMap()), I = I.get(Q);
  }
  return I.has(So) || I.set(So, A()), I.get(So);
}
var fc = /* @__PURE__ */ new WeakMap();
function ke(A) {
  var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, I = fc.get(A) || "";
  return I || (Object.keys(A).forEach(function(B) {
    var Q = A[B];
    I += B, Q instanceof wh ? I += Q.id : Q && DB(Q) === "object" ? I += ke(Q, g) : I += Q;
  }), g && (I = Je(I)), fc.set(A, I)), I;
}
function Gc(A, g) {
  return Je("".concat(g, "_").concat(ke(A, !0)));
}
var fa = JQ();
function eE(A) {
  return typeof A == "number" ? "".concat(A, "px") : A;
}
function ci(A, g, I) {
  var B = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, Q = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
  if (Q)
    return A;
  var E = gg(gg({}, B), {}, hg(hg({}, bC, g), gQ, I)), C = Object.keys(E).map(function(o) {
    var t = E[o];
    return t ? "".concat(o, '="').concat(t, '"') : null;
  }).filter(function(o) {
    return o;
  }).join(" ");
  return "<style ".concat(C, ">").concat(A, "</style>");
}
var Xt = function(g) {
  var I = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  return "--".concat(I ? "".concat(I, "-") : "").concat(g).replace(/([a-z0-9])([A-Z])/g, "$1-$2").replace(/([A-Z]+)([A-Z][a-z0-9]+)/g, "$1-$2").replace(/([a-z])([A-Z0-9])/g, "$1-$2").toLowerCase();
}, eM = function(g, I, B) {
  return Object.keys(g).length ? ".".concat(I).concat(B != null && B.scope ? ".".concat(B.scope) : "", "{").concat(Object.entries(g).map(function(Q) {
    var E = Dg(Q, 2), C = E[0], o = E[1];
    return "".concat(C, ":").concat(o, ";");
  }).join(""), "}") : "";
}, dh = function(g, I, B) {
  var Q = {}, E = {};
  return Object.entries(g).forEach(function(C) {
    var o, t, e = Dg(C, 2), i = e[0], a = e[1];
    if (B != null && (o = B.preserve) !== null && o !== void 0 && o[i])
      E[i] = a;
    else if ((typeof a == "string" || typeof a == "number") && !(B != null && (t = B.ignore) !== null && t !== void 0 && t[i])) {
      var r, h = Xt(i, B == null ? void 0 : B.prefix);
      Q[h] = typeof a == "number" && !(B != null && (r = B.unitless) !== null && r !== void 0 && r[i]) ? "".concat(a, "px") : String(a), E[i] = "var(".concat(h, ")");
    }
  }), [E, eM(Q, I, {
    scope: B == null ? void 0 : B.scope
  })];
}, Mc = PA.env.NODE_ENV !== "test" && JQ() ? IA.useLayoutEffect : IA.useEffect, Fh = function(g, I) {
  var B = IA.useRef(!0);
  Mc(function() {
    return g(B.current);
  }, I), Mc(function() {
    return B.current = !1, function() {
      B.current = !0;
    };
  }, []);
}, ep = function(g, I) {
  Fh(function(B) {
    if (!B)
      return g();
  }, I);
}, tM = gg({}, Ur), Nc = tM.useInsertionEffect, iM = function(g, I, B) {
  IA.useMemo(g, B), Fh(function() {
    return I(!0);
  }, B);
}, oM = Nc ? function(A, g, I) {
  return Nc(function() {
    return A(), g();
  }, I);
} : iM, aM = gg({}, Ur), rM = aM.useInsertionEffect, sM = function(g) {
  var I = [], B = !1;
  function Q(E) {
    if (B) {
      PA.env.NODE_ENV !== "production" && gs(!1, "[Ant Design CSS-in-JS] You are registering a cleanup function after unmount, which will not have any effect.");
      return;
    }
    I.push(E);
  }
  return IA.useEffect(function() {
    return B = !1, function() {
      B = !0, I.length && I.forEach(function(E) {
        return E();
      });
    };
  }, g), Q;
}, nM = function() {
  return function(g) {
    g();
  };
}, cM = typeof rM < "u" ? sM : nM;
function DM() {
  return !1;
}
var Ga = !1;
function hM() {
  return Ga;
}
const lM = PA.env.NODE_ENV === "production" ? DM : hM;
if (PA.env.NODE_ENV !== "production" && typeof module < "u" && module && module.hot && typeof window < "u") {
  var Uo = window;
  if (typeof Uo.webpackHotUpdate == "function") {
    var yM = Uo.webpackHotUpdate;
    Uo.webpackHotUpdate = function() {
      return Ga = !0, setTimeout(function() {
        Ga = !1;
      }, 0), yM.apply(void 0, arguments);
    };
  }
}
function Cs(A, g, I, B, Q) {
  var E = IA.useContext(mi), C = E.cache, o = [A].concat(fI(g)), t = Fa(o), e = cM([t]), i = lM(), a = function(l) {
    C.opUpdate(t, function(y) {
      var N = y || [void 0, void 0], s = Dg(N, 2), F = s[0], u = F === void 0 ? 0 : F, U = s[1], J = U;
      PA.env.NODE_ENV !== "production" && U && i && (B == null || B(J, i), J = null);
      var L = J || I(), f = [u, L];
      return l ? l(f) : f;
    });
  };
  IA.useMemo(
    function() {
      a();
    },
    /* eslint-disable react-hooks/exhaustive-deps */
    [t]
    /* eslint-enable */
  );
  var r = C.opGet(t);
  PA.env.NODE_ENV !== "production" && !r && (a(), r = C.opGet(t));
  var h = r[1];
  return oM(function() {
    Q == null || Q(h);
  }, function(n) {
    return a(function(l) {
      var y = Dg(l, 2), N = y[0], s = y[1];
      return n && N === 0 && (Q == null || Q(h)), [N + 1, s];
    }), function() {
      C.opUpdate(t, function(l) {
        var y = l || [], N = Dg(y, 2), s = N[0], F = s === void 0 ? 0 : s, u = N[1], U = F - 1;
        return U === 0 ? (e(function() {
          (n || !C.opGet(t)) && (B == null || B(u, !1));
        }), null) : [F - 1, u];
      });
    };
  }, [t]), h;
}
var wM = {}, dM = PA.env.NODE_ENV !== "production" ? "css-dev-only-do-not-override" : "css", ME = /* @__PURE__ */ new Map();
function FM(A) {
  ME.set(A, (ME.get(A) || 0) + 1);
}
function RM(A, g) {
  if (typeof document < "u") {
    var I = document.querySelectorAll("style[".concat(bC, '="').concat(A, '"]'));
    I.forEach(function(B) {
      if (B[AE] === g) {
        var Q;
        (Q = B.parentNode) === null || Q === void 0 || Q.removeChild(B);
      }
    });
  }
}
var fM = 0;
function GM(A, g) {
  ME.set(A, (ME.get(A) || 0) - 1);
  var I = Array.from(ME.keys()), B = I.filter(function(Q) {
    var E = ME.get(Q) || 0;
    return E <= 0;
  });
  I.length - B.length > fM && B.forEach(function(Q) {
    RM(Q, g), ME.delete(Q);
  });
}
var MM = function(g, I, B, Q) {
  var E = B.getDerivativeToken(g), C = gg(gg({}, E), I);
  return Q && (C = Q(C)), C;
}, Rh = "token";
function NM(A, g) {
  var I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, B = IA.useContext(mi), Q = B.cache.instanceId, E = B.container, C = I.salt, o = C === void 0 ? "" : C, t = I.override, e = t === void 0 ? wM : t, i = I.formatToken, a = I.getComputedToken, r = I.cssVar, h = CM(function() {
    return Object.assign.apply(Object, [{}].concat(fI(g)));
  }, g), n = ke(h), l = ke(e), y = r ? ke(r) : "", N = Cs(Rh, [o, A.id, n, l, y], function() {
    var s, F = a ? a(h, e, A) : MM(h, e, A, i), u = gg({}, F), U = "";
    if (r) {
      var J = dh(F, r.key, {
        prefix: r.prefix,
        ignore: r.ignore,
        unitless: r.unitless,
        preserve: r.preserve
      }), L = Dg(J, 2);
      F = L[0], U = L[1];
    }
    var f = Gc(F, o);
    F._tokenKey = f, u._tokenKey = Gc(u, o);
    var d = (s = r == null ? void 0 : r.key) !== null && s !== void 0 ? s : f;
    F._themeKey = d, FM(d);
    var p = "".concat(dM, "-").concat(Je(f));
    return F._hashId = p, [F, p, u, U, (r == null ? void 0 : r.key) || ""];
  }, function(s) {
    GM(s[0]._themeKey, Q);
  }, function(s) {
    var F = Dg(s, 4), u = F[0], U = F[3];
    if (r && U) {
      var J = TE(U, Je("css-variables-".concat(u._themeKey)), {
        mark: gQ,
        prepend: "queue",
        attachTo: E,
        priority: -999
      });
      J[AE] = Q, J.setAttribute(bC, u._themeKey);
    }
  });
  return N;
}
var uM = function(g, I, B) {
  var Q = Dg(g, 5), E = Q[2], C = Q[3], o = Q[4], t = B || {}, e = t.plain;
  if (!C)
    return null;
  var i = E._tokenKey, a = -999, r = {
    "data-rc-order": "prependQueue",
    "data-rc-priority": "".concat(a)
  }, h = ci(C, o, i, r, e);
  return [a, i, h];
}, SM = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, fh = "comm", Gh = "rule", Mh = "decl", UM = "@import", kM = "@keyframes", HM = "@layer", Nh = Math.abs, es = String.fromCharCode;
function uh(A) {
  return A.trim();
}
function zt(A, g, I) {
  return A.replace(g, I);
}
function pM(A, g, I) {
  return A.indexOf(g, I);
}
function Le(A, g) {
  return A.charCodeAt(g) | 0;
}
function ZC(A, g, I) {
  return A.slice(g, I);
}
function CQ(A) {
  return A.length;
}
function YM(A) {
  return A.length;
}
function Nt(A, g) {
  return g.push(A), A;
}
var xi = 1, TC = 1, Sh = 0, VI = 0, ZB = 0, jC = "";
function ts(A, g, I, B, Q, E, C, o) {
  return { value: A, root: g, parent: I, type: B, props: Q, children: E, line: xi, column: TC, length: C, return: "", siblings: o };
}
function JM() {
  return ZB;
}
function LM() {
  return ZB = VI > 0 ? Le(jC, --VI) : 0, TC--, ZB === 10 && (TC = 1, xi--), ZB;
}
function BQ() {
  return ZB = VI < Sh ? Le(jC, VI++) : 0, TC++, ZB === 10 && (TC = 1, xi++), ZB;
}
function gE() {
  return Le(jC, VI);
}
function Vt() {
  return VI;
}
function vi(A, g) {
  return ZC(jC, A, g);
}
function Ke(A) {
  switch (A) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function KM(A) {
  return xi = TC = 1, Sh = CQ(jC = A), VI = 0, [];
}
function mM(A) {
  return jC = "", A;
}
function ko(A) {
  return uh(vi(VI - 1, Ma(A === 91 ? A + 2 : A === 40 ? A + 1 : A)));
}
function xM(A) {
  for (; (ZB = gE()) && ZB < 33; )
    BQ();
  return Ke(A) > 2 || Ke(ZB) > 3 ? "" : " ";
}
function vM(A, g) {
  for (; --g && BQ() && !(ZB < 48 || ZB > 102 || ZB > 57 && ZB < 65 || ZB > 70 && ZB < 97); )
    ;
  return vi(A, Vt() + (g < 6 && gE() == 32 && BQ() == 32));
}
function Ma(A) {
  for (; BQ(); )
    switch (ZB) {
      case A:
        return VI;
      case 34:
      case 39:
        A !== 34 && A !== 39 && Ma(ZB);
        break;
      case 40:
        A === 41 && Ma(A);
        break;
      case 92:
        BQ();
        break;
    }
  return VI;
}
function bM(A, g) {
  for (; BQ() && A + ZB !== 57; )
    if (A + ZB === 84 && gE() === 47)
      break;
  return "/*" + vi(g, VI - 1) + "*" + es(A === 47 ? A : BQ());
}
function ZM(A) {
  for (; !Ke(gE()); )
    BQ();
  return vi(A, VI);
}
function TM(A) {
  return mM(qt("", null, null, null, [""], A = KM(A), 0, [0], A));
}
function qt(A, g, I, B, Q, E, C, o, t) {
  for (var e = 0, i = 0, a = C, r = 0, h = 0, n = 0, l = 1, y = 1, N = 1, s = 0, F = "", u = Q, U = E, J = B, L = F; y; )
    switch (n = s, s = BQ()) {
      case 40:
        if (n != 108 && Le(L, a - 1) == 58) {
          pM(L += zt(ko(s), "&", "&\f"), "&\f", Nh(e ? o[e - 1] : 0)) != -1 && (N = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        L += ko(s);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        L += xM(n);
        break;
      case 92:
        L += vM(Vt() - 1, 7);
        continue;
      case 47:
        switch (gE()) {
          case 42:
          case 47:
            Nt(XM(bM(BQ(), Vt()), g, I, t), t), (Ke(n || 1) == 5 || Ke(gE() || 1) == 5) && CQ(L) && ZC(L, -1, void 0) !== " " && (L += " ");
            break;
          default:
            L += "/";
        }
        break;
      case 123 * l:
        o[e++] = CQ(L) * N;
      case 125 * l:
      case 59:
      case 0:
        switch (s) {
          case 0:
          case 125:
            y = 0;
          case 59 + i:
            N == -1 && (L = zt(L, /\f/g, "")), h > 0 && (CQ(L) - a || l === 0 && n === 47) && Nt(h > 32 ? Sc(L + ";", B, I, a - 1, t) : Sc(zt(L, " ", "") + ";", B, I, a - 2, t), t);
            break;
          case 59:
            L += ";";
          default:
            if (Nt(J = uc(L, g, I, e, i, Q, o, F, u = [], U = [], a, E), E), s === 123)
              if (i === 0)
                qt(L, g, J, J, u, E, a, o, U);
              else
                switch (r === 99 && Le(L, 3) === 110 ? 100 : r) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    qt(A, J, J, B && Nt(uc(A, J, J, 0, 0, Q, o, F, Q, u = [], a, U), U), Q, U, a, o, B ? u : U);
                    break;
                  default:
                    qt(L, J, J, J, [""], U, 0, o, U);
                }
        }
        e = i = h = 0, l = N = 1, F = L = "", a = C;
        break;
      case 58:
        a = 1 + CQ(L), h = n;
      default:
        if (l < 1) {
          if (s == 123)
            --l;
          else if (s == 125 && l++ == 0 && LM() == 125)
            continue;
        }
        switch (L += es(s), s * l) {
          case 38:
            N = i > 0 ? 1 : (L += "\f", -1);
            break;
          case 44:
            o[e++] = (CQ(L) - 1) * N, N = 1;
            break;
          case 64:
            gE() === 45 && (L += ko(BQ())), r = gE(), i = a = CQ(F = L += ZM(Vt())), s++;
            break;
          case 45:
            n === 45 && CQ(L) == 2 && (l = 0);
        }
    }
  return E;
}
function uc(A, g, I, B, Q, E, C, o, t, e, i, a) {
  for (var r = Q - 1, h = Q === 0 ? E : [""], n = YM(h), l = 0, y = 0, N = 0; l < B; ++l)
    for (var s = 0, F = ZC(A, r + 1, r = Nh(y = C[l])), u = A; s < n; ++s)
      (u = uh(y > 0 ? h[s] + " " + F : zt(F, /&\f/g, h[s]))) && (t[N++] = u);
  return ts(A, g, I, Q === 0 ? Gh : o, t, e, i, a);
}
function XM(A, g, I, B) {
  return ts(A, g, I, fh, es(JM()), ZC(A, 2, -2), 0, B);
}
function Sc(A, g, I, B, Q) {
  return ts(A, g, I, Mh, ZC(A, 0, B), ZC(A, B + 1, -1), B, Q);
}
function Na(A, g) {
  for (var I = "", B = 0; B < A.length; B++)
    I += g(A[B], B, A, g) || "";
  return I;
}
function zM(A, g, I, B) {
  switch (A.type) {
    case HM:
      if (A.children.length) break;
    case UM:
    case Mh:
      return A.return = A.return || A.value;
    case fh:
      return "";
    case kM:
      return A.return = A.value + "{" + Na(A.children, B) + "}";
    case Gh:
      if (!CQ(A.value = A.props.join(","))) return "";
  }
  return CQ(I = Na(A.children, B)) ? A.return = A.value + "{" + I + "}" : "";
}
function Uh(A, g) {
  var I = g.path, B = g.parentSelectors;
  aE(!1, "[Ant Design CSS-in-JS] ".concat(I ? "Error in ".concat(I, ": ") : "").concat(A).concat(B.length ? " Selector: ".concat(B.join(" | ")) : ""));
}
var VM = function(g, I, B) {
  if (g === "content") {
    var Q = /(attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/, E = ["normal", "none", "initial", "inherit", "unset"];
    (typeof I != "string" || E.indexOf(I) === -1 && !Q.test(I) && (I.charAt(0) !== I.charAt(I.length - 1) || I.charAt(0) !== '"' && I.charAt(0) !== "'")) && Uh("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"".concat(I, "\"'`."), B);
  }
}, qM = function(g, I, B) {
  g === "animation" && B.hashId && I !== "none" && Uh("You seem to be using hashed animation '".concat(I, "', in which case 'animationName' with Keyframe as value is recommended."), B);
}, Uc = "data-ant-cssinjs-cache-path", kh = "_FILE_STYLE__", XE, Hh = !0;
function PM() {
  if (!XE && (XE = {}, JQ())) {
    var A = document.createElement("div");
    A.className = Uc, A.style.position = "fixed", A.style.visibility = "hidden", A.style.top = "-9999px", document.body.appendChild(A);
    var g = getComputedStyle(A).content || "";
    g = g.replace(/^"/, "").replace(/"$/, ""), g.split(";").forEach(function(Q) {
      var E = Q.split(":"), C = Dg(E, 2), o = C[0], t = C[1];
      XE[o] = t;
    });
    var I = document.querySelector("style[".concat(Uc, "]"));
    if (I) {
      var B;
      Hh = !1, (B = I.parentNode) === null || B === void 0 || B.removeChild(I);
    }
    document.body.removeChild(A);
  }
}
function WM(A) {
  return PM(), !!XE[A];
}
function OM(A) {
  var g = XE[A], I = null;
  if (g && JQ())
    if (Hh)
      I = kh;
    else {
      var B = document.querySelector("style[".concat(gQ, '="').concat(XE[A], '"]'));
      B ? I = B.innerHTML : delete XE[A];
    }
  return [I, g];
}
var ph = "_skip_check_", Yh = "_multi_value_";
function Pt(A) {
  var g = Na(TM(A), zM);
  return g.replace(/\{%%%\:[^;];}/g, ";");
}
function jM(A) {
  return DB(A) === "object" && A && (ph in A || Yh in A);
}
function kc(A, g, I) {
  if (!g)
    return A;
  var B = ".".concat(g), Q = I === "low" ? ":where(".concat(B, ")") : B, E = A.split(",").map(function(C) {
    var o, t = C.trim().split(/\s+/), e = t[0] || "", i = ((o = e.match(/^\w+/)) === null || o === void 0 ? void 0 : o[0]) || "";
    return e = "".concat(i).concat(Q).concat(e.slice(i.length)), [e].concat(fI(t.slice(1))).join(" ");
  });
  return E.join(",");
}
var _M = function A(g) {
  var I = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, B = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
    root: !0,
    parentSelectors: []
  }, Q = B.root, E = B.injectHash, C = B.parentSelectors, o = I.hashId, t = I.layer, e = I.path, i = I.hashPriority, a = I.transformers, r = a === void 0 ? [] : a, h = I.linters, n = h === void 0 ? [] : h, l = "", y = {};
  function N(u) {
    var U = u.getName(o);
    if (!y[U]) {
      var J = A(u.style, I, {
        root: !1,
        parentSelectors: C
      }), L = Dg(J, 1), f = L[0];
      y[U] = "@keyframes ".concat(u.getName(o)).concat(f);
    }
  }
  function s(u) {
    var U = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    return u.forEach(function(J) {
      Array.isArray(J) ? s(J, U) : J && U.push(J);
    }), U;
  }
  var F = s(Array.isArray(g) ? g : [g]);
  return F.forEach(function(u) {
    var U = typeof u == "string" && !Q ? {} : u;
    if (typeof U == "string")
      l += "".concat(U, `
`);
    else if (U._keyframe)
      N(U);
    else {
      var J = r.reduce(function(L, f) {
        var d;
        return (f == null || (d = f.visit) === null || d === void 0 ? void 0 : d.call(f, L)) || L;
      }, U);
      Object.keys(J).forEach(function(L) {
        var f = J[L];
        if (DB(f) === "object" && f && (L !== "animationName" || !f._keyframe) && !jM(f)) {
          var d = !1, p = L.trim(), x = !1;
          (Q || E) && o ? p.startsWith("@") ? d = !0 : p === "&" ? p = kc("", o, i) : p = kc(L, o, i) : Q && !o && (p === "&" || p === "") && (p = "", x = !0);
          var M = A(f, I, {
            root: x,
            injectHash: d,
            parentSelectors: [].concat(fI(C), [p])
          }), S = Dg(M, 2), k = S[0], v = S[1];
          y = gg(gg({}, y), v), l += "".concat(p).concat(k);
        } else {
          let $ = function(AA, lA) {
            PA.env.NODE_ENV !== "production" && (DB(f) !== "object" || !(f != null && f[ph])) && [VM, qM].concat(fI(n)).forEach(function(yA) {
              return yA(AA, lA, {
                path: e,
                hashId: o,
                parentSelectors: C
              });
            });
            var FA = AA.replace(/[A-Z]/g, function(yA) {
              return "-".concat(yA.toLowerCase());
            }), cA = lA;
            !SM[AA] && typeof cA == "number" && cA !== 0 && (cA = "".concat(cA, "px")), AA === "animationName" && lA !== null && lA !== void 0 && lA._keyframe && (N(lA), cA = lA.getName(o)), l += "".concat(FA, ":").concat(cA, ";");
          };
          var m, T = (m = f == null ? void 0 : f.value) !== null && m !== void 0 ? m : f;
          DB(f) === "object" && f !== null && f !== void 0 && f[Yh] && Array.isArray(T) ? T.forEach(function(AA) {
            $(L, AA);
          }) : $(L, T);
        }
      });
    }
  }), Q ? t && (l = "@layer ".concat(t.name, " {").concat(l, "}"), t.dependencies && (y["@layer ".concat(t.name)] = t.dependencies.map(function(u) {
    return "@layer ".concat(u, ", ").concat(t.name, ";");
  }).join(`
`))) : l = "{".concat(l, "}"), [l, y];
};
function Jh(A, g) {
  return Je("".concat(A.join("%")).concat(g));
}
function $M() {
  return null;
}
var Lh = "style";
function ua(A, g) {
  var I = A.token, B = A.path, Q = A.hashId, E = A.layer, C = A.nonce, o = A.clientOnly, t = A.order, e = t === void 0 ? 0 : t, i = IA.useContext(mi), a = i.autoClear, r = i.mock, h = i.defaultCache, n = i.hashPriority, l = i.container, y = i.ssrInline, N = i.transformers, s = i.linters, F = i.cache, u = i.layer, U = I._tokenKey, J = [U];
  u && J.push("layer"), J.push.apply(J, fI(B));
  var L = fa;
  PA.env.NODE_ENV !== "production" && r !== void 0 && (L = r === "client");
  var f = Cs(
    Lh,
    J,
    // Create cache if needed
    function() {
      var S = J.join("|");
      if (WM(S)) {
        var k = OM(S), v = Dg(k, 2), m = v[0], T = v[1];
        if (m)
          return [m, U, T, {}, o, e];
      }
      var $ = g(), AA = _M($, {
        hashId: Q,
        hashPriority: n,
        layer: u ? E : void 0,
        path: B.join("-"),
        transformers: N,
        linters: s
      }), lA = Dg(AA, 2), FA = lA[0], cA = lA[1], yA = Pt(FA), aA = Jh(J, yA);
      return [yA, U, aA, cA, o, e];
    },
    // Remove cache if no need
    function(S, k) {
      var v = Dg(S, 3), m = v[2];
      (k || a) && fa && yh(m, {
        mark: gQ
      });
    },
    // Effect: Inject style here
    function(S) {
      var k = Dg(S, 4), v = k[0];
      k[1];
      var m = k[2], T = k[3];
      if (L && v !== kh) {
        var $ = {
          mark: gQ,
          prepend: u ? !1 : "queue",
          attachTo: l,
          priority: e
        }, AA = typeof C == "function" ? C() : C;
        AA && ($.csp = {
          nonce: AA
        });
        var lA = [], FA = [];
        Object.keys(T).forEach(function(yA) {
          yA.startsWith("@layer") ? lA.push(yA) : FA.push(yA);
        }), lA.forEach(function(yA) {
          TE(Pt(T[yA]), "_layer-".concat(yA), gg(gg({}, $), {}, {
            prepend: !0
          }));
        });
        var cA = TE(v, m, $);
        cA[AE] = F.instanceId, cA.setAttribute(bC, U), PA.env.NODE_ENV !== "production" && cA.setAttribute(BM, J.join("|")), FA.forEach(function(yA) {
          TE(Pt(T[yA]), "_effect-".concat(yA), $);
        });
      }
    }
  ), d = Dg(f, 3), p = d[0], x = d[1], M = d[2];
  return function(S) {
    var k;
    return !y || L || !h ? k = /* @__PURE__ */ IA.createElement($M, null) : k = /* @__PURE__ */ IA.createElement("style", zI({}, hg(hg({}, bC, x), gQ, M), {
      dangerouslySetInnerHTML: {
        __html: p
      }
    })), /* @__PURE__ */ IA.createElement(IA.Fragment, null, k, S);
  };
}
var AN = function(g, I, B) {
  var Q = Dg(g, 6), E = Q[0], C = Q[1], o = Q[2], t = Q[3], e = Q[4], i = Q[5], a = B || {}, r = a.plain;
  if (e)
    return null;
  var h = E, n = {
    "data-rc-order": "prependQueue",
    "data-rc-priority": "".concat(i)
  };
  return h = ci(E, C, o, n, r), t && Object.keys(t).forEach(function(l) {
    if (!I[l]) {
      I[l] = !0;
      var y = Pt(t[l]), N = ci(y, C, "_effect-".concat(l), n, r);
      l.startsWith("@layer") ? h = N + h : h += N;
    }
  }), [i, o, h];
}, Kh = "cssVar", gN = function(g, I) {
  var B = g.key, Q = g.prefix, E = g.unitless, C = g.ignore, o = g.token, t = g.scope, e = t === void 0 ? "" : t, i = IA.useContext(mi), a = i.cache.instanceId, r = i.container, h = o._tokenKey, n = [].concat(fI(g.path), [B, e, h]), l = Cs(Kh, n, function() {
    var y = I(), N = dh(y, B, {
      prefix: Q,
      unitless: E,
      ignore: C,
      scope: e
    }), s = Dg(N, 2), F = s[0], u = s[1], U = Jh(n, u);
    return [F, u, U, B];
  }, function(y) {
    var N = Dg(y, 3), s = N[2];
    fa && yh(s, {
      mark: gQ
    });
  }, function(y) {
    var N = Dg(y, 3), s = N[1], F = N[2];
    if (s) {
      var u = TE(s, F, {
        mark: gQ,
        prepend: "queue",
        attachTo: r,
        priority: -999
      });
      u[AE] = a, u.setAttribute(bC, B);
    }
  });
  return l;
}, BN = function(g, I, B) {
  var Q = Dg(g, 4), E = Q[1], C = Q[2], o = Q[3], t = B || {}, e = t.plain;
  if (!E)
    return null;
  var i = -999, a = {
    "data-rc-order": "prependQueue",
    "data-rc-priority": "".concat(i)
  }, r = ci(E, o, C, a, e);
  return [i, C, r];
};
hg(hg(hg({}, Lh, AN), Rh, uM), Kh, BN);
var Ge = /* @__PURE__ */ function() {
  function A(g, I) {
    wQ(this, A), hg(this, "name", void 0), hg(this, "style", void 0), hg(this, "_keyframe", !0), this.name = g, this.style = I;
  }
  return dQ(A, [{
    key: "getName",
    value: function() {
      var I = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      return I ? "".concat(I, "-").concat(this.name) : this.name;
    }
  }]), A;
}();
function oC(A) {
  return A.notSplit = !0, A;
}
oC(["borderTop", "borderBottom"]), oC(["borderTop"]), oC(["borderBottom"]), oC(["borderLeft", "borderRight"]), oC(["borderLeft"]), oC(["borderRight"]);
var is = /* @__PURE__ */ IA.createContext({});
function IN(A) {
  return nh(A) || oh(A) || Is(A) || ch();
}
function Sa(A, g) {
  for (var I = A, B = 0; B < g.length; B += 1) {
    if (I == null)
      return;
    I = I[g[B]];
  }
  return I;
}
function mh(A, g, I, B) {
  if (!g.length)
    return I;
  var Q = IN(g), E = Q[0], C = Q.slice(1), o;
  return !A && typeof E == "number" ? o = [] : Array.isArray(A) ? o = fI(A) : o = gg({}, A), B && I === void 0 && C.length === 1 ? delete o[E][C[0]] : o[E] = mh(o[E], C, I, B), o;
}
function Ho(A, g, I) {
  var B = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
  return g.length && B && I === void 0 && !Sa(A, g.slice(0, -1)) ? A : mh(A, g, I, B);
}
function QN(A) {
  return DB(A) === "object" && A !== null && Object.getPrototypeOf(A) === Object.prototype;
}
function Hc(A) {
  return Array.isArray(A) ? [] : {};
}
var EN = typeof Reflect > "u" ? Object.keys : Reflect.ownKeys;
function CN() {
  for (var A = arguments.length, g = new Array(A), I = 0; I < A; I++)
    g[I] = arguments[I];
  var B = Hc(g[0]);
  return g.forEach(function(Q) {
    function E(C, o) {
      var t = new Set(o), e = Sa(Q, C), i = Array.isArray(e);
      if (i || QN(e)) {
        if (!t.has(e)) {
          t.add(e);
          var a = Sa(B, C);
          i ? B = Ho(B, C, []) : (!a || DB(a) !== "object") && (B = Ho(B, C, Hc(e))), EN(e).forEach(function(r) {
            E([].concat(fI(C), [r]), t);
          });
        }
      } else
        B = Ho(B, C, e);
    }
    E([]);
  }), B;
}
function xh() {
}
let uQ = null;
function eN() {
  uQ = null, Ch();
}
let os = xh;
PA.env.NODE_ENV !== "production" && (os = (A, g, I) => {
  aE(A, `[antd: ${g}] ${I}`), PA.env.NODE_ENV === "test" && eN();
});
const vh = /* @__PURE__ */ IA.createContext({}), _C = PA.env.NODE_ENV !== "production" ? (A) => {
  const {
    strict: g
  } = IA.useContext(vh), I = (B, Q, E) => {
    if (!B)
      if (g === !1 && Q === "deprecated") {
        const C = uQ;
        uQ || (uQ = {}), uQ[A] = uQ[A] || [], uQ[A].includes(E || "") || uQ[A].push(E || ""), C || console.warn("[antd] There exists deprecated usage in your code:", uQ);
      } else
        PA.env.NODE_ENV !== "production" && os(B, A, E);
  };
  return I.deprecated = (B, Q, E, C) => {
    I(B, "deprecated", `\`${Q}\` is deprecated. Please use \`${E}\` instead.${C ? ` ${C}` : ""}`);
  }, I;
} : () => {
  const A = () => {
  };
  return A.deprecated = xh, A;
}, bi = os, tN = /* @__PURE__ */ IA.createContext(void 0);
var iN = {
  // Options
  items_per_page: "/ page",
  jump_to: "Go to",
  jump_to_confirm: "confirm",
  page: "Page",
  // Pagination
  prev_page: "Previous Page",
  next_page: "Next Page",
  prev_5: "Previous 5 Pages",
  next_5: "Next 5 Pages",
  prev_3: "Previous 3 Pages",
  next_3: "Next 3 Pages",
  page_size: "Page Size"
}, oN = {
  yearFormat: "YYYY",
  dayFormat: "D",
  cellMeridiemFormat: "A",
  monthBeforeYear: !0
}, aN = gg(gg({}, oN), {}, {
  locale: "en_US",
  today: "Today",
  now: "Now",
  backToToday: "Back to today",
  ok: "OK",
  clear: "Clear",
  month: "Month",
  year: "Year",
  timeSelect: "select time",
  dateSelect: "select date",
  weekSelect: "Choose a week",
  monthSelect: "Choose a month",
  yearSelect: "Choose a year",
  decadeSelect: "Choose a decade",
  dateFormat: "M/D/YYYY",
  dateTimeFormat: "M/D/YYYY HH:mm:ss",
  previousMonth: "Previous month (PageUp)",
  nextMonth: "Next month (PageDown)",
  previousYear: "Last year (Control + left)",
  nextYear: "Next year (Control + right)",
  previousDecade: "Last decade",
  nextDecade: "Next decade",
  previousCentury: "Last century",
  nextCentury: "Next century"
});
const bh = {
  placeholder: "Select time",
  rangePlaceholder: ["Start time", "End time"]
}, pc = {
  lang: Object.assign({
    placeholder: "Select date",
    yearPlaceholder: "Select year",
    quarterPlaceholder: "Select quarter",
    monthPlaceholder: "Select month",
    weekPlaceholder: "Select week",
    rangePlaceholder: ["Start date", "End date"],
    rangeYearPlaceholder: ["Start year", "End year"],
    rangeQuarterPlaceholder: ["Start quarter", "End quarter"],
    rangeMonthPlaceholder: ["Start month", "End month"],
    rangeWeekPlaceholder: ["Start week", "End week"]
  }, aN),
  timePickerLocale: Object.assign({}, bh)
}, NI = "${label} is not a valid ${type}", Zi = {
  locale: "en",
  Pagination: iN,
  DatePicker: pc,
  TimePicker: bh,
  Calendar: pc,
  global: {
    placeholder: "Please select"
  },
  Table: {
    filterTitle: "Filter menu",
    filterConfirm: "OK",
    filterReset: "Reset",
    filterEmptyText: "No filters",
    filterCheckall: "Select all items",
    filterSearchPlaceholder: "Search in filters",
    emptyText: "No data",
    selectAll: "Select current page",
    selectInvert: "Invert current page",
    selectNone: "Clear all data",
    selectionAll: "Select all data",
    sortTitle: "Sort",
    expand: "Expand row",
    collapse: "Collapse row",
    triggerDesc: "Click to sort descending",
    triggerAsc: "Click to sort ascending",
    cancelSort: "Click to cancel sorting"
  },
  Tour: {
    Next: "Next",
    Previous: "Previous",
    Finish: "Finish"
  },
  Modal: {
    okText: "OK",
    cancelText: "Cancel",
    justOkText: "OK"
  },
  Popconfirm: {
    okText: "OK",
    cancelText: "Cancel"
  },
  Transfer: {
    titles: ["", ""],
    searchPlaceholder: "Search here",
    itemUnit: "item",
    itemsUnit: "items",
    remove: "Remove",
    selectCurrent: "Select current page",
    removeCurrent: "Remove current page",
    selectAll: "Select all data",
    deselectAll: "Deselect all data",
    removeAll: "Remove all data",
    selectInvert: "Invert current page"
  },
  Upload: {
    uploading: "Uploading...",
    removeFile: "Remove file",
    uploadError: "Upload error",
    previewFile: "Preview file",
    downloadFile: "Download file"
  },
  Empty: {
    description: "No data"
  },
  Icon: {
    icon: "icon"
  },
  Text: {
    edit: "Edit",
    copy: "Copy",
    copied: "Copied",
    expand: "Expand",
    collapse: "Collapse"
  },
  Form: {
    optional: "(optional)",
    defaultValidateMessages: {
      default: "Field validation error for ${label}",
      required: "Please enter ${label}",
      enum: "${label} must be one of [${enum}]",
      whitespace: "${label} cannot be a blank character",
      date: {
        format: "${label} date format is invalid",
        parse: "${label} cannot be converted to a date",
        invalid: "${label} is an invalid date"
      },
      types: {
        string: NI,
        method: NI,
        array: NI,
        object: NI,
        number: NI,
        date: NI,
        boolean: NI,
        integer: NI,
        float: NI,
        regexp: NI,
        email: NI,
        url: NI,
        hex: NI
      },
      string: {
        len: "${label} must be ${len} characters",
        min: "${label} must be at least ${min} characters",
        max: "${label} must be up to ${max} characters",
        range: "${label} must be between ${min}-${max} characters"
      },
      number: {
        len: "${label} must be equal to ${len}",
        min: "${label} must be minimum ${min}",
        max: "${label} must be maximum ${max}",
        range: "${label} must be between ${min}-${max}"
      },
      array: {
        len: "Must be ${len} ${label}",
        min: "At least ${min} ${label}",
        max: "At most ${max} ${label}",
        range: "The amount of ${label} must be between ${min}-${max}"
      },
      pattern: {
        mismatch: "${label} does not match the pattern ${pattern}"
      }
    }
  },
  Image: {
    preview: "Preview"
  },
  QRCode: {
    expired: "QR code expired",
    refresh: "Refresh",
    scanned: "Scanned"
  },
  ColorPicker: {
    presetEmpty: "Empty",
    transparent: "Transparent",
    singleColor: "Single",
    gradientColor: "Gradient"
  }
};
Object.assign({}, Zi.Modal);
let Wt = [];
const Yc = () => Wt.reduce((A, g) => Object.assign(Object.assign({}, A), g), Zi.Modal);
function rN(A) {
  if (A) {
    const g = Object.assign({}, A);
    return Wt.push(g), Yc(), () => {
      Wt = Wt.filter((I) => I !== g), Yc();
    };
  }
  Object.assign({}, Zi.Modal);
}
const Zh = /* @__PURE__ */ IA.createContext(void 0), Th = "internalMark", Xh = (A) => {
  const {
    locale: g = {},
    children: I,
    _ANT_MARK__: B
  } = A;
  if (PA.env.NODE_ENV !== "production") {
    const E = _C("LocaleProvider");
    PA.env.NODE_ENV !== "production" && E(B === Th, "deprecated", "`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale");
  }
  IA.useEffect(() => rN(g == null ? void 0 : g.Modal), [g]);
  const Q = IA.useMemo(() => Object.assign(Object.assign({}, g), {
    exist: !0
  }), [g]);
  return /* @__PURE__ */ IA.createElement(Zh.Provider, {
    value: Q
  }, I);
};
PA.env.NODE_ENV !== "production" && (Xh.displayName = "LocaleProvider");
function QI(A, g) {
  sN(A) && (A = "100%");
  var I = nN(A);
  return A = g === 360 ? A : Math.min(g, Math.max(0, parseFloat(A))), I && (A = parseInt(String(A * g), 10) / 100), Math.abs(A - g) < 1e-6 ? 1 : (g === 360 ? A = (A < 0 ? A % g + g : A % g) / parseFloat(String(g)) : A = A % g / parseFloat(String(g)), A);
}
function ut(A) {
  return Math.min(1, Math.max(0, A));
}
function sN(A) {
  return typeof A == "string" && A.indexOf(".") !== -1 && parseFloat(A) === 1;
}
function nN(A) {
  return typeof A == "string" && A.indexOf("%") !== -1;
}
function zh(A) {
  return A = parseFloat(A), (isNaN(A) || A < 0 || A > 1) && (A = 1), A;
}
function St(A) {
  return A <= 1 ? "".concat(Number(A) * 100, "%") : A;
}
function kE(A) {
  return A.length === 1 ? "0" + A : String(A);
}
function cN(A, g, I) {
  return {
    r: QI(A, 255) * 255,
    g: QI(g, 255) * 255,
    b: QI(I, 255) * 255
  };
}
function Jc(A, g, I) {
  A = QI(A, 255), g = QI(g, 255), I = QI(I, 255);
  var B = Math.max(A, g, I), Q = Math.min(A, g, I), E = 0, C = 0, o = (B + Q) / 2;
  if (B === Q)
    C = 0, E = 0;
  else {
    var t = B - Q;
    switch (C = o > 0.5 ? t / (2 - B - Q) : t / (B + Q), B) {
      case A:
        E = (g - I) / t + (g < I ? 6 : 0);
        break;
      case g:
        E = (I - A) / t + 2;
        break;
      case I:
        E = (A - g) / t + 4;
        break;
    }
    E /= 6;
  }
  return { h: E, s: C, l: o };
}
function po(A, g, I) {
  return I < 0 && (I += 1), I > 1 && (I -= 1), I < 1 / 6 ? A + (g - A) * (6 * I) : I < 1 / 2 ? g : I < 2 / 3 ? A + (g - A) * (2 / 3 - I) * 6 : A;
}
function DN(A, g, I) {
  var B, Q, E;
  if (A = QI(A, 360), g = QI(g, 100), I = QI(I, 100), g === 0)
    Q = I, E = I, B = I;
  else {
    var C = I < 0.5 ? I * (1 + g) : I + g - I * g, o = 2 * I - C;
    B = po(o, C, A + 1 / 3), Q = po(o, C, A), E = po(o, C, A - 1 / 3);
  }
  return { r: B * 255, g: Q * 255, b: E * 255 };
}
function Ua(A, g, I) {
  A = QI(A, 255), g = QI(g, 255), I = QI(I, 255);
  var B = Math.max(A, g, I), Q = Math.min(A, g, I), E = 0, C = B, o = B - Q, t = B === 0 ? 0 : o / B;
  if (B === Q)
    E = 0;
  else {
    switch (B) {
      case A:
        E = (g - I) / o + (g < I ? 6 : 0);
        break;
      case g:
        E = (I - A) / o + 2;
        break;
      case I:
        E = (A - g) / o + 4;
        break;
    }
    E /= 6;
  }
  return { h: E, s: t, v: C };
}
function hN(A, g, I) {
  A = QI(A, 360) * 6, g = QI(g, 100), I = QI(I, 100);
  var B = Math.floor(A), Q = A - B, E = I * (1 - g), C = I * (1 - Q * g), o = I * (1 - (1 - Q) * g), t = B % 6, e = [I, C, E, E, o, I][t], i = [o, I, I, C, E, E][t], a = [E, E, o, I, I, C][t];
  return { r: e * 255, g: i * 255, b: a * 255 };
}
function ka(A, g, I, B) {
  var Q = [
    kE(Math.round(A).toString(16)),
    kE(Math.round(g).toString(16)),
    kE(Math.round(I).toString(16))
  ];
  return B && Q[0].startsWith(Q[0].charAt(1)) && Q[1].startsWith(Q[1].charAt(1)) && Q[2].startsWith(Q[2].charAt(1)) ? Q[0].charAt(0) + Q[1].charAt(0) + Q[2].charAt(0) : Q.join("");
}
function lN(A, g, I, B, Q) {
  var E = [
    kE(Math.round(A).toString(16)),
    kE(Math.round(g).toString(16)),
    kE(Math.round(I).toString(16)),
    kE(yN(B))
  ];
  return Q && E[0].startsWith(E[0].charAt(1)) && E[1].startsWith(E[1].charAt(1)) && E[2].startsWith(E[2].charAt(1)) && E[3].startsWith(E[3].charAt(1)) ? E[0].charAt(0) + E[1].charAt(0) + E[2].charAt(0) + E[3].charAt(0) : E.join("");
}
function yN(A) {
  return Math.round(parseFloat(A) * 255).toString(16);
}
function Lc(A) {
  return uI(A) / 255;
}
function uI(A) {
  return parseInt(A, 16);
}
function wN(A) {
  return {
    r: A >> 16,
    g: (A & 65280) >> 8,
    b: A & 255
  };
}
var Ha = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};
function nC(A) {
  var g = { r: 0, g: 0, b: 0 }, I = 1, B = null, Q = null, E = null, C = !1, o = !1;
  return typeof A == "string" && (A = RN(A)), typeof A == "object" && (GQ(A.r) && GQ(A.g) && GQ(A.b) ? (g = cN(A.r, A.g, A.b), C = !0, o = String(A.r).substr(-1) === "%" ? "prgb" : "rgb") : GQ(A.h) && GQ(A.s) && GQ(A.v) ? (B = St(A.s), Q = St(A.v), g = hN(A.h, B, Q), C = !0, o = "hsv") : GQ(A.h) && GQ(A.s) && GQ(A.l) && (B = St(A.s), E = St(A.l), g = DN(A.h, B, E), C = !0, o = "hsl"), Object.prototype.hasOwnProperty.call(A, "a") && (I = A.a)), I = zh(I), {
    ok: C,
    format: A.format || o,
    r: Math.min(255, Math.max(g.r, 0)),
    g: Math.min(255, Math.max(g.g, 0)),
    b: Math.min(255, Math.max(g.b, 0)),
    a: I
  };
}
var dN = "[-\\+]?\\d+%?", FN = "[-\\+]?\\d*\\.\\d+%?", BE = "(?:".concat(FN, ")|(?:").concat(dN, ")"), Yo = "[\\s|\\(]+(".concat(BE, ")[,|\\s]+(").concat(BE, ")[,|\\s]+(").concat(BE, ")\\s*\\)?"), Jo = "[\\s|\\(]+(".concat(BE, ")[,|\\s]+(").concat(BE, ")[,|\\s]+(").concat(BE, ")[,|\\s]+(").concat(BE, ")\\s*\\)?"), PI = {
  CSS_UNIT: new RegExp(BE),
  rgb: new RegExp("rgb" + Yo),
  rgba: new RegExp("rgba" + Jo),
  hsl: new RegExp("hsl" + Yo),
  hsla: new RegExp("hsla" + Jo),
  hsv: new RegExp("hsv" + Yo),
  hsva: new RegExp("hsva" + Jo),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function RN(A) {
  if (A = A.trim().toLowerCase(), A.length === 0)
    return !1;
  var g = !1;
  if (Ha[A])
    A = Ha[A], g = !0;
  else if (A === "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  var I = PI.rgb.exec(A);
  return I ? { r: I[1], g: I[2], b: I[3] } : (I = PI.rgba.exec(A), I ? { r: I[1], g: I[2], b: I[3], a: I[4] } : (I = PI.hsl.exec(A), I ? { h: I[1], s: I[2], l: I[3] } : (I = PI.hsla.exec(A), I ? { h: I[1], s: I[2], l: I[3], a: I[4] } : (I = PI.hsv.exec(A), I ? { h: I[1], s: I[2], v: I[3] } : (I = PI.hsva.exec(A), I ? { h: I[1], s: I[2], v: I[3], a: I[4] } : (I = PI.hex8.exec(A), I ? {
    r: uI(I[1]),
    g: uI(I[2]),
    b: uI(I[3]),
    a: Lc(I[4]),
    format: g ? "name" : "hex8"
  } : (I = PI.hex6.exec(A), I ? {
    r: uI(I[1]),
    g: uI(I[2]),
    b: uI(I[3]),
    format: g ? "name" : "hex"
  } : (I = PI.hex4.exec(A), I ? {
    r: uI(I[1] + I[1]),
    g: uI(I[2] + I[2]),
    b: uI(I[3] + I[3]),
    a: Lc(I[4] + I[4]),
    format: g ? "name" : "hex8"
  } : (I = PI.hex3.exec(A), I ? {
    r: uI(I[1] + I[1]),
    g: uI(I[2] + I[2]),
    b: uI(I[3] + I[3]),
    format: g ? "name" : "hex"
  } : !1)))))))));
}
function GQ(A) {
  return !!PI.CSS_UNIT.exec(String(A));
}
var lI = (
  /** @class */
  function() {
    function A(g, I) {
      g === void 0 && (g = ""), I === void 0 && (I = {});
      var B;
      if (g instanceof A)
        return g;
      typeof g == "number" && (g = wN(g)), this.originalInput = g;
      var Q = nC(g);
      this.originalInput = g, this.r = Q.r, this.g = Q.g, this.b = Q.b, this.a = Q.a, this.roundA = Math.round(100 * this.a) / 100, this.format = (B = I.format) !== null && B !== void 0 ? B : Q.format, this.gradientType = I.gradientType, this.r < 1 && (this.r = Math.round(this.r)), this.g < 1 && (this.g = Math.round(this.g)), this.b < 1 && (this.b = Math.round(this.b)), this.isValid = Q.ok;
    }
    return A.prototype.isDark = function() {
      return this.getBrightness() < 128;
    }, A.prototype.isLight = function() {
      return !this.isDark();
    }, A.prototype.getBrightness = function() {
      var g = this.toRgb();
      return (g.r * 299 + g.g * 587 + g.b * 114) / 1e3;
    }, A.prototype.getLuminance = function() {
      var g = this.toRgb(), I, B, Q, E = g.r / 255, C = g.g / 255, o = g.b / 255;
      return E <= 0.03928 ? I = E / 12.92 : I = Math.pow((E + 0.055) / 1.055, 2.4), C <= 0.03928 ? B = C / 12.92 : B = Math.pow((C + 0.055) / 1.055, 2.4), o <= 0.03928 ? Q = o / 12.92 : Q = Math.pow((o + 0.055) / 1.055, 2.4), 0.2126 * I + 0.7152 * B + 0.0722 * Q;
    }, A.prototype.getAlpha = function() {
      return this.a;
    }, A.prototype.setAlpha = function(g) {
      return this.a = zh(g), this.roundA = Math.round(100 * this.a) / 100, this;
    }, A.prototype.isMonochrome = function() {
      var g = this.toHsl().s;
      return g === 0;
    }, A.prototype.toHsv = function() {
      var g = Ua(this.r, this.g, this.b);
      return { h: g.h * 360, s: g.s, v: g.v, a: this.a };
    }, A.prototype.toHsvString = function() {
      var g = Ua(this.r, this.g, this.b), I = Math.round(g.h * 360), B = Math.round(g.s * 100), Q = Math.round(g.v * 100);
      return this.a === 1 ? "hsv(".concat(I, ", ").concat(B, "%, ").concat(Q, "%)") : "hsva(".concat(I, ", ").concat(B, "%, ").concat(Q, "%, ").concat(this.roundA, ")");
    }, A.prototype.toHsl = function() {
      var g = Jc(this.r, this.g, this.b);
      return { h: g.h * 360, s: g.s, l: g.l, a: this.a };
    }, A.prototype.toHslString = function() {
      var g = Jc(this.r, this.g, this.b), I = Math.round(g.h * 360), B = Math.round(g.s * 100), Q = Math.round(g.l * 100);
      return this.a === 1 ? "hsl(".concat(I, ", ").concat(B, "%, ").concat(Q, "%)") : "hsla(".concat(I, ", ").concat(B, "%, ").concat(Q, "%, ").concat(this.roundA, ")");
    }, A.prototype.toHex = function(g) {
      return g === void 0 && (g = !1), ka(this.r, this.g, this.b, g);
    }, A.prototype.toHexString = function(g) {
      return g === void 0 && (g = !1), "#" + this.toHex(g);
    }, A.prototype.toHex8 = function(g) {
      return g === void 0 && (g = !1), lN(this.r, this.g, this.b, this.a, g);
    }, A.prototype.toHex8String = function(g) {
      return g === void 0 && (g = !1), "#" + this.toHex8(g);
    }, A.prototype.toHexShortString = function(g) {
      return g === void 0 && (g = !1), this.a === 1 ? this.toHexString(g) : this.toHex8String(g);
    }, A.prototype.toRgb = function() {
      return {
        r: Math.round(this.r),
        g: Math.round(this.g),
        b: Math.round(this.b),
        a: this.a
      };
    }, A.prototype.toRgbString = function() {
      var g = Math.round(this.r), I = Math.round(this.g), B = Math.round(this.b);
      return this.a === 1 ? "rgb(".concat(g, ", ").concat(I, ", ").concat(B, ")") : "rgba(".concat(g, ", ").concat(I, ", ").concat(B, ", ").concat(this.roundA, ")");
    }, A.prototype.toPercentageRgb = function() {
      var g = function(I) {
        return "".concat(Math.round(QI(I, 255) * 100), "%");
      };
      return {
        r: g(this.r),
        g: g(this.g),
        b: g(this.b),
        a: this.a
      };
    }, A.prototype.toPercentageRgbString = function() {
      var g = function(I) {
        return Math.round(QI(I, 255) * 100);
      };
      return this.a === 1 ? "rgb(".concat(g(this.r), "%, ").concat(g(this.g), "%, ").concat(g(this.b), "%)") : "rgba(".concat(g(this.r), "%, ").concat(g(this.g), "%, ").concat(g(this.b), "%, ").concat(this.roundA, ")");
    }, A.prototype.toName = function() {
      if (this.a === 0)
        return "transparent";
      if (this.a < 1)
        return !1;
      for (var g = "#" + ka(this.r, this.g, this.b, !1), I = 0, B = Object.entries(Ha); I < B.length; I++) {
        var Q = B[I], E = Q[0], C = Q[1];
        if (g === C)
          return E;
      }
      return !1;
    }, A.prototype.toString = function(g) {
      var I = !!g;
      g = g ?? this.format;
      var B = !1, Q = this.a < 1 && this.a >= 0, E = !I && Q && (g.startsWith("hex") || g === "name");
      return E ? g === "name" && this.a === 0 ? this.toName() : this.toRgbString() : (g === "rgb" && (B = this.toRgbString()), g === "prgb" && (B = this.toPercentageRgbString()), (g === "hex" || g === "hex6") && (B = this.toHexString()), g === "hex3" && (B = this.toHexString(!0)), g === "hex4" && (B = this.toHex8String(!0)), g === "hex8" && (B = this.toHex8String()), g === "name" && (B = this.toName()), g === "hsl" && (B = this.toHslString()), g === "hsv" && (B = this.toHsvString()), B || this.toHexString());
    }, A.prototype.toNumber = function() {
      return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
    }, A.prototype.clone = function() {
      return new A(this.toString());
    }, A.prototype.lighten = function(g) {
      g === void 0 && (g = 10);
      var I = this.toHsl();
      return I.l += g / 100, I.l = ut(I.l), new A(I);
    }, A.prototype.brighten = function(g) {
      g === void 0 && (g = 10);
      var I = this.toRgb();
      return I.r = Math.max(0, Math.min(255, I.r - Math.round(255 * -(g / 100)))), I.g = Math.max(0, Math.min(255, I.g - Math.round(255 * -(g / 100)))), I.b = Math.max(0, Math.min(255, I.b - Math.round(255 * -(g / 100)))), new A(I);
    }, A.prototype.darken = function(g) {
      g === void 0 && (g = 10);
      var I = this.toHsl();
      return I.l -= g / 100, I.l = ut(I.l), new A(I);
    }, A.prototype.tint = function(g) {
      return g === void 0 && (g = 10), this.mix("white", g);
    }, A.prototype.shade = function(g) {
      return g === void 0 && (g = 10), this.mix("black", g);
    }, A.prototype.desaturate = function(g) {
      g === void 0 && (g = 10);
      var I = this.toHsl();
      return I.s -= g / 100, I.s = ut(I.s), new A(I);
    }, A.prototype.saturate = function(g) {
      g === void 0 && (g = 10);
      var I = this.toHsl();
      return I.s += g / 100, I.s = ut(I.s), new A(I);
    }, A.prototype.greyscale = function() {
      return this.desaturate(100);
    }, A.prototype.spin = function(g) {
      var I = this.toHsl(), B = (I.h + g) % 360;
      return I.h = B < 0 ? 360 + B : B, new A(I);
    }, A.prototype.mix = function(g, I) {
      I === void 0 && (I = 50);
      var B = this.toRgb(), Q = new A(g).toRgb(), E = I / 100, C = {
        r: (Q.r - B.r) * E + B.r,
        g: (Q.g - B.g) * E + B.g,
        b: (Q.b - B.b) * E + B.b,
        a: (Q.a - B.a) * E + B.a
      };
      return new A(C);
    }, A.prototype.analogous = function(g, I) {
      g === void 0 && (g = 6), I === void 0 && (I = 30);
      var B = this.toHsl(), Q = 360 / I, E = [this];
      for (B.h = (B.h - (Q * g >> 1) + 720) % 360; --g; )
        B.h = (B.h + Q) % 360, E.push(new A(B));
      return E;
    }, A.prototype.complement = function() {
      var g = this.toHsl();
      return g.h = (g.h + 180) % 360, new A(g);
    }, A.prototype.monochromatic = function(g) {
      g === void 0 && (g = 6);
      for (var I = this.toHsv(), B = I.h, Q = I.s, E = I.v, C = [], o = 1 / g; g--; )
        C.push(new A({ h: B, s: Q, v: E })), E = (E + o) % 1;
      return C;
    }, A.prototype.splitcomplement = function() {
      var g = this.toHsl(), I = g.h;
      return [
        this,
        new A({ h: (I + 72) % 360, s: g.s, l: g.l }),
        new A({ h: (I + 216) % 360, s: g.s, l: g.l })
      ];
    }, A.prototype.onBackground = function(g) {
      var I = this.toRgb(), B = new A(g).toRgb(), Q = I.a + B.a * (1 - I.a);
      return new A({
        r: (I.r * I.a + B.r * B.a * (1 - I.a)) / Q,
        g: (I.g * I.a + B.g * B.a * (1 - I.a)) / Q,
        b: (I.b * I.a + B.b * B.a * (1 - I.a)) / Q,
        a: Q
      });
    }, A.prototype.triad = function() {
      return this.polyad(3);
    }, A.prototype.tetrad = function() {
      return this.polyad(4);
    }, A.prototype.polyad = function(g) {
      for (var I = this.toHsl(), B = I.h, Q = [this], E = 360 / g, C = 1; C < g; C++)
        Q.push(new A({ h: (B + C * E) % 360, s: I.s, l: I.l }));
      return Q;
    }, A.prototype.equals = function(g) {
      return this.toRgbString() === new A(g).toRgbString();
    }, A;
  }()
), Ut = 2, Kc = 0.16, fN = 0.05, GN = 0.05, MN = 0.15, Vh = 5, qh = 4, NN = [{
  index: 7,
  opacity: 0.15
}, {
  index: 6,
  opacity: 0.25
}, {
  index: 5,
  opacity: 0.3
}, {
  index: 5,
  opacity: 0.45
}, {
  index: 5,
  opacity: 0.65
}, {
  index: 5,
  opacity: 0.85
}, {
  index: 4,
  opacity: 0.9
}, {
  index: 3,
  opacity: 0.95
}, {
  index: 2,
  opacity: 0.97
}, {
  index: 1,
  opacity: 0.98
}];
function mc(A) {
  var g = A.r, I = A.g, B = A.b, Q = Ua(g, I, B);
  return {
    h: Q.h * 360,
    s: Q.s,
    v: Q.v
  };
}
function kt(A) {
  var g = A.r, I = A.g, B = A.b;
  return "#".concat(ka(g, I, B, !1));
}
function uN(A, g, I) {
  var B = I / 100, Q = {
    r: (g.r - A.r) * B + A.r,
    g: (g.g - A.g) * B + A.g,
    b: (g.b - A.b) * B + A.b
  };
  return Q;
}
function xc(A, g, I) {
  var B;
  return Math.round(A.h) >= 60 && Math.round(A.h) <= 240 ? B = I ? Math.round(A.h) - Ut * g : Math.round(A.h) + Ut * g : B = I ? Math.round(A.h) + Ut * g : Math.round(A.h) - Ut * g, B < 0 ? B += 360 : B >= 360 && (B -= 360), B;
}
function vc(A, g, I) {
  if (A.h === 0 && A.s === 0)
    return A.s;
  var B;
  return I ? B = A.s - Kc * g : g === qh ? B = A.s + Kc : B = A.s + fN * g, B > 1 && (B = 1), I && g === Vh && B > 0.1 && (B = 0.1), B < 0.06 && (B = 0.06), Number(B.toFixed(2));
}
function bc(A, g, I) {
  var B;
  return I ? B = A.v + GN * g : B = A.v - MN * g, B > 1 && (B = 1), Number(B.toFixed(2));
}
function me(A) {
  for (var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, I = [], B = nC(A), Q = Vh; Q > 0; Q -= 1) {
    var E = mc(B), C = kt(nC({
      h: xc(E, Q, !0),
      s: vc(E, Q, !0),
      v: bc(E, Q, !0)
    }));
    I.push(C);
  }
  I.push(kt(B));
  for (var o = 1; o <= qh; o += 1) {
    var t = mc(B), e = kt(nC({
      h: xc(t, o),
      s: vc(t, o),
      v: bc(t, o)
    }));
    I.push(e);
  }
  return g.theme === "dark" ? NN.map(function(i) {
    var a = i.index, r = i.opacity, h = kt(uN(nC(g.backgroundColor || "#141414"), nC(I[a]), r * 100));
    return h;
  }) : I;
}
var Lo = {
  red: "#F5222D",
  volcano: "#FA541C",
  orange: "#FA8C16",
  gold: "#FAAD14",
  yellow: "#FADB14",
  lime: "#A0D911",
  green: "#52C41A",
  cyan: "#13C2C2",
  blue: "#1677FF",
  geekblue: "#2F54EB",
  purple: "#722ED1",
  magenta: "#EB2F96",
  grey: "#666666"
}, pa = ["#fff1f0", "#ffccc7", "#ffa39e", "#ff7875", "#ff4d4f", "#f5222d", "#cf1322", "#a8071a", "#820014", "#5c0011"];
pa.primary = pa[5];
var Ya = ["#fff2e8", "#ffd8bf", "#ffbb96", "#ff9c6e", "#ff7a45", "#fa541c", "#d4380d", "#ad2102", "#871400", "#610b00"];
Ya.primary = Ya[5];
var Ja = ["#fff7e6", "#ffe7ba", "#ffd591", "#ffc069", "#ffa940", "#fa8c16", "#d46b08", "#ad4e00", "#873800", "#612500"];
Ja.primary = Ja[5];
var La = ["#fffbe6", "#fff1b8", "#ffe58f", "#ffd666", "#ffc53d", "#faad14", "#d48806", "#ad6800", "#874d00", "#613400"];
La.primary = La[5];
var Ka = ["#feffe6", "#ffffb8", "#fffb8f", "#fff566", "#ffec3d", "#fadb14", "#d4b106", "#ad8b00", "#876800", "#614700"];
Ka.primary = Ka[5];
var ma = ["#fcffe6", "#f4ffb8", "#eaff8f", "#d3f261", "#bae637", "#a0d911", "#7cb305", "#5b8c00", "#3f6600", "#254000"];
ma.primary = ma[5];
var xa = ["#f6ffed", "#d9f7be", "#b7eb8f", "#95de64", "#73d13d", "#52c41a", "#389e0d", "#237804", "#135200", "#092b00"];
xa.primary = xa[5];
var va = ["#e6fffb", "#b5f5ec", "#87e8de", "#5cdbd3", "#36cfc9", "#13c2c2", "#08979c", "#006d75", "#00474f", "#002329"];
va.primary = va[5];
var Di = ["#e6f4ff", "#bae0ff", "#91caff", "#69b1ff", "#4096ff", "#1677ff", "#0958d9", "#003eb3", "#002c8c", "#001d66"];
Di.primary = Di[5];
var ba = ["#f0f5ff", "#d6e4ff", "#adc6ff", "#85a5ff", "#597ef7", "#2f54eb", "#1d39c4", "#10239e", "#061178", "#030852"];
ba.primary = ba[5];
var Za = ["#f9f0ff", "#efdbff", "#d3adf7", "#b37feb", "#9254de", "#722ed1", "#531dab", "#391085", "#22075e", "#120338"];
Za.primary = Za[5];
var Ta = ["#fff0f6", "#ffd6e7", "#ffadd2", "#ff85c0", "#f759ab", "#eb2f96", "#c41d7f", "#9e1068", "#780650", "#520339"];
Ta.primary = Ta[5];
var Xa = ["#a6a6a6", "#999999", "#8c8c8c", "#808080", "#737373", "#666666", "#404040", "#1a1a1a", "#000000", "#000000"];
Xa.primary = Xa[5];
var Ko = {
  red: pa,
  volcano: Ya,
  orange: Ja,
  gold: La,
  yellow: Ka,
  lime: ma,
  green: xa,
  cyan: va,
  blue: Di,
  geekblue: ba,
  purple: Za,
  magenta: Ta,
  grey: Xa
};
const Ph = {
  blue: "#1677FF",
  purple: "#722ED1",
  cyan: "#13C2C2",
  green: "#52C41A",
  magenta: "#EB2F96",
  /**
   * @deprecated Use magenta instead
   */
  pink: "#EB2F96",
  red: "#F5222D",
  orange: "#FA8C16",
  yellow: "#FADB14",
  volcano: "#FA541C",
  geekblue: "#2F54EB",
  gold: "#FAAD14",
  lime: "#A0D911"
}, xe = Object.assign(Object.assign({}, Ph), {
  // Color
  colorPrimary: "#1677ff",
  colorSuccess: "#52c41a",
  colorWarning: "#faad14",
  colorError: "#ff4d4f",
  colorInfo: "#1677ff",
  colorLink: "",
  colorTextBase: "",
  colorBgBase: "",
  // Font
  fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,
'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
'Noto Color Emoji'`,
  fontFamilyCode: "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
  fontSize: 14,
  // Line
  lineWidth: 1,
  lineType: "solid",
  // Motion
  motionUnit: 0.1,
  motionBase: 0,
  motionEaseOutCirc: "cubic-bezier(0.08, 0.82, 0.17, 1)",
  motionEaseInOutCirc: "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
  motionEaseOut: "cubic-bezier(0.215, 0.61, 0.355, 1)",
  motionEaseInOut: "cubic-bezier(0.645, 0.045, 0.355, 1)",
  motionEaseOutBack: "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
  motionEaseInBack: "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
  motionEaseInQuint: "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
  motionEaseOutQuint: "cubic-bezier(0.23, 1, 0.32, 1)",
  // Radius
  borderRadius: 6,
  // Size
  sizeUnit: 4,
  sizeStep: 4,
  sizePopupArrow: 16,
  // Control Base
  controlHeight: 32,
  // zIndex
  zIndexBase: 0,
  zIndexPopupBase: 1e3,
  // Image
  opacityImage: 1,
  // Wireframe
  wireframe: !1,
  // Motion
  motion: !0
});
function SN(A, g) {
  let {
    generateColorPalettes: I,
    generateNeutralColorPalettes: B
  } = g;
  const {
    colorSuccess: Q,
    colorWarning: E,
    colorError: C,
    colorInfo: o,
    colorPrimary: t,
    colorBgBase: e,
    colorTextBase: i
  } = A, a = I(t), r = I(Q), h = I(E), n = I(C), l = I(o), y = B(e, i), N = A.colorLink || A.colorInfo, s = I(N), F = new lI(n[1]).mix(new lI(n[3]), 50).toHexString();
  return Object.assign(Object.assign({}, y), {
    colorPrimaryBg: a[1],
    colorPrimaryBgHover: a[2],
    colorPrimaryBorder: a[3],
    colorPrimaryBorderHover: a[4],
    colorPrimaryHover: a[5],
    colorPrimary: a[6],
    colorPrimaryActive: a[7],
    colorPrimaryTextHover: a[8],
    colorPrimaryText: a[9],
    colorPrimaryTextActive: a[10],
    colorSuccessBg: r[1],
    colorSuccessBgHover: r[2],
    colorSuccessBorder: r[3],
    colorSuccessBorderHover: r[4],
    colorSuccessHover: r[4],
    colorSuccess: r[6],
    colorSuccessActive: r[7],
    colorSuccessTextHover: r[8],
    colorSuccessText: r[9],
    colorSuccessTextActive: r[10],
    colorErrorBg: n[1],
    colorErrorBgHover: n[2],
    colorErrorBgFilledHover: F,
    colorErrorBgActive: n[3],
    colorErrorBorder: n[3],
    colorErrorBorderHover: n[4],
    colorErrorHover: n[5],
    colorError: n[6],
    colorErrorActive: n[7],
    colorErrorTextHover: n[8],
    colorErrorText: n[9],
    colorErrorTextActive: n[10],
    colorWarningBg: h[1],
    colorWarningBgHover: h[2],
    colorWarningBorder: h[3],
    colorWarningBorderHover: h[4],
    colorWarningHover: h[4],
    colorWarning: h[6],
    colorWarningActive: h[7],
    colorWarningTextHover: h[8],
    colorWarningText: h[9],
    colorWarningTextActive: h[10],
    colorInfoBg: l[1],
    colorInfoBgHover: l[2],
    colorInfoBorder: l[3],
    colorInfoBorderHover: l[4],
    colorInfoHover: l[4],
    colorInfo: l[6],
    colorInfoActive: l[7],
    colorInfoTextHover: l[8],
    colorInfoText: l[9],
    colorInfoTextActive: l[10],
    colorLinkHover: s[4],
    colorLink: s[6],
    colorLinkActive: s[7],
    colorBgMask: new lI("#000").setAlpha(0.45).toRgbString(),
    colorWhite: "#fff"
  });
}
const UN = (A) => {
  let g = A, I = A, B = A, Q = A;
  return A < 6 && A >= 5 ? g = A + 1 : A < 16 && A >= 6 ? g = A + 2 : A >= 16 && (g = 16), A < 7 && A >= 5 ? I = 4 : A < 8 && A >= 7 ? I = 5 : A < 14 && A >= 8 ? I = 6 : A < 16 && A >= 14 ? I = 7 : A >= 16 && (I = 8), A < 6 && A >= 2 ? B = 1 : A >= 6 && (B = 2), A > 4 && A < 8 ? Q = 4 : A >= 8 && (Q = 6), {
    borderRadius: A,
    borderRadiusXS: B,
    borderRadiusSM: I,
    borderRadiusLG: g,
    borderRadiusOuter: Q
  };
};
function kN(A) {
  const {
    motionUnit: g,
    motionBase: I,
    borderRadius: B,
    lineWidth: Q
  } = A;
  return Object.assign({
    // motion
    motionDurationFast: `${(I + g).toFixed(1)}s`,
    motionDurationMid: `${(I + g * 2).toFixed(1)}s`,
    motionDurationSlow: `${(I + g * 3).toFixed(1)}s`,
    // line
    lineWidthBold: Q + 1
  }, UN(B));
}
const HN = (A) => {
  const {
    controlHeight: g
  } = A;
  return {
    controlHeightSM: g * 0.75,
    controlHeightXS: g * 0.5,
    controlHeightLG: g * 1.25
  };
};
function pN(A) {
  return (A + 8) / A;
}
function YN(A) {
  const g = new Array(10).fill(null).map((I, B) => {
    const Q = B - 1, E = A * Math.pow(Math.E, Q / 5), C = B > 1 ? Math.floor(E) : Math.ceil(E);
    return Math.floor(C / 2) * 2;
  });
  return g[1] = A, g.map((I) => ({
    size: I,
    lineHeight: pN(I)
  }));
}
const JN = (A) => {
  const g = YN(A), I = g.map((i) => i.size), B = g.map((i) => i.lineHeight), Q = I[1], E = I[0], C = I[2], o = B[1], t = B[0], e = B[2];
  return {
    fontSizeSM: E,
    fontSize: Q,
    fontSizeLG: C,
    fontSizeXL: I[3],
    fontSizeHeading1: I[6],
    fontSizeHeading2: I[5],
    fontSizeHeading3: I[4],
    fontSizeHeading4: I[3],
    fontSizeHeading5: I[2],
    lineHeight: o,
    lineHeightLG: e,
    lineHeightSM: t,
    fontHeight: Math.round(o * Q),
    fontHeightLG: Math.round(e * C),
    fontHeightSM: Math.round(t * E),
    lineHeightHeading1: B[6],
    lineHeightHeading2: B[5],
    lineHeightHeading3: B[4],
    lineHeightHeading4: B[3],
    lineHeightHeading5: B[2]
  };
};
function LN(A) {
  const {
    sizeUnit: g,
    sizeStep: I
  } = A;
  return {
    sizeXXL: g * (I + 8),
    // 48
    sizeXL: g * (I + 4),
    // 32
    sizeLG: g * (I + 2),
    // 24
    sizeMD: g * (I + 1),
    // 20
    sizeMS: g * I,
    // 16
    size: g * I,
    // 16
    sizeSM: g * (I - 1),
    // 12
    sizeXS: g * (I - 2),
    // 8
    sizeXXS: g * (I - 3)
    // 4
  };
}
const LI = (A, g) => new lI(A).setAlpha(g).toRgbString(), de = (A, g) => new lI(A).darken(g).toHexString(), KN = (A) => {
  const g = me(A);
  return {
    1: g[0],
    2: g[1],
    3: g[2],
    4: g[3],
    5: g[4],
    6: g[5],
    7: g[6],
    8: g[4],
    9: g[5],
    10: g[6]
    // 8: colors[7],
    // 9: colors[8],
    // 10: colors[9],
  };
}, mN = (A, g) => {
  const I = A || "#fff", B = g || "#000";
  return {
    colorBgBase: I,
    colorTextBase: B,
    colorText: LI(B, 0.88),
    colorTextSecondary: LI(B, 0.65),
    colorTextTertiary: LI(B, 0.45),
    colorTextQuaternary: LI(B, 0.25),
    colorFill: LI(B, 0.15),
    colorFillSecondary: LI(B, 0.06),
    colorFillTertiary: LI(B, 0.04),
    colorFillQuaternary: LI(B, 0.02),
    colorBgSolid: LI(B, 1),
    colorBgSolidHover: LI(B, 0.75),
    colorBgSolidActive: LI(B, 0.95),
    colorBgLayout: de(I, 4),
    colorBgContainer: de(I, 0),
    colorBgElevated: de(I, 0),
    colorBgSpotlight: LI(B, 0.85),
    colorBgBlur: "transparent",
    colorBorder: de(I, 15),
    colorBorderSecondary: de(I, 6)
  };
};
function xN(A) {
  Lo.pink = Lo.magenta, Ko.pink = Ko.magenta;
  const g = Object.keys(Ph).map((I) => {
    const B = A[I] === Lo[I] ? Ko[I] : me(A[I]);
    return new Array(10).fill(1).reduce((Q, E, C) => (Q[`${I}-${C + 1}`] = B[C], Q[`${I}${C + 1}`] = B[C], Q), {});
  }).reduce((I, B) => (I = Object.assign(Object.assign({}, I), B), I), {});
  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, A), g), SN(A, {
    generateColorPalettes: KN,
    generateNeutralColorPalettes: mN
  })), JN(A.fontSize)), LN(A)), HN(A)), kN(A));
}
const Wh = Ra(xN), za = {
  token: xe,
  override: {
    override: xe
  },
  hashed: !0
}, Oh = /* @__PURE__ */ ig.createContext(za), Va = "ant", as = "anticon", tp = ["outlined", "borderless", "filled"], vN = (A, g) => g || (A ? `${Va}-${A}` : Va), tE = /* @__PURE__ */ IA.createContext({
  // We provide a default function for Context without provider
  getPrefixCls: vN,
  iconPrefixCls: as
}), bN = `-ant-${Date.now()}-${Math.random()}`;
function ZN(A, g) {
  const I = {}, B = (C, o) => {
    let t = C.clone();
    return t = (o == null ? void 0 : o(t)) || t, t.toRgbString();
  }, Q = (C, o) => {
    const t = new lI(C), e = me(t.toRgbString());
    I[`${o}-color`] = B(t), I[`${o}-color-disabled`] = e[1], I[`${o}-color-hover`] = e[4], I[`${o}-color-active`] = e[6], I[`${o}-color-outline`] = t.clone().setAlpha(0.2).toRgbString(), I[`${o}-color-deprecated-bg`] = e[0], I[`${o}-color-deprecated-border`] = e[2];
  };
  if (g.primaryColor) {
    Q(g.primaryColor, "primary");
    const C = new lI(g.primaryColor), o = me(C.toRgbString());
    o.forEach((e, i) => {
      I[`primary-${i + 1}`] = e;
    }), I["primary-color-deprecated-l-35"] = B(C, (e) => e.lighten(35)), I["primary-color-deprecated-l-20"] = B(C, (e) => e.lighten(20)), I["primary-color-deprecated-t-20"] = B(C, (e) => e.tint(20)), I["primary-color-deprecated-t-50"] = B(C, (e) => e.tint(50)), I["primary-color-deprecated-f-12"] = B(C, (e) => e.setAlpha(e.getAlpha() * 0.12));
    const t = new lI(o[0]);
    I["primary-color-active-deprecated-f-30"] = B(t, (e) => e.setAlpha(e.getAlpha() * 0.3)), I["primary-color-active-deprecated-d-02"] = B(t, (e) => e.darken(2));
  }
  return g.successColor && Q(g.successColor, "success"), g.warningColor && Q(g.warningColor, "warning"), g.errorColor && Q(g.errorColor, "error"), g.infoColor && Q(g.infoColor, "info"), `
  :root {
    ${Object.keys(I).map((C) => `--${A}-${C}: ${I[C]};`).join(`
`)}
  }
  `.trim();
}
function TN(A, g) {
  const I = ZN(A, g);
  JQ() ? TE(I, `${bN}-dynamic-theme`) : PA.env.NODE_ENV !== "production" && bi(!1, "ConfigProvider", "SSR do not support dynamic theme with css variables.");
}
const qa = /* @__PURE__ */ IA.createContext(!1), XN = (A) => {
  let {
    children: g,
    disabled: I
  } = A;
  const B = IA.useContext(qa);
  return /* @__PURE__ */ IA.createElement(qa.Provider, {
    value: I ?? B
  }, g);
}, ve = /* @__PURE__ */ IA.createContext(void 0), zN = (A) => {
  let {
    children: g,
    size: I
  } = A;
  const B = IA.useContext(ve);
  return /* @__PURE__ */ IA.createElement(ve.Provider, {
    value: I || B
  }, g);
};
function VN() {
  const A = IA.useContext(qa), g = IA.useContext(ve);
  return {
    componentDisabled: A,
    componentSize: g
  };
}
var jh = /* @__PURE__ */ dQ(function A() {
  wQ(this, A);
}), _h = "CALC_UNIT", qN = new RegExp(_h, "g");
function mo(A) {
  return typeof A == "number" ? "".concat(A).concat(_h) : A;
}
var PN = /* @__PURE__ */ function(A) {
  Yi(I, A);
  var g = Ji(I);
  function I(B, Q) {
    var E;
    wQ(this, I), E = g.call(this), hg(ZE(E), "result", ""), hg(ZE(E), "unitlessCssVar", void 0), hg(ZE(E), "lowPriority", void 0);
    var C = DB(B);
    return E.unitlessCssVar = Q, B instanceof I ? E.result = "(".concat(B.result, ")") : C === "number" ? E.result = mo(B) : C === "string" && (E.result = B), E;
  }
  return dQ(I, [{
    key: "add",
    value: function(Q) {
      return Q instanceof I ? this.result = "".concat(this.result, " + ").concat(Q.getResult()) : (typeof Q == "number" || typeof Q == "string") && (this.result = "".concat(this.result, " + ").concat(mo(Q))), this.lowPriority = !0, this;
    }
  }, {
    key: "sub",
    value: function(Q) {
      return Q instanceof I ? this.result = "".concat(this.result, " - ").concat(Q.getResult()) : (typeof Q == "number" || typeof Q == "string") && (this.result = "".concat(this.result, " - ").concat(mo(Q))), this.lowPriority = !0, this;
    }
  }, {
    key: "mul",
    value: function(Q) {
      return this.lowPriority && (this.result = "(".concat(this.result, ")")), Q instanceof I ? this.result = "".concat(this.result, " * ").concat(Q.getResult(!0)) : (typeof Q == "number" || typeof Q == "string") && (this.result = "".concat(this.result, " * ").concat(Q)), this.lowPriority = !1, this;
    }
  }, {
    key: "div",
    value: function(Q) {
      return this.lowPriority && (this.result = "(".concat(this.result, ")")), Q instanceof I ? this.result = "".concat(this.result, " / ").concat(Q.getResult(!0)) : (typeof Q == "number" || typeof Q == "string") && (this.result = "".concat(this.result, " / ").concat(Q)), this.lowPriority = !1, this;
    }
  }, {
    key: "getResult",
    value: function(Q) {
      return this.lowPriority || Q ? "(".concat(this.result, ")") : this.result;
    }
  }, {
    key: "equal",
    value: function(Q) {
      var E = this, C = Q || {}, o = C.unit, t = !0;
      return typeof o == "boolean" ? t = o : Array.from(this.unitlessCssVar).some(function(e) {
        return E.result.includes(e);
      }) && (t = !1), this.result = this.result.replace(qN, t ? "px" : ""), typeof this.lowPriority < "u" ? "calc(".concat(this.result, ")") : this.result;
    }
  }]), I;
}(jh), WN = /* @__PURE__ */ function(A) {
  Yi(I, A);
  var g = Ji(I);
  function I(B) {
    var Q;
    return wQ(this, I), Q = g.call(this), hg(ZE(Q), "result", 0), B instanceof I ? Q.result = B.result : typeof B == "number" && (Q.result = B), Q;
  }
  return dQ(I, [{
    key: "add",
    value: function(Q) {
      return Q instanceof I ? this.result += Q.result : typeof Q == "number" && (this.result += Q), this;
    }
  }, {
    key: "sub",
    value: function(Q) {
      return Q instanceof I ? this.result -= Q.result : typeof Q == "number" && (this.result -= Q), this;
    }
  }, {
    key: "mul",
    value: function(Q) {
      return Q instanceof I ? this.result *= Q.result : typeof Q == "number" && (this.result *= Q), this;
    }
  }, {
    key: "div",
    value: function(Q) {
      return Q instanceof I ? this.result /= Q.result : typeof Q == "number" && (this.result /= Q), this;
    }
  }, {
    key: "equal",
    value: function() {
      return this.result;
    }
  }]), I;
}(jh), ON = function(g, I) {
  var B = g === "css" ? PN : WN;
  return function(Q) {
    return new B(Q, I);
  };
}, Zc = function(g, I) {
  return "".concat([I, g.replace(/([A-Z]+)([A-Z][a-z]+)/g, "$1-$2").replace(/([a-z])([A-Z])/g, "$1-$2")].filter(Boolean).join("-"));
};
function Pa(A) {
  var g = IA.useRef();
  g.current = A;
  var I = IA.useCallback(function() {
    for (var B, Q = arguments.length, E = new Array(Q), C = 0; C < Q; C++)
      E[C] = arguments[C];
    return (B = g.current) === null || B === void 0 ? void 0 : B.call.apply(B, [g].concat(E));
  }, []);
  return I;
}
function Wa(A) {
  var g = IA.useRef(!1), I = IA.useState(A), B = Dg(I, 2), Q = B[0], E = B[1];
  IA.useEffect(function() {
    return g.current = !1, function() {
      g.current = !0;
    };
  }, []);
  function C(o, t) {
    t && g.current || E(o);
  }
  return [Q, C];
}
function Tc(A, g, I, B) {
  var Q = gg({}, g[A]);
  if (B != null && B.deprecatedTokens) {
    var E = B.deprecatedTokens;
    E.forEach(function(o) {
      var t = Dg(o, 2), e = t[0], i = t[1];
      if (PA.env.NODE_ENV !== "production" && aE(!(Q != null && Q[e]), "Component Token `".concat(String(e), "` of ").concat(String(A), " is deprecated. Please use `").concat(String(i), "` instead.")), Q != null && Q[e] || Q != null && Q[i]) {
        var a;
        (a = Q[i]) !== null && a !== void 0 || (Q[i] = Q == null ? void 0 : Q[e]);
      }
    });
  }
  var C = gg(gg({}, I), Q);
  return Object.keys(C).forEach(function(o) {
    C[o] === g[o] && delete C[o];
  }), C;
}
var $h = PA.env.NODE_ENV !== "production" || typeof CSSINJS_STATISTIC < "u", Oa = !0;
function rs() {
  for (var A = arguments.length, g = new Array(A), I = 0; I < A; I++)
    g[I] = arguments[I];
  if (!$h)
    return Object.assign.apply(Object, [{}].concat(g));
  Oa = !1;
  var B = {};
  return g.forEach(function(Q) {
    if (DB(Q) === "object") {
      var E = Object.keys(Q);
      E.forEach(function(C) {
        Object.defineProperty(B, C, {
          configurable: !0,
          enumerable: !0,
          get: function() {
            return Q[C];
          }
        });
      });
    }
  }), Oa = !0, B;
}
var Xc = {};
function jN() {
}
var _N = function(g) {
  var I, B = g, Q = jN;
  return $h && typeof Proxy < "u" && (I = /* @__PURE__ */ new Set(), B = new Proxy(g, {
    get: function(C, o) {
      if (Oa) {
        var t;
        (t = I) === null || t === void 0 || t.add(o);
      }
      return C[o];
    }
  }), Q = function(C, o) {
    var t;
    Xc[C] = {
      global: Array.from(I),
      component: gg(gg({}, (t = Xc[C]) === null || t === void 0 ? void 0 : t.component), o)
    };
  }), {
    token: B,
    keys: I,
    flush: Q
  };
};
function zc(A, g, I) {
  if (typeof I == "function") {
    var B;
    return I(rs(g, (B = g[A]) !== null && B !== void 0 ? B : {}));
  }
  return I ?? {};
}
function $N(A) {
  return A === "js" ? {
    max: Math.max,
    min: Math.min
  } : {
    max: function() {
      for (var I = arguments.length, B = new Array(I), Q = 0; Q < I; Q++)
        B[Q] = arguments[Q];
      return "max(".concat(B.map(function(E) {
        return eE(E);
      }).join(","), ")");
    },
    min: function() {
      for (var I = arguments.length, B = new Array(I), Q = 0; Q < I; Q++)
        B[Q] = arguments[Q];
      return "min(".concat(B.map(function(E) {
        return eE(E);
      }).join(","), ")");
    }
  };
}
var Au = 1e3 * 60 * 10, gu = /* @__PURE__ */ function() {
  function A() {
    wQ(this, A), hg(this, "map", /* @__PURE__ */ new Map()), hg(this, "objectIDMap", /* @__PURE__ */ new WeakMap()), hg(this, "nextID", 0), hg(this, "lastAccessBeat", /* @__PURE__ */ new Map()), hg(this, "accessBeat", 0);
  }
  return dQ(A, [{
    key: "set",
    value: function(I, B) {
      this.clear();
      var Q = this.getCompositeKey(I);
      this.map.set(Q, B), this.lastAccessBeat.set(Q, Date.now());
    }
  }, {
    key: "get",
    value: function(I) {
      var B = this.getCompositeKey(I), Q = this.map.get(B);
      return this.lastAccessBeat.set(B, Date.now()), this.accessBeat += 1, Q;
    }
  }, {
    key: "getCompositeKey",
    value: function(I) {
      var B = this, Q = I.map(function(E) {
        return E && DB(E) === "object" ? "obj_".concat(B.getObjectID(E)) : "".concat(DB(E), "_").concat(E);
      });
      return Q.join("|");
    }
  }, {
    key: "getObjectID",
    value: function(I) {
      if (this.objectIDMap.has(I))
        return this.objectIDMap.get(I);
      var B = this.nextID;
      return this.objectIDMap.set(I, B), this.nextID += 1, B;
    }
  }, {
    key: "clear",
    value: function() {
      var I = this;
      if (this.accessBeat > 1e4) {
        var B = Date.now();
        this.lastAccessBeat.forEach(function(Q, E) {
          B - Q > Au && (I.map.delete(E), I.lastAccessBeat.delete(E));
        }), this.accessBeat = 0;
      }
    }
  }]), A;
}(), Vc = new gu();
function Bu(A, g) {
  return ig.useMemo(function() {
    var I = Vc.get(g);
    if (I)
      return I;
    var B = A();
    return Vc.set(g, B), B;
  }, g);
}
var Iu = function() {
  return {};
};
function Qu(A) {
  var g = A.useCSP, I = g === void 0 ? Iu : g, B = A.useToken, Q = A.usePrefix, E = A.getResetStyles, C = A.getCommonStyle, o = A.getCompUnitless;
  function t(r, h, n, l) {
    var y = Array.isArray(r) ? r[0] : r;
    function N(f) {
      return "".concat(String(y)).concat(f.slice(0, 1).toUpperCase()).concat(f.slice(1));
    }
    var s = (l == null ? void 0 : l.unitless) || {}, F = typeof o == "function" ? o(r) : {}, u = gg(gg({}, F), {}, hg({}, N("zIndexPopup"), !0));
    Object.keys(s).forEach(function(f) {
      u[N(f)] = s[f];
    });
    var U = gg(gg({}, l), {}, {
      unitless: u,
      prefixToken: N
    }), J = i(r, h, n, U), L = e(y, n, U);
    return function(f) {
      var d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : f, p = J(f, d), x = Dg(p, 2), M = x[1], S = L(d), k = Dg(S, 2), v = k[0], m = k[1];
      return [v, M, m];
    };
  }
  function e(r, h, n) {
    var l = n.unitless, y = n.injectStyle, N = y === void 0 ? !0 : y, s = n.prefixToken, F = n.ignore, u = function(L) {
      var f = L.rootCls, d = L.cssVar, p = d === void 0 ? {} : d, x = B(), M = x.realToken;
      return gN({
        path: [r],
        prefix: p.prefix,
        key: p.key,
        unitless: l,
        ignore: F,
        token: M,
        scope: f
      }, function() {
        var S = zc(r, M, h), k = Tc(r, M, S, {
          deprecatedTokens: n == null ? void 0 : n.deprecatedTokens
        });
        return Object.keys(S).forEach(function(v) {
          k[s(v)] = k[v], delete k[v];
        }), k;
      }), null;
    }, U = function(L) {
      var f = B(), d = f.cssVar;
      return [function(p) {
        return N && d ? /* @__PURE__ */ ig.createElement(ig.Fragment, null, /* @__PURE__ */ ig.createElement(u, {
          rootCls: L,
          cssVar: d,
          component: r
        }), p) : p;
      }, d == null ? void 0 : d.key];
    };
    return U;
  }
  function i(r, h, n) {
    var l = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, y = Array.isArray(r) ? r : [r, r], N = Dg(y, 1), s = N[0], F = y.join("-"), u = A.layer || {
      name: "antd"
    };
    return function(U) {
      var J = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : U, L = B(), f = L.theme, d = L.realToken, p = L.hashId, x = L.token, M = L.cssVar, S = Q(), k = S.rootPrefixCls, v = S.iconPrefixCls, m = I(), T = M ? "css" : "js", $ = Bu(function() {
        var aA = /* @__PURE__ */ new Set();
        return M && Object.keys(l.unitless || {}).forEach(function(eA) {
          aA.add(Xt(eA, M.prefix)), aA.add(Xt(eA, Zc(s, M.prefix)));
        }), ON(T, aA);
      }, [T, s, M == null ? void 0 : M.prefix]), AA = $N(T), lA = AA.max, FA = AA.min, cA = {
        theme: f,
        token: x,
        hashId: p,
        nonce: function() {
          return m.nonce;
        },
        clientOnly: l.clientOnly,
        layer: u,
        // antd is always at top of styles
        order: l.order || -999
      };
      ua(gg(gg({}, cA), {}, {
        clientOnly: !1,
        path: ["Shared", k]
      }), function() {
        return typeof E == "function" ? E(x) : [];
      });
      var yA = ua(gg(gg({}, cA), {}, {
        path: [F, U, v]
      }), function() {
        if (l.injectStyle === !1)
          return [];
        var aA = _N(x), eA = aA.token, CA = aA.flush, b = zc(s, d, n), Y = ".".concat(U), QA = Tc(s, d, b, {
          deprecatedTokens: l.deprecatedTokens
        });
        M && b && DB(b) === "object" && Object.keys(b).forEach(function(GA) {
          b[GA] = "var(".concat(Xt(GA, Zc(s, M.prefix)), ")");
        });
        var BA = rs(eA, {
          componentCls: Y,
          prefixCls: U,
          iconCls: ".".concat(v),
          antCls: ".".concat(k),
          calc: $,
          // @ts-ignore
          max: lA,
          // @ts-ignore
          min: FA
        }, M ? b : QA), iA = h(BA, {
          hashId: p,
          prefixCls: U,
          rootPrefixCls: k,
          iconPrefixCls: v
        });
        CA(s, QA);
        var rA = typeof C == "function" ? C(BA, U, J, l.resetFont) : null;
        return [l.resetStyle === !1 ? null : rA, iA];
      });
      return [yA, p];
    };
  }
  function a(r, h, n) {
    var l = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, y = i(r, h, n, gg({
      resetStyle: !1,
      // Sub Style should default after root one
      order: -998
    }, l)), N = function(F) {
      var u = F.prefixCls, U = F.rootCls, J = U === void 0 ? u : U;
      return y(u, J), null;
    };
    return PA.env.NODE_ENV !== "production" && (N.displayName = "SubStyle_".concat(String(Array.isArray(r) ? r.join(".") : r))), N;
  }
  return {
    genStyleHooks: t,
    genSubStyleComponent: a,
    genComponentStyleHook: i
  };
}
const Eu = "5.21.6";
function xo(A) {
  return A >= 0 && A <= 255;
}
function Ht(A, g) {
  const {
    r: I,
    g: B,
    b: Q,
    a: E
  } = new lI(A).toRgb();
  if (E < 1)
    return A;
  const {
    r: C,
    g: o,
    b: t
  } = new lI(g).toRgb();
  for (let e = 0.01; e <= 1; e += 0.01) {
    const i = Math.round((I - C * (1 - e)) / e), a = Math.round((B - o * (1 - e)) / e), r = Math.round((Q - t * (1 - e)) / e);
    if (xo(i) && xo(a) && xo(r))
      return new lI({
        r: i,
        g: a,
        b: r,
        a: Math.round(e * 100) / 100
      }).toRgbString();
  }
  return new lI({
    r: I,
    g: B,
    b: Q,
    a: 1
  }).toRgbString();
}
var Cu = function(A, g) {
  var I = {};
  for (var B in A) Object.prototype.hasOwnProperty.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && typeof Object.getOwnPropertySymbols == "function") for (var Q = 0, B = Object.getOwnPropertySymbols(A); Q < B.length; Q++)
    g.indexOf(B[Q]) < 0 && Object.prototype.propertyIsEnumerable.call(A, B[Q]) && (I[B[Q]] = A[B[Q]]);
  return I;
};
function Al(A) {
  const {
    override: g
  } = A, I = Cu(A, ["override"]), B = Object.assign({}, g);
  Object.keys(xe).forEach((r) => {
    delete B[r];
  });
  const Q = Object.assign(Object.assign({}, I), B), E = 480, C = 576, o = 768, t = 992, e = 1200, i = 1600;
  if (Q.motion === !1) {
    const r = "0s";
    Q.motionDurationFast = r, Q.motionDurationMid = r, Q.motionDurationSlow = r;
  }
  return Object.assign(Object.assign(Object.assign({}, Q), {
    // ============== Background ============== //
    colorFillContent: Q.colorFillSecondary,
    colorFillContentHover: Q.colorFill,
    colorFillAlter: Q.colorFillQuaternary,
    colorBgContainerDisabled: Q.colorFillTertiary,
    // ============== Split ============== //
    colorBorderBg: Q.colorBgContainer,
    colorSplit: Ht(Q.colorBorderSecondary, Q.colorBgContainer),
    // ============== Text ============== //
    colorTextPlaceholder: Q.colorTextQuaternary,
    colorTextDisabled: Q.colorTextQuaternary,
    colorTextHeading: Q.colorText,
    colorTextLabel: Q.colorTextSecondary,
    colorTextDescription: Q.colorTextTertiary,
    colorTextLightSolid: Q.colorWhite,
    colorHighlight: Q.colorError,
    colorBgTextHover: Q.colorFillSecondary,
    colorBgTextActive: Q.colorFill,
    colorIcon: Q.colorTextTertiary,
    colorIconHover: Q.colorText,
    colorErrorOutline: Ht(Q.colorErrorBg, Q.colorBgContainer),
    colorWarningOutline: Ht(Q.colorWarningBg, Q.colorBgContainer),
    // Font
    fontSizeIcon: Q.fontSizeSM,
    // Line
    lineWidthFocus: Q.lineWidth * 3,
    // Control
    lineWidth: Q.lineWidth,
    controlOutlineWidth: Q.lineWidth * 2,
    // Checkbox size and expand icon size
    controlInteractiveSize: Q.controlHeight / 2,
    controlItemBgHover: Q.colorFillTertiary,
    controlItemBgActive: Q.colorPrimaryBg,
    controlItemBgActiveHover: Q.colorPrimaryBgHover,
    controlItemBgActiveDisabled: Q.colorFill,
    controlTmpOutline: Q.colorFillQuaternary,
    controlOutline: Ht(Q.colorPrimaryBg, Q.colorBgContainer),
    lineType: Q.lineType,
    borderRadius: Q.borderRadius,
    borderRadiusXS: Q.borderRadiusXS,
    borderRadiusSM: Q.borderRadiusSM,
    borderRadiusLG: Q.borderRadiusLG,
    fontWeightStrong: 600,
    opacityLoading: 0.65,
    linkDecoration: "none",
    linkHoverDecoration: "none",
    linkFocusDecoration: "none",
    controlPaddingHorizontal: 12,
    controlPaddingHorizontalSM: 8,
    paddingXXS: Q.sizeXXS,
    paddingXS: Q.sizeXS,
    paddingSM: Q.sizeSM,
    padding: Q.size,
    paddingMD: Q.sizeMD,
    paddingLG: Q.sizeLG,
    paddingXL: Q.sizeXL,
    paddingContentHorizontalLG: Q.sizeLG,
    paddingContentVerticalLG: Q.sizeMS,
    paddingContentHorizontal: Q.sizeMS,
    paddingContentVertical: Q.sizeSM,
    paddingContentHorizontalSM: Q.size,
    paddingContentVerticalSM: Q.sizeXS,
    marginXXS: Q.sizeXXS,
    marginXS: Q.sizeXS,
    marginSM: Q.sizeSM,
    margin: Q.size,
    marginMD: Q.sizeMD,
    marginLG: Q.sizeLG,
    marginXL: Q.sizeXL,
    marginXXL: Q.sizeXXL,
    boxShadow: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
    boxShadowSecondary: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
    boxShadowTertiary: `
      0 1px 2px 0 rgba(0, 0, 0, 0.03),
      0 1px 6px -1px rgba(0, 0, 0, 0.02),
      0 2px 4px 0 rgba(0, 0, 0, 0.02)
    `,
    screenXS: E,
    screenXSMin: E,
    screenXSMax: C - 1,
    screenSM: C,
    screenSMMin: C,
    screenSMMax: o - 1,
    screenMD: o,
    screenMDMin: o,
    screenMDMax: t - 1,
    screenLG: t,
    screenLGMin: t,
    screenLGMax: e - 1,
    screenXL: e,
    screenXLMin: e,
    screenXLMax: i - 1,
    screenXXL: i,
    screenXXLMin: i,
    boxShadowPopoverArrow: "2px 2px 5px rgba(0, 0, 0, 0.05)",
    boxShadowCard: `
      0 1px 2px -2px ${new lI("rgba(0, 0, 0, 0.16)").toRgbString()},
      0 3px 6px 0 ${new lI("rgba(0, 0, 0, 0.12)").toRgbString()},
      0 5px 12px 4px ${new lI("rgba(0, 0, 0, 0.09)").toRgbString()}
    `,
    boxShadowDrawerRight: `
      -6px 0 16px 0 rgba(0, 0, 0, 0.08),
      -3px 0 6px -4px rgba(0, 0, 0, 0.12),
      -9px 0 28px 8px rgba(0, 0, 0, 0.05)
    `,
    boxShadowDrawerLeft: `
      6px 0 16px 0 rgba(0, 0, 0, 0.08),
      3px 0 6px -4px rgba(0, 0, 0, 0.12),
      9px 0 28px 8px rgba(0, 0, 0, 0.05)
    `,
    boxShadowDrawerUp: `
      0 6px 16px 0 rgba(0, 0, 0, 0.08),
      0 3px 6px -4px rgba(0, 0, 0, 0.12),
      0 9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
    boxShadowDrawerDown: `
      0 -6px 16px 0 rgba(0, 0, 0, 0.08),
      0 -3px 6px -4px rgba(0, 0, 0, 0.12),
      0 -9px 28px 8px rgba(0, 0, 0, 0.05)
    `,
    boxShadowTabsOverflowLeft: "inset 10px 0 8px -8px rgba(0, 0, 0, 0.08)",
    boxShadowTabsOverflowRight: "inset -10px 0 8px -8px rgba(0, 0, 0, 0.08)",
    boxShadowTabsOverflowTop: "inset 0 10px 8px -8px rgba(0, 0, 0, 0.08)",
    boxShadowTabsOverflowBottom: "inset 0 -10px 8px -8px rgba(0, 0, 0, 0.08)"
  }), B);
}
var qc = function(A, g) {
  var I = {};
  for (var B in A) Object.prototype.hasOwnProperty.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && typeof Object.getOwnPropertySymbols == "function") for (var Q = 0, B = Object.getOwnPropertySymbols(A); Q < B.length; Q++)
    g.indexOf(B[Q]) < 0 && Object.prototype.propertyIsEnumerable.call(A, B[Q]) && (I[B[Q]] = A[B[Q]]);
  return I;
};
const gl = {
  lineHeight: !0,
  lineHeightSM: !0,
  lineHeightLG: !0,
  lineHeightHeading1: !0,
  lineHeightHeading2: !0,
  lineHeightHeading3: !0,
  lineHeightHeading4: !0,
  lineHeightHeading5: !0,
  opacityLoading: !0,
  fontWeightStrong: !0,
  zIndexPopupBase: !0,
  zIndexBase: !0,
  opacityImage: !0
}, eu = {
  size: !0,
  sizeSM: !0,
  sizeLG: !0,
  sizeMD: !0,
  sizeXS: !0,
  sizeXXS: !0,
  sizeMS: !0,
  sizeXL: !0,
  sizeXXL: !0,
  sizeUnit: !0,
  sizeStep: !0,
  motionBase: !0,
  motionUnit: !0
}, tu = {
  screenXS: !0,
  screenXSMin: !0,
  screenXSMax: !0,
  screenSM: !0,
  screenSMMin: !0,
  screenSMMax: !0,
  screenMD: !0,
  screenMDMin: !0,
  screenMDMax: !0,
  screenLG: !0,
  screenLGMin: !0,
  screenLGMax: !0,
  screenXL: !0,
  screenXLMin: !0,
  screenXLMax: !0,
  screenXXL: !0,
  screenXXLMin: !0
}, Bl = (A, g, I) => {
  const B = I.getDerivativeToken(A), {
    override: Q
  } = g, E = qc(g, ["override"]);
  let C = Object.assign(Object.assign({}, B), {
    override: Q
  });
  return C = Al(C), E && Object.entries(E).forEach((o) => {
    let [t, e] = o;
    const {
      theme: i
    } = e, a = qc(e, ["theme"]);
    let r = a;
    i && (r = Bl(Object.assign(Object.assign({}, C), a), {
      override: a
    }, i)), C[t] = r;
  }), C;
};
function $C() {
  const {
    token: A,
    hashed: g,
    theme: I,
    override: B,
    cssVar: Q
  } = ig.useContext(Oh), E = `${Eu}-${g || ""}`, C = I || Wh, [o, t, e] = NM(C, [xe, A], {
    salt: E,
    override: B,
    getComputedToken: Bl,
    // formatToken will not be consumed after 1.15.0 with getComputedToken.
    // But token will break if @ant-design/cssinjs is under 1.15.0 without it
    formatToken: Al,
    cssVar: Q && {
      prefix: Q.prefix,
      key: Q.key,
      unitless: gl,
      ignore: eu,
      preserve: tu
    }
  });
  return [C, e, g ? t : "", o, Q];
}
const ip = {
  overflow: "hidden",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis"
}, iu = function(A) {
  let g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
  return {
    boxSizing: "border-box",
    margin: 0,
    padding: 0,
    color: A.colorText,
    fontSize: A.fontSize,
    // font-variant: @font-variant-base;
    lineHeight: A.lineHeight,
    listStyle: "none",
    // font-feature-settings: @font-feature-settings-base;
    fontFamily: g ? "inherit" : A.fontFamily
  };
}, ou = () => ({
  display: "inline-flex",
  alignItems: "center",
  color: "inherit",
  fontStyle: "normal",
  lineHeight: 0,
  textAlign: "center",
  textTransform: "none",
  // for SVG icon, see https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4
  verticalAlign: "-0.125em",
  textRendering: "optimizeLegibility",
  "-webkit-font-smoothing": "antialiased",
  "-moz-osx-font-smoothing": "grayscale",
  "> *": {
    lineHeight: 1
  },
  svg: {
    display: "inline-block"
  }
}), op = () => ({
  // https://github.com/ant-design/ant-design/issues/21301#issuecomment-583955229
  "&::before": {
    display: "table",
    content: '""'
  },
  "&::after": {
    // https://github.com/ant-design/ant-design/issues/21864
    display: "table",
    clear: "both",
    content: '""'
  }
}), au = (A) => ({
  a: {
    color: A.colorLink,
    textDecoration: A.linkDecoration,
    backgroundColor: "transparent",
    // remove the gray background on active links in IE 10.
    outline: "none",
    cursor: "pointer",
    transition: `color ${A.motionDurationSlow}`,
    "-webkit-text-decoration-skip": "objects",
    // remove gaps in links underline in iOS 8+ and Safari 8+.
    "&:hover": {
      color: A.colorLinkHover
    },
    "&:active": {
      color: A.colorLinkActive
    },
    "&:active, &:hover": {
      textDecoration: A.linkHoverDecoration,
      outline: 0
    },
    // https://github.com/ant-design/ant-design/issues/22503
    "&:focus": {
      textDecoration: A.linkFocusDecoration,
      outline: 0
    },
    "&[disabled]": {
      color: A.colorTextDisabled,
      cursor: "not-allowed"
    }
  }
}), ru = (A, g, I, B) => {
  const Q = `[class^="${g}"], [class*=" ${g}"]`, E = I ? `.${I}` : Q, C = {
    boxSizing: "border-box",
    "&::before, &::after": {
      boxSizing: "border-box"
    }
  };
  let o = {};
  return B !== !1 && (o = {
    fontFamily: A.fontFamily,
    fontSize: A.fontSize
  }), {
    [E]: Object.assign(Object.assign(Object.assign({}, o), C), {
      [Q]: C
    })
  };
}, su = (A) => ({
  outline: `${eE(A.lineWidthFocus)} solid ${A.colorPrimaryBorder}`,
  outlineOffset: 1,
  transition: "outline-offset 0s, outline 0s"
}), nu = (A) => ({
  "&:focus-visible": Object.assign({}, su(A))
}), Il = (A, g) => {
  const [I, B] = $C();
  return ua({
    theme: I,
    token: B,
    hashId: "",
    path: ["ant-design-icons", A],
    nonce: () => g == null ? void 0 : g.nonce,
    layer: {
      name: "antd"
    }
  }, () => [{
    [`.${A}`]: Object.assign(Object.assign({}, ou()), {
      [`.${A} .${A}-icon`]: {
        display: "block"
      }
    })
  }]);
}, {
  genStyleHooks: cu,
  genComponentStyleHook: ap,
  genSubStyleComponent: Du
} = Qu({
  usePrefix: () => {
    const {
      getPrefixCls: A,
      iconPrefixCls: g
    } = IA.useContext(tE);
    return {
      rootPrefixCls: A(),
      iconPrefixCls: g
    };
  },
  useToken: () => {
    const [A, g, I, B, Q] = $C();
    return {
      theme: A,
      realToken: g,
      hashId: I,
      token: B,
      cssVar: Q
    };
  },
  useCSP: () => {
    const {
      csp: A,
      iconPrefixCls: g
    } = IA.useContext(tE);
    return Il(g, A), A ?? {};
  },
  getResetStyles: (A) => [{
    "&": au(A)
  }],
  getCommonStyle: ru,
  getCompUnitless: () => gl
}), hu = Object.assign({}, Ur), {
  useId: Pc
} = hu, lu = () => "", yu = typeof Pc > "u" ? lu : Pc;
function wu(A, g, I) {
  var B, Q;
  const E = _C("ConfigProvider"), C = A || {}, o = C.inherit === !1 || !g ? Object.assign(Object.assign({}, za), {
    hashed: (B = g == null ? void 0 : g.hashed) !== null && B !== void 0 ? B : za.hashed,
    cssVar: g == null ? void 0 : g.cssVar
  }) : g, t = yu();
  if (PA.env.NODE_ENV !== "production") {
    const e = C.cssVar || o.cssVar, i = !!(typeof C.cssVar == "object" && (!((Q = C.cssVar) === null || Q === void 0) && Q.key) || t);
    PA.env.NODE_ENV !== "production" && E(!e || i, "breaking", "Missing key in `cssVar` config. Please upgrade to React 18 or set `cssVar.key` manually in each ConfigProvider inside `cssVar` enabled ConfigProvider.");
  }
  return Bs(() => {
    var e, i;
    if (!A)
      return g;
    const a = Object.assign({}, o.components);
    Object.keys(A.components || {}).forEach((n) => {
      a[n] = Object.assign(Object.assign({}, a[n]), A.components[n]);
    });
    const r = `css-var-${t.replace(/:/g, "")}`, h = ((e = C.cssVar) !== null && e !== void 0 ? e : o.cssVar) && Object.assign(Object.assign(Object.assign({
      prefix: I == null ? void 0 : I.prefixCls
    }, typeof o.cssVar == "object" ? o.cssVar : {}), typeof C.cssVar == "object" ? C.cssVar : {}), {
      key: typeof C.cssVar == "object" && ((i = C.cssVar) === null || i === void 0 ? void 0 : i.key) || r
    });
    return Object.assign(Object.assign(Object.assign({}, o), C), {
      token: Object.assign(Object.assign({}, o.token), C.token),
      components: a,
      cssVar: h
    });
  }, [C, o], (e, i) => e.some((a, r) => {
    const h = i[r];
    return !$G(a, h, !0);
  }));
}
var du = ["children"], Ql = /* @__PURE__ */ IA.createContext({});
function Fu(A) {
  var g = A.children, I = zE(A, du);
  return /* @__PURE__ */ IA.createElement(Ql.Provider, {
    value: I
  }, g);
}
var Ru = /* @__PURE__ */ function(A) {
  Yi(I, A);
  var g = Ji(I);
  function I() {
    return wQ(this, I), g.apply(this, arguments);
  }
  return dQ(I, [{
    key: "render",
    value: function() {
      return this.props.children;
    }
  }]), I;
}(IA.Component);
function fu(A) {
  var g = IA.useReducer(function(o) {
    return o + 1;
  }, 0), I = Dg(g, 2), B = I[1], Q = IA.useRef(A), E = Pa(function() {
    return Q.current;
  }), C = Pa(function(o) {
    Q.current = typeof o == "function" ? o(Q.current) : o, B();
  });
  return [E, C];
}
var vQ = "none", pt = "appear", Yt = "enter", Jt = "leave", Wc = "none", jI = "prepare", yC = "start", wC = "active", ss = "end", El = "prepared";
function Oc(A, g) {
  var I = {};
  return I[A.toLowerCase()] = g.toLowerCase(), I["Webkit".concat(A)] = "webkit".concat(g), I["Moz".concat(A)] = "moz".concat(g), I["ms".concat(A)] = "MS".concat(g), I["O".concat(A)] = "o".concat(g.toLowerCase()), I;
}
function Gu(A, g) {
  var I = {
    animationend: Oc("Animation", "AnimationEnd"),
    transitionend: Oc("Transition", "TransitionEnd")
  };
  return A && ("AnimationEvent" in g || delete I.animationend.animation, "TransitionEvent" in g || delete I.transitionend.transition), I;
}
var Mu = Gu(JQ(), typeof window < "u" ? window : {}), Cl = {};
if (JQ()) {
  var Nu = document.createElement("div");
  Cl = Nu.style;
}
var Lt = {};
function el(A) {
  if (Lt[A])
    return Lt[A];
  var g = Mu[A];
  if (g)
    for (var I = Object.keys(g), B = I.length, Q = 0; Q < B; Q += 1) {
      var E = I[Q];
      if (Object.prototype.hasOwnProperty.call(g, E) && E in Cl)
        return Lt[A] = g[E], Lt[A];
    }
  return "";
}
var tl = el("animationend"), il = el("transitionend"), ol = !!(tl && il), jc = tl || "animationend", _c = il || "transitionend";
function $c(A, g) {
  if (!A) return null;
  if (DB(A) === "object") {
    var I = g.replace(/-\w/g, function(B) {
      return B[1].toUpperCase();
    });
    return A[I];
  }
  return "".concat(A, "-").concat(g);
}
const uu = function(A) {
  var g = IA.useRef();
  function I(Q) {
    Q && (Q.removeEventListener(_c, A), Q.removeEventListener(jc, A));
  }
  function B(Q) {
    g.current && g.current !== Q && I(g.current), Q && Q !== g.current && (Q.addEventListener(_c, A), Q.addEventListener(jc, A), g.current = Q);
  }
  return IA.useEffect(function() {
    return function() {
      I(g.current);
    };
  }, []), [B, I];
};
var al = JQ() ? IA.useLayoutEffect : IA.useEffect;
const Su = function() {
  var A = IA.useRef(null);
  function g() {
    ni.cancel(A.current);
  }
  function I(B) {
    var Q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
    g();
    var E = ni(function() {
      Q <= 1 ? B({
        isCanceled: function() {
          return E !== A.current;
        }
      }) : I(B, Q - 1);
    });
    A.current = E;
  }
  return IA.useEffect(function() {
    return function() {
      g();
    };
  }, []), [I, g];
};
var Uu = [jI, yC, wC, ss], ku = [jI, El], rl = !1, Hu = !0;
function sl(A) {
  return A === wC || A === ss;
}
const pu = function(A, g, I) {
  var B = Wa(Wc), Q = Dg(B, 2), E = Q[0], C = Q[1], o = Su(), t = Dg(o, 2), e = t[0], i = t[1];
  function a() {
    C(jI, !0);
  }
  var r = g ? ku : Uu;
  return al(function() {
    if (E !== Wc && E !== ss) {
      var h = r.indexOf(E), n = r[h + 1], l = I(E);
      l === rl ? C(n, !0) : n && e(function(y) {
        function N() {
          y.isCanceled() || C(n, !0);
        }
        l === !0 ? N() : Promise.resolve(l).then(N);
      });
    }
  }, [A, E]), IA.useEffect(function() {
    return function() {
      i();
    };
  }, []), [a, E];
};
function Yu(A, g, I, B) {
  var Q = B.motionEnter, E = Q === void 0 ? !0 : Q, C = B.motionAppear, o = C === void 0 ? !0 : C, t = B.motionLeave, e = t === void 0 ? !0 : t, i = B.motionDeadline, a = B.motionLeaveImmediately, r = B.onAppearPrepare, h = B.onEnterPrepare, n = B.onLeavePrepare, l = B.onAppearStart, y = B.onEnterStart, N = B.onLeaveStart, s = B.onAppearActive, F = B.onEnterActive, u = B.onLeaveActive, U = B.onAppearEnd, J = B.onEnterEnd, L = B.onLeaveEnd, f = B.onVisibleChanged, d = Wa(), p = Dg(d, 2), x = p[0], M = p[1], S = fu(vQ), k = Dg(S, 2), v = k[0], m = k[1], T = Wa(null), $ = Dg(T, 2), AA = $[0], lA = $[1], FA = v(), cA = IA.useRef(!1), yA = IA.useRef(null);
  function aA() {
    return I();
  }
  var eA = IA.useRef(!1);
  function CA() {
    m(vQ), lA(null, !0);
  }
  var b = Pa(function(XA) {
    var Ig = v();
    if (Ig !== vQ) {
      var jA = aA();
      if (!(XA && !XA.deadline && XA.target !== jA)) {
        var ag = eA.current, ng;
        Ig === pt && ag ? ng = U == null ? void 0 : U(jA, XA) : Ig === Yt && ag ? ng = J == null ? void 0 : J(jA, XA) : Ig === Jt && ag && (ng = L == null ? void 0 : L(jA, XA)), ag && ng !== !1 && CA();
      }
    }
  }), Y = uu(b), QA = Dg(Y, 1), BA = QA[0], iA = function(Ig) {
    switch (Ig) {
      case pt:
        return hg(hg(hg({}, jI, r), yC, l), wC, s);
      case Yt:
        return hg(hg(hg({}, jI, h), yC, y), wC, F);
      case Jt:
        return hg(hg(hg({}, jI, n), yC, N), wC, u);
      default:
        return {};
    }
  }, rA = IA.useMemo(function() {
    return iA(FA);
  }, [FA]), GA = pu(FA, !A, function(XA) {
    if (XA === jI) {
      var Ig = rA[jI];
      return Ig ? Ig(aA()) : rl;
    }
    if (HA in rA) {
      var jA;
      lA(((jA = rA[HA]) === null || jA === void 0 ? void 0 : jA.call(rA, aA(), null)) || null);
    }
    return HA === wC && FA !== vQ && (BA(aA()), i > 0 && (clearTimeout(yA.current), yA.current = setTimeout(function() {
      b({
        deadline: !0
      });
    }, i))), HA === El && CA(), Hu;
  }), _ = Dg(GA, 2), uA = _[0], HA = _[1], JA = sl(HA);
  eA.current = JA, al(function() {
    M(g);
    var XA = cA.current;
    cA.current = !0;
    var Ig;
    !XA && g && o && (Ig = pt), XA && g && E && (Ig = Yt), (XA && !g && e || !XA && a && !g && e) && (Ig = Jt);
    var jA = iA(Ig);
    Ig && (A || jA[jI]) ? (m(Ig), uA()) : m(vQ);
  }, [g]), IA.useEffect(function() {
    // Cancel appear
    (FA === pt && !o || // Cancel enter
    FA === Yt && !E || // Cancel leave
    FA === Jt && !e) && m(vQ);
  }, [o, E, e]), IA.useEffect(function() {
    return function() {
      cA.current = !1, clearTimeout(yA.current);
    };
  }, []);
  var VA = IA.useRef(!1);
  IA.useEffect(function() {
    x && (VA.current = !0), x !== void 0 && FA === vQ && ((VA.current || x) && (f == null || f(x)), VA.current = !0);
  }, [x, FA]);
  var $A = AA;
  return rA[jI] && HA === yC && ($A = gg({
    transition: "none"
  }, $A)), [FA, HA, $A, x ?? g];
}
function Ju(A) {
  var g = A;
  DB(A) === "object" && (g = A.transitionSupport);
  function I(Q, E) {
    return !!(Q.motionName && g && E !== !1);
  }
  var B = /* @__PURE__ */ IA.forwardRef(function(Q, E) {
    var C = Q.visible, o = C === void 0 ? !0 : C, t = Q.removeOnLeave, e = t === void 0 ? !0 : t, i = Q.forceRender, a = Q.children, r = Q.motionName, h = Q.leavedClassName, n = Q.eventProps, l = IA.useContext(Ql), y = l.motion, N = I(Q, y), s = IA.useRef(), F = IA.useRef();
    function u() {
      try {
        return s.current instanceof HTMLElement ? s.current : ZG(F.current);
      } catch {
        return null;
      }
    }
    var U = Yu(N, o, u, Q), J = Dg(U, 4), L = J[0], f = J[1], d = J[2], p = J[3], x = IA.useRef(p);
    p && (x.current = !0);
    var M = IA.useCallback(function(AA) {
      s.current = AA, th(E, AA);
    }, [E]), S, k = gg(gg({}, n), {}, {
      visible: o
    });
    if (!a)
      S = null;
    else if (L === vQ)
      p ? S = a(gg({}, k), M) : !e && x.current && h ? S = a(gg(gg({}, k), {}, {
        className: h
      }), M) : i || !e && !h ? S = a(gg(gg({}, k), {}, {
        style: {
          display: "none"
        }
      }), M) : S = null;
    else {
      var v;
      f === jI ? v = "prepare" : sl(f) ? v = "active" : f === yC && (v = "start");
      var m = $c(r, "".concat(L, "-").concat(v));
      S = a(gg(gg({}, k), {}, {
        className: pI($c(r, L), hg(hg({}, m, m && v), r, typeof r == "string")),
        style: d
      }), M);
    }
    if (/* @__PURE__ */ IA.isValidElement(S) && XG(S)) {
      var T = S, $ = T.ref;
      $ || (S = /* @__PURE__ */ IA.cloneElement(S, {
        ref: M
      }));
    }
    return /* @__PURE__ */ IA.createElement(Ru, {
      ref: F
    }, S);
  });
  return B.displayName = "CSSMotion", B;
}
const Lu = Ju(ol);
var ja = "add", _a = "keep", $a = "remove", vo = "removed";
function Ku(A) {
  var g;
  return A && DB(A) === "object" && "key" in A ? g = A : g = {
    key: A
  }, gg(gg({}, g), {}, {
    key: String(g.key)
  });
}
function Ar() {
  var A = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return A.map(Ku);
}
function mu() {
  var A = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], I = [], B = 0, Q = g.length, E = Ar(A), C = Ar(g);
  E.forEach(function(e) {
    for (var i = !1, a = B; a < Q; a += 1) {
      var r = C[a];
      if (r.key === e.key) {
        B < a && (I = I.concat(C.slice(B, a).map(function(h) {
          return gg(gg({}, h), {}, {
            status: ja
          });
        })), B = a), I.push(gg(gg({}, r), {}, {
          status: _a
        })), B += 1, i = !0;
        break;
      }
    }
    i || I.push(gg(gg({}, e), {}, {
      status: $a
    }));
  }), B < Q && (I = I.concat(C.slice(B).map(function(e) {
    return gg(gg({}, e), {}, {
      status: ja
    });
  })));
  var o = {};
  I.forEach(function(e) {
    var i = e.key;
    o[i] = (o[i] || 0) + 1;
  });
  var t = Object.keys(o).filter(function(e) {
    return o[e] > 1;
  });
  return t.forEach(function(e) {
    I = I.filter(function(i) {
      var a = i.key, r = i.status;
      return a !== e || r !== $a;
    }), I.forEach(function(i) {
      i.key === e && (i.status = _a);
    });
  }), I;
}
var xu = ["component", "children", "onVisibleChanged", "onAllRemoved"], vu = ["status"], bu = ["eventProps", "visible", "children", "motionName", "motionAppear", "motionEnter", "motionLeave", "motionLeaveImmediately", "motionDeadline", "removeOnLeave", "leavedClassName", "onAppearPrepare", "onAppearStart", "onAppearActive", "onAppearEnd", "onEnterStart", "onEnterActive", "onEnterEnd", "onLeaveStart", "onLeaveActive", "onLeaveEnd"];
function Zu(A) {
  var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Lu, I = /* @__PURE__ */ function(B) {
    Yi(E, B);
    var Q = Ji(E);
    function E() {
      var C;
      wQ(this, E);
      for (var o = arguments.length, t = new Array(o), e = 0; e < o; e++)
        t[e] = arguments[e];
      return C = Q.call.apply(Q, [this].concat(t)), hg(ZE(C), "state", {
        keyEntities: []
      }), hg(ZE(C), "removeKey", function(i) {
        C.setState(function(a) {
          var r = a.keyEntities.map(function(h) {
            return h.key !== i ? h : gg(gg({}, h), {}, {
              status: vo
            });
          });
          return {
            keyEntities: r
          };
        }, function() {
          var a = C.state.keyEntities, r = a.filter(function(h) {
            var n = h.status;
            return n !== vo;
          }).length;
          r === 0 && C.props.onAllRemoved && C.props.onAllRemoved();
        });
      }), C;
    }
    return dQ(E, [{
      key: "render",
      value: function() {
        var o = this, t = this.state.keyEntities, e = this.props, i = e.component, a = e.children, r = e.onVisibleChanged;
        e.onAllRemoved;
        var h = zE(e, xu), n = i || IA.Fragment, l = {};
        return bu.forEach(function(y) {
          l[y] = h[y], delete h[y];
        }), delete h.keys, /* @__PURE__ */ IA.createElement(n, h, t.map(function(y, N) {
          var s = y.status, F = zE(y, vu), u = s === ja || s === _a;
          return /* @__PURE__ */ IA.createElement(g, zI({}, l, {
            key: F.key,
            visible: u,
            eventProps: F,
            onVisibleChanged: function(J) {
              r == null || r(J, {
                key: F.key
              }), J || o.removeKey(F.key);
            }
          }), function(U, J) {
            return a(gg(gg({}, U), {}, {
              index: N
            }), J);
          });
        }));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function(o, t) {
        var e = o.keys, i = t.keyEntities, a = Ar(e), r = mu(i, a);
        return {
          keyEntities: r.filter(function(h) {
            var n = i.find(function(l) {
              var y = l.key;
              return h.key === y;
            });
            return !(n && n.status === vo && h.status === $a);
          })
        };
      }
    }]), E;
  }(IA.Component);
  return hg(I, "defaultProps", {
    component: "div"
  }), I;
}
const Tu = Zu(ol);
function Xu(A) {
  const {
    children: g
  } = A, [, I] = $C(), {
    motion: B
  } = I, Q = IA.useRef(!1);
  return Q.current = Q.current || B === !1, Q.current ? /* @__PURE__ */ IA.createElement(Fu, {
    motion: B
  }, g) : g;
}
const nl = /* @__PURE__ */ IA.memo((A) => {
  let {
    dropdownMatchSelectWidth: g
  } = A;
  return _C("ConfigProvider").deprecated(g === void 0, "dropdownMatchSelectWidth", "popupMatchSelectWidth"), null;
});
PA.env.NODE_ENV !== "production" && (nl.displayName = "PropWarning");
const zu = PA.env.NODE_ENV !== "production" ? nl : () => null;
var Vu = function(A, g) {
  var I = {};
  for (var B in A) Object.prototype.hasOwnProperty.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && typeof Object.getOwnPropertySymbols == "function") for (var Q = 0, B = Object.getOwnPropertySymbols(A); Q < B.length; Q++)
    g.indexOf(B[Q]) < 0 && Object.prototype.propertyIsEnumerable.call(A, B[Q]) && (I[B[Q]] = A[B[Q]]);
  return I;
};
let gr = !1;
const qu = PA.env.NODE_ENV !== "production" ? (A) => {
  PA.env.NODE_ENV !== "production" && bi(!gr, A, "Static function can not consume context like dynamic theme. Please use 'App' component instead.");
} : (
  /* istanbul ignore next */
  null
), Pu = ["getTargetContainer", "getPopupContainer", "renderEmpty", "input", "pagination", "form", "select", "button"];
let hi, cl, Dl, hl;
function Ot() {
  return hi || Va;
}
function Wu() {
  return cl || as;
}
function Ou(A) {
  return Object.keys(A).some((g) => g.endsWith("Color"));
}
const ju = (A) => {
  const {
    prefixCls: g,
    iconPrefixCls: I,
    theme: B,
    holderRender: Q
  } = A;
  g !== void 0 && (hi = g), I !== void 0 && (cl = I), "holderRender" in A && (hl = Q), B && (Ou(B) ? (PA.env.NODE_ENV !== "production" && bi(!1, "ConfigProvider", "`config` of css variable theme is not work in v5. Please use new `theme` config instead."), TN(Ot(), B)) : Dl = B);
}, ll = () => ({
  getPrefixCls: (A, g) => g || (A ? `${Ot()}-${A}` : Ot()),
  getIconPrefixCls: Wu,
  getRootPrefixCls: () => hi || Ot(),
  getTheme: () => Dl,
  holderRender: hl
}), _u = (A) => {
  const {
    children: g,
    csp: I,
    autoInsertSpaceInButton: B,
    alert: Q,
    anchor: E,
    form: C,
    locale: o,
    componentSize: t,
    direction: e,
    space: i,
    splitter: a,
    virtual: r,
    dropdownMatchSelectWidth: h,
    popupMatchSelectWidth: n,
    popupOverflow: l,
    legacyLocale: y,
    parentContext: N,
    iconPrefixCls: s,
    theme: F,
    componentDisabled: u,
    segmented: U,
    statistic: J,
    spin: L,
    calendar: f,
    carousel: d,
    cascader: p,
    collapse: x,
    typography: M,
    checkbox: S,
    descriptions: k,
    divider: v,
    drawer: m,
    skeleton: T,
    steps: $,
    image: AA,
    layout: lA,
    list: FA,
    mentions: cA,
    modal: yA,
    progress: aA,
    result: eA,
    slider: CA,
    breadcrumb: b,
    menu: Y,
    pagination: QA,
    input: BA,
    textArea: iA,
    empty: rA,
    badge: GA,
    radio: _,
    rate: uA,
    switch: HA,
    transfer: JA,
    avatar: VA,
    message: $A,
    tag: XA,
    table: Ig,
    card: jA,
    tabs: ag,
    timeline: ng,
    timePicker: lg,
    upload: BB,
    notification: rB,
    tree: eg,
    colorPicker: yg,
    datePicker: Wg,
    rangePicker: Mg,
    flex: LB,
    wave: mB,
    dropdown: yI,
    warning: tI,
    tour: YI,
    floatButtonGroup: IQ,
    variant: LQ,
    inputNumber: QQ,
    treeSelect: Bg
  } = A, rg = IA.useCallback((Yg, Vg) => {
    const {
      prefixCls: EB
    } = A;
    if (Vg)
      return Vg;
    const CB = EB || N.getPrefixCls("");
    return Yg ? `${CB}-${Yg}` : CB;
  }, [N.getPrefixCls, A.prefixCls]), Ug = s || N.iconPrefixCls || as, IB = I || N.csp;
  Il(Ug, IB);
  const $g = wu(F, N.theme, {
    prefixCls: rg("")
  });
  PA.env.NODE_ENV !== "production" && (gr = gr || !!$g);
  const nB = {
    csp: IB,
    autoInsertSpaceInButton: B,
    alert: Q,
    anchor: E,
    locale: o || y,
    direction: e,
    space: i,
    splitter: a,
    virtual: r,
    popupMatchSelectWidth: n ?? h,
    popupOverflow: l,
    getPrefixCls: rg,
    iconPrefixCls: Ug,
    theme: $g,
    segmented: U,
    statistic: J,
    spin: L,
    calendar: f,
    carousel: d,
    cascader: p,
    collapse: x,
    typography: M,
    checkbox: S,
    descriptions: k,
    divider: v,
    drawer: m,
    skeleton: T,
    steps: $,
    image: AA,
    input: BA,
    textArea: iA,
    layout: lA,
    list: FA,
    mentions: cA,
    modal: yA,
    progress: aA,
    result: eA,
    slider: CA,
    breadcrumb: b,
    menu: Y,
    pagination: QA,
    empty: rA,
    badge: GA,
    radio: _,
    rate: uA,
    switch: HA,
    transfer: JA,
    avatar: VA,
    message: $A,
    tag: XA,
    table: Ig,
    card: jA,
    tabs: ag,
    timeline: ng,
    timePicker: lg,
    upload: BB,
    notification: rB,
    tree: eg,
    colorPicker: yg,
    datePicker: Wg,
    rangePicker: Mg,
    flex: LB,
    wave: mB,
    dropdown: yI,
    warning: tI,
    tour: YI,
    floatButtonGroup: IQ,
    variant: LQ,
    inputNumber: QQ,
    treeSelect: Bg
  };
  PA.env.NODE_ENV !== "production" && _C("ConfigProvider")(!("autoInsertSpaceInButton" in A), "deprecated", "`autoInsertSpaceInButton` is deprecated. Please use `{ button: { autoInsertSpace: boolean }}` instead.");
  const sB = Object.assign({}, N);
  Object.keys(nB).forEach((Yg) => {
    nB[Yg] !== void 0 && (sB[Yg] = nB[Yg]);
  }), Pu.forEach((Yg) => {
    const Vg = A[Yg];
    Vg && (sB[Yg] = Vg);
  }), typeof B < "u" && (sB.button = Object.assign({
    autoInsertSpace: B
  }, sB.button));
  const wB = Bs(() => sB, sB, (Yg, Vg) => {
    const EB = Object.keys(Yg), CB = Object.keys(Vg);
    return EB.length !== CB.length || EB.some((sE) => Yg[sE] !== Vg[sE]);
  }), xB = IA.useMemo(() => ({
    prefixCls: Ug,
    csp: IB
  }), [Ug, IB]);
  let Hg = /* @__PURE__ */ IA.createElement(IA.Fragment, null, /* @__PURE__ */ IA.createElement(zu, {
    dropdownMatchSelectWidth: h
  }), g);
  const uB = IA.useMemo(() => {
    var Yg, Vg, EB, CB;
    return CN(((Yg = Zi.Form) === null || Yg === void 0 ? void 0 : Yg.defaultValidateMessages) || {}, ((EB = (Vg = wB.locale) === null || Vg === void 0 ? void 0 : Vg.Form) === null || EB === void 0 ? void 0 : EB.defaultValidateMessages) || {}, ((CB = wB.form) === null || CB === void 0 ? void 0 : CB.validateMessages) || {}, (C == null ? void 0 : C.validateMessages) || {});
  }, [wB, C == null ? void 0 : C.validateMessages]);
  Object.keys(uB).length > 0 && (Hg = /* @__PURE__ */ IA.createElement(tN.Provider, {
    value: uB
  }, Hg)), o && (Hg = /* @__PURE__ */ IA.createElement(Xh, {
    locale: o,
    _ANT_MARK__: Th
  }, Hg)), (Ug || IB) && (Hg = /* @__PURE__ */ IA.createElement(is.Provider, {
    value: xB
  }, Hg)), t && (Hg = /* @__PURE__ */ IA.createElement(zN, {
    size: t
  }, Hg)), Hg = /* @__PURE__ */ IA.createElement(Xu, null, Hg);
  const dB = IA.useMemo(() => {
    const Yg = $g || {}, {
      algorithm: Vg,
      token: EB,
      components: CB,
      cssVar: sE
    } = Yg, It = Vu(Yg, ["algorithm", "token", "components", "cssVar"]), ge = Vg && (!Array.isArray(Vg) || Vg.length > 0) ? Ra(Vg) : Wh, jE = {};
    Object.entries(CB || {}).forEach((Vi) => {
      let [qB, TB] = Vi;
      const iI = Object.assign({}, TB);
      "algorithm" in iI && (iI.algorithm === !0 ? iI.theme = ge : (Array.isArray(iI.algorithm) || typeof iI.algorithm == "function") && (iI.theme = Ra(iI.algorithm)), delete iI.algorithm), jE[qB] = iI;
    });
    const Qt = Object.assign(Object.assign({}, xe), EB);
    return Object.assign(Object.assign({}, It), {
      theme: ge,
      token: Qt,
      components: jE,
      override: Object.assign({
        override: Qt
      }, jE),
      cssVar: sE
    });
  }, [$g]);
  return F && (Hg = /* @__PURE__ */ IA.createElement(Oh.Provider, {
    value: dB
  }, Hg)), wB.warning && (Hg = /* @__PURE__ */ IA.createElement(vh.Provider, {
    value: wB.warning
  }, Hg)), u !== void 0 && (Hg = /* @__PURE__ */ IA.createElement(XN, {
    disabled: u
  }, Hg)), /* @__PURE__ */ IA.createElement(tE.Provider, {
    value: wB
  }, Hg);
}, OE = (A) => {
  const g = IA.useContext(tE), I = IA.useContext(Zh);
  return /* @__PURE__ */ IA.createElement(_u, Object.assign({
    parentContext: g,
    legacyLocale: I
  }, A));
};
OE.ConfigContext = tE;
OE.SizeContext = ve;
OE.config = ju;
OE.useConfig = VN;
Object.defineProperty(OE, "SizeContext", {
  get: () => (PA.env.NODE_ENV !== "production" && bi(!1, "ConfigProvider", "ConfigProvider.SizeContext is deprecated. Please use `ConfigProvider.useConfig().componentSize` instead."), ve)
});
PA.env.NODE_ENV !== "production" && (OE.displayName = "ConfigProvider");
var $u = { icon: { tag: "svg", attrs: { viewBox: "64 64 896 896", focusable: "false" }, children: [{ tag: "path", attrs: { d: "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z" } }] }, name: "check-circle", theme: "filled" };
function yl(A) {
  var g;
  return A == null || (g = A.getRootNode) === null || g === void 0 ? void 0 : g.call(A);
}
function AS(A) {
  return yl(A) instanceof ShadowRoot;
}
function gS(A) {
  return AS(A) ? yl(A) : null;
}
function BS(A) {
  return A.replace(/-(.)/g, function(g, I) {
    return I.toUpperCase();
  });
}
function IS(A, g) {
  aE(A, "[@ant-design/icons] ".concat(g));
}
function AD(A) {
  return DB(A) === "object" && typeof A.name == "string" && typeof A.theme == "string" && (DB(A.icon) === "object" || typeof A.icon == "function");
}
function gD() {
  var A = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.keys(A).reduce(function(g, I) {
    var B = A[I];
    switch (I) {
      case "class":
        g.className = B, delete g.class;
        break;
      default:
        delete g[I], g[BS(I)] = B;
    }
    return g;
  }, {});
}
function Br(A, g, I) {
  return I ? /* @__PURE__ */ ig.createElement(A.tag, gg(gg({
    key: g
  }, gD(A.attrs)), I), (A.children || []).map(function(B, Q) {
    return Br(B, "".concat(g, "-").concat(A.tag, "-").concat(Q));
  })) : /* @__PURE__ */ ig.createElement(A.tag, gg({
    key: g
  }, gD(A.attrs)), (A.children || []).map(function(B, Q) {
    return Br(B, "".concat(g, "-").concat(A.tag, "-").concat(Q));
  }));
}
function wl(A) {
  return me(A)[0];
}
function dl(A) {
  return A ? Array.isArray(A) ? A : [A] : [];
}
var QS = `
.anticon {
  display: inline-flex;
  align-items: center;
  color: inherit;
  font-style: normal;
  line-height: 0;
  text-align: center;
  text-transform: none;
  vertical-align: -0.125em;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.anticon > * {
  line-height: 1;
}

.anticon svg {
  display: inline-block;
}

.anticon::before {
  display: none;
}

.anticon .anticon-icon {
  display: block;
}

.anticon[tabindex] {
  cursor: pointer;
}

.anticon-spin::before,
.anticon-spin {
  display: inline-block;
  -webkit-animation: loadingCircle 1s infinite linear;
  animation: loadingCircle 1s infinite linear;
}

@-webkit-keyframes loadingCircle {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes loadingCircle {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
`, ES = function(g) {
  var I = IA.useContext(is), B = I.csp, Q = I.prefixCls, E = QS;
  Q && (E = E.replace(/anticon/g, Q)), IA.useEffect(function() {
    var C = g.current, o = gS(C);
    TE(E, "@ant-design-icons", {
      prepend: !0,
      csp: B,
      attachTo: o
    });
  }, []);
}, CS = ["icon", "className", "onClick", "style", "primaryColor", "secondaryColor"], He = {
  primaryColor: "#333",
  secondaryColor: "#E6E6E6",
  calculated: !1
};
function eS(A) {
  var g = A.primaryColor, I = A.secondaryColor;
  He.primaryColor = g, He.secondaryColor = I || wl(g), He.calculated = !!I;
}
function tS() {
  return gg({}, He);
}
var Ae = function(g) {
  var I = g.icon, B = g.className, Q = g.onClick, E = g.style, C = g.primaryColor, o = g.secondaryColor, t = zE(g, CS), e = IA.useRef(), i = He;
  if (C && (i = {
    primaryColor: C,
    secondaryColor: o || wl(C)
  }), ES(e), IS(AD(I), "icon should be icon definiton, but got ".concat(I)), !AD(I))
    return null;
  var a = I;
  return a && typeof a.icon == "function" && (a = gg(gg({}, a), {}, {
    icon: a.icon(i.primaryColor, i.secondaryColor)
  })), Br(a.icon, "svg-".concat(a.name), gg(gg({
    className: B,
    onClick: Q,
    style: E,
    "data-icon": a.name,
    width: "1em",
    height: "1em",
    fill: "currentColor",
    "aria-hidden": "true"
  }, t), {}, {
    ref: e
  }));
};
Ae.displayName = "IconReact";
Ae.getTwoToneColors = tS;
Ae.setTwoToneColors = eS;
function Fl(A) {
  var g = dl(A), I = Dg(g, 2), B = I[0], Q = I[1];
  return Ae.setTwoToneColors({
    primaryColor: B,
    secondaryColor: Q
  });
}
function iS() {
  var A = Ae.getTwoToneColors();
  return A.calculated ? [A.primaryColor, A.secondaryColor] : A.primaryColor;
}
var oS = ["className", "icon", "spin", "rotate", "tabIndex", "onClick", "twoToneColor"];
Fl(Di.primary);
var rE = /* @__PURE__ */ IA.forwardRef(function(A, g) {
  var I = A.className, B = A.icon, Q = A.spin, E = A.rotate, C = A.tabIndex, o = A.onClick, t = A.twoToneColor, e = zE(A, oS), i = IA.useContext(is), a = i.prefixCls, r = a === void 0 ? "anticon" : a, h = i.rootClassName, n = pI(h, r, hg(hg({}, "".concat(r, "-").concat(B.name), !!B.name), "".concat(r, "-spin"), !!Q || B.name === "loading"), I), l = C;
  l === void 0 && o && (l = -1);
  var y = E ? {
    msTransform: "rotate(".concat(E, "deg)"),
    transform: "rotate(".concat(E, "deg)")
  } : void 0, N = dl(t), s = Dg(N, 2), F = s[0], u = s[1];
  return /* @__PURE__ */ IA.createElement("span", zI({
    role: "img",
    "aria-label": B.name
  }, e, {
    ref: g,
    tabIndex: l,
    onClick: o,
    className: n
  }), /* @__PURE__ */ IA.createElement(Ae, {
    icon: B,
    primaryColor: F,
    secondaryColor: u,
    style: y
  }));
});
rE.displayName = "AntdIcon";
rE.getTwoToneColor = iS;
rE.setTwoToneColor = Fl;
var aS = function(g, I) {
  return /* @__PURE__ */ IA.createElement(rE, zI({}, g, {
    ref: I,
    icon: $u
  }));
}, Rl = /* @__PURE__ */ IA.forwardRef(aS);
PA.env.NODE_ENV !== "production" && (Rl.displayName = "CheckCircleFilled");
var rS = { icon: { tag: "svg", attrs: { "fill-rule": "evenodd", viewBox: "64 64 896 896", focusable: "false" }, children: [{ tag: "path", attrs: { d: "M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z" } }] }, name: "close-circle", theme: "filled" }, sS = function(g, I) {
  return /* @__PURE__ */ IA.createElement(rE, zI({}, g, {
    ref: I,
    icon: rS
  }));
}, fl = /* @__PURE__ */ IA.forwardRef(sS);
PA.env.NODE_ENV !== "production" && (fl.displayName = "CloseCircleFilled");
var nS = { icon: { tag: "svg", attrs: { "fill-rule": "evenodd", viewBox: "64 64 896 896", focusable: "false" }, children: [{ tag: "path", attrs: { d: "M799.86 166.31c.02 0 .04.02.08.06l57.69 57.7c.04.03.05.05.06.08a.12.12 0 010 .06c0 .03-.02.05-.06.09L569.93 512l287.7 287.7c.04.04.05.06.06.09a.12.12 0 010 .07c0 .02-.02.04-.06.08l-57.7 57.69c-.03.04-.05.05-.07.06a.12.12 0 01-.07 0c-.03 0-.05-.02-.09-.06L512 569.93l-287.7 287.7c-.04.04-.06.05-.09.06a.12.12 0 01-.07 0c-.02 0-.04-.02-.08-.06l-57.69-57.7c-.04-.03-.05-.05-.06-.07a.12.12 0 010-.07c0-.03.02-.05.06-.09L454.07 512l-287.7-287.7c-.04-.04-.05-.06-.06-.09a.12.12 0 010-.07c0-.02.02-.04.06-.08l57.7-57.69c.03-.04.05-.05.07-.06a.12.12 0 01.07 0c.03 0 .05.02.09.06L512 454.07l287.7-287.7c.04-.04.06-.05.09-.06a.12.12 0 01.07 0z" } }] }, name: "close", theme: "outlined" }, cS = function(g, I) {
  return /* @__PURE__ */ IA.createElement(rE, zI({}, g, {
    ref: I,
    icon: nS
  }));
}, Gl = /* @__PURE__ */ IA.forwardRef(cS);
PA.env.NODE_ENV !== "production" && (Gl.displayName = "CloseOutlined");
var DS = { icon: { tag: "svg", attrs: { viewBox: "64 64 896 896", focusable: "false" }, children: [{ tag: "path", attrs: { d: "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z" } }] }, name: "exclamation-circle", theme: "filled" }, hS = function(g, I) {
  return /* @__PURE__ */ IA.createElement(rE, zI({}, g, {
    ref: I,
    icon: DS
  }));
}, Ml = /* @__PURE__ */ IA.forwardRef(hS);
PA.env.NODE_ENV !== "production" && (Ml.displayName = "ExclamationCircleFilled");
var lS = { icon: { tag: "svg", attrs: { viewBox: "64 64 896 896", focusable: "false" }, children: [{ tag: "path", attrs: { d: "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 010-96 48.01 48.01 0 010 96z" } }] }, name: "info-circle", theme: "filled" }, yS = function(g, I) {
  return /* @__PURE__ */ IA.createElement(rE, zI({}, g, {
    ref: I,
    icon: lS
  }));
}, Nl = /* @__PURE__ */ IA.forwardRef(yS);
PA.env.NODE_ENV !== "production" && (Nl.displayName = "InfoCircleFilled");
var wS = `accept acceptCharset accessKey action allowFullScreen allowTransparency
    alt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge
    charSet checked classID className colSpan cols content contentEditable contextMenu
    controls coords crossOrigin data dateTime default defer dir disabled download draggable
    encType form formAction formEncType formMethod formNoValidate formTarget frameBorder
    headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity
    is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media
    mediaGroup method min minLength multiple muted name noValidate nonce open
    optimum pattern placeholder poster preload radioGroup readOnly rel required
    reversed role rowSpan rows sandbox scope scoped scrolling seamless selected
    shape size sizes span spellCheck src srcDoc srcLang srcSet start step style
    summary tabIndex target title type useMap value width wmode wrap`, dS = `onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown
    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick
    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown
    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel
    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough
    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata
    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError`, FS = "".concat(wS, " ").concat(dS).split(/[\s\n]+/), RS = "aria-", fS = "data-";
function BD(A, g) {
  return A.indexOf(g) === 0;
}
function GS(A) {
  var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, I;
  g === !1 ? I = {
    aria: !0,
    data: !0,
    attr: !0
  } : g === !0 ? I = {
    aria: !0
  } : I = gg({}, g);
  var B = {};
  return Object.keys(A).forEach(function(Q) {
    // Aria
    (I.aria && (Q === "role" || BD(Q, RS)) || // Data
    I.data && BD(Q, fS) || // Attr
    I.attr && FS.includes(Q)) && (B[Q] = A[Q]);
  }), B;
}
const ul = (A) => {
  const [, , , , g] = $C();
  return g ? `${A}-css-var` : "";
};
var cg = {
  /**
   * MAC_ENTER
   */
  MAC_ENTER: 3,
  /**
   * BACKSPACE
   */
  BACKSPACE: 8,
  /**
   * TAB
   */
  TAB: 9,
  /**
   * NUMLOCK on FF/Safari Mac
   */
  NUM_CENTER: 12,
  // NUMLOCK on FF/Safari Mac
  /**
   * ENTER
   */
  ENTER: 13,
  /**
   * SHIFT
   */
  SHIFT: 16,
  /**
   * CTRL
   */
  CTRL: 17,
  /**
   * ALT
   */
  ALT: 18,
  /**
   * PAUSE
   */
  PAUSE: 19,
  /**
   * CAPS_LOCK
   */
  CAPS_LOCK: 20,
  /**
   * ESC
   */
  ESC: 27,
  /**
   * SPACE
   */
  SPACE: 32,
  /**
   * PAGE_UP
   */
  PAGE_UP: 33,
  // also NUM_NORTH_EAST
  /**
   * PAGE_DOWN
   */
  PAGE_DOWN: 34,
  // also NUM_SOUTH_EAST
  /**
   * END
   */
  END: 35,
  // also NUM_SOUTH_WEST
  /**
   * HOME
   */
  HOME: 36,
  // also NUM_NORTH_WEST
  /**
   * LEFT
   */
  LEFT: 37,
  // also NUM_WEST
  /**
   * UP
   */
  UP: 38,
  // also NUM_NORTH
  /**
   * RIGHT
   */
  RIGHT: 39,
  // also NUM_EAST
  /**
   * DOWN
   */
  DOWN: 40,
  // also NUM_SOUTH
  /**
   * PRINT_SCREEN
   */
  PRINT_SCREEN: 44,
  /**
   * INSERT
   */
  INSERT: 45,
  // also NUM_INSERT
  /**
   * DELETE
   */
  DELETE: 46,
  // also NUM_DELETE
  /**
   * ZERO
   */
  ZERO: 48,
  /**
   * ONE
   */
  ONE: 49,
  /**
   * TWO
   */
  TWO: 50,
  /**
   * THREE
   */
  THREE: 51,
  /**
   * FOUR
   */
  FOUR: 52,
  /**
   * FIVE
   */
  FIVE: 53,
  /**
   * SIX
   */
  SIX: 54,
  /**
   * SEVEN
   */
  SEVEN: 55,
  /**
   * EIGHT
   */
  EIGHT: 56,
  /**
   * NINE
   */
  NINE: 57,
  /**
   * QUESTION_MARK
   */
  QUESTION_MARK: 63,
  // needs localization
  /**
   * A
   */
  A: 65,
  /**
   * B
   */
  B: 66,
  /**
   * C
   */
  C: 67,
  /**
   * D
   */
  D: 68,
  /**
   * E
   */
  E: 69,
  /**
   * F
   */
  F: 70,
  /**
   * G
   */
  G: 71,
  /**
   * H
   */
  H: 72,
  /**
   * I
   */
  I: 73,
  /**
   * J
   */
  J: 74,
  /**
   * K
   */
  K: 75,
  /**
   * L
   */
  L: 76,
  /**
   * M
   */
  M: 77,
  /**
   * N
   */
  N: 78,
  /**
   * O
   */
  O: 79,
  /**
   * P
   */
  P: 80,
  /**
   * Q
   */
  Q: 81,
  /**
   * R
   */
  R: 82,
  /**
   * S
   */
  S: 83,
  /**
   * T
   */
  T: 84,
  /**
   * U
   */
  U: 85,
  /**
   * V
   */
  V: 86,
  /**
   * W
   */
  W: 87,
  /**
   * X
   */
  X: 88,
  /**
   * Y
   */
  Y: 89,
  /**
   * Z
   */
  Z: 90,
  /**
   * META
   */
  META: 91,
  // WIN_KEY_LEFT
  /**
   * WIN_KEY_RIGHT
   */
  WIN_KEY_RIGHT: 92,
  /**
   * CONTEXT_MENU
   */
  CONTEXT_MENU: 93,
  /**
   * NUM_ZERO
   */
  NUM_ZERO: 96,
  /**
   * NUM_ONE
   */
  NUM_ONE: 97,
  /**
   * NUM_TWO
   */
  NUM_TWO: 98,
  /**
   * NUM_THREE
   */
  NUM_THREE: 99,
  /**
   * NUM_FOUR
   */
  NUM_FOUR: 100,
  /**
   * NUM_FIVE
   */
  NUM_FIVE: 101,
  /**
   * NUM_SIX
   */
  NUM_SIX: 102,
  /**
   * NUM_SEVEN
   */
  NUM_SEVEN: 103,
  /**
   * NUM_EIGHT
   */
  NUM_EIGHT: 104,
  /**
   * NUM_NINE
   */
  NUM_NINE: 105,
  /**
   * NUM_MULTIPLY
   */
  NUM_MULTIPLY: 106,
  /**
   * NUM_PLUS
   */
  NUM_PLUS: 107,
  /**
   * NUM_MINUS
   */
  NUM_MINUS: 109,
  /**
   * NUM_PERIOD
   */
  NUM_PERIOD: 110,
  /**
   * NUM_DIVISION
   */
  NUM_DIVISION: 111,
  /**
   * F1
   */
  F1: 112,
  /**
   * F2
   */
  F2: 113,
  /**
   * F3
   */
  F3: 114,
  /**
   * F4
   */
  F4: 115,
  /**
   * F5
   */
  F5: 116,
  /**
   * F6
   */
  F6: 117,
  /**
   * F7
   */
  F7: 118,
  /**
   * F8
   */
  F8: 119,
  /**
   * F9
   */
  F9: 120,
  /**
   * F10
   */
  F10: 121,
  /**
   * F11
   */
  F11: 122,
  /**
   * F12
   */
  F12: 123,
  /**
   * NUMLOCK
   */
  NUMLOCK: 144,
  /**
   * SEMICOLON
   */
  SEMICOLON: 186,
  // needs localization
  /**
   * DASH
   */
  DASH: 189,
  // needs localization
  /**
   * EQUALS
   */
  EQUALS: 187,
  // needs localization
  /**
   * COMMA
   */
  COMMA: 188,
  // needs localization
  /**
   * PERIOD
   */
  PERIOD: 190,
  // needs localization
  /**
   * SLASH
   */
  SLASH: 191,
  // needs localization
  /**
   * APOSTROPHE
   */
  APOSTROPHE: 192,
  // needs localization
  /**
   * SINGLE_QUOTE
   */
  SINGLE_QUOTE: 222,
  // needs localization
  /**
   * OPEN_SQUARE_BRACKET
   */
  OPEN_SQUARE_BRACKET: 219,
  // needs localization
  /**
   * BACKSLASH
   */
  BACKSLASH: 220,
  // needs localization
  /**
   * CLOSE_SQUARE_BRACKET
   */
  CLOSE_SQUARE_BRACKET: 221,
  // needs localization
  /**
   * WIN_KEY
   */
  WIN_KEY: 224,
  /**
   * MAC_FF_META
   */
  MAC_FF_META: 224,
  // Firefox (Gecko) fires this for the meta key instead of 91
  /**
   * WIN_IME
   */
  WIN_IME: 229,
  // ======================== Function ========================
  /**
   * whether text and modified key is entered at the same time.
   */
  isTextModifyingKeyEvent: function(g) {
    var I = g.keyCode;
    if (g.altKey && !g.ctrlKey || g.metaKey || // Function keys don't generate text
    I >= cg.F1 && I <= cg.F12)
      return !1;
    switch (I) {
      case cg.ALT:
      case cg.CAPS_LOCK:
      case cg.CONTEXT_MENU:
      case cg.CTRL:
      case cg.DOWN:
      case cg.END:
      case cg.ESC:
      case cg.HOME:
      case cg.INSERT:
      case cg.LEFT:
      case cg.MAC_FF_META:
      case cg.META:
      case cg.NUMLOCK:
      case cg.NUM_CENTER:
      case cg.PAGE_DOWN:
      case cg.PAGE_UP:
      case cg.PAUSE:
      case cg.PRINT_SCREEN:
      case cg.RIGHT:
      case cg.SHIFT:
      case cg.UP:
      case cg.WIN_KEY:
      case cg.WIN_KEY_RIGHT:
        return !1;
      default:
        return !0;
    }
  },
  /**
   * whether character is entered.
   */
  isCharacterKey: function(g) {
    if (g >= cg.ZERO && g <= cg.NINE || g >= cg.NUM_ZERO && g <= cg.NUM_MULTIPLY || g >= cg.A && g <= cg.Z || window.navigator.userAgent.indexOf("WebKit") !== -1 && g === 0)
      return !0;
    switch (g) {
      case cg.SPACE:
      case cg.QUESTION_MARK:
      case cg.NUM_PLUS:
      case cg.NUM_MINUS:
      case cg.NUM_PERIOD:
      case cg.NUM_DIVISION:
      case cg.SEMICOLON:
      case cg.DASH:
      case cg.EQUALS:
      case cg.COMMA:
      case cg.PERIOD:
      case cg.SLASH:
      case cg.APOSTROPHE:
      case cg.SINGLE_QUOTE:
      case cg.OPEN_SQUARE_BRACKET:
      case cg.BACKSLASH:
      case cg.CLOSE_SQUARE_BRACKET:
        return !0;
      default:
        return !1;
    }
  }
}, Sl = /* @__PURE__ */ IA.forwardRef(function(A, g) {
  var I = A.prefixCls, B = A.style, Q = A.className, E = A.duration, C = E === void 0 ? 4.5 : E, o = A.showProgress, t = A.pauseOnHover, e = t === void 0 ? !0 : t, i = A.eventKey, a = A.content, r = A.closable, h = A.closeIcon, n = h === void 0 ? "x" : h, l = A.props, y = A.onClick, N = A.onNoticeClose, s = A.times, F = A.hovering, u = IA.useState(!1), U = Dg(u, 2), J = U[0], L = U[1], f = IA.useState(0), d = Dg(f, 2), p = d[0], x = d[1], M = IA.useState(0), S = Dg(M, 2), k = S[0], v = S[1], m = F || J, T = C > 0 && o, $ = function() {
    N(i);
  }, AA = function(eA) {
    (eA.key === "Enter" || eA.code === "Enter" || eA.keyCode === cg.ENTER) && $();
  };
  IA.useEffect(function() {
    if (!m && C > 0) {
      var aA = Date.now() - k, eA = setTimeout(function() {
        $();
      }, C * 1e3 - k);
      return function() {
        e && clearTimeout(eA), v(Date.now() - aA);
      };
    }
  }, [C, m, s]), IA.useEffect(function() {
    if (!m && T && (e || k === 0)) {
      var aA = performance.now(), eA, CA = function b() {
        cancelAnimationFrame(eA), eA = requestAnimationFrame(function(Y) {
          var QA = Y + k - aA, BA = Math.min(QA / (C * 1e3), 1);
          x(BA * 100), BA < 1 && b();
        });
      };
      return CA(), function() {
        e && cancelAnimationFrame(eA);
      };
    }
  }, [C, k, m, T, s]);
  var lA = IA.useMemo(function() {
    return DB(r) === "object" && r !== null ? r : r ? {
      closeIcon: n
    } : {};
  }, [r, n]), FA = GS(lA, !0), cA = 100 - (!p || p < 0 ? 0 : p > 100 ? 100 : p), yA = "".concat(I, "-notice");
  return /* @__PURE__ */ IA.createElement("div", zI({}, l, {
    ref: g,
    className: pI(yA, Q, hg({}, "".concat(yA, "-closable"), r)),
    style: B,
    onMouseEnter: function(eA) {
      var CA;
      L(!0), l == null || (CA = l.onMouseEnter) === null || CA === void 0 || CA.call(l, eA);
    },
    onMouseLeave: function(eA) {
      var CA;
      L(!1), l == null || (CA = l.onMouseLeave) === null || CA === void 0 || CA.call(l, eA);
    },
    onClick: y
  }), /* @__PURE__ */ IA.createElement("div", {
    className: "".concat(yA, "-content")
  }, a), r && /* @__PURE__ */ IA.createElement("a", zI({
    tabIndex: 0,
    className: "".concat(yA, "-close"),
    onKeyDown: AA,
    "aria-label": "Close"
  }, FA, {
    onClick: function(eA) {
      eA.preventDefault(), eA.stopPropagation(), $();
    }
  }), lA.closeIcon), T && /* @__PURE__ */ IA.createElement("progress", {
    className: "".concat(yA, "-progress"),
    max: "100",
    value: cA
  }, cA + "%"));
}), Ul = /* @__PURE__ */ ig.createContext({}), MS = function(g) {
  var I = g.children, B = g.classNames;
  return /* @__PURE__ */ ig.createElement(Ul.Provider, {
    value: {
      classNames: B
    }
  }, I);
}, ID = 8, QD = 3, ED = 16, NS = function(g) {
  var I = {
    offset: ID,
    threshold: QD,
    gap: ED
  };
  if (g && DB(g) === "object") {
    var B, Q, E;
    I.offset = (B = g.offset) !== null && B !== void 0 ? B : ID, I.threshold = (Q = g.threshold) !== null && Q !== void 0 ? Q : QD, I.gap = (E = g.gap) !== null && E !== void 0 ? E : ED;
  }
  return [!!g, I];
}, uS = ["className", "style", "classNames", "styles"], kl = function(g) {
  var I = g.configList, B = g.placement, Q = g.prefixCls, E = g.className, C = g.style, o = g.motion, t = g.onAllNoticeRemoved, e = g.onNoticeClose, i = g.stack, a = IA.useContext(Ul), r = a.classNames, h = IA.useRef({}), n = IA.useState(null), l = Dg(n, 2), y = l[0], N = l[1], s = IA.useState([]), F = Dg(s, 2), u = F[0], U = F[1], J = I.map(function(m) {
    return {
      config: m,
      key: String(m.key)
    };
  }), L = NS(i), f = Dg(L, 2), d = f[0], p = f[1], x = p.offset, M = p.threshold, S = p.gap, k = d && (u.length > 0 || J.length <= M), v = typeof o == "function" ? o(B) : o;
  return IA.useEffect(function() {
    d && u.length > 1 && U(function(m) {
      return m.filter(function(T) {
        return J.some(function($) {
          var AA = $.key;
          return T === AA;
        });
      });
    });
  }, [u, J, d]), IA.useEffect(function() {
    var m;
    if (d && h.current[(m = J[J.length - 1]) === null || m === void 0 ? void 0 : m.key]) {
      var T;
      N(h.current[(T = J[J.length - 1]) === null || T === void 0 ? void 0 : T.key]);
    }
  }, [J, d]), /* @__PURE__ */ ig.createElement(Tu, zI({
    key: B,
    className: pI(Q, "".concat(Q, "-").concat(B), r == null ? void 0 : r.list, E, hg(hg({}, "".concat(Q, "-stack"), !!d), "".concat(Q, "-stack-expanded"), k)),
    style: C,
    keys: J,
    motionAppear: !0
  }, v, {
    onAllRemoved: function() {
      t(B);
    }
  }), function(m, T) {
    var $ = m.config, AA = m.className, lA = m.style, FA = m.index, cA = $, yA = cA.key, aA = cA.times, eA = String(yA), CA = $, b = CA.className, Y = CA.style, QA = CA.classNames, BA = CA.styles, iA = zE(CA, uS), rA = J.findIndex(function(ng) {
      return ng.key === eA;
    }), GA = {};
    if (d) {
      var _ = J.length - 1 - (rA > -1 ? rA : FA - 1), uA = B === "top" || B === "bottom" ? "-50%" : "0";
      if (_ > 0) {
        var HA, JA, VA;
        GA.height = k ? (HA = h.current[eA]) === null || HA === void 0 ? void 0 : HA.offsetHeight : y == null ? void 0 : y.offsetHeight;
        for (var $A = 0, XA = 0; XA < _; XA++) {
          var Ig;
          $A += ((Ig = h.current[J[J.length - 1 - XA].key]) === null || Ig === void 0 ? void 0 : Ig.offsetHeight) + S;
        }
        var jA = (k ? $A : _ * x) * (B.startsWith("top") ? 1 : -1), ag = !k && y !== null && y !== void 0 && y.offsetWidth && (JA = h.current[eA]) !== null && JA !== void 0 && JA.offsetWidth ? ((y == null ? void 0 : y.offsetWidth) - x * 2 * (_ < 3 ? _ : 3)) / ((VA = h.current[eA]) === null || VA === void 0 ? void 0 : VA.offsetWidth) : 1;
        GA.transform = "translate3d(".concat(uA, ", ").concat(jA, "px, 0) scaleX(").concat(ag, ")");
      } else
        GA.transform = "translate3d(".concat(uA, ", 0, 0)");
    }
    return /* @__PURE__ */ ig.createElement("div", {
      ref: T,
      className: pI("".concat(Q, "-notice-wrapper"), AA, QA == null ? void 0 : QA.wrapper),
      style: gg(gg(gg({}, lA), GA), BA == null ? void 0 : BA.wrapper),
      onMouseEnter: function() {
        return U(function(lg) {
          return lg.includes(eA) ? lg : [].concat(fI(lg), [eA]);
        });
      },
      onMouseLeave: function() {
        return U(function(lg) {
          return lg.filter(function(BB) {
            return BB !== eA;
          });
        });
      }
    }, /* @__PURE__ */ ig.createElement(Sl, zI({}, iA, {
      ref: function(lg) {
        rA > -1 ? h.current[eA] = lg : delete h.current[eA];
      },
      prefixCls: Q,
      classNames: QA,
      styles: BA,
      className: pI(b, r == null ? void 0 : r.notice),
      style: Y,
      times: aA,
      key: yA,
      eventKey: yA,
      onNoticeClose: e,
      hovering: d && u.length > 0
    })));
  });
};
PA.env.NODE_ENV !== "production" && (kl.displayName = "NoticeList");
var Hl = /* @__PURE__ */ IA.forwardRef(function(A, g) {
  var I = A.prefixCls, B = I === void 0 ? "rc-notification" : I, Q = A.container, E = A.motion, C = A.maxCount, o = A.className, t = A.style, e = A.onAllRemoved, i = A.stack, a = A.renderNotifications, r = IA.useState([]), h = Dg(r, 2), n = h[0], l = h[1], y = function(d) {
    var p, x = n.find(function(M) {
      return M.key === d;
    });
    x == null || (p = x.onClose) === null || p === void 0 || p.call(x), l(function(M) {
      return M.filter(function(S) {
        return S.key !== d;
      });
    });
  };
  IA.useImperativeHandle(g, function() {
    return {
      open: function(d) {
        l(function(p) {
          var x = fI(p), M = x.findIndex(function(v) {
            return v.key === d.key;
          }), S = gg({}, d);
          if (M >= 0) {
            var k;
            S.times = (((k = p[M]) === null || k === void 0 ? void 0 : k.times) || 0) + 1, x[M] = S;
          } else
            S.times = 0, x.push(S);
          return C > 0 && x.length > C && (x = x.slice(-C)), x;
        });
      },
      close: function(d) {
        y(d);
      },
      destroy: function() {
        l([]);
      }
    };
  });
  var N = IA.useState({}), s = Dg(N, 2), F = s[0], u = s[1];
  IA.useEffect(function() {
    var f = {};
    n.forEach(function(d) {
      var p = d.placement, x = p === void 0 ? "topRight" : p;
      x && (f[x] = f[x] || [], f[x].push(d));
    }), Object.keys(F).forEach(function(d) {
      f[d] = f[d] || [];
    }), u(f);
  }, [n]);
  var U = function(d) {
    u(function(p) {
      var x = gg({}, p), M = x[d] || [];
      return M.length || delete x[d], x;
    });
  }, J = IA.useRef(!1);
  if (IA.useEffect(function() {
    Object.keys(F).length > 0 ? J.current = !0 : J.current && (e == null || e(), J.current = !1);
  }, [F]), !Q)
    return null;
  var L = Object.keys(F);
  return /* @__PURE__ */ ur.createPortal(/* @__PURE__ */ IA.createElement(IA.Fragment, null, L.map(function(f) {
    var d = F[f], p = /* @__PURE__ */ IA.createElement(kl, {
      key: f,
      configList: d,
      placement: f,
      prefixCls: B,
      className: o == null ? void 0 : o(f),
      style: t == null ? void 0 : t(f),
      motion: E,
      onNoticeClose: y,
      onAllNoticeRemoved: U,
      stack: i
    });
    return a ? a(p, {
      prefixCls: B,
      key: f
    }) : p;
  })), Q);
});
PA.env.NODE_ENV !== "production" && (Hl.displayName = "Notifications");
var SS = ["getContainer", "motion", "prefixCls", "maxCount", "className", "style", "onAllRemoved", "stack", "renderNotifications"], US = function() {
  return document.body;
}, CD = 0;
function kS() {
  for (var A = {}, g = arguments.length, I = new Array(g), B = 0; B < g; B++)
    I[B] = arguments[B];
  return I.forEach(function(Q) {
    Q && Object.keys(Q).forEach(function(E) {
      var C = Q[E];
      C !== void 0 && (A[E] = C);
    });
  }), A;
}
function HS() {
  var A = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, g = A.getContainer, I = g === void 0 ? US : g, B = A.motion, Q = A.prefixCls, E = A.maxCount, C = A.className, o = A.style, t = A.onAllRemoved, e = A.stack, i = A.renderNotifications, a = zE(A, SS), r = IA.useState(), h = Dg(r, 2), n = h[0], l = h[1], y = IA.useRef(), N = /* @__PURE__ */ IA.createElement(Hl, {
    container: n,
    ref: y,
    prefixCls: Q,
    motion: B,
    maxCount: E,
    className: C,
    style: o,
    onAllRemoved: t,
    stack: e,
    renderNotifications: i
  }), s = IA.useState([]), F = Dg(s, 2), u = F[0], U = F[1], J = IA.useMemo(function() {
    return {
      open: function(f) {
        var d = kS(a, f);
        (d.key === null || d.key === void 0) && (d.key = "rc-notification-".concat(CD), CD += 1), U(function(p) {
          return [].concat(fI(p), [{
            type: "open",
            config: d
          }]);
        });
      },
      close: function(f) {
        U(function(d) {
          return [].concat(fI(d), [{
            type: "close",
            key: f
          }]);
        });
      },
      destroy: function() {
        U(function(f) {
          return [].concat(fI(f), [{
            type: "destroy"
          }]);
        });
      }
    };
  }, []);
  return IA.useEffect(function() {
    l(I());
  }), IA.useEffect(function() {
    y.current && u.length && (u.forEach(function(L) {
      switch (L.type) {
        case "open":
          y.current.open(L.config);
          break;
        case "close":
          y.current.close(L.key);
          break;
        case "destroy":
          y.current.destroy();
          break;
      }
    }), U(function(L) {
      return L.filter(function(f) {
        return !u.includes(f);
      });
    }));
  }, [u]), [J, N];
}
const pl = /* @__PURE__ */ ig.createContext(void 0);
PA.env.NODE_ENV !== "production" && (pl.displayName = "zIndexContext");
const HQ = 100, pS = 10, Yl = HQ * pS, YS = Yl + HQ, Jl = {
  Modal: HQ,
  Drawer: HQ,
  Popover: HQ,
  Popconfirm: HQ,
  Tooltip: HQ,
  Tour: HQ,
  FloatButton: HQ
}, JS = {
  SelectLike: 50,
  Dropdown: 50,
  DatePicker: 50,
  Menu: 50,
  ImagePreview: 1
};
function LS(A) {
  return A in Jl;
}
const rp = (A, g) => {
  const [, I] = $C(), B = ig.useContext(pl), Q = LS(A);
  let E;
  if (g !== void 0)
    E = [g, g];
  else {
    let C = B ?? 0;
    Q ? C += // Use preset token zIndex by default but not stack when has parent container
    (B ? 0 : I.zIndexPopupBase) + // Container offset
    Jl[A] : C += JS[A], E = [B === void 0 ? g : C, C];
  }
  if (PA.env.NODE_ENV !== "production") {
    const C = _C(A), o = I.zIndexPopupBase + YS, t = E[0] || 0;
    PA.env.NODE_ENV !== "production" && C(g !== void 0 || t <= o, "usage", "`zIndex` is over design token `zIndexPopupBase` too much. It may cause unexpected override.");
  }
  return E;
};
function be() {
  be = function() {
    return g;
  };
  var A, g = {}, I = Object.prototype, B = I.hasOwnProperty, Q = Object.defineProperty || function(m, T, $) {
    m[T] = $.value;
  }, E = typeof Symbol == "function" ? Symbol : {}, C = E.iterator || "@@iterator", o = E.asyncIterator || "@@asyncIterator", t = E.toStringTag || "@@toStringTag";
  function e(m, T, $) {
    return Object.defineProperty(m, T, {
      value: $,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), m[T];
  }
  try {
    e({}, "");
  } catch {
    e = function($, AA, lA) {
      return $[AA] = lA;
    };
  }
  function i(m, T, $, AA) {
    var lA = T && T.prototype instanceof N ? T : N, FA = Object.create(lA.prototype), cA = new k(AA || []);
    return Q(FA, "_invoke", {
      value: p(m, $, cA)
    }), FA;
  }
  function a(m, T, $) {
    try {
      return {
        type: "normal",
        arg: m.call(T, $)
      };
    } catch (AA) {
      return {
        type: "throw",
        arg: AA
      };
    }
  }
  g.wrap = i;
  var r = "suspendedStart", h = "suspendedYield", n = "executing", l = "completed", y = {};
  function N() {
  }
  function s() {
  }
  function F() {
  }
  var u = {};
  e(u, C, function() {
    return this;
  });
  var U = Object.getPrototypeOf, J = U && U(U(v([])));
  J && J !== I && B.call(J, C) && (u = J);
  var L = F.prototype = N.prototype = Object.create(u);
  function f(m) {
    ["next", "throw", "return"].forEach(function(T) {
      e(m, T, function($) {
        return this._invoke(T, $);
      });
    });
  }
  function d(m, T) {
    function $(lA, FA, cA, yA) {
      var aA = a(m[lA], m, FA);
      if (aA.type !== "throw") {
        var eA = aA.arg, CA = eA.value;
        return CA && DB(CA) == "object" && B.call(CA, "__await") ? T.resolve(CA.__await).then(function(b) {
          $("next", b, cA, yA);
        }, function(b) {
          $("throw", b, cA, yA);
        }) : T.resolve(CA).then(function(b) {
          eA.value = b, cA(eA);
        }, function(b) {
          return $("throw", b, cA, yA);
        });
      }
      yA(aA.arg);
    }
    var AA;
    Q(this, "_invoke", {
      value: function(FA, cA) {
        function yA() {
          return new T(function(aA, eA) {
            $(FA, cA, aA, eA);
          });
        }
        return AA = AA ? AA.then(yA, yA) : yA();
      }
    });
  }
  function p(m, T, $) {
    var AA = r;
    return function(lA, FA) {
      if (AA === n) throw Error("Generator is already running");
      if (AA === l) {
        if (lA === "throw") throw FA;
        return {
          value: A,
          done: !0
        };
      }
      for ($.method = lA, $.arg = FA; ; ) {
        var cA = $.delegate;
        if (cA) {
          var yA = x(cA, $);
          if (yA) {
            if (yA === y) continue;
            return yA;
          }
        }
        if ($.method === "next") $.sent = $._sent = $.arg;
        else if ($.method === "throw") {
          if (AA === r) throw AA = l, $.arg;
          $.dispatchException($.arg);
        } else $.method === "return" && $.abrupt("return", $.arg);
        AA = n;
        var aA = a(m, T, $);
        if (aA.type === "normal") {
          if (AA = $.done ? l : h, aA.arg === y) continue;
          return {
            value: aA.arg,
            done: $.done
          };
        }
        aA.type === "throw" && (AA = l, $.method = "throw", $.arg = aA.arg);
      }
    };
  }
  function x(m, T) {
    var $ = T.method, AA = m.iterator[$];
    if (AA === A) return T.delegate = null, $ === "throw" && m.iterator.return && (T.method = "return", T.arg = A, x(m, T), T.method === "throw") || $ !== "return" && (T.method = "throw", T.arg = new TypeError("The iterator does not provide a '" + $ + "' method")), y;
    var lA = a(AA, m.iterator, T.arg);
    if (lA.type === "throw") return T.method = "throw", T.arg = lA.arg, T.delegate = null, y;
    var FA = lA.arg;
    return FA ? FA.done ? (T[m.resultName] = FA.value, T.next = m.nextLoc, T.method !== "return" && (T.method = "next", T.arg = A), T.delegate = null, y) : FA : (T.method = "throw", T.arg = new TypeError("iterator result is not an object"), T.delegate = null, y);
  }
  function M(m) {
    var T = {
      tryLoc: m[0]
    };
    1 in m && (T.catchLoc = m[1]), 2 in m && (T.finallyLoc = m[2], T.afterLoc = m[3]), this.tryEntries.push(T);
  }
  function S(m) {
    var T = m.completion || {};
    T.type = "normal", delete T.arg, m.completion = T;
  }
  function k(m) {
    this.tryEntries = [{
      tryLoc: "root"
    }], m.forEach(M, this), this.reset(!0);
  }
  function v(m) {
    if (m || m === "") {
      var T = m[C];
      if (T) return T.call(m);
      if (typeof m.next == "function") return m;
      if (!isNaN(m.length)) {
        var $ = -1, AA = function lA() {
          for (; ++$ < m.length; ) if (B.call(m, $)) return lA.value = m[$], lA.done = !1, lA;
          return lA.value = A, lA.done = !0, lA;
        };
        return AA.next = AA;
      }
    }
    throw new TypeError(DB(m) + " is not iterable");
  }
  return s.prototype = F, Q(L, "constructor", {
    value: F,
    configurable: !0
  }), Q(F, "constructor", {
    value: s,
    configurable: !0
  }), s.displayName = e(F, t, "GeneratorFunction"), g.isGeneratorFunction = function(m) {
    var T = typeof m == "function" && m.constructor;
    return !!T && (T === s || (T.displayName || T.name) === "GeneratorFunction");
  }, g.mark = function(m) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(m, F) : (m.__proto__ = F, e(m, t, "GeneratorFunction")), m.prototype = Object.create(L), m;
  }, g.awrap = function(m) {
    return {
      __await: m
    };
  }, f(d.prototype), e(d.prototype, o, function() {
    return this;
  }), g.AsyncIterator = d, g.async = function(m, T, $, AA, lA) {
    lA === void 0 && (lA = Promise);
    var FA = new d(i(m, T, $, AA), lA);
    return g.isGeneratorFunction(T) ? FA : FA.next().then(function(cA) {
      return cA.done ? cA.value : FA.next();
    });
  }, f(L), e(L, t, "Generator"), e(L, C, function() {
    return this;
  }), e(L, "toString", function() {
    return "[object Generator]";
  }), g.keys = function(m) {
    var T = Object(m), $ = [];
    for (var AA in T) $.push(AA);
    return $.reverse(), function lA() {
      for (; $.length; ) {
        var FA = $.pop();
        if (FA in T) return lA.value = FA, lA.done = !1, lA;
      }
      return lA.done = !0, lA;
    };
  }, g.values = v, k.prototype = {
    constructor: k,
    reset: function(T) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = A, this.done = !1, this.delegate = null, this.method = "next", this.arg = A, this.tryEntries.forEach(S), !T) for (var $ in this) $.charAt(0) === "t" && B.call(this, $) && !isNaN(+$.slice(1)) && (this[$] = A);
    },
    stop: function() {
      this.done = !0;
      var T = this.tryEntries[0].completion;
      if (T.type === "throw") throw T.arg;
      return this.rval;
    },
    dispatchException: function(T) {
      if (this.done) throw T;
      var $ = this;
      function AA(eA, CA) {
        return cA.type = "throw", cA.arg = T, $.next = eA, CA && ($.method = "next", $.arg = A), !!CA;
      }
      for (var lA = this.tryEntries.length - 1; lA >= 0; --lA) {
        var FA = this.tryEntries[lA], cA = FA.completion;
        if (FA.tryLoc === "root") return AA("end");
        if (FA.tryLoc <= this.prev) {
          var yA = B.call(FA, "catchLoc"), aA = B.call(FA, "finallyLoc");
          if (yA && aA) {
            if (this.prev < FA.catchLoc) return AA(FA.catchLoc, !0);
            if (this.prev < FA.finallyLoc) return AA(FA.finallyLoc);
          } else if (yA) {
            if (this.prev < FA.catchLoc) return AA(FA.catchLoc, !0);
          } else {
            if (!aA) throw Error("try statement without catch or finally");
            if (this.prev < FA.finallyLoc) return AA(FA.finallyLoc);
          }
        }
      }
    },
    abrupt: function(T, $) {
      for (var AA = this.tryEntries.length - 1; AA >= 0; --AA) {
        var lA = this.tryEntries[AA];
        if (lA.tryLoc <= this.prev && B.call(lA, "finallyLoc") && this.prev < lA.finallyLoc) {
          var FA = lA;
          break;
        }
      }
      FA && (T === "break" || T === "continue") && FA.tryLoc <= $ && $ <= FA.finallyLoc && (FA = null);
      var cA = FA ? FA.completion : {};
      return cA.type = T, cA.arg = $, FA ? (this.method = "next", this.next = FA.finallyLoc, y) : this.complete(cA);
    },
    complete: function(T, $) {
      if (T.type === "throw") throw T.arg;
      return T.type === "break" || T.type === "continue" ? this.next = T.arg : T.type === "return" ? (this.rval = this.arg = T.arg, this.method = "return", this.next = "end") : T.type === "normal" && $ && (this.next = $), y;
    },
    finish: function(T) {
      for (var $ = this.tryEntries.length - 1; $ >= 0; --$) {
        var AA = this.tryEntries[$];
        if (AA.finallyLoc === T) return this.complete(AA.completion, AA.afterLoc), S(AA), y;
      }
    },
    catch: function(T) {
      for (var $ = this.tryEntries.length - 1; $ >= 0; --$) {
        var AA = this.tryEntries[$];
        if (AA.tryLoc === T) {
          var lA = AA.completion;
          if (lA.type === "throw") {
            var FA = lA.arg;
            S(AA);
          }
          return FA;
        }
      }
      throw Error("illegal catch attempt");
    },
    delegateYield: function(T, $, AA) {
      return this.delegate = {
        iterator: v(T),
        resultName: $,
        nextLoc: AA
      }, this.method === "next" && (this.arg = A), y;
    }
  }, g;
}
function eD(A, g, I, B, Q, E, C) {
  try {
    var o = A[E](C), t = o.value;
  } catch (e) {
    return void I(e);
  }
  o.done ? g(t) : Promise.resolve(t).then(B, Q);
}
function Ll(A) {
  return function() {
    var g = this, I = arguments;
    return new Promise(function(B, Q) {
      var E = A.apply(g, I);
      function C(t) {
        eD(E, B, Q, C, o, "next", t);
      }
      function o(t) {
        eD(E, B, Q, C, o, "throw", t);
      }
      C(void 0);
    });
  };
}
var At = gg({}, yw), KS = At.version, mS = At.render, xS = At.unmountComponentAtNode, Ti;
try {
  var vS = Number((KS || "").split(".")[0]);
  vS >= 18 && (Ti = At.createRoot);
} catch {
}
function tD(A) {
  var g = At.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  g && DB(g) === "object" && (g.usingClientEntryPoint = A);
}
var li = "__rc_react_root__";
function bS(A, g) {
  tD(!0);
  var I = g[li] || Ti(g);
  tD(!1), I.render(A), g[li] = I;
}
function ZS(A, g) {
  mS(A, g);
}
function TS(A, g) {
  if (Ti) {
    bS(A, g);
    return;
  }
  ZS(A, g);
}
function XS(A) {
  return Ir.apply(this, arguments);
}
function Ir() {
  return Ir = Ll(/* @__PURE__ */ be().mark(function A(g) {
    return be().wrap(function(B) {
      for (; ; ) switch (B.prev = B.next) {
        case 0:
          return B.abrupt("return", Promise.resolve().then(function() {
            var Q;
            (Q = g[li]) === null || Q === void 0 || Q.unmount(), delete g[li];
          }));
        case 1:
        case "end":
          return B.stop();
      }
    }, A);
  })), Ir.apply(this, arguments);
}
function zS(A) {
  xS(A);
}
function sp(A) {
  return Qr.apply(this, arguments);
}
function Qr() {
  return Qr = Ll(/* @__PURE__ */ be().mark(function A(g) {
    return be().wrap(function(B) {
      for (; ; ) switch (B.prev = B.next) {
        case 0:
          if (Ti === void 0) {
            B.next = 2;
            break;
          }
          return B.abrupt("return", XS(g));
        case 2:
          zS(g);
        case 3:
        case "end":
          return B.stop();
      }
    }, A);
  })), Qr.apply(this, arguments);
}
const VS = (A) => {
  const {
    componentCls: g,
    notificationMarginEdge: I,
    animationMaxHeight: B
  } = A, Q = `${g}-notice`, E = new Ge("antNotificationFadeIn", {
    "0%": {
      transform: "translate3d(100%, 0, 0)",
      opacity: 0
    },
    "100%": {
      transform: "translate3d(0, 0, 0)",
      opacity: 1
    }
  }), C = new Ge("antNotificationTopFadeIn", {
    "0%": {
      top: -B,
      opacity: 0
    },
    "100%": {
      top: 0,
      opacity: 1
    }
  }), o = new Ge("antNotificationBottomFadeIn", {
    "0%": {
      bottom: A.calc(B).mul(-1).equal(),
      opacity: 0
    },
    "100%": {
      bottom: 0,
      opacity: 1
    }
  }), t = new Ge("antNotificationLeftFadeIn", {
    "0%": {
      transform: "translate3d(-100%, 0, 0)",
      opacity: 0
    },
    "100%": {
      transform: "translate3d(0, 0, 0)",
      opacity: 1
    }
  });
  return {
    [g]: {
      [`&${g}-top, &${g}-bottom`]: {
        marginInline: 0,
        [Q]: {
          marginInline: "auto auto"
        }
      },
      [`&${g}-top`]: {
        [`${g}-fade-enter${g}-fade-enter-active, ${g}-fade-appear${g}-fade-appear-active`]: {
          animationName: C
        }
      },
      [`&${g}-bottom`]: {
        [`${g}-fade-enter${g}-fade-enter-active, ${g}-fade-appear${g}-fade-appear-active`]: {
          animationName: o
        }
      },
      [`&${g}-topRight, &${g}-bottomRight`]: {
        [`${g}-fade-enter${g}-fade-enter-active, ${g}-fade-appear${g}-fade-appear-active`]: {
          animationName: E
        }
      },
      [`&${g}-topLeft, &${g}-bottomLeft`]: {
        marginRight: {
          value: 0,
          _skip_check_: !0
        },
        marginLeft: {
          value: I,
          _skip_check_: !0
        },
        [Q]: {
          marginInlineEnd: "auto",
          marginInlineStart: 0
        },
        [`${g}-fade-enter${g}-fade-enter-active, ${g}-fade-appear${g}-fade-appear-active`]: {
          animationName: t
        }
      }
    }
  };
}, qS = ["top", "topLeft", "topRight", "bottom", "bottomLeft", "bottomRight"], PS = {
  topLeft: "left",
  topRight: "right",
  bottomLeft: "left",
  bottomRight: "right",
  top: "left",
  bottom: "left"
}, WS = (A, g) => {
  const {
    componentCls: I
  } = A;
  return {
    [`${I}-${g}`]: {
      [`&${I}-stack > ${I}-notice-wrapper`]: {
        [g.startsWith("top") ? "top" : "bottom"]: 0,
        [PS[g]]: {
          value: 0,
          _skip_check_: !0
        }
      }
    }
  };
}, OS = (A) => {
  const g = {};
  for (let I = 1; I < A.notificationStackLayer; I++)
    g[`&:nth-last-child(${I + 1})`] = {
      overflow: "hidden",
      [`& > ${A.componentCls}-notice`]: {
        opacity: 0,
        transition: `opacity ${A.motionDurationMid}`
      }
    };
  return Object.assign({
    [`&:not(:nth-last-child(-n+${A.notificationStackLayer}))`]: {
      opacity: 0,
      overflow: "hidden",
      color: "transparent",
      pointerEvents: "none"
    }
  }, g);
}, jS = (A) => {
  const g = {};
  for (let I = 1; I < A.notificationStackLayer; I++)
    g[`&:nth-last-child(${I + 1})`] = {
      background: A.colorBgBlur,
      backdropFilter: "blur(10px)",
      "-webkit-backdrop-filter": "blur(10px)"
    };
  return Object.assign({}, g);
}, _S = (A) => {
  const {
    componentCls: g
  } = A;
  return Object.assign({
    [`${g}-stack`]: {
      [`& > ${g}-notice-wrapper`]: Object.assign({
        transition: `all ${A.motionDurationSlow}, backdrop-filter 0s`,
        position: "absolute"
      }, OS(A))
    },
    [`${g}-stack:not(${g}-stack-expanded)`]: {
      [`& > ${g}-notice-wrapper`]: Object.assign({}, jS(A))
    },
    [`${g}-stack${g}-stack-expanded`]: {
      [`& > ${g}-notice-wrapper`]: {
        "&:not(:nth-last-child(-n + 1))": {
          opacity: 1,
          overflow: "unset",
          color: "inherit",
          pointerEvents: "auto",
          [`& > ${A.componentCls}-notice`]: {
            opacity: 1
          }
        },
        "&:after": {
          content: '""',
          position: "absolute",
          height: A.margin,
          width: "100%",
          insetInline: 0,
          bottom: A.calc(A.margin).mul(-1).equal(),
          background: "transparent",
          pointerEvents: "auto"
        }
      }
    }
  }, qS.map((I) => WS(A, I)).reduce((I, B) => Object.assign(Object.assign({}, I), B), {}));
}, Kl = (A) => {
  const {
    iconCls: g,
    componentCls: I,
    // .ant-notification
    boxShadow: B,
    fontSizeLG: Q,
    notificationMarginBottom: E,
    borderRadiusLG: C,
    colorSuccess: o,
    colorInfo: t,
    colorWarning: e,
    colorError: i,
    colorTextHeading: a,
    notificationBg: r,
    notificationPadding: h,
    notificationMarginEdge: n,
    notificationProgressBg: l,
    notificationProgressHeight: y,
    fontSize: N,
    lineHeight: s,
    width: F,
    notificationIconSize: u,
    colorText: U
  } = A, J = `${I}-notice`;
  return {
    position: "relative",
    marginBottom: E,
    marginInlineStart: "auto",
    background: r,
    borderRadius: C,
    boxShadow: B,
    [J]: {
      padding: h,
      width: F,
      maxWidth: `calc(100vw - ${eE(A.calc(n).mul(2).equal())})`,
      overflow: "hidden",
      lineHeight: s,
      wordWrap: "break-word"
    },
    [`${J}-message`]: {
      marginBottom: A.marginXS,
      color: a,
      fontSize: Q,
      lineHeight: A.lineHeightLG
    },
    [`${J}-description`]: {
      fontSize: N,
      color: U
    },
    [`${J}-closable ${J}-message`]: {
      paddingInlineEnd: A.paddingLG
    },
    [`${J}-with-icon ${J}-message`]: {
      marginBottom: A.marginXS,
      marginInlineStart: A.calc(A.marginSM).add(u).equal(),
      fontSize: Q
    },
    [`${J}-with-icon ${J}-description`]: {
      marginInlineStart: A.calc(A.marginSM).add(u).equal(),
      fontSize: N
    },
    // Icon & color style in different selector level
    // https://github.com/ant-design/ant-design/issues/16503
    // https://github.com/ant-design/ant-design/issues/15512
    [`${J}-icon`]: {
      position: "absolute",
      fontSize: u,
      lineHeight: 1,
      // icon-font
      [`&-success${g}`]: {
        color: o
      },
      [`&-info${g}`]: {
        color: t
      },
      [`&-warning${g}`]: {
        color: e
      },
      [`&-error${g}`]: {
        color: i
      }
    },
    [`${J}-close`]: Object.assign({
      position: "absolute",
      top: A.notificationPaddingVertical,
      insetInlineEnd: A.notificationPaddingHorizontal,
      color: A.colorIcon,
      outline: "none",
      width: A.notificationCloseButtonSize,
      height: A.notificationCloseButtonSize,
      borderRadius: A.borderRadiusSM,
      transition: `background-color ${A.motionDurationMid}, color ${A.motionDurationMid}`,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      "&:hover": {
        color: A.colorIconHover,
        backgroundColor: A.colorBgTextHover
      },
      "&:active": {
        backgroundColor: A.colorBgTextActive
      }
    }, nu(A)),
    [`${J}-progress`]: {
      position: "absolute",
      display: "block",
      appearance: "none",
      WebkitAppearance: "none",
      inlineSize: `calc(100% - ${eE(C)} * 2)`,
      left: {
        _skip_check_: !0,
        value: C
      },
      right: {
        _skip_check_: !0,
        value: C
      },
      bottom: 0,
      blockSize: y,
      border: 0,
      "&, &::-webkit-progress-bar": {
        borderRadius: C,
        backgroundColor: "rgba(0, 0, 0, 0.04)"
      },
      "&::-moz-progress-bar": {
        background: l
      },
      "&::-webkit-progress-value": {
        borderRadius: C,
        background: l
      }
    },
    [`${J}-btn`]: {
      float: "right",
      marginTop: A.marginSM
    }
  };
}, $S = (A) => {
  const {
    componentCls: g,
    // .ant-notification
    notificationMarginBottom: I,
    notificationMarginEdge: B,
    motionDurationMid: Q,
    motionEaseInOut: E
  } = A, C = `${g}-notice`, o = new Ge("antNotificationFadeOut", {
    "0%": {
      maxHeight: A.animationMaxHeight,
      marginBottom: I
    },
    "100%": {
      maxHeight: 0,
      marginBottom: 0,
      paddingTop: 0,
      paddingBottom: 0,
      opacity: 0
    }
  });
  return [
    // ============================ Holder ============================
    {
      [g]: Object.assign(Object.assign({}, iu(A)), {
        position: "fixed",
        zIndex: A.zIndexPopup,
        marginRight: {
          value: B,
          _skip_check_: !0
        },
        [`${g}-hook-holder`]: {
          position: "relative"
        },
        //  animation
        [`${g}-fade-appear-prepare`]: {
          opacity: "0 !important"
        },
        [`${g}-fade-enter, ${g}-fade-appear`]: {
          animationDuration: A.motionDurationMid,
          animationTimingFunction: E,
          animationFillMode: "both",
          opacity: 0,
          animationPlayState: "paused"
        },
        [`${g}-fade-leave`]: {
          animationTimingFunction: E,
          animationFillMode: "both",
          animationDuration: Q,
          animationPlayState: "paused"
        },
        [`${g}-fade-enter${g}-fade-enter-active, ${g}-fade-appear${g}-fade-appear-active`]: {
          animationPlayState: "running"
        },
        [`${g}-fade-leave${g}-fade-leave-active`]: {
          animationName: o,
          animationPlayState: "running"
        },
        // RTL
        "&-rtl": {
          direction: "rtl",
          [`${C}-btn`]: {
            float: "left"
          }
        }
      })
    },
    // ============================ Notice ============================
    {
      [g]: {
        [`${C}-wrapper`]: Object.assign({}, Kl(A))
      }
    }
  ];
}, ml = (A) => ({
  zIndexPopup: A.zIndexPopupBase + Yl + 50,
  width: 384
}), xl = (A) => {
  const g = A.paddingMD, I = A.paddingLG;
  return rs(A, {
    notificationBg: A.colorBgElevated,
    notificationPaddingVertical: g,
    notificationPaddingHorizontal: I,
    notificationIconSize: A.calc(A.fontSizeLG).mul(A.lineHeightLG).equal(),
    notificationCloseButtonSize: A.calc(A.controlHeightLG).mul(0.55).equal(),
    notificationMarginBottom: A.margin,
    notificationPadding: `${eE(A.paddingMD)} ${eE(A.paddingContentHorizontalLG)}`,
    notificationMarginEdge: A.marginLG,
    animationMaxHeight: 150,
    notificationStackLayer: 3,
    notificationProgressHeight: 2,
    notificationProgressBg: `linear-gradient(90deg, ${A.colorPrimaryBorderHover}, ${A.colorPrimary})`
  });
}, vl = cu("Notification", (A) => {
  const g = xl(A);
  return [$S(g), VS(g), _S(g)];
}, ml), AU = Du(["Notification", "PurePanel"], (A) => {
  const g = `${A.componentCls}-notice`, I = xl(A);
  return {
    [`${g}-pure-panel`]: Object.assign(Object.assign({}, Kl(I)), {
      width: I.width,
      maxWidth: `calc(100vw - ${eE(A.calc(I.notificationMarginEdge).mul(2).equal())})`,
      margin: 0
    })
  };
}, ml);
var gU = function(A, g) {
  var I = {};
  for (var B in A) Object.prototype.hasOwnProperty.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && typeof Object.getOwnPropertySymbols == "function") for (var Q = 0, B = Object.getOwnPropertySymbols(A); Q < B.length; Q++)
    g.indexOf(B[Q]) < 0 && Object.prototype.propertyIsEnumerable.call(A, B[Q]) && (I[B[Q]] = A[B[Q]]);
  return I;
};
function ns(A, g) {
  return g === null || g === !1 ? null : g || /* @__PURE__ */ IA.createElement(Gl, {
    className: `${A}-close-icon`
  });
}
const BU = {
  success: Rl,
  info: Nl,
  error: fl,
  warning: Ml
}, bl = (A) => {
  const {
    prefixCls: g,
    icon: I,
    type: B,
    message: Q,
    description: E,
    btn: C,
    role: o = "alert"
  } = A;
  let t = null;
  return I ? t = /* @__PURE__ */ IA.createElement("span", {
    className: `${g}-icon`
  }, I) : B && (t = /* @__PURE__ */ IA.createElement(BU[B] || null, {
    className: pI(`${g}-icon`, `${g}-icon-${B}`)
  })), /* @__PURE__ */ IA.createElement("div", {
    className: pI({
      [`${g}-with-icon`]: t
    }),
    role: o
  }, t, /* @__PURE__ */ IA.createElement("div", {
    className: `${g}-message`
  }, Q), /* @__PURE__ */ IA.createElement("div", {
    className: `${g}-description`
  }, E), C && /* @__PURE__ */ IA.createElement("div", {
    className: `${g}-btn`
  }, C));
}, IU = (A) => {
  const {
    prefixCls: g,
    className: I,
    icon: B,
    type: Q,
    message: E,
    description: C,
    btn: o,
    closable: t = !0,
    closeIcon: e,
    className: i
  } = A, a = gU(A, ["prefixCls", "className", "icon", "type", "message", "description", "btn", "closable", "closeIcon", "className"]), {
    getPrefixCls: r
  } = IA.useContext(tE), h = g || r("notification"), n = `${h}-notice`, l = ul(h), [y, N, s] = vl(h, l);
  return y(/* @__PURE__ */ IA.createElement("div", {
    className: pI(`${n}-pure-panel`, N, I, s, l)
  }, /* @__PURE__ */ IA.createElement(AU, {
    prefixCls: h
  }), /* @__PURE__ */ IA.createElement(Sl, Object.assign({}, a, {
    prefixCls: h,
    eventKey: "pure",
    duration: null,
    closable: t,
    className: pI({
      notificationClassName: i
    }),
    closeIcon: ns(h, e),
    content: /* @__PURE__ */ IA.createElement(bl, {
      prefixCls: n,
      icon: B,
      type: Q,
      message: E,
      description: C,
      btn: o
    })
  }))));
};
function QU(A, g, I) {
  let B;
  switch (A) {
    case "top":
      B = {
        left: "50%",
        transform: "translateX(-50%)",
        right: "auto",
        top: g,
        bottom: "auto"
      };
      break;
    case "topLeft":
      B = {
        left: 0,
        top: g,
        bottom: "auto"
      };
      break;
    case "topRight":
      B = {
        right: 0,
        top: g,
        bottom: "auto"
      };
      break;
    case "bottom":
      B = {
        left: "50%",
        transform: "translateX(-50%)",
        right: "auto",
        top: "auto",
        bottom: I
      };
      break;
    case "bottomLeft":
      B = {
        left: 0,
        top: "auto",
        bottom: I
      };
      break;
    default:
      B = {
        right: 0,
        top: "auto",
        bottom: I
      };
      break;
  }
  return B;
}
function EU(A) {
  return {
    motionName: `${A}-fade`
  };
}
var CU = function(A, g) {
  var I = {};
  for (var B in A) Object.prototype.hasOwnProperty.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && typeof Object.getOwnPropertySymbols == "function") for (var Q = 0, B = Object.getOwnPropertySymbols(A); Q < B.length; Q++)
    g.indexOf(B[Q]) < 0 && Object.prototype.propertyIsEnumerable.call(A, B[Q]) && (I[B[Q]] = A[B[Q]]);
  return I;
};
const iD = 24, eU = 4.5, tU = "topRight", iU = (A) => {
  let {
    children: g,
    prefixCls: I
  } = A;
  const B = ul(I), [Q, E, C] = vl(I, B);
  return Q(/* @__PURE__ */ ig.createElement(MS, {
    classNames: {
      list: pI(E, C, B)
    }
  }, g));
}, oU = (A, g) => {
  let {
    prefixCls: I,
    key: B
  } = g;
  return /* @__PURE__ */ ig.createElement(iU, {
    prefixCls: I,
    key: B
  }, A);
}, aU = /* @__PURE__ */ ig.forwardRef((A, g) => {
  const {
    top: I,
    bottom: B,
    prefixCls: Q,
    getContainer: E,
    maxCount: C,
    rtl: o,
    onAllRemoved: t,
    stack: e,
    duration: i,
    pauseOnHover: a = !0,
    showProgress: r
  } = A, {
    getPrefixCls: h,
    getPopupContainer: n,
    notification: l,
    direction: y
  } = IA.useContext(tE), [, N] = $C(), s = Q || h("notification"), F = (f) => QU(f, I ?? iD, B ?? iD), u = () => pI({
    [`${s}-rtl`]: o ?? y === "rtl"
  }), U = () => EU(s), [J, L] = HS({
    prefixCls: s,
    style: F,
    className: u,
    motion: U,
    closable: !0,
    closeIcon: ns(s),
    duration: i ?? eU,
    getContainer: () => (E == null ? void 0 : E()) || (n == null ? void 0 : n()) || document.body,
    maxCount: C,
    pauseOnHover: a,
    showProgress: r,
    onAllRemoved: t,
    renderNotifications: oU,
    stack: e === !1 ? !1 : {
      threshold: typeof e == "object" ? e == null ? void 0 : e.threshold : void 0,
      offset: 8,
      gap: N.margin
    }
  });
  return ig.useImperativeHandle(g, () => Object.assign(Object.assign({}, J), {
    prefixCls: s,
    notification: l
  })), L;
});
function Zl(A) {
  const g = ig.useRef(null), I = _C("Notification");
  return [ig.useMemo(() => {
    const Q = (t) => {
      var e;
      if (!g.current) {
        PA.env.NODE_ENV !== "production" && I(!1, "usage", "You are calling notice in render which will break in React 18 concurrent mode. Please trigger in effect instead.");
        return;
      }
      const {
        open: i,
        prefixCls: a,
        notification: r
      } = g.current, h = `${a}-notice`, {
        message: n,
        description: l,
        icon: y,
        type: N,
        btn: s,
        className: F,
        style: u,
        role: U = "alert",
        closeIcon: J,
        closable: L
      } = t, f = CU(t, ["message", "description", "icon", "type", "btn", "className", "style", "role", "closeIcon", "closable"]), d = ns(h, typeof J < "u" ? J : r == null ? void 0 : r.closeIcon);
      return i(Object.assign(Object.assign({
        // use placement from props instead of hard-coding "topRight"
        placement: (e = A == null ? void 0 : A.placement) !== null && e !== void 0 ? e : tU
      }, f), {
        content: /* @__PURE__ */ ig.createElement(bl, {
          prefixCls: h,
          icon: y,
          type: N,
          message: n,
          description: l,
          btn: s,
          role: U
        }),
        className: pI(N && `${h}-${N}`, F, r == null ? void 0 : r.className),
        style: Object.assign(Object.assign({}, r == null ? void 0 : r.style), u),
        closeIcon: d,
        closable: L ?? !!d
      }));
    }, C = {
      open: Q,
      destroy: (t) => {
        var e, i;
        t !== void 0 ? (e = g.current) === null || e === void 0 || e.close(t) : (i = g.current) === null || i === void 0 || i.destroy();
      }
    };
    return ["success", "info", "warning", "error"].forEach((t) => {
      C[t] = (e) => Q(Object.assign(Object.assign({}, e), {
        type: t
      }));
    }), C;
  }, []), /* @__PURE__ */ ig.createElement(aU, Object.assign({
    key: "notification-holder"
  }, A, {
    ref: g
  }))];
}
function rU(A) {
  return Zl(A);
}
const sU = /* @__PURE__ */ ig.createContext({});
let _I = null, jt = (A) => A(), yi = [], Ze = {};
function oD() {
  const {
    getContainer: A,
    rtl: g,
    maxCount: I,
    top: B,
    bottom: Q,
    showProgress: E,
    pauseOnHover: C
  } = Ze, o = (A == null ? void 0 : A()) || document.body;
  return {
    getContainer: () => o,
    rtl: g,
    maxCount: I,
    top: B,
    bottom: Q,
    showProgress: E,
    pauseOnHover: C
  };
}
const nU = /* @__PURE__ */ ig.forwardRef((A, g) => {
  const {
    notificationConfig: I,
    sync: B
  } = A, {
    getPrefixCls: Q
  } = IA.useContext(tE), E = Ze.prefixCls || Q("notification"), C = IA.useContext(sU), [o, t] = Zl(Object.assign(Object.assign(Object.assign({}, I), {
    prefixCls: E
  }), C.notification));
  return ig.useEffect(B, []), ig.useImperativeHandle(g, () => {
    const e = Object.assign({}, o);
    return Object.keys(e).forEach((i) => {
      e[i] = function() {
        return B(), o[i].apply(o, arguments);
      };
    }), {
      instance: e,
      sync: B
    };
  }), t;
}), cU = /* @__PURE__ */ ig.forwardRef((A, g) => {
  const [I, B] = ig.useState(oD), Q = () => {
    B(oD);
  };
  ig.useEffect(Q, []);
  const E = ll(), C = E.getRootPrefixCls(), o = E.getIconPrefixCls(), t = E.getTheme(), e = /* @__PURE__ */ ig.createElement(nU, {
    ref: g,
    sync: Q,
    notificationConfig: I
  });
  return /* @__PURE__ */ ig.createElement(OE, {
    prefixCls: C,
    iconPrefixCls: o,
    theme: t
  }, E.holderRender ? E.holderRender(e) : e);
});
function cs() {
  if (!_I) {
    const A = document.createDocumentFragment(), g = {
      fragment: A
    };
    _I = g, jt(() => {
      TS(/* @__PURE__ */ ig.createElement(cU, {
        ref: (I) => {
          const {
            instance: B,
            sync: Q
          } = I || {};
          Promise.resolve().then(() => {
            !g.instance && B && (g.instance = B, g.sync = Q, cs());
          });
        }
      }), A);
    });
    return;
  }
  _I.instance && (yi.forEach((A) => {
    switch (A.type) {
      case "open": {
        jt(() => {
          _I.instance.open(Object.assign(Object.assign({}, Ze), A.config));
        });
        break;
      }
      case "destroy":
        jt(() => {
          _I == null || _I.instance.destroy(A.key);
        });
        break;
    }
  }), yi = []);
}
function DU(A) {
  Ze = Object.assign(Object.assign({}, Ze), A), jt(() => {
    var g;
    (g = _I == null ? void 0 : _I.sync) === null || g === void 0 || g.call(_I);
  });
}
function Tl(A) {
  const g = ll();
  PA.env.NODE_ENV !== "production" && !g.holderRender && qu("notification"), yi.push({
    type: "open",
    config: A
  }), cs();
}
const hU = (A) => {
  yi.push({
    type: "destroy",
    key: A
  }), cs();
}, lU = ["success", "info", "warning", "error"], yU = {
  open: Tl,
  destroy: hU,
  config: DU,
  useNotification: rU,
  _InternalPanelDoNotUseOrYouWillBeFired: IU
}, Er = yU;
lU.forEach((A) => {
  Er[A] = (g) => Tl(Object.assign(Object.assign({}, g), {
    type: A
  }));
});
PA.env.NODE_ENV;
PA.env.NODE_ENV;
const Xl = ({ isOpen: A, onClose: g, className: I, overlayClassName: B, title: Q, containerClassName: E, contentClassName: C, children: o, footer: t }) => {
  const e = A ? /* @__PURE__ */ sA.jsxs("div", { className: Rg(
    "fixed inset-0 z-50 flex items-center justify-center",
    I
  ), children: [
    /* @__PURE__ */ sA.jsx("div", { className: Rg(
      "fixed inset-0 bg-black/80",
      B
    ) }),
    /* @__PURE__ */ sA.jsxs("div", { className: Rg(
      "relative z-50 bg-background text-primary rounded-lg max-w-[600px] w-full overflow-hidden",
      E
    ), children: [
      /* @__PURE__ */ sA.jsxs("div", { className: Rg(
        "flex items-center justify-between py-[14px] px-[20px]",
        "border-b border-[#ebebeb] pb-2"
      ), children: [
        /* @__PURE__ */ sA.jsx("p", { children: Q }),
        /* @__PURE__ */ sA.jsx(
          "button",
          {
            onClick: g,
            className: "text-[#929292] hover:text-primary/80",
            children: /* @__PURE__ */ sA.jsx(kr, {})
          }
        )
      ] }),
      /* @__PURE__ */ sA.jsx("div", { className: Rg(
        "py-3 px-6",
        C
      ), children: o }),
      t && /* @__PURE__ */ sA.jsx("footer", { className: "border-t border-[#ebebeb] py-[18px] px-[24px]", children: t })
    ] })
  ] }) : null;
  if (typeof window < "u")
    return pe.createPortal(
      e,
      document.body
    );
};
var gt = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set(), this.subscribe = this.subscribe.bind(this);
  }
  subscribe(A) {
    return this.listeners.add(A), this.onSubscribe(), () => {
      this.listeners.delete(A), this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
}, VE = typeof window > "u" || "Deno" in globalThis;
function xI() {
}
function wU(A, g) {
  return typeof A == "function" ? A(g) : A;
}
function Cr(A) {
  return typeof A == "number" && A >= 0 && A !== 1 / 0;
}
function zl(A, g) {
  return Math.max(A + (g || 0) - Date.now(), 0);
}
function FC(A, g) {
  return typeof A == "function" ? A(g) : A;
}
function $I(A, g) {
  return typeof A == "function" ? A(g) : A;
}
function aD(A, g) {
  const {
    type: I = "all",
    exact: B,
    fetchStatus: Q,
    predicate: E,
    queryKey: C,
    stale: o
  } = A;
  if (C) {
    if (B) {
      if (g.queryHash !== Ds(C, g.options))
        return !1;
    } else if (!Xe(g.queryKey, C))
      return !1;
  }
  if (I !== "all") {
    const t = g.isActive();
    if (I === "active" && !t || I === "inactive" && t)
      return !1;
  }
  return !(typeof o == "boolean" && g.isStale() !== o || Q && Q !== g.state.fetchStatus || E && !E(g));
}
function rD(A, g) {
  const { exact: I, status: B, predicate: Q, mutationKey: E } = A;
  if (E) {
    if (!g.options.mutationKey)
      return !1;
    if (I) {
      if (Te(g.options.mutationKey) !== Te(E))
        return !1;
    } else if (!Xe(g.options.mutationKey, E))
      return !1;
  }
  return !(B && g.state.status !== B || Q && !Q(g));
}
function Ds(A, g) {
  return ((g == null ? void 0 : g.queryKeyHashFn) || Te)(A);
}
function Te(A) {
  return JSON.stringify(
    A,
    (g, I) => ir(I) ? Object.keys(I).sort().reduce((B, Q) => (B[Q] = I[Q], B), {}) : I
  );
}
function Xe(A, g) {
  return A === g ? !0 : typeof A != typeof g ? !1 : A && g && typeof A == "object" && typeof g == "object" ? !Object.keys(g).some((I) => !Xe(A[I], g[I])) : !1;
}
function er(A, g) {
  if (A === g)
    return A;
  const I = sD(A) && sD(g);
  if (I || ir(A) && ir(g)) {
    const B = I ? A : Object.keys(A), Q = B.length, E = I ? g : Object.keys(g), C = E.length, o = I ? [] : {};
    let t = 0;
    for (let e = 0; e < C; e++) {
      const i = I ? e : E[e];
      (!I && B.includes(i) || I) && A[i] === void 0 && g[i] === void 0 ? (o[i] = void 0, t++) : (o[i] = er(A[i], g[i]), o[i] === A[i] && A[i] !== void 0 && t++);
    }
    return Q === C && t === Q ? A : o;
  }
  return g;
}
function tr(A, g) {
  if (!g || Object.keys(A).length !== Object.keys(g).length)
    return !1;
  for (const I in A)
    if (A[I] !== g[I])
      return !1;
  return !0;
}
function sD(A) {
  return Array.isArray(A) && A.length === Object.keys(A).length;
}
function ir(A) {
  if (!nD(A))
    return !1;
  const g = A.constructor;
  if (g === void 0)
    return !0;
  const I = g.prototype;
  return !(!nD(I) || !I.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(A) !== Object.prototype);
}
function nD(A) {
  return Object.prototype.toString.call(A) === "[object Object]";
}
function dU(A) {
  return new Promise((g) => {
    setTimeout(g, A);
  });
}
function or(A, g, I) {
  if (typeof I.structuralSharing == "function")
    return I.structuralSharing(A, g);
  if (I.structuralSharing !== !1) {
    if (PA.env.NODE_ENV !== "production")
      try {
        return er(A, g);
      } catch (B) {
        console.error(
          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${I.queryHash}]: ${B}`
        );
      }
    return er(A, g);
  }
  return g;
}
function FU(A, g, I = 0) {
  const B = [...A, g];
  return I && B.length > I ? B.slice(1) : B;
}
function RU(A, g, I = 0) {
  const B = [g, ...A];
  return I && B.length > I ? B.slice(0, -1) : B;
}
var wi = Symbol();
function Vl(A, g) {
  return PA.env.NODE_ENV !== "production" && A.queryFn === wi && console.error(
    `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${A.queryHash}'`
  ), !A.queryFn && (g != null && g.initialPromise) ? () => g.initialPromise : !A.queryFn || A.queryFn === wi ? () => Promise.reject(new Error(`Missing queryFn: '${A.queryHash}'`)) : A.queryFn;
}
var pE, ZQ, fC, HD, fU = (HD = class extends gt {
  constructor() {
    super();
    wg(this, pE);
    wg(this, ZQ);
    wg(this, fC);
    Qg(this, fC, (g) => {
      if (!VE && window.addEventListener) {
        const I = () => g();
        return window.addEventListener("visibilitychange", I, !1), () => {
          window.removeEventListener("visibilitychange", I);
        };
      }
    });
  }
  onSubscribe() {
    MA(this, ZQ) || this.setEventListener(MA(this, fC));
  }
  onUnsubscribe() {
    var g;
    this.hasListeners() || ((g = MA(this, ZQ)) == null || g.call(this), Qg(this, ZQ, void 0));
  }
  setEventListener(g) {
    var I;
    Qg(this, fC, g), (I = MA(this, ZQ)) == null || I.call(this), Qg(this, ZQ, g((B) => {
      typeof B == "boolean" ? this.setFocused(B) : this.onFocus();
    }));
  }
  setFocused(g) {
    MA(this, pE) !== g && (Qg(this, pE, g), this.onFocus());
  }
  onFocus() {
    const g = this.isFocused();
    this.listeners.forEach((I) => {
      I(g);
    });
  }
  isFocused() {
    var g;
    return typeof MA(this, pE) == "boolean" ? MA(this, pE) : ((g = globalThis.document) == null ? void 0 : g.visibilityState) !== "hidden";
  }
}, pE = new WeakMap(), ZQ = new WeakMap(), fC = new WeakMap(), HD), hs = new fU(), GC, TQ, MC, pD, GU = (pD = class extends gt {
  constructor() {
    super();
    wg(this, GC, !0);
    wg(this, TQ);
    wg(this, MC);
    Qg(this, MC, (g) => {
      if (!VE && window.addEventListener) {
        const I = () => g(!0), B = () => g(!1);
        return window.addEventListener("online", I, !1), window.addEventListener("offline", B, !1), () => {
          window.removeEventListener("online", I), window.removeEventListener("offline", B);
        };
      }
    });
  }
  onSubscribe() {
    MA(this, TQ) || this.setEventListener(MA(this, MC));
  }
  onUnsubscribe() {
    var g;
    this.hasListeners() || ((g = MA(this, TQ)) == null || g.call(this), Qg(this, TQ, void 0));
  }
  setEventListener(g) {
    var I;
    Qg(this, MC, g), (I = MA(this, TQ)) == null || I.call(this), Qg(this, TQ, g(this.setOnline.bind(this)));
  }
  setOnline(g) {
    MA(this, GC) !== g && (Qg(this, GC, g), this.listeners.forEach((B) => {
      B(g);
    }));
  }
  isOnline() {
    return MA(this, GC);
  }
}, GC = new WeakMap(), TQ = new WeakMap(), MC = new WeakMap(), pD), di = new GU();
function ar() {
  let A, g;
  const I = new Promise((Q, E) => {
    A = Q, g = E;
  });
  I.status = "pending", I.catch(() => {
  });
  function B(Q) {
    Object.assign(I, Q), delete I.resolve, delete I.reject;
  }
  return I.resolve = (Q) => {
    B({
      status: "fulfilled",
      value: Q
    }), A(Q);
  }, I.reject = (Q) => {
    B({
      status: "rejected",
      reason: Q
    }), g(Q);
  }, I;
}
function MU(A) {
  return Math.min(1e3 * 2 ** A, 3e4);
}
function ql(A) {
  return (A ?? "online") === "online" ? di.isOnline() : !0;
}
var Pl = class extends Error {
  constructor(A) {
    super("CancelledError"), this.revert = A == null ? void 0 : A.revert, this.silent = A == null ? void 0 : A.silent;
  }
};
function bo(A) {
  return A instanceof Pl;
}
function Wl(A) {
  let g = !1, I = 0, B = !1, Q;
  const E = ar(), C = (l) => {
    var y;
    B || (r(new Pl(l)), (y = A.abort) == null || y.call(A));
  }, o = () => {
    g = !0;
  }, t = () => {
    g = !1;
  }, e = () => hs.isFocused() && (A.networkMode === "always" || di.isOnline()) && A.canRun(), i = () => ql(A.networkMode) && A.canRun(), a = (l) => {
    var y;
    B || (B = !0, (y = A.onSuccess) == null || y.call(A, l), Q == null || Q(), E.resolve(l));
  }, r = (l) => {
    var y;
    B || (B = !0, (y = A.onError) == null || y.call(A, l), Q == null || Q(), E.reject(l));
  }, h = () => new Promise((l) => {
    var y;
    Q = (N) => {
      (B || e()) && l(N);
    }, (y = A.onPause) == null || y.call(A);
  }).then(() => {
    var l;
    Q = void 0, B || (l = A.onContinue) == null || l.call(A);
  }), n = () => {
    if (B)
      return;
    let l;
    const y = I === 0 ? A.initialPromise : void 0;
    try {
      l = y ?? A.fn();
    } catch (N) {
      l = Promise.reject(N);
    }
    Promise.resolve(l).then(a).catch((N) => {
      var J;
      if (B)
        return;
      const s = A.retry ?? (VE ? 0 : 3), F = A.retryDelay ?? MU, u = typeof F == "function" ? F(I, N) : F, U = s === !0 || typeof s == "number" && I < s || typeof s == "function" && s(I, N);
      if (g || !U) {
        r(N);
        return;
      }
      I++, (J = A.onFail) == null || J.call(A, I, N), dU(u).then(() => e() ? void 0 : h()).then(() => {
        g ? r(N) : n();
      });
    });
  };
  return {
    promise: E,
    cancel: C,
    continue: () => (Q == null || Q(), E),
    cancelRetry: o,
    continueRetry: t,
    canStart: i,
    start: () => (i() ? n() : h().then(n), E)
  };
}
function NU() {
  let A = [], g = 0, I = (o) => {
    o();
  }, B = (o) => {
    o();
  }, Q = (o) => setTimeout(o, 0);
  const E = (o) => {
    g ? A.push(o) : Q(() => {
      I(o);
    });
  }, C = () => {
    const o = A;
    A = [], o.length && Q(() => {
      B(() => {
        o.forEach((t) => {
          I(t);
        });
      });
    });
  };
  return {
    batch: (o) => {
      let t;
      g++;
      try {
        t = o();
      } finally {
        g--, g || C();
      }
      return t;
    },
    /**
     * All calls to the wrapped function will be batched.
     */
    batchCalls: (o) => (...t) => {
      E(() => {
        o(...t);
      });
    },
    schedule: E,
    /**
     * Use this method to set a custom notify function.
     * This can be used to for example wrap notifications with `React.act` while running tests.
     */
    setNotifyFunction: (o) => {
      I = o;
    },
    /**
     * Use this method to set a custom function to batch notifications together into a single tick.
     * By default React Query will use the batch function provided by ReactDOM or React Native.
     */
    setBatchNotifyFunction: (o) => {
      B = o;
    },
    setScheduler: (o) => {
      Q = o;
    }
  };
}
var BI = NU(), YE, YD, Ol = (YD = class {
  constructor() {
    wg(this, YE);
  }
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(), Cr(this.gcTime) && Qg(this, YE, setTimeout(() => {
      this.optionalRemove();
    }, this.gcTime));
  }
  updateGcTime(A) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      A ?? (VE ? 1 / 0 : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    MA(this, YE) && (clearTimeout(MA(this, YE)), Qg(this, YE, void 0));
  }
}, YE = new WeakMap(), YD), NC, uC, mI, CI, Ve, JE, OI, SQ, JD, uU = (JD = class extends Ol {
  constructor(g) {
    super();
    wg(this, OI);
    wg(this, NC);
    wg(this, uC);
    wg(this, mI);
    wg(this, CI);
    wg(this, Ve);
    wg(this, JE);
    Qg(this, JE, !1), Qg(this, Ve, g.defaultOptions), this.setOptions(g.options), this.observers = [], Qg(this, mI, g.cache), this.queryKey = g.queryKey, this.queryHash = g.queryHash, Qg(this, NC, SU(this.options)), this.state = g.state ?? MA(this, NC), this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    var g;
    return (g = MA(this, CI)) == null ? void 0 : g.promise;
  }
  setOptions(g) {
    this.options = { ...MA(this, Ve), ...g }, this.updateGcTime(this.options.gcTime);
  }
  optionalRemove() {
    !this.observers.length && this.state.fetchStatus === "idle" && MA(this, mI).remove(this);
  }
  setData(g, I) {
    const B = or(this.state.data, g, this.options);
    return Og(this, OI, SQ).call(this, {
      data: B,
      type: "success",
      dataUpdatedAt: I == null ? void 0 : I.updatedAt,
      manual: I == null ? void 0 : I.manual
    }), B;
  }
  setState(g, I) {
    Og(this, OI, SQ).call(this, { type: "setState", state: g, setStateOptions: I });
  }
  cancel(g) {
    var B, Q;
    const I = (B = MA(this, CI)) == null ? void 0 : B.promise;
    return (Q = MA(this, CI)) == null || Q.cancel(g), I ? I.then(xI).catch(xI) : Promise.resolve();
  }
  destroy() {
    super.destroy(), this.cancel({ silent: !0 });
  }
  reset() {
    this.destroy(), this.setState(MA(this, NC));
  }
  isActive() {
    return this.observers.some(
      (g) => $I(g.options.enabled, this) !== !1
    );
  }
  isDisabled() {
    return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === wi || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
  }
  isStale() {
    return this.state.isInvalidated ? !0 : this.getObserversCount() > 0 ? this.observers.some(
      (g) => g.getCurrentResult().isStale
    ) : this.state.data === void 0;
  }
  isStaleByTime(g = 0) {
    return this.state.isInvalidated || this.state.data === void 0 || !zl(this.state.dataUpdatedAt, g);
  }
  onFocus() {
    var I;
    const g = this.observers.find((B) => B.shouldFetchOnWindowFocus());
    g == null || g.refetch({ cancelRefetch: !1 }), (I = MA(this, CI)) == null || I.continue();
  }
  onOnline() {
    var I;
    const g = this.observers.find((B) => B.shouldFetchOnReconnect());
    g == null || g.refetch({ cancelRefetch: !1 }), (I = MA(this, CI)) == null || I.continue();
  }
  addObserver(g) {
    this.observers.includes(g) || (this.observers.push(g), this.clearGcTimeout(), MA(this, mI).notify({ type: "observerAdded", query: this, observer: g }));
  }
  removeObserver(g) {
    this.observers.includes(g) && (this.observers = this.observers.filter((I) => I !== g), this.observers.length || (MA(this, CI) && (MA(this, JE) ? MA(this, CI).cancel({ revert: !0 }) : MA(this, CI).cancelRetry()), this.scheduleGc()), MA(this, mI).notify({ type: "observerRemoved", query: this, observer: g }));
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    this.state.isInvalidated || Og(this, OI, SQ).call(this, { type: "invalidate" });
  }
  fetch(g, I) {
    var t, e, i;
    if (this.state.fetchStatus !== "idle") {
      if (this.state.data !== void 0 && (I != null && I.cancelRefetch))
        this.cancel({ silent: !0 });
      else if (MA(this, CI))
        return MA(this, CI).continueRetry(), MA(this, CI).promise;
    }
    if (g && this.setOptions(g), !this.options.queryFn) {
      const a = this.observers.find((r) => r.options.queryFn);
      a && this.setOptions(a.options);
    }
    PA.env.NODE_ENV !== "production" && (Array.isArray(this.options.queryKey) || console.error(
      "As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']"
    ));
    const B = new AbortController(), Q = (a) => {
      Object.defineProperty(a, "signal", {
        enumerable: !0,
        get: () => (Qg(this, JE, !0), B.signal)
      });
    }, E = () => {
      const a = Vl(this.options, I), r = {
        queryKey: this.queryKey,
        meta: this.meta
      };
      return Q(r), Qg(this, JE, !1), this.options.persister ? this.options.persister(
        a,
        r,
        this
      ) : a(r);
    }, C = {
      fetchOptions: I,
      options: this.options,
      queryKey: this.queryKey,
      state: this.state,
      fetchFn: E
    };
    Q(C), (t = this.options.behavior) == null || t.onFetch(
      C,
      this
    ), Qg(this, uC, this.state), (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((e = C.fetchOptions) == null ? void 0 : e.meta)) && Og(this, OI, SQ).call(this, { type: "fetch", meta: (i = C.fetchOptions) == null ? void 0 : i.meta });
    const o = (a) => {
      var r, h, n, l;
      bo(a) && a.silent || Og(this, OI, SQ).call(this, {
        type: "error",
        error: a
      }), bo(a) || ((h = (r = MA(this, mI).config).onError) == null || h.call(
        r,
        a,
        this
      ), (l = (n = MA(this, mI).config).onSettled) == null || l.call(
        n,
        this.state.data,
        a,
        this
      )), this.scheduleGc();
    };
    return Qg(this, CI, Wl({
      initialPromise: I == null ? void 0 : I.initialPromise,
      fn: C.fetchFn,
      abort: B.abort.bind(B),
      onSuccess: (a) => {
        var r, h, n, l;
        if (a === void 0) {
          PA.env.NODE_ENV !== "production" && console.error(
            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`
          ), o(new Error(`${this.queryHash} data is undefined`));
          return;
        }
        try {
          this.setData(a);
        } catch (y) {
          o(y);
          return;
        }
        (h = (r = MA(this, mI).config).onSuccess) == null || h.call(r, a, this), (l = (n = MA(this, mI).config).onSettled) == null || l.call(
          n,
          a,
          this.state.error,
          this
        ), this.scheduleGc();
      },
      onError: o,
      onFail: (a, r) => {
        Og(this, OI, SQ).call(this, { type: "failed", failureCount: a, error: r });
      },
      onPause: () => {
        Og(this, OI, SQ).call(this, { type: "pause" });
      },
      onContinue: () => {
        Og(this, OI, SQ).call(this, { type: "continue" });
      },
      retry: C.options.retry,
      retryDelay: C.options.retryDelay,
      networkMode: C.options.networkMode,
      canRun: () => !0
    })), MA(this, CI).start();
  }
}, NC = new WeakMap(), uC = new WeakMap(), mI = new WeakMap(), CI = new WeakMap(), Ve = new WeakMap(), JE = new WeakMap(), OI = new WeakSet(), SQ = function(g) {
  const I = (B) => {
    switch (g.type) {
      case "failed":
        return {
          ...B,
          fetchFailureCount: g.failureCount,
          fetchFailureReason: g.error
        };
      case "pause":
        return {
          ...B,
          fetchStatus: "paused"
        };
      case "continue":
        return {
          ...B,
          fetchStatus: "fetching"
        };
      case "fetch":
        return {
          ...B,
          ...jl(B.data, this.options),
          fetchMeta: g.meta ?? null
        };
      case "success":
        return {
          ...B,
          data: g.data,
          dataUpdateCount: B.dataUpdateCount + 1,
          dataUpdatedAt: g.dataUpdatedAt ?? Date.now(),
          error: null,
          isInvalidated: !1,
          status: "success",
          ...!g.manual && {
            fetchStatus: "idle",
            fetchFailureCount: 0,
            fetchFailureReason: null
          }
        };
      case "error":
        const Q = g.error;
        return bo(Q) && Q.revert && MA(this, uC) ? { ...MA(this, uC), fetchStatus: "idle" } : {
          ...B,
          error: Q,
          errorUpdateCount: B.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: B.fetchFailureCount + 1,
          fetchFailureReason: Q,
          fetchStatus: "idle",
          status: "error"
        };
      case "invalidate":
        return {
          ...B,
          isInvalidated: !0
        };
      case "setState":
        return {
          ...B,
          ...g.state
        };
    }
  };
  this.state = I(this.state), BI.batch(() => {
    this.observers.forEach((B) => {
      B.onQueryUpdate();
    }), MA(this, mI).notify({ query: this, type: "updated", action: g });
  });
}, JD);
function jl(A, g) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: ql(g.networkMode) ? "fetching" : "paused",
    ...A === void 0 && {
      error: null,
      status: "pending"
    }
  };
}
function SU(A) {
  const g = typeof A.initialData == "function" ? A.initialData() : A.initialData, I = g !== void 0, B = I ? typeof A.initialDataUpdatedAt == "function" ? A.initialDataUpdatedAt() : A.initialDataUpdatedAt : 0;
  return {
    data: g,
    dataUpdateCount: 0,
    dataUpdatedAt: I ? B ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: I ? "success" : "pending",
    fetchStatus: "idle"
  };
}
var eQ, LD, UU = (LD = class extends gt {
  constructor(g = {}) {
    super();
    wg(this, eQ);
    this.config = g, Qg(this, eQ, /* @__PURE__ */ new Map());
  }
  build(g, I, B) {
    const Q = I.queryKey, E = I.queryHash ?? Ds(Q, I);
    let C = this.get(E);
    return C || (C = new uU({
      cache: this,
      queryKey: Q,
      queryHash: E,
      options: g.defaultQueryOptions(I),
      state: B,
      defaultOptions: g.getQueryDefaults(Q)
    }), this.add(C)), C;
  }
  add(g) {
    MA(this, eQ).has(g.queryHash) || (MA(this, eQ).set(g.queryHash, g), this.notify({
      type: "added",
      query: g
    }));
  }
  remove(g) {
    const I = MA(this, eQ).get(g.queryHash);
    I && (g.destroy(), I === g && MA(this, eQ).delete(g.queryHash), this.notify({ type: "removed", query: g }));
  }
  clear() {
    BI.batch(() => {
      this.getAll().forEach((g) => {
        this.remove(g);
      });
    });
  }
  get(g) {
    return MA(this, eQ).get(g);
  }
  getAll() {
    return [...MA(this, eQ).values()];
  }
  find(g) {
    const I = { exact: !0, ...g };
    return this.getAll().find(
      (B) => aD(I, B)
    );
  }
  findAll(g = {}) {
    const I = this.getAll();
    return Object.keys(g).length > 0 ? I.filter((B) => aD(g, B)) : I;
  }
  notify(g) {
    BI.batch(() => {
      this.listeners.forEach((I) => {
        I(g);
      });
    });
  }
  onFocus() {
    BI.batch(() => {
      this.getAll().forEach((g) => {
        g.onFocus();
      });
    });
  }
  onOnline() {
    BI.batch(() => {
      this.getAll().forEach((g) => {
        g.onOnline();
      });
    });
  }
}, eQ = new WeakMap(), LD), tQ, rI, LE, iQ, bQ, KD, kU = (KD = class extends Ol {
  constructor(g) {
    super();
    wg(this, iQ);
    wg(this, tQ);
    wg(this, rI);
    wg(this, LE);
    this.mutationId = g.mutationId, Qg(this, rI, g.mutationCache), Qg(this, tQ, []), this.state = g.state || HU(), this.setOptions(g.options), this.scheduleGc();
  }
  setOptions(g) {
    this.options = g, this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(g) {
    MA(this, tQ).includes(g) || (MA(this, tQ).push(g), this.clearGcTimeout(), MA(this, rI).notify({
      type: "observerAdded",
      mutation: this,
      observer: g
    }));
  }
  removeObserver(g) {
    Qg(this, tQ, MA(this, tQ).filter((I) => I !== g)), this.scheduleGc(), MA(this, rI).notify({
      type: "observerRemoved",
      mutation: this,
      observer: g
    });
  }
  optionalRemove() {
    MA(this, tQ).length || (this.state.status === "pending" ? this.scheduleGc() : MA(this, rI).remove(this));
  }
  continue() {
    var g;
    return ((g = MA(this, LE)) == null ? void 0 : g.continue()) ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(g) {
    var Q, E, C, o, t, e, i, a, r, h, n, l, y, N, s, F, u, U, J, L;
    Qg(this, LE, Wl({
      fn: () => this.options.mutationFn ? this.options.mutationFn(g) : Promise.reject(new Error("No mutationFn found")),
      onFail: (f, d) => {
        Og(this, iQ, bQ).call(this, { type: "failed", failureCount: f, error: d });
      },
      onPause: () => {
        Og(this, iQ, bQ).call(this, { type: "pause" });
      },
      onContinue: () => {
        Og(this, iQ, bQ).call(this, { type: "continue" });
      },
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => MA(this, rI).canRun(this)
    }));
    const I = this.state.status === "pending", B = !MA(this, LE).canStart();
    try {
      if (!I) {
        Og(this, iQ, bQ).call(this, { type: "pending", variables: g, isPaused: B }), await ((E = (Q = MA(this, rI).config).onMutate) == null ? void 0 : E.call(
          Q,
          g,
          this
        ));
        const d = await ((o = (C = this.options).onMutate) == null ? void 0 : o.call(C, g));
        d !== this.state.context && Og(this, iQ, bQ).call(this, {
          type: "pending",
          context: d,
          variables: g,
          isPaused: B
        });
      }
      const f = await MA(this, LE).start();
      return await ((e = (t = MA(this, rI).config).onSuccess) == null ? void 0 : e.call(
        t,
        f,
        g,
        this.state.context,
        this
      )), await ((a = (i = this.options).onSuccess) == null ? void 0 : a.call(i, f, g, this.state.context)), await ((h = (r = MA(this, rI).config).onSettled) == null ? void 0 : h.call(
        r,
        f,
        null,
        this.state.variables,
        this.state.context,
        this
      )), await ((l = (n = this.options).onSettled) == null ? void 0 : l.call(n, f, null, g, this.state.context)), Og(this, iQ, bQ).call(this, { type: "success", data: f }), f;
    } catch (f) {
      try {
        throw await ((N = (y = MA(this, rI).config).onError) == null ? void 0 : N.call(
          y,
          f,
          g,
          this.state.context,
          this
        )), await ((F = (s = this.options).onError) == null ? void 0 : F.call(
          s,
          f,
          g,
          this.state.context
        )), await ((U = (u = MA(this, rI).config).onSettled) == null ? void 0 : U.call(
          u,
          void 0,
          f,
          this.state.variables,
          this.state.context,
          this
        )), await ((L = (J = this.options).onSettled) == null ? void 0 : L.call(
          J,
          void 0,
          f,
          g,
          this.state.context
        )), f;
      } finally {
        Og(this, iQ, bQ).call(this, { type: "error", error: f });
      }
    } finally {
      MA(this, rI).runNext(this);
    }
  }
}, tQ = new WeakMap(), rI = new WeakMap(), LE = new WeakMap(), iQ = new WeakSet(), bQ = function(g) {
  const I = (B) => {
    switch (g.type) {
      case "failed":
        return {
          ...B,
          failureCount: g.failureCount,
          failureReason: g.error
        };
      case "pause":
        return {
          ...B,
          isPaused: !0
        };
      case "continue":
        return {
          ...B,
          isPaused: !1
        };
      case "pending":
        return {
          ...B,
          context: g.context,
          data: void 0,
          failureCount: 0,
          failureReason: null,
          error: null,
          isPaused: g.isPaused,
          status: "pending",
          variables: g.variables,
          submittedAt: Date.now()
        };
      case "success":
        return {
          ...B,
          data: g.data,
          failureCount: 0,
          failureReason: null,
          error: null,
          status: "success",
          isPaused: !1
        };
      case "error":
        return {
          ...B,
          data: void 0,
          error: g.error,
          failureCount: B.failureCount + 1,
          failureReason: g.error,
          isPaused: !1,
          status: "error"
        };
    }
  };
  this.state = I(this.state), BI.batch(() => {
    MA(this, tQ).forEach((B) => {
      B.onMutationUpdate(g);
    }), MA(this, rI).notify({
      mutation: this,
      type: "updated",
      action: g
    });
  });
}, KD);
function HU() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}
var SI, qe, mD, pU = (mD = class extends gt {
  constructor(g = {}) {
    super();
    wg(this, SI);
    wg(this, qe);
    this.config = g, Qg(this, SI, /* @__PURE__ */ new Map()), Qg(this, qe, Date.now());
  }
  build(g, I, B) {
    const Q = new kU({
      mutationCache: this,
      mutationId: ++dt(this, qe)._,
      options: g.defaultMutationOptions(I),
      state: B
    });
    return this.add(Q), Q;
  }
  add(g) {
    const I = Kt(g), B = MA(this, SI).get(I) ?? [];
    B.push(g), MA(this, SI).set(I, B), this.notify({ type: "added", mutation: g });
  }
  remove(g) {
    var B;
    const I = Kt(g);
    if (MA(this, SI).has(I)) {
      const Q = (B = MA(this, SI).get(I)) == null ? void 0 : B.filter((E) => E !== g);
      Q && (Q.length === 0 ? MA(this, SI).delete(I) : MA(this, SI).set(I, Q));
    }
    this.notify({ type: "removed", mutation: g });
  }
  canRun(g) {
    var B;
    const I = (B = MA(this, SI).get(Kt(g))) == null ? void 0 : B.find((Q) => Q.state.status === "pending");
    return !I || I === g;
  }
  runNext(g) {
    var B;
    const I = (B = MA(this, SI).get(Kt(g))) == null ? void 0 : B.find((Q) => Q !== g && Q.state.isPaused);
    return (I == null ? void 0 : I.continue()) ?? Promise.resolve();
  }
  clear() {
    BI.batch(() => {
      this.getAll().forEach((g) => {
        this.remove(g);
      });
    });
  }
  getAll() {
    return [...MA(this, SI).values()].flat();
  }
  find(g) {
    const I = { exact: !0, ...g };
    return this.getAll().find(
      (B) => rD(I, B)
    );
  }
  findAll(g = {}) {
    return this.getAll().filter((I) => rD(g, I));
  }
  notify(g) {
    BI.batch(() => {
      this.listeners.forEach((I) => {
        I(g);
      });
    });
  }
  resumePausedMutations() {
    const g = this.getAll().filter((I) => I.state.isPaused);
    return BI.batch(
      () => Promise.all(
        g.map((I) => I.continue().catch(xI))
      )
    );
  }
}, SI = new WeakMap(), qe = new WeakMap(), mD);
function Kt(A) {
  var g;
  return ((g = A.options.scope) == null ? void 0 : g.id) ?? String(A.mutationId);
}
function cD(A) {
  return {
    onFetch: (g, I) => {
      var i, a, r, h, n;
      const B = g.options, Q = (r = (a = (i = g.fetchOptions) == null ? void 0 : i.meta) == null ? void 0 : a.fetchMore) == null ? void 0 : r.direction, E = ((h = g.state.data) == null ? void 0 : h.pages) || [], C = ((n = g.state.data) == null ? void 0 : n.pageParams) || [];
      let o = { pages: [], pageParams: [] }, t = 0;
      const e = async () => {
        let l = !1;
        const y = (F) => {
          Object.defineProperty(F, "signal", {
            enumerable: !0,
            get: () => (g.signal.aborted ? l = !0 : g.signal.addEventListener("abort", () => {
              l = !0;
            }), g.signal)
          });
        }, N = Vl(g.options, g.fetchOptions), s = async (F, u, U) => {
          if (l)
            return Promise.reject();
          if (u == null && F.pages.length)
            return Promise.resolve(F);
          const J = {
            queryKey: g.queryKey,
            pageParam: u,
            direction: U ? "backward" : "forward",
            meta: g.options.meta
          };
          y(J);
          const L = await N(
            J
          ), { maxPages: f } = g.options, d = U ? RU : FU;
          return {
            pages: d(F.pages, L, f),
            pageParams: d(F.pageParams, u, f)
          };
        };
        if (Q && E.length) {
          const F = Q === "backward", u = F ? YU : DD, U = {
            pages: E,
            pageParams: C
          }, J = u(B, U);
          o = await s(U, J, F);
        } else {
          const F = A ?? E.length;
          do {
            const u = t === 0 ? C[0] ?? B.initialPageParam : DD(B, o);
            if (t > 0 && u == null)
              break;
            o = await s(o, u), t++;
          } while (t < F);
        }
        return o;
      };
      g.options.persister ? g.fetchFn = () => {
        var l, y;
        return (y = (l = g.options).persister) == null ? void 0 : y.call(
          l,
          e,
          {
            queryKey: g.queryKey,
            meta: g.options.meta,
            signal: g.signal
          },
          I
        );
      } : g.fetchFn = e;
    }
  };
}
function DD(A, { pages: g, pageParams: I }) {
  const B = g.length - 1;
  return g.length > 0 ? A.getNextPageParam(
    g[B],
    g,
    I[B],
    I
  ) : void 0;
}
function YU(A, { pages: g, pageParams: I }) {
  var B;
  return g.length > 0 ? (B = A.getPreviousPageParam) == null ? void 0 : B.call(A, g[0], g, I[0], I) : void 0;
}
var YB, XQ, zQ, SC, UC, VQ, kC, HC, xD, JU = (xD = class {
  constructor(A = {}) {
    wg(this, YB);
    wg(this, XQ);
    wg(this, zQ);
    wg(this, SC);
    wg(this, UC);
    wg(this, VQ);
    wg(this, kC);
    wg(this, HC);
    Qg(this, YB, A.queryCache || new UU()), Qg(this, XQ, A.mutationCache || new pU()), Qg(this, zQ, A.defaultOptions || {}), Qg(this, SC, /* @__PURE__ */ new Map()), Qg(this, UC, /* @__PURE__ */ new Map()), Qg(this, VQ, 0);
  }
  mount() {
    dt(this, VQ)._++, MA(this, VQ) === 1 && (Qg(this, kC, hs.subscribe(async (A) => {
      A && (await this.resumePausedMutations(), MA(this, YB).onFocus());
    })), Qg(this, HC, di.subscribe(async (A) => {
      A && (await this.resumePausedMutations(), MA(this, YB).onOnline());
    })));
  }
  unmount() {
    var A, g;
    dt(this, VQ)._--, MA(this, VQ) === 0 && ((A = MA(this, kC)) == null || A.call(this), Qg(this, kC, void 0), (g = MA(this, HC)) == null || g.call(this), Qg(this, HC, void 0));
  }
  isFetching(A) {
    return MA(this, YB).findAll({ ...A, fetchStatus: "fetching" }).length;
  }
  isMutating(A) {
    return MA(this, XQ).findAll({ ...A, status: "pending" }).length;
  }
  getQueryData(A) {
    var I;
    const g = this.defaultQueryOptions({ queryKey: A });
    return (I = MA(this, YB).get(g.queryHash)) == null ? void 0 : I.state.data;
  }
  ensureQueryData(A) {
    const g = this.getQueryData(A.queryKey);
    if (g === void 0)
      return this.fetchQuery(A);
    {
      const I = this.defaultQueryOptions(A), B = MA(this, YB).build(this, I);
      return A.revalidateIfStale && B.isStaleByTime(FC(I.staleTime, B)) && this.prefetchQuery(I), Promise.resolve(g);
    }
  }
  getQueriesData(A) {
    return MA(this, YB).findAll(A).map(({ queryKey: g, state: I }) => {
      const B = I.data;
      return [g, B];
    });
  }
  setQueryData(A, g, I) {
    const B = this.defaultQueryOptions({ queryKey: A }), Q = MA(this, YB).get(
      B.queryHash
    ), E = Q == null ? void 0 : Q.state.data, C = wU(g, E);
    if (C !== void 0)
      return MA(this, YB).build(this, B).setData(C, { ...I, manual: !0 });
  }
  setQueriesData(A, g, I) {
    return BI.batch(
      () => MA(this, YB).findAll(A).map(({ queryKey: B }) => [
        B,
        this.setQueryData(B, g, I)
      ])
    );
  }
  getQueryState(A) {
    var I;
    const g = this.defaultQueryOptions({ queryKey: A });
    return (I = MA(this, YB).get(g.queryHash)) == null ? void 0 : I.state;
  }
  removeQueries(A) {
    const g = MA(this, YB);
    BI.batch(() => {
      g.findAll(A).forEach((I) => {
        g.remove(I);
      });
    });
  }
  resetQueries(A, g) {
    const I = MA(this, YB), B = {
      type: "active",
      ...A
    };
    return BI.batch(() => (I.findAll(A).forEach((Q) => {
      Q.reset();
    }), this.refetchQueries(B, g)));
  }
  cancelQueries(A = {}, g = {}) {
    const I = { revert: !0, ...g }, B = BI.batch(
      () => MA(this, YB).findAll(A).map((Q) => Q.cancel(I))
    );
    return Promise.all(B).then(xI).catch(xI);
  }
  invalidateQueries(A = {}, g = {}) {
    return BI.batch(() => {
      if (MA(this, YB).findAll(A).forEach((B) => {
        B.invalidate();
      }), A.refetchType === "none")
        return Promise.resolve();
      const I = {
        ...A,
        type: A.refetchType ?? A.type ?? "active"
      };
      return this.refetchQueries(I, g);
    });
  }
  refetchQueries(A = {}, g) {
    const I = {
      ...g,
      cancelRefetch: (g == null ? void 0 : g.cancelRefetch) ?? !0
    }, B = BI.batch(
      () => MA(this, YB).findAll(A).filter((Q) => !Q.isDisabled()).map((Q) => {
        let E = Q.fetch(void 0, I);
        return I.throwOnError || (E = E.catch(xI)), Q.state.fetchStatus === "paused" ? Promise.resolve() : E;
      })
    );
    return Promise.all(B).then(xI);
  }
  fetchQuery(A) {
    const g = this.defaultQueryOptions(A);
    g.retry === void 0 && (g.retry = !1);
    const I = MA(this, YB).build(this, g);
    return I.isStaleByTime(
      FC(g.staleTime, I)
    ) ? I.fetch(g) : Promise.resolve(I.state.data);
  }
  prefetchQuery(A) {
    return this.fetchQuery(A).then(xI).catch(xI);
  }
  fetchInfiniteQuery(A) {
    return A.behavior = cD(A.pages), this.fetchQuery(A);
  }
  prefetchInfiniteQuery(A) {
    return this.fetchInfiniteQuery(A).then(xI).catch(xI);
  }
  ensureInfiniteQueryData(A) {
    return A.behavior = cD(A.pages), this.ensureQueryData(A);
  }
  resumePausedMutations() {
    return di.isOnline() ? MA(this, XQ).resumePausedMutations() : Promise.resolve();
  }
  getQueryCache() {
    return MA(this, YB);
  }
  getMutationCache() {
    return MA(this, XQ);
  }
  getDefaultOptions() {
    return MA(this, zQ);
  }
  setDefaultOptions(A) {
    Qg(this, zQ, A);
  }
  setQueryDefaults(A, g) {
    MA(this, SC).set(Te(A), {
      queryKey: A,
      defaultOptions: g
    });
  }
  getQueryDefaults(A) {
    const g = [...MA(this, SC).values()];
    let I = {};
    return g.forEach((B) => {
      Xe(A, B.queryKey) && (I = { ...I, ...B.defaultOptions });
    }), I;
  }
  setMutationDefaults(A, g) {
    MA(this, UC).set(Te(A), {
      mutationKey: A,
      defaultOptions: g
    });
  }
  getMutationDefaults(A) {
    const g = [...MA(this, UC).values()];
    let I = {};
    return g.forEach((B) => {
      Xe(A, B.mutationKey) && (I = { ...I, ...B.defaultOptions });
    }), I;
  }
  defaultQueryOptions(A) {
    if (A._defaulted)
      return A;
    const g = {
      ...MA(this, zQ).queries,
      ...this.getQueryDefaults(A.queryKey),
      ...A,
      _defaulted: !0
    };
    return g.queryHash || (g.queryHash = Ds(
      g.queryKey,
      g
    )), g.refetchOnReconnect === void 0 && (g.refetchOnReconnect = g.networkMode !== "always"), g.throwOnError === void 0 && (g.throwOnError = !!g.suspense), !g.networkMode && g.persister && (g.networkMode = "offlineFirst"), g.enabled !== !0 && g.queryFn === wi && (g.enabled = !1), g;
  }
  defaultMutationOptions(A) {
    return A != null && A._defaulted ? A : {
      ...MA(this, zQ).mutations,
      ...(A == null ? void 0 : A.mutationKey) && this.getMutationDefaults(A.mutationKey),
      ...A,
      _defaulted: !0
    };
  }
  clear() {
    MA(this, YB).clear(), MA(this, XQ).clear();
  }
}, YB = new WeakMap(), XQ = new WeakMap(), zQ = new WeakMap(), SC = new WeakMap(), UC = new WeakMap(), VQ = new WeakMap(), kC = new WeakMap(), HC = new WeakMap(), xD), FI, jg, Pe, sI, KE, pC, qQ, oQ, We, YC, JC, mE, xE, PQ, LC, iB, Me, rr, sr, nr, cr, Dr, hr, lr, _l, vD, LU = (vD = class extends gt {
  constructor(g, I) {
    super();
    wg(this, iB);
    wg(this, FI);
    wg(this, jg);
    wg(this, Pe);
    wg(this, sI);
    wg(this, KE);
    wg(this, pC);
    wg(this, qQ);
    wg(this, oQ);
    wg(this, We);
    wg(this, YC);
    // This property keeps track of the last query with defined data.
    // It will be used to pass the previous data and query to the placeholder function between renders.
    wg(this, JC);
    wg(this, mE);
    wg(this, xE);
    wg(this, PQ);
    wg(this, LC, /* @__PURE__ */ new Set());
    this.options = I, Qg(this, FI, g), Qg(this, oQ, null), Qg(this, qQ, ar()), this.options.experimental_prefetchInRender || MA(this, qQ).reject(
      new Error("experimental_prefetchInRender feature flag is not enabled")
    ), this.bindMethods(), this.setOptions(I);
  }
  bindMethods() {
    this.refetch = this.refetch.bind(this);
  }
  onSubscribe() {
    this.listeners.size === 1 && (MA(this, jg).addObserver(this), hD(MA(this, jg), this.options) ? Og(this, iB, Me).call(this) : this.updateResult(), Og(this, iB, cr).call(this));
  }
  onUnsubscribe() {
    this.hasListeners() || this.destroy();
  }
  shouldFetchOnReconnect() {
    return yr(
      MA(this, jg),
      this.options,
      this.options.refetchOnReconnect
    );
  }
  shouldFetchOnWindowFocus() {
    return yr(
      MA(this, jg),
      this.options,
      this.options.refetchOnWindowFocus
    );
  }
  destroy() {
    this.listeners = /* @__PURE__ */ new Set(), Og(this, iB, Dr).call(this), Og(this, iB, hr).call(this), MA(this, jg).removeObserver(this);
  }
  setOptions(g, I) {
    const B = this.options, Q = MA(this, jg);
    if (this.options = MA(this, FI).defaultQueryOptions(g), this.options.enabled !== void 0 && typeof this.options.enabled != "boolean" && typeof this.options.enabled != "function" && typeof $I(this.options.enabled, MA(this, jg)) != "boolean")
      throw new Error(
        "Expected enabled to be a boolean or a callback that returns a boolean"
      );
    Og(this, iB, lr).call(this), MA(this, jg).setOptions(this.options), B._defaulted && !tr(this.options, B) && MA(this, FI).getQueryCache().notify({
      type: "observerOptionsUpdated",
      query: MA(this, jg),
      observer: this
    });
    const E = this.hasListeners();
    E && lD(
      MA(this, jg),
      Q,
      this.options,
      B
    ) && Og(this, iB, Me).call(this), this.updateResult(I), E && (MA(this, jg) !== Q || $I(this.options.enabled, MA(this, jg)) !== $I(B.enabled, MA(this, jg)) || FC(this.options.staleTime, MA(this, jg)) !== FC(B.staleTime, MA(this, jg))) && Og(this, iB, rr).call(this);
    const C = Og(this, iB, sr).call(this);
    E && (MA(this, jg) !== Q || $I(this.options.enabled, MA(this, jg)) !== $I(B.enabled, MA(this, jg)) || C !== MA(this, PQ)) && Og(this, iB, nr).call(this, C);
  }
  getOptimisticResult(g) {
    const I = MA(this, FI).getQueryCache().build(MA(this, FI), g), B = this.createResult(I, g);
    return mU(this, B) && (Qg(this, sI, B), Qg(this, pC, this.options), Qg(this, KE, MA(this, jg).state)), B;
  }
  getCurrentResult() {
    return MA(this, sI);
  }
  trackResult(g, I) {
    const B = {};
    return Object.keys(g).forEach((Q) => {
      Object.defineProperty(B, Q, {
        configurable: !1,
        enumerable: !0,
        get: () => (this.trackProp(Q), I == null || I(Q), g[Q])
      });
    }), B;
  }
  trackProp(g) {
    MA(this, LC).add(g);
  }
  getCurrentQuery() {
    return MA(this, jg);
  }
  refetch({ ...g } = {}) {
    return this.fetch({
      ...g
    });
  }
  fetchOptimistic(g) {
    const I = MA(this, FI).defaultQueryOptions(g), B = MA(this, FI).getQueryCache().build(MA(this, FI), I);
    return B.fetch().then(() => this.createResult(B, I));
  }
  fetch(g) {
    return Og(this, iB, Me).call(this, {
      ...g,
      cancelRefetch: g.cancelRefetch ?? !0
    }).then(() => (this.updateResult(), MA(this, sI)));
  }
  createResult(g, I) {
    var f;
    const B = MA(this, jg), Q = this.options, E = MA(this, sI), C = MA(this, KE), o = MA(this, pC), e = g !== B ? g.state : MA(this, Pe), { state: i } = g;
    let a = { ...i }, r = !1, h;
    if (I._optimisticResults) {
      const d = this.hasListeners(), p = !d && hD(g, I), x = d && lD(g, B, I, Q);
      (p || x) && (a = {
        ...a,
        ...jl(i.data, g.options)
      }), I._optimisticResults === "isRestoring" && (a.fetchStatus = "idle");
    }
    let { error: n, errorUpdatedAt: l, status: y } = a;
    if (I.select && a.data !== void 0)
      if (E && a.data === (C == null ? void 0 : C.data) && I.select === MA(this, We))
        h = MA(this, YC);
      else
        try {
          Qg(this, We, I.select), h = I.select(a.data), h = or(E == null ? void 0 : E.data, h, I), Qg(this, YC, h), Qg(this, oQ, null);
        } catch (d) {
          Qg(this, oQ, d);
        }
    else
      h = a.data;
    if (I.placeholderData !== void 0 && h === void 0 && y === "pending") {
      let d;
      if (E != null && E.isPlaceholderData && I.placeholderData === (o == null ? void 0 : o.placeholderData))
        d = E.data;
      else if (d = typeof I.placeholderData == "function" ? I.placeholderData(
        (f = MA(this, JC)) == null ? void 0 : f.state.data,
        MA(this, JC)
      ) : I.placeholderData, I.select && d !== void 0)
        try {
          d = I.select(d), Qg(this, oQ, null);
        } catch (p) {
          Qg(this, oQ, p);
        }
      d !== void 0 && (y = "success", h = or(
        E == null ? void 0 : E.data,
        d,
        I
      ), r = !0);
    }
    MA(this, oQ) && (n = MA(this, oQ), h = MA(this, YC), l = Date.now(), y = "error");
    const N = a.fetchStatus === "fetching", s = y === "pending", F = y === "error", u = s && N, U = h !== void 0, L = {
      status: y,
      fetchStatus: a.fetchStatus,
      isPending: s,
      isSuccess: y === "success",
      isError: F,
      isInitialLoading: u,
      isLoading: u,
      data: h,
      dataUpdatedAt: a.dataUpdatedAt,
      error: n,
      errorUpdatedAt: l,
      failureCount: a.fetchFailureCount,
      failureReason: a.fetchFailureReason,
      errorUpdateCount: a.errorUpdateCount,
      isFetched: a.dataUpdateCount > 0 || a.errorUpdateCount > 0,
      isFetchedAfterMount: a.dataUpdateCount > e.dataUpdateCount || a.errorUpdateCount > e.errorUpdateCount,
      isFetching: N,
      isRefetching: N && !s,
      isLoadingError: F && !U,
      isPaused: a.fetchStatus === "paused",
      isPlaceholderData: r,
      isRefetchError: F && U,
      isStale: ls(g, I),
      refetch: this.refetch,
      promise: MA(this, qQ)
    };
    if (this.options.experimental_prefetchInRender) {
      const d = (M) => {
        L.status === "error" ? M.reject(L.error) : L.data !== void 0 && M.resolve(L.data);
      }, p = () => {
        const M = Qg(this, qQ, L.promise = ar());
        d(M);
      }, x = MA(this, qQ);
      switch (x.status) {
        case "pending":
          g.queryHash === B.queryHash && d(x);
          break;
        case "fulfilled":
          (L.status === "error" || L.data !== x.value) && p();
          break;
        case "rejected":
          (L.status !== "error" || L.error !== x.reason) && p();
          break;
      }
    }
    return L;
  }
  updateResult(g) {
    const I = MA(this, sI), B = this.createResult(MA(this, jg), this.options);
    if (Qg(this, KE, MA(this, jg).state), Qg(this, pC, this.options), MA(this, KE).data !== void 0 && Qg(this, JC, MA(this, jg)), tr(B, I))
      return;
    Qg(this, sI, B);
    const Q = {}, E = () => {
      if (!I)
        return !0;
      const { notifyOnChangeProps: C } = this.options, o = typeof C == "function" ? C() : C;
      if (o === "all" || !o && !MA(this, LC).size)
        return !0;
      const t = new Set(
        o ?? MA(this, LC)
      );
      return this.options.throwOnError && t.add("error"), Object.keys(MA(this, sI)).some((e) => {
        const i = e;
        return MA(this, sI)[i] !== I[i] && t.has(i);
      });
    };
    (g == null ? void 0 : g.listeners) !== !1 && E() && (Q.listeners = !0), Og(this, iB, _l).call(this, { ...Q, ...g });
  }
  onQueryUpdate() {
    this.updateResult(), this.hasListeners() && Og(this, iB, cr).call(this);
  }
}, FI = new WeakMap(), jg = new WeakMap(), Pe = new WeakMap(), sI = new WeakMap(), KE = new WeakMap(), pC = new WeakMap(), qQ = new WeakMap(), oQ = new WeakMap(), We = new WeakMap(), YC = new WeakMap(), JC = new WeakMap(), mE = new WeakMap(), xE = new WeakMap(), PQ = new WeakMap(), LC = new WeakMap(), iB = new WeakSet(), Me = function(g) {
  Og(this, iB, lr).call(this);
  let I = MA(this, jg).fetch(
    this.options,
    g
  );
  return g != null && g.throwOnError || (I = I.catch(xI)), I;
}, rr = function() {
  Og(this, iB, Dr).call(this);
  const g = FC(
    this.options.staleTime,
    MA(this, jg)
  );
  if (VE || MA(this, sI).isStale || !Cr(g))
    return;
  const B = zl(MA(this, sI).dataUpdatedAt, g) + 1;
  Qg(this, mE, setTimeout(() => {
    MA(this, sI).isStale || this.updateResult();
  }, B));
}, sr = function() {
  return (typeof this.options.refetchInterval == "function" ? this.options.refetchInterval(MA(this, jg)) : this.options.refetchInterval) ?? !1;
}, nr = function(g) {
  Og(this, iB, hr).call(this), Qg(this, PQ, g), !(VE || $I(this.options.enabled, MA(this, jg)) === !1 || !Cr(MA(this, PQ)) || MA(this, PQ) === 0) && Qg(this, xE, setInterval(() => {
    (this.options.refetchIntervalInBackground || hs.isFocused()) && Og(this, iB, Me).call(this);
  }, MA(this, PQ)));
}, cr = function() {
  Og(this, iB, rr).call(this), Og(this, iB, nr).call(this, Og(this, iB, sr).call(this));
}, Dr = function() {
  MA(this, mE) && (clearTimeout(MA(this, mE)), Qg(this, mE, void 0));
}, hr = function() {
  MA(this, xE) && (clearInterval(MA(this, xE)), Qg(this, xE, void 0));
}, lr = function() {
  const g = MA(this, FI).getQueryCache().build(MA(this, FI), this.options);
  if (g === MA(this, jg))
    return;
  const I = MA(this, jg);
  Qg(this, jg, g), Qg(this, Pe, g.state), this.hasListeners() && (I == null || I.removeObserver(this), g.addObserver(this));
}, _l = function(g) {
  BI.batch(() => {
    g.listeners && this.listeners.forEach((I) => {
      I(MA(this, sI));
    }), MA(this, FI).getQueryCache().notify({
      query: MA(this, jg),
      type: "observerResultsUpdated"
    });
  });
}, vD);
function KU(A, g) {
  return $I(g.enabled, A) !== !1 && A.state.data === void 0 && !(A.state.status === "error" && g.retryOnMount === !1);
}
function hD(A, g) {
  return KU(A, g) || A.state.data !== void 0 && yr(A, g, g.refetchOnMount);
}
function yr(A, g, I) {
  if ($I(g.enabled, A) !== !1) {
    const B = typeof I == "function" ? I(A) : I;
    return B === "always" || B !== !1 && ls(A, g);
  }
  return !1;
}
function lD(A, g, I, B) {
  return (A !== g || $I(B.enabled, A) === !1) && (!I.suspense || A.state.status !== "error") && ls(A, I);
}
function ls(A, g) {
  return $I(g.enabled, A) !== !1 && A.isStaleByTime(FC(g.staleTime, A));
}
function mU(A, g) {
  return !tr(A.getCurrentResult(), g);
}
var $l = IA.createContext(
  void 0
), Ay = (A) => {
  const g = IA.useContext($l);
  if (!g)
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  return g;
}, xU = ({
  client: A,
  children: g
}) => (IA.useEffect(() => (A.mount(), () => {
  A.unmount();
}), [A]), /* @__PURE__ */ sA.jsx($l.Provider, { value: A, children: g })), gy = IA.createContext(!1), vU = () => IA.useContext(gy);
gy.Provider;
function bU() {
  let A = !1;
  return {
    clearReset: () => {
      A = !1;
    },
    reset: () => {
      A = !0;
    },
    isReset: () => A
  };
}
var ZU = IA.createContext(bU()), TU = () => IA.useContext(ZU);
function XU(A, g) {
  return typeof A == "function" ? A(...g) : !!A;
}
function zU() {
}
var VU = (A, g) => {
  (A.suspense || A.throwOnError || A.experimental_prefetchInRender) && (g.isReset() || (A.retryOnMount = !1));
}, qU = (A) => {
  IA.useEffect(() => {
    A.clearReset();
  }, [A]);
}, PU = ({
  result: A,
  errorResetBoundary: g,
  throwOnError: I,
  query: B
}) => A.isError && !g.isReset() && !A.isFetching && B && XU(I, [A.error, B]), WU = (A) => {
  A.suspense && (A.staleTime === void 0 && (A.staleTime = 1e3), typeof A.gcTime == "number" && (A.gcTime = Math.max(A.gcTime, 1e3)));
}, OU = (A, g) => A.isLoading && A.isFetching && !g, jU = (A, g) => (A == null ? void 0 : A.suspense) && g.isPending, yD = (A, g, I) => g.fetchOptimistic(A).catch(() => {
  I.clearReset();
});
function _U(A, g, I) {
  var i, a, r, h, n;
  if (PA.env.NODE_ENV !== "production" && (typeof A != "object" || Array.isArray(A)))
    throw new Error(
      'Bad argument type. Starting with v5, only the "Object" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'
    );
  const B = Ay(), Q = vU(), E = TU(), C = B.defaultQueryOptions(A);
  (a = (i = B.getDefaultOptions().queries) == null ? void 0 : i._experimental_beforeQuery) == null || a.call(
    i,
    C
  ), C._optimisticResults = Q ? "isRestoring" : "optimistic", WU(C), VU(C, E), qU(E);
  const o = !B.getQueryCache().get(C.queryHash), [t] = IA.useState(
    () => new g(
      B,
      C
    )
  ), e = t.getOptimisticResult(C);
  if (IA.useSyncExternalStore(
    IA.useCallback(
      (l) => {
        const y = Q ? () => {
        } : t.subscribe(BI.batchCalls(l));
        return t.updateResult(), y;
      },
      [t, Q]
    ),
    () => t.getCurrentResult(),
    () => t.getCurrentResult()
  ), IA.useEffect(() => {
    t.setOptions(C, { listeners: !1 });
  }, [C, t]), jU(C, e))
    throw yD(C, t, E);
  if (PU({
    result: e,
    errorResetBoundary: E,
    throwOnError: C.throwOnError,
    query: B.getQueryCache().get(C.queryHash)
  }))
    throw e.error;
  if ((h = (r = B.getDefaultOptions().queries) == null ? void 0 : r._experimental_afterQuery) == null || h.call(
    r,
    C,
    e
  ), C.experimental_prefetchInRender && !VE && OU(e, Q)) {
    const l = o ? (
      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted
      yD(C, t, E)
    ) : (
      // subscribe to the "cache promise" so that we can finalize the currentThenable once data comes in
      (n = B.getQueryCache().get(C.queryHash)) == null ? void 0 : n.promise
    );
    l == null || l.catch(zU).finally(() => {
      t.updateResult();
    });
  }
  return C.notifyOnChangeProps ? e : t.trackResult(e);
}
function Bt(A, g) {
  return _U(A, LU);
}
const $U = async () => {
  const { data: A } = await yB.get("/user-assets/token-prices");
  return A;
}, Ak = (A) => Bt({
  queryKey: ["tokenPrices"],
  queryFn: $U,
  enabled: (A == null ? void 0 : A.enabled) !== !1,
  retry: !1,
  staleTime: t0(e0),
  ...A
}), gk = async (A) => {
  const g = NB.getToken(A), { address: I } = fB.all(), B = await g.getBalance(I);
  return Ne(B) || "0";
}, Bk = async () => {
  const A = NB.createTokenMap(() => "0"), g = Object.values(VB), I = await Promise.all(g.map((B) => gk(B)));
  return g.reduce((B, Q, E) => ({
    ...B,
    [Q]: I[E] || "0"
  }), A);
}, Ik = () => Bt({
  queryKey: ["tokenBalances"],
  queryFn: Bk,
  enabled: !0,
  retry: !1,
  gcTime: 0
});
var By = {};
/*! For license information please see index.js.LICENSE.txt */
(function(A) {
  (() => {
    var g = { 365: (o, t, e) => {
      e.d(t, { A: () => n });
      var i = e(601), a = e.n(i), r = e(314), h = e.n(r)()(a());
      h.push([o.id, `.vi {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-sizing: border-box;
  position: absolute;
  color: transparent;
  background: transparent;
  caret-color: transparent;
  outline: none;
  border: 0 none transparent;
}

.vi::-ms-reveal,
.vi::-ms-clear {
  display: none;
}

.vi::selection {
  background: transparent;
}

/* :where() gives the styles specificity 0, which makes them overridable */
:where(.vi__container) {
  position: relative;
  display: flex;
  gap: 8px;
  height: 50px;
  width: 300px;
}

:where(.vi__character) {
  height: 100%;
  flex-grow: 1;
  flex-basis: 0;
  text-align: center;
  font-size: 36px;
  line-height: 50px;
  color: black;
  background-color: white;
  border: 1px solid black;
  cursor: default;
  user-select: none;
  box-sizing: border-box;
}

:where(.vi__character--inactive) {
  color: dimgray;
  background-color: lightgray;
}

:where(.vi__character--selected) {
  outline: 2px solid cornflowerblue;
  color: cornflowerblue;
}
`, ""]);
      const n = h;
    }, 314: (o) => {
      o.exports = function(t) {
        var e = [];
        return e.toString = function() {
          return this.map(function(i) {
            var a = "", r = i[5] !== void 0;
            return i[4] && (a += "@supports (".concat(i[4], ") {")), i[2] && (a += "@media ".concat(i[2], " {")), r && (a += "@layer".concat(i[5].length > 0 ? " ".concat(i[5]) : "", " {")), a += t(i), r && (a += "}"), i[2] && (a += "}"), i[4] && (a += "}"), a;
          }).join("");
        }, e.i = function(i, a, r, h, n) {
          typeof i == "string" && (i = [[null, i, void 0]]);
          var l = {};
          if (r) for (var y = 0; y < this.length; y++) {
            var N = this[y][0];
            N != null && (l[N] = !0);
          }
          for (var s = 0; s < i.length; s++) {
            var F = [].concat(i[s]);
            r && l[F[0]] || (n !== void 0 && (F[5] === void 0 || (F[1] = "@layer".concat(F[5].length > 0 ? " ".concat(F[5]) : "", " {").concat(F[1], "}")), F[5] = n), a && (F[2] && (F[1] = "@media ".concat(F[2], " {").concat(F[1], "}")), F[2] = a), h && (F[4] ? (F[1] = "@supports (".concat(F[4], ") {").concat(F[1], "}"), F[4] = h) : F[4] = "".concat(h)), e.push(F));
          }
        }, e;
      };
    }, 601: (o) => {
      o.exports = function(t) {
        return t[1];
      };
    }, 942: (o, t) => {
      var e;
      (function() {
        var i = {}.hasOwnProperty;
        function a() {
          for (var n = "", l = 0; l < arguments.length; l++) {
            var y = arguments[l];
            y && (n = h(n, r(y)));
          }
          return n;
        }
        function r(n) {
          if (typeof n == "string" || typeof n == "number") return n;
          if (typeof n != "object") return "";
          if (Array.isArray(n)) return a.apply(null, n);
          if (n.toString !== Object.prototype.toString && !n.toString.toString().includes("[native code]")) return n.toString();
          var l = "";
          for (var y in n) i.call(n, y) && n[y] && (l = h(l, y));
          return l;
        }
        function h(n, l) {
          return l ? n ? n + " " + l : n + l : n;
        }
        o.exports ? (a.default = a, o.exports = a) : (e = (function() {
          return a;
        }).apply(t, [])) === void 0 || (o.exports = e);
      })();
    } }, I = {};
    function B(o) {
      var t = I[o];
      if (t !== void 0) return t.exports;
      var e = I[o] = { id: o, exports: {} };
      return g[o](e, e.exports, B), e.exports;
    }
    B.n = (o) => {
      var t = o && o.__esModule ? () => o.default : () => o;
      return B.d(t, { a: t }), t;
    }, B.d = (o, t) => {
      for (var e in t) B.o(t, e) && !B.o(o, e) && Object.defineProperty(o, e, { enumerable: !0, get: t[e] });
    }, B.o = (o, t) => Object.prototype.hasOwnProperty.call(o, t), B.r = (o) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
    };
    var Q = {};
    (() => {
      B.r(Q), B.d(Q, { default: () => u });
      const o = ww();
      var t = B.n(o), e = B(942), i = B.n(e), a = B(365), r = ["className", "type"], h = ["className"];
      function n() {
        return n = Object.assign ? Object.assign.bind() : function(U) {
          for (var J = 1; J < arguments.length; J++) {
            var L = arguments[J];
            for (var f in L) ({}).hasOwnProperty.call(L, f) && (U[f] = L[f]);
          }
          return U;
        }, n.apply(null, arguments);
      }
      function l(U, J) {
        if (U == null) return {};
        var L, f, d = function(x, M) {
          if (x == null) return {};
          var S = {};
          for (var k in x) if ({}.hasOwnProperty.call(x, k)) {
            if (M.includes(k)) continue;
            S[k] = x[k];
          }
          return S;
        }(U, J);
        if (Object.getOwnPropertySymbols) {
          var p = Object.getOwnPropertySymbols(U);
          for (f = 0; f < p.length; f++) L = p[f], J.includes(L) || {}.propertyIsEnumerable.call(U, L) && (d[L] = U[L]);
        }
        return d;
      }
      function y(U, J) {
        return function(L) {
          if (Array.isArray(L)) return L;
        }(U) || function(L, f) {
          var d = L == null ? null : typeof Symbol < "u" && L[Symbol.iterator] || L["@@iterator"];
          if (d != null) {
            var p, x, M, S, k = [], v = !0, m = !1;
            try {
              if (M = (d = d.call(L)).next, f !== 0) for (; !(v = (p = M.call(d)).done) && (k.push(p.value), k.length !== f); v = !0) ;
            } catch (T) {
              m = !0, x = T;
            } finally {
              try {
                if (!v && d.return != null && (S = d.return(), Object(S) !== S)) return;
              } finally {
                if (m) throw x;
              }
            }
            return k;
          }
        }(U, J) || N(U, J) || function() {
          throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }();
      }
      function N(U, J) {
        if (U) {
          if (typeof U == "string") return s(U, J);
          var L = {}.toString.call(U).slice(8, -1);
          return L === "Object" && U.constructor && (L = U.constructor.name), L === "Map" || L === "Set" ? Array.from(U) : L === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(L) ? s(U, J) : void 0;
        }
      }
      function s(U, J) {
        (J == null || J > U.length) && (J = U.length);
        for (var L = 0, f = Array(J); L < J; L++) f[L] = U[L];
        return f;
      }
      var F = (0, o.forwardRef)(function(U, J) {
        var L = U.value, f = U.length, d = f === void 0 ? 6 : f, p = U.validChars, x = p === void 0 ? "A-Za-z0-9" : p, M = U.placeholder, S = M === void 0 ? "·" : M, k = U.autoFocus, v = k !== void 0 && k, m = U.passwordMode, T = m !== void 0 && m, $ = U.passwordChar, AA = $ === void 0 ? "*" : $, lA = U.inputProps, FA = lA === void 0 ? {} : lA, cA = U.containerProps, yA = cA === void 0 ? {} : cA, aA = U.classNames, eA = aA === void 0 ? {} : aA, CA = U.onChange, b = U.onFocus, Y = U.onBlur, QA = U.onComplete, BA = y((0, o.useState)(""), 2), iA = BA[0], rA = BA[1], GA = y((0, o.useState)(!1), 2), _ = GA[0], uA = GA[1], HA = (0, o.useRef)(null);
        (0, o.useEffect)(function() {
          v && HA.current.focus();
        }, [v]), (0, o.useEffect)(function() {
          FA.disabled && uA(!1);
        }, [FA.disabled]);
        var JA, VA = function() {
          HA.current.focus();
        }, $A = function() {
          return L ?? iA;
        }, XA = function(eg) {
          var yg = $A();
          return (yg.length === eg || yg.length === eg + 1 && d === eg + 1) && _;
        }, Ig = function(eg) {
          return $A().length < eg;
        }, jA = function(eg) {
          return $A().length > eg;
        }, ag = FA.className, ng = FA.type, lg = l(FA, r), BB = yA.className, rB = l(yA, h);
        return t().createElement(t().Fragment, null, t().createElement("div", n({ "data-testid": "container", className: i()("vi__container", eA.container, BB), onClick: function() {
          return HA.current.focus();
        } }, rB), t().createElement("input", n({ "aria-label": "verification input", spellCheck: !1, value: $A(), onChange: function(eg) {
          var yg = eg.target.value.replace(/\s/g, "");
          RegExp("^[".concat(x, "]{0,").concat(d, "}$")).test(yg) && (CA == null || CA(yg), rA(yg), yg.length === d && (QA == null || QA(yg)));
        }, ref: function(eg) {
          HA.current = eg, typeof J == "function" ? J(eg) : J && (J.current = eg);
        }, className: i()("vi", ag), onKeyDown: function(eg) {
          ["ArrowLeft", "ArrowRight", "ArrowUp", "ArrowDown"].includes(eg.key) && eg.preventDefault();
        }, onFocus: function() {
          uA(!0), b == null || b();
        }, onBlur: function() {
          uA(!1), Y == null || Y();
        }, onSelect: function(eg) {
          var yg = eg.target.value;
          eg.target.setSelectionRange(yg.length, yg.length);
        }, type: T ? "password" : ng }, lg)), (JA = Array(d), function(eg) {
          if (Array.isArray(eg)) return s(eg);
        }(JA) || function(eg) {
          if (typeof Symbol < "u" && eg[Symbol.iterator] != null || eg["@@iterator"] != null) return Array.from(eg);
        }(JA) || N(JA) || function() {
          throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }()).map(function(eg, yg) {
          return t().createElement("div", { className: i()("vi__character", eA.character, { "vi__character--selected": XA(yg), "vi__character--inactive": Ig(yg), "vi__character--filled": jA(yg) }, XA(yg) && eA.characterSelected, Ig(yg) && eA.characterInactive, jA(yg) && eA.characterFilled), onClick: VA, id: "field-".concat(yg), "data-testid": "character-".concat(yg), key: yg }, T && $A()[yg] ? AA : $A()[yg] || S);
        })), t().createElement("style", { dangerouslySetInnerHTML: { __html: a.A } }));
      });
      F.displayName = "VerificationInput";
      const u = F;
    })();
    var E = A;
    for (var C in Q) E[C] = Q[C];
    Q.__esModule && Object.defineProperty(E, "__esModule", { value: !0 });
  })();
})(By);
const Qk = /* @__PURE__ */ Sr(By);
function Iy({
  isOpen: A,
  onClose: g,
  onVerify: I,
  loading: B = !1,
  modalClassName: Q = "",
  message: E = "To complete this action securely, please enter the 6-digit verification code we sent to your email address."
}) {
  const [C, o] = IA.useState("");
  return IA.useEffect(() => {
    A || o("");
  }, [A]), /* @__PURE__ */ sA.jsx(
    Xl,
    {
      isOpen: A,
      onClose: g,
      title: "Verification Code",
      containerClassName: "w-[343px] tablet:w-[420px]",
      className: Q,
      children: /* @__PURE__ */ sA.jsxs("div", { children: [
        /* @__PURE__ */ sA.jsx("p", { className: "text-sm text-gray-500 mb-6", children: E }),
        /* @__PURE__ */ sA.jsx("div", { className: "flex justify-center mb-6", children: /* @__PURE__ */ sA.jsx(
          Qk,
          {
            length: 6,
            placeholder: "",
            validChars: "0-9",
            autoFocus: !0,
            classNames: {
              container: "container",
              character: Rg(
                "w-10 h-12 rounded-md border border-input text-lg font-medium",
                "flex items-center justify-center mx-1",
                "focus:border-foreground focus:ring-0"
              )
            },
            value: C,
            onChange: o
          }
        ) }),
        /* @__PURE__ */ sA.jsx("p", { className: "text-xs text-gray-400 mb-6", children: "It may take a few minutes to receive the code. Please wait patiently." }),
        /* @__PURE__ */ sA.jsx(
          IE,
          {
            className: "w-full",
            disabled: C.length !== 6 || B,
            onClick: () => I(C),
            children: B ? /* @__PURE__ */ sA.jsx(Jr, {}) : "Verify"
          }
        )
      ] })
    }
  );
}
class Ek {
  constructor() {
    DA(this, "verifyMethod", "email-by-nodemailer");
  }
  // private verifyMethod: OTPVerifyMethod = 'email-by-sendgrid';
  setVerifyMethod(g) {
    this.verifyMethod = g;
  }
  getVerifyMethod() {
    return this.verifyMethod;
  }
}
const RC = new Ek();
Object.freeze(RC);
function Ck({
  isOpen: A,
  onClose: g,
  defaultLimits: I
}) {
  const B = Ay(), { data: Q } = Ik(), { data: E } = Ak(), [C, o] = IA.useState(null), [t, e] = IA.useState(!1), [i, a] = IA.useState(NB.createTokenMap(() => "")), [r, h] = IA.useState(!1), [n, l] = IA.useState(!1), [y, N] = IA.useState([]);
  IA.useEffect(() => {
    A && F();
  }, [A]);
  const s = IA.useMemo(() => NB.getAllTokens().some((S) => !i[S.tokenType]), [i]), F = async () => {
    u(), a(I);
  }, u = async () => {
    try {
      const { data: S } = await yB.post("/transaction/outbound-amount", {
        tokens: NB.getAllTokens().map((k) => k.tokenType)
      });
      o(S);
    } catch (S) {
      console.error("Failed to fetch token transferred:", S);
    }
  }, U = IA.useMemo(() => NB.getAllTokens().map((S) => ({
    type: S.tokenType,
    balance: (Q == null ? void 0 : Q[S.tokenType]) || "0",
    todayTransferred: (C == null ? void 0 : C[S.tokenType]) || "0"
  })), [Q, C]), J = (S, k) => {
    k && !/^\d*\.?\d*$/.test(k) || a((v) => ({
      ...v,
      [S]: k
    }));
  }, L = (S, k) => {
    if (!k || !E || !E[S]) return "0";
    const v = parseFloat(E[S]), m = parseFloat(k);
    return isNaN(v) || isNaN(m) ? "0" : (v * m).toFixed(2);
  }, f = async () => {
    KI(i, "limits");
    try {
      e(!0);
      const S = NB.getAllTokens().map((k) => ({
        type: k.tokenType,
        value: xt(i[k.tokenType] || "0").toString()
      }));
      N(S), await yB.post("/auth/generate-otp-for-daily-limit-update", {
        limits: S
      }), RC.getVerifyMethod() === "email-by-nodemailer" ? (DI.info("Please check your email to confirm the transaction limit update", {
        autoClose: !1,
        closeButton: !0
      }), g()) : RC.getVerifyMethod() === "email-by-sendgrid" && h(!0);
    } catch (S) {
      const k = vE(S);
      DI.error(k.message);
    } finally {
      e(!1);
    }
  }, d = async (S) => {
    try {
      l(!0), await yB.post("/user/update-daily-withdrawal-limits-with-otp", {
        otp: S,
        limits: y
      }), DI.success("Daily transaction limit successfully updated"), h(!1), B.invalidateQueries({ queryKey: ["dailyWithdrawalLimits"] }), g(!0);
    } catch (k) {
      const v = vE(k);
      DI.error(v.message);
    } finally {
      l(!1);
    }
  }, p = (S) => S == null ? "0" : oE(BigInt(S)), x = () => {
    g();
  }, M = /* @__PURE__ */ sA.jsxs("div", { className: "flex justify-end gap-4", children: [
    /* @__PURE__ */ sA.jsx(IE, { className: "hidden tablet:block", variant: "outline", onClick: () => x(), children: "Cancel" }),
    /* @__PURE__ */ sA.jsx(
      IE,
      {
        className: "w-full tablet:w-auto",
        disabled: s || t,
        onClick: () => {
          f();
        },
        children: t ? /* @__PURE__ */ sA.jsx(Jr, {}) : "Save"
      }
    )
  ] });
  return /* @__PURE__ */ sA.jsxs(
    Xl,
    {
      isOpen: A,
      onClose: g,
      title: "Daily Transaction Limit",
      footer: M,
      contentClassName: "p-6 max-h-[80vh] overflow-y-auto",
      className: "z-[10002]",
      children: [
        U.map((S, k) => /* @__PURE__ */ sA.jsxs("div", { className: k > 0 ? "mt-6" : "", children: [
          /* @__PURE__ */ sA.jsxs("p", { className: "text-black text-sm font-medium leading-none mb-[6px]", children: [
            S.type,
            " daily limit"
          ] }),
          /* @__PURE__ */ sA.jsxs("div", { className: Rg(
            "tablet:flex items-center justify-between"
          ), children: [
            /* @__PURE__ */ sA.jsxs("div", { className: "flex items-center gap-2 text-[#a1a1a1] text-sm font-normal leading-none", children: [
              /* @__PURE__ */ sA.jsx(
                Bi,
                {
                  className: "w-[131px] text-black",
                  value: i[S.type],
                  onChange: (v) => J(S.type, v.target.value),
                  placeholder: "Enter limit",
                  disabled: t
                }
              ),
              /* @__PURE__ */ sA.jsxs("p", { children: [
                "~",
                L(S.type, i[S.type]),
                " USDT"
              ] })
            ] }),
            /* @__PURE__ */ sA.jsxs("div", { className: Rg(
              "flex items-center gap-2 text-sm font-normal leading-none",
              "mt-[20px] tablet:mt-0"
            ), children: [
              /* @__PURE__ */ sA.jsx("p", { className: "text-[#a1a1a1]", children: "Balance:" }),
              /* @__PURE__ */ sA.jsxs("p", { className: "text-black", children: [
                S.balance,
                " ",
                S.type
              ] })
            ] })
          ] }),
          /* @__PURE__ */ sA.jsxs("div", { className: "mt-3 bg-black/5 border-black/10 rounded-[8px] py-3 px-4 flex items-center gap-2.5", children: [
            /* @__PURE__ */ sA.jsx("img", { src: "/imgs/icons/information_filled.svg", width: 16, height: 16, alt: "" }),
            /* @__PURE__ */ sA.jsx("p", { className: "text-black text-xs font-normal leading-none", children: t ? "" : `You've transferred ${p(S.todayTransferred ?? "0")} ${NB.getToken(S.type).symbol} today` })
          ] })
        ] }, S.type)),
        /* @__PURE__ */ sA.jsx(
          Iy,
          {
            isOpen: r,
            onClose: () => h(!1),
            loading: n,
            onVerify: d,
            message: "To update your daily transaction limits, please enter the verification code we sent to your email.",
            modalClassName: "z-[10004]"
          }
        )
      ]
    }
  );
}
const ek = NB.createTokenMap(() => "0"), tk = async () => {
  const { data: A } = await yB.get("/transaction/default-daily-withdrawal-limits", {
    params: {
      includeUserLimits: !0
    }
  });
  return Object.values(VB).reduce((I, B) => (I[B] = oE(BigInt(A[B] ?? 0)), I), {});
}, ik = (A) => Bt({
  queryKey: ["dailyWithdrawalLimits"],
  queryFn: tk,
  enabled: (A == null ? void 0 : A.enabled) !== !1,
  gcTime: 0,
  staleTime: 0,
  initialData: ek,
  ...A
}), ok = NB.getAllTokens();
function ak({
  open: A,
  setOpen: g,
  balance: I,
  address: B,
  tokenType: Q,
  defaultTo: E,
  defaultAmount: C,
  defaultNote: o,
  onClose: t
}) {
  const [e, i] = IA.useState(""), [a, r] = IA.useState(""), [h, n] = IA.useState(""), [l, y] = IA.useState(!1), N = IA.useRef(), [s, F] = IA.useState(!1), { data: u } = ik(), [U, J] = IA.useState(null), [L, f] = IA.useState(Q), [d, p] = IA.useState("0"), [x, M] = IA.useState(""), [S, k] = IA.useState(!1), [v, m] = IA.useState(!1), [T, $] = IA.useState(!1), [AA, lA] = IA.useState(!1), [FA, cA] = IA.useState(""), [yA, aA] = IA.useState(""), [eA, CA] = IA.useState(""), { t: b } = Hr(), Y = nc(a, 800), QA = nc(e, 800), BA = IA.useRef(null), [iA, rA] = IA.useState(0), GA = IA.useMemo(() => L ? NB.getToken(L).symbol : "", [L]), _ = IA.useMemo(() => L ? NB.getToken(L).gasSymbol : "", [L]), [uA, HA] = IA.useState(!1), [JA, VA] = IA.useState(!1), [$A, XA] = IA.useState(null);
  IA.useEffect(() => {
    BA.current && setTimeout(() => {
      var rg;
      const Bg = (rg = BA.current) == null ? void 0 : rg.getBoundingClientRect().width;
      Bg && rA(Bg + 34);
    }, 0);
  }, [GA, A]), IA.useEffect(() => {
    KI("open", A, "address", B), A ? Ig() : tI();
  }, [E, C, o, A]), IA.useEffect(() => {
    e && a && v && (mB(), rB(e), yI(), m(!1));
  }, [e, a, v, A]), IA.useEffect(() => {
    !A && t && t();
  }, [A]), IA.useEffect(() => {
    mB(), QA && rB(QA), Y && !ag && !S && yI();
  }, [Y, QA]);
  const Ig = async () => {
    await BB(Q), E && i(E), C && r(C), o && n(o), ng(), m(!0);
  }, jA = IA.useMemo(() => u[L], [L, u]), ag = IA.useMemo(() => !e || !a || l || !AA || T || !!yA && yA !== b("/dashboard.[token].sendModal.unregisteredEmailNotice") || parseFloat(a) > parseFloat(d) || S, [e, a, l, AA, T, yA, d, S]), ng = async () => {
    try {
      const { data: Bg } = await yB.post("/transaction/outbound-amount", {
        tokens: NB.getAllTokens().map((rg) => rg.tokenType)
      });
      J(Bg);
    } catch (Bg) {
      console.error("Failed to fetch token transferred:", Bg);
    }
  }, lg = () => {
    const Bg = /* @__PURE__ */ sA.jsx("div", { className: "cursor-pointer", onClick: () => {
      Er.destroy();
    }, children: "Ok" });
    Er.open({
      message: "Daily transaction limit exceeded",
      description: /* @__PURE__ */ sA.jsxs("div", { children: [
        /* @__PURE__ */ sA.jsx("p", { children: "Please check your email and verify by the OTP." }),
        /* @__PURE__ */ sA.jsx("p", { children: "You can change yur dailiy transaction limit under profile page." })
      ] }),
      placement: "top",
      duration: 0,
      btn: Bg
    });
  }, BB = async (Bg) => {
    r(""), k(!1), M(""), CA(""), f(Bg);
    const rg = NB.getToken(Bg);
    N.current = rg;
    let Ug = await rg.getBalance(B);
    Ug = Ne(Ug), p(Ug);
  }, rB = async (Bg) => {
    if ($t(e))
      lA(!0), cA(""), aA("");
    else {
      $(!0), aA("");
      try {
        const rg = await yB.get("/address/", {
          params: { email: Bg }
        });
        rg.data.success ? (lA(!0), cA(rg.data.address)) : Ln.test(Bg) ? (lA(!0), cA(""), aA(b("/dashboard.[token].sendModal.unregisteredEmailNotice"))) : (lA(!1), cA(""), aA(b("/dashboard.[token].sendModal.invalidEmailFormat")));
      } catch {
      } finally {
        $(!1);
      }
    }
  }, eg = () => {
    KI("to", e), e || (lA(!1), cA(""), aA(""));
  };
  async function yg(Bg) {
    try {
      const rg = xt(a).toString();
      KI("amt", rg), y(!0);
      const {
        needOtp: Ug,
        hash: IB,
        message: $g,
        transactionId: nB
      } = await sc.signTransaction({
        toAddress: Bg,
        amount: rg,
        token: L,
        note: h,
        transactionType: o0.TRANSFER
      });
      if (IB)
        return g(!1), Mg(IB), !0;
      if (Ug) {
        if (KI("otpService.getVerifyMethod()", RC.getVerifyMethod()), RC.getVerifyMethod() === "email-by-sendgrid")
          return HA(!0), XA(nB), !1;
        if (RC.getVerifyMethod() === "email-by-nodemailer")
          return lg(), !0;
      }
    } catch (rg) {
      const Ug = vE(rg);
      KI("errorInfo", Ug), DI.error(Ug.message);
    } finally {
      y(!1);
    }
  }
  const Wg = (Bg) => {
    var Ug;
    const rg = `${(Ug = N.current) == null ? void 0 : Ug.scanTransactionUrl}/${Bg}`;
    window.open(rg, "_blank");
  }, Mg = (Bg) => {
    DI(
      /* @__PURE__ */ sA.jsx("div", { className: "w-full", children: /* @__PURE__ */ sA.jsxs("div", { className: "flex items-center", children: [
        /* @__PURE__ */ sA.jsx(Po, { color: "#2edc82", size: 16, className: "mr-2" }),
        /* @__PURE__ */ sA.jsxs("p", { className: "flex items-center", children: [
          "Transaction submitted,",
          /* @__PURE__ */ sA.jsx(
            IE,
            {
              className: "text-brand-foreground",
              variant: "link",
              size: "sm",
              onClick: () => {
                Wg(Bg);
              },
              children: "View Detail"
            }
          )
        ] })
      ] }) })
    );
  }, LB = async () => {
    if (!ag)
      try {
        y(!0);
        let Bg, rg;
        if ($t(e))
          Bg = e;
        else if (Ln.test(e) && yA === b("/dashboard.[token].sendModal.unregisteredEmailNotice")) {
          rg = e;
          const IB = await yB.post("/invite/invite-register", {
            toEmail: rg,
            from: B,
            amount: xt(a).toString(),
            token: L,
            note: h
          });
          KI("res", IB), DI.success(b("/dashboard.[token].sendModal.emailSentToUnregistered")), tI(), g(!1);
          return;
        } else
          Bg = FA;
        await yg(Bg) && (tI(), g(!1));
      } catch (Bg) {
        const rg = vE(Bg);
        KI("errorInfo", rg), DI.error(b("/dashboard.[token].sendModal.sendError"));
      } finally {
        y(!1);
      }
  }, mB = async () => {
    parseFloat(a) > parseFloat(d) ? CA("Amount exceeded") : CA("");
  }, yI = async () => {
    if (a && !ag) {
      k(!0);
      try {
        KI("checkEstimatedFee", a);
        const Bg = await hd({
          tokenType: L,
          transferParams: {
            to: B,
            amount: xt(a)
          },
          fromAddress: B
        });
        M(Bg ? Bg.feeInTokens.toString() : "");
      } catch (Bg) {
        KI("Failed to get estimated fee:", Bg), M("");
      } finally {
        k(!1);
      }
    }
  }, tI = () => {
    r(""), i(""), n(""), cA(""), aA(""), lA(!1), $(!1), M("");
  }, YI = async (Bg) => {
    r(Bg.target.value.trim()), parseFloat(a) > parseFloat(d) ? CA("Amount exceeded") : CA("");
  }, IQ = IA.useMemo(() => {
    const Bg = (U == null ? void 0 : U[L]) || "0";
    return Ne(oE(BigInt(Bg)));
  }, [L, U]), LQ = async (Bg) => {
    if (!$A) {
      DI.error("No transaction id");
      return;
    }
    try {
      VA(!0);
      const { hash: rg, token: Ug } = await sc.signTransactionWithOTP({
        transactionId: $A,
        otp: Bg
      });
      rg && (HA(!1), g(!1), Mg(rg));
    } catch (rg) {
      const Ug = vE(rg);
      DI.error(Ug.message);
    } finally {
      VA(!1);
    }
  }, QQ = A ? /* @__PURE__ */ sA.jsxs("div", { className: "fixed inset-0 z-[10001] flex items-center justify-center font-['Roboto']", children: [
    /* @__PURE__ */ sA.jsx("div", { className: "fixed inset-0 bg-[#1f2533]/40" }),
    /* @__PURE__ */ sA.jsx("div", { className: Rg(
      "relative z-50 w-[372px]"
    ), children: /* @__PURE__ */ sA.jsxs("div", { className: "bg-background text-primary rounded-[6px] w-full", children: [
      /* @__PURE__ */ sA.jsxs("header", { className: "flex justify-between items-center px-5 py-[14px] border-b border-[#EBEBEB]", children: [
        /* @__PURE__ */ sA.jsx("p", { className: "text-black text-lg font-medium font-['Roboto'] leading-normal", children: b("/dashboard.[token].sendModal.title") }),
        /* @__PURE__ */ sA.jsx(
          "button",
          {
            onClick: () => g(!1),
            className: "text-[#929292] hover:text-[#929292]/80",
            children: /* @__PURE__ */ sA.jsx(kr, {})
          }
        )
      ] }),
      /* @__PURE__ */ sA.jsx("div", { className: "p-6 border-b border-[#EBEBEB] max-h-[70vh] overflow-y-auto", children: /* @__PURE__ */ sA.jsxs("form", { children: [
        /* @__PURE__ */ sA.jsxs("div", { className: "mb-6", children: [
          /* @__PURE__ */ sA.jsx("label", { htmlFor: "to", className: "block mb-2 text-sm font-medium", children: b("/dashboard.[token].sendModal.to") }),
          /* @__PURE__ */ sA.jsxs("div", { className: "relative", children: [
            /* @__PURE__ */ sA.jsx(
              Bi,
              {
                value: e,
                onChange: (Bg) => i(Bg.target.value.trim()),
                onBlur: eg,
                id: "to",
                required: !0,
                placeholder: b("/dashboard.[token].sendModal.toPlaceholder"),
                className: Rg(
                  AA && "border-green-500",
                  yA && "border-destructive",
                  yA === b("/dashboard.[token].sendModal.unregisteredEmailNotice") && "border-blue-500",
                  "pr-10"
                )
              }
            ),
            T && /* @__PURE__ */ sA.jsx("div", { className: "absolute right-3 top-1/2 -translate-y-1/2", children: /* @__PURE__ */ sA.jsx(Yw, { className: "animate-spin", size: 16 }) }),
            AA && !T && !yA && /* @__PURE__ */ sA.jsx(Po, { className: "absolute right-3 top-1/2 transform -translate-y-1/2 text-green-500", size: 16 }),
            yA && !T && /* @__PURE__ */ sA.jsx(g0, { className: Rg(
              "absolute right-3 top-1/2 transform -translate-y-1/2 text-destructive",
              yA === b("/dashboard.[token].sendModal.unregisteredEmailNotice") && "text-blue-500"
            ), size: 16 })
          ] }),
          AA && FA && /* @__PURE__ */ sA.jsx("p", { className: "mt-1 text-xs text-primary/60", children: FA }),
          yA && /* @__PURE__ */ sA.jsx("p", { className: Rg(
            "mt-1 text-xs text-destructive",
            yA === b("/dashboard.[token].sendModal.unregisteredEmailNotice") && "text-blue-400"
          ), children: yA })
        ] }),
        /* @__PURE__ */ sA.jsxs("div", { className: "mb-[16px]", children: [
          /* @__PURE__ */ sA.jsx("div", { className: "flex items-center justify-between", children: /* @__PURE__ */ sA.jsx("label", { htmlFor: "amount", className: "block mb-2 text-sm font-medium", children: b("/dashboard.[token].sendModal.amount") }) }),
          /* @__PURE__ */ sA.jsxs("div", { className: "relative", children: [
            /* @__PURE__ */ sA.jsx(
              Bi,
              {
                value: a,
                onChange: YI,
                type: "number",
                inputMode: "decimal",
                id: "amount",
                className: Rg(
                  "[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none"
                ),
                required: !0,
                onBlur: mB,
                style: {
                  paddingLeft: `${iA}px`
                }
              }
            ),
            /* @__PURE__ */ sA.jsx("div", { className: "absolute left-2 top-1/2 -translate-y-1/2", children: /* @__PURE__ */ sA.jsxs(NG, { children: [
              /* @__PURE__ */ sA.jsxs(uG, { className: "flex items-center gap-[6px] px-0 py-1 focus:outline-none", children: [
                /* @__PURE__ */ sA.jsx("span", { ref: BA, className: "font-medium text-sm", children: GA }),
                /* @__PURE__ */ sA.jsx(Jw, { className: "h-4 w-4 opacity-50" })
              ] }),
              /* @__PURE__ */ sA.jsx(Ih, { align: "start", className: "bg-white", children: ok.map((Bg) => /* @__PURE__ */ sA.jsx(Qh, { onClick: () => BB(Bg.tokenType), children: Bg.symbol }, Bg.tokenType)) })
            ] }) })
          ] }),
          eA && /* @__PURE__ */ sA.jsx("p", { className: "mt-1 text-xs text-destructive", children: eA })
        ] }),
        /* @__PURE__ */ sA.jsxs("div", { className: "mb-[16px] text-[#979797] text-sm font-normal leading-none flex items-center", children: [
          /* @__PURE__ */ sA.jsx("div", { className: "mr-1", children: "Estimated gas fee: " }),
          S ? /* @__PURE__ */ sA.jsx("span", { children: /* @__PURE__ */ sA.jsx(Lw, { className: "animate-spin", size: 14 }) }) : x ? /* @__PURE__ */ sA.jsxs("span", { className: "text-black", children: [
            "~ ",
            x,
            " ",
            _
          ] }) : /* @__PURE__ */ sA.jsx("span", { className: "text-black", children: "-" })
        ] }),
        /* @__PURE__ */ sA.jsxs("div", { className: "flex flex-col gap-2 mb-[20px]", children: [
          /* @__PURE__ */ sA.jsxs("div", { className: "flex items-center justify-between", children: [
            /* @__PURE__ */ sA.jsxs("p", { className: "text-[#979797] text-sm leading-none", children: [
              "Daily limit: ",
              /* @__PURE__ */ sA.jsxs("span", { children: [
                jA,
                " ",
                GA
              ] })
            ] }),
            /* @__PURE__ */ sA.jsx(
              IE,
              {
                variant: "outline",
                className: "h-[24px] py-1 px-2 text-xs",
                onClick: () => F(!0),
                type: "button",
                children: "Change limit"
              }
            )
          ] }),
          /* @__PURE__ */ sA.jsxs("div", { className: "border border-black/10 bg-black/5 rounded-[8px] py-3 px-4 flex items-center gap-2.5", children: [
            /* @__PURE__ */ sA.jsx("img", { src: "/imgs/icons/information_filled.svg", width: 16, height: 16, alt: "" }),
            /* @__PURE__ */ sA.jsxs("p", { className: "text-black text-xs font-normal leading-none", children: [
              "You've transferred ",
              cd(IQ),
              " ",
              GA,
              " today"
            ] })
          ] })
        ] }),
        x && x !== "0" && /* @__PURE__ */ sA.jsxs("div", { className: "rounded-lg border border-black/10 bg-black/5 p-3 mb-4 flex items-start", children: [
          /* @__PURE__ */ sA.jsx("img", { className: "w-4 h-4 mr-2", src: "/imgs/icons/information_filled.svg", alt: "information" }),
          /* @__PURE__ */ sA.jsx("p", { className: "text-xs text-black", children: "Estimated fees may vary and will be recalculated during backend checks." })
        ] }),
        /* @__PURE__ */ sA.jsxs("div", { className: "text-[#979797] text-sm font-['Roboto'] leading-none mb-6", children: [
          "Balance: ",
          /* @__PURE__ */ sA.jsxs("span", { className: "text-black", children: [
            Ne(d),
            " ",
            GA
          ] })
        ] }),
        /* @__PURE__ */ sA.jsxs("div", { className: "mb-5", children: [
          /* @__PURE__ */ sA.jsx("label", { htmlFor: "note", className: "block mb-2 text-sm font-medium", children: b("/dashboard.[token].sendModal.note") }),
          /* @__PURE__ */ sA.jsx("div", { className: "relative", children: /* @__PURE__ */ sA.jsx(
            i0,
            {
              className: "focus-visible:ring-0 placeholder:text-black/25",
              id: "note",
              placeholder: "Add your note",
              value: h,
              onChange: (Bg) => n(Bg.target.value)
            }
          ) })
        ] })
      ] }) }),
      /* @__PURE__ */ sA.jsx("footer", { className: "flex justify-end items-center gap-3 px-5 py-[14px]", children: /* @__PURE__ */ sA.jsx(
        IE,
        {
          onClick: LB,
          className: Rg("py-12px"),
          disabled: ag,
          children: l ? /* @__PURE__ */ sA.jsx("div", { className: "", children: /* @__PURE__ */ sA.jsx(Jr, {}) }) : /* @__PURE__ */ sA.jsx("span", { children: b("/dashboard.[token].sendModal.title") })
        }
      ) })
    ] }) }),
    /* @__PURE__ */ sA.jsx(
      Ck,
      {
        isOpen: s,
        onClose: () => F(!1),
        defaultLimits: u
      }
    ),
    /* @__PURE__ */ sA.jsx(
      Iy,
      {
        isOpen: uA,
        onClose: () => HA(!1),
        loading: JA,
        onVerify: LQ,
        message: "Your transaction exceeds the daily limit. Please enter the verification code we sent to your email to proceed.",
        modalClassName: "z-[10004]"
      }
    )
  ] }) : null;
  if (typeof window < "u")
    return pe.createPortal(
      QQ,
      document.body
    );
}
const rk = lw, Qy = IA.forwardRef(({ className: A, ...g }, I) => /* @__PURE__ */ sA.jsx(
  OD,
  {
    ref: I,
    className: Rg(
      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
      A
    ),
    ...g
  }
));
Qy.displayName = OD.displayName;
const wr = IA.forwardRef(({ className: A, ...g }, I) => /* @__PURE__ */ sA.jsx(
  jD,
  {
    ref: I,
    className: Rg(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      A
    ),
    ...g
  }
));
wr.displayName = jD.displayName;
const dr = IA.forwardRef(({ className: A, ...g }, I) => /* @__PURE__ */ sA.jsx(
  _D,
  {
    ref: I,
    className: Rg(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      A
    ),
    ...g
  }
));
dr.displayName = _D.displayName;
var sk = Object.defineProperty, Fi = Object.getOwnPropertySymbols, Ey = Object.prototype.hasOwnProperty, Cy = Object.prototype.propertyIsEnumerable, wD = (A, g, I) => g in A ? sk(A, g, { enumerable: !0, configurable: !0, writable: !0, value: I }) : A[g] = I, Fr = (A, g) => {
  for (var I in g || (g = {}))
    Ey.call(g, I) && wD(A, I, g[I]);
  if (Fi)
    for (var I of Fi(g))
      Cy.call(g, I) && wD(A, I, g[I]);
  return A;
}, Rr = (A, g) => {
  var I = {};
  for (var B in A)
    Ey.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && Fi)
    for (var B of Fi(A))
      g.indexOf(B) < 0 && Cy.call(A, B) && (I[B] = A[B]);
  return I;
};
/**
 * @license QR Code generator library (TypeScript)
 * Copyright (c) Project Nayuki.
 * SPDX-License-Identifier: MIT
 */
var qE;
((A) => {
  const g = class Zg {
    /*-- Constructor (low level) and fields --*/
    // Creates a new QR Code with the given version number,
    // error correction level, data codeword bytes, and mask number.
    // This is a low-level API that most users should not use directly.
    // A mid-level API is the encodeSegments() function.
    constructor(t, e, i, a) {
      if (this.version = t, this.errorCorrectionLevel = e, this.modules = [], this.isFunction = [], t < Zg.MIN_VERSION || t > Zg.MAX_VERSION)
        throw new RangeError("Version value out of range");
      if (a < -1 || a > 7)
        throw new RangeError("Mask value out of range");
      this.size = t * 4 + 17;
      let r = [];
      for (let n = 0; n < this.size; n++)
        r.push(!1);
      for (let n = 0; n < this.size; n++)
        this.modules.push(r.slice()), this.isFunction.push(r.slice());
      this.drawFunctionPatterns();
      const h = this.addEccAndInterleave(i);
      if (this.drawCodewords(h), a == -1) {
        let n = 1e9;
        for (let l = 0; l < 8; l++) {
          this.applyMask(l), this.drawFormatBits(l);
          const y = this.getPenaltyScore();
          y < n && (a = l, n = y), this.applyMask(l);
        }
      }
      Q(0 <= a && a <= 7), this.mask = a, this.applyMask(a), this.drawFormatBits(a), this.isFunction = [];
    }
    /*-- Static factory functions (high level) --*/
    // Returns a QR Code representing the given Unicode text string at the given error correction level.
    // As a conservative upper bound, this function is guaranteed to succeed for strings that have 738 or fewer
    // Unicode code points (not UTF-16 code units) if the low error correction level is used. The smallest possible
    // QR Code version is automatically chosen for the output. The ECC level of the result may be higher than the
    // ecl argument if it can be done without increasing the version.
    static encodeText(t, e) {
      const i = A.QrSegment.makeSegments(t);
      return Zg.encodeSegments(i, e);
    }
    // Returns a QR Code representing the given binary data at the given error correction level.
    // This function always encodes using the binary segment mode, not any text mode. The maximum number of
    // bytes allowed is 2953. The smallest possible QR Code version is automatically chosen for the output.
    // The ECC level of the result may be higher than the ecl argument if it can be done without increasing the version.
    static encodeBinary(t, e) {
      const i = A.QrSegment.makeBytes(t);
      return Zg.encodeSegments([i], e);
    }
    /*-- Static factory functions (mid level) --*/
    // Returns a QR Code representing the given segments with the given encoding parameters.
    // The smallest possible QR Code version within the given range is automatically
    // chosen for the output. Iff boostEcl is true, then the ECC level of the result
    // may be higher than the ecl argument if it can be done without increasing the
    // version. The mask number is either between 0 to 7 (inclusive) to force that
    // mask, or -1 to automatically choose an appropriate mask (which may be slow).
    // This function allows the user to create a custom sequence of segments that switches
    // between modes (such as alphanumeric and byte) to encode text in less space.
    // This is a mid-level API; the high-level API is encodeText() and encodeBinary().
    static encodeSegments(t, e, i = 1, a = 40, r = -1, h = !0) {
      if (!(Zg.MIN_VERSION <= i && i <= a && a <= Zg.MAX_VERSION) || r < -1 || r > 7)
        throw new RangeError("Invalid value");
      let n, l;
      for (n = i; ; n++) {
        const F = Zg.getNumDataCodewords(n, e) * 8, u = C.getTotalBits(t, n);
        if (u <= F) {
          l = u;
          break;
        }
        if (n >= a)
          throw new RangeError("Data too long");
      }
      for (const F of [Zg.Ecc.MEDIUM, Zg.Ecc.QUARTILE, Zg.Ecc.HIGH])
        h && l <= Zg.getNumDataCodewords(n, F) * 8 && (e = F);
      let y = [];
      for (const F of t) {
        I(F.mode.modeBits, 4, y), I(F.numChars, F.mode.numCharCountBits(n), y);
        for (const u of F.getData())
          y.push(u);
      }
      Q(y.length == l);
      const N = Zg.getNumDataCodewords(n, e) * 8;
      Q(y.length <= N), I(0, Math.min(4, N - y.length), y), I(0, (8 - y.length % 8) % 8, y), Q(y.length % 8 == 0);
      for (let F = 236; y.length < N; F ^= 253)
        I(F, 8, y);
      let s = [];
      for (; s.length * 8 < y.length; )
        s.push(0);
      return y.forEach((F, u) => s[u >>> 3] |= F << 7 - (u & 7)), new Zg(n, e, s, r);
    }
    /*-- Accessor methods --*/
    // Returns the color of the module (pixel) at the given coordinates, which is false
    // for light or true for dark. The top left corner has the coordinates (x=0, y=0).
    // If the given coordinates are out of bounds, then false (light) is returned.
    getModule(t, e) {
      return 0 <= t && t < this.size && 0 <= e && e < this.size && this.modules[e][t];
    }
    // Modified to expose modules for easy access
    getModules() {
      return this.modules;
    }
    /*-- Private helper methods for constructor: Drawing function modules --*/
    // Reads this object's version field, and draws and marks all function modules.
    drawFunctionPatterns() {
      for (let i = 0; i < this.size; i++)
        this.setFunctionModule(6, i, i % 2 == 0), this.setFunctionModule(i, 6, i % 2 == 0);
      this.drawFinderPattern(3, 3), this.drawFinderPattern(this.size - 4, 3), this.drawFinderPattern(3, this.size - 4);
      const t = this.getAlignmentPatternPositions(), e = t.length;
      for (let i = 0; i < e; i++)
        for (let a = 0; a < e; a++)
          i == 0 && a == 0 || i == 0 && a == e - 1 || i == e - 1 && a == 0 || this.drawAlignmentPattern(t[i], t[a]);
      this.drawFormatBits(0), this.drawVersion();
    }
    // Draws two copies of the format bits (with its own error correction code)
    // based on the given mask and this object's error correction level field.
    drawFormatBits(t) {
      const e = this.errorCorrectionLevel.formatBits << 3 | t;
      let i = e;
      for (let r = 0; r < 10; r++)
        i = i << 1 ^ (i >>> 9) * 1335;
      const a = (e << 10 | i) ^ 21522;
      Q(a >>> 15 == 0);
      for (let r = 0; r <= 5; r++)
        this.setFunctionModule(8, r, B(a, r));
      this.setFunctionModule(8, 7, B(a, 6)), this.setFunctionModule(8, 8, B(a, 7)), this.setFunctionModule(7, 8, B(a, 8));
      for (let r = 9; r < 15; r++)
        this.setFunctionModule(14 - r, 8, B(a, r));
      for (let r = 0; r < 8; r++)
        this.setFunctionModule(this.size - 1 - r, 8, B(a, r));
      for (let r = 8; r < 15; r++)
        this.setFunctionModule(8, this.size - 15 + r, B(a, r));
      this.setFunctionModule(8, this.size - 8, !0);
    }
    // Draws two copies of the version bits (with its own error correction code),
    // based on this object's version field, iff 7 <= version <= 40.
    drawVersion() {
      if (this.version < 7)
        return;
      let t = this.version;
      for (let i = 0; i < 12; i++)
        t = t << 1 ^ (t >>> 11) * 7973;
      const e = this.version << 12 | t;
      Q(e >>> 18 == 0);
      for (let i = 0; i < 18; i++) {
        const a = B(e, i), r = this.size - 11 + i % 3, h = Math.floor(i / 3);
        this.setFunctionModule(r, h, a), this.setFunctionModule(h, r, a);
      }
    }
    // Draws a 9*9 finder pattern including the border separator,
    // with the center module at (x, y). Modules can be out of bounds.
    drawFinderPattern(t, e) {
      for (let i = -4; i <= 4; i++)
        for (let a = -4; a <= 4; a++) {
          const r = Math.max(Math.abs(a), Math.abs(i)), h = t + a, n = e + i;
          0 <= h && h < this.size && 0 <= n && n < this.size && this.setFunctionModule(h, n, r != 2 && r != 4);
        }
    }
    // Draws a 5*5 alignment pattern, with the center module
    // at (x, y). All modules must be in bounds.
    drawAlignmentPattern(t, e) {
      for (let i = -2; i <= 2; i++)
        for (let a = -2; a <= 2; a++)
          this.setFunctionModule(t + a, e + i, Math.max(Math.abs(a), Math.abs(i)) != 1);
    }
    // Sets the color of a module and marks it as a function module.
    // Only used by the constructor. Coordinates must be in bounds.
    setFunctionModule(t, e, i) {
      this.modules[e][t] = i, this.isFunction[e][t] = !0;
    }
    /*-- Private helper methods for constructor: Codewords and masking --*/
    // Returns a new byte string representing the given data with the appropriate error correction
    // codewords appended to it, based on this object's version and error correction level.
    addEccAndInterleave(t) {
      const e = this.version, i = this.errorCorrectionLevel;
      if (t.length != Zg.getNumDataCodewords(e, i))
        throw new RangeError("Invalid argument");
      const a = Zg.NUM_ERROR_CORRECTION_BLOCKS[i.ordinal][e], r = Zg.ECC_CODEWORDS_PER_BLOCK[i.ordinal][e], h = Math.floor(Zg.getNumRawDataModules(e) / 8), n = a - h % a, l = Math.floor(h / a);
      let y = [];
      const N = Zg.reedSolomonComputeDivisor(r);
      for (let F = 0, u = 0; F < a; F++) {
        let U = t.slice(u, u + l - r + (F < n ? 0 : 1));
        u += U.length;
        const J = Zg.reedSolomonComputeRemainder(U, N);
        F < n && U.push(0), y.push(U.concat(J));
      }
      let s = [];
      for (let F = 0; F < y[0].length; F++)
        y.forEach((u, U) => {
          (F != l - r || U >= n) && s.push(u[F]);
        });
      return Q(s.length == h), s;
    }
    // Draws the given sequence of 8-bit codewords (data and error correction) onto the entire
    // data area of this QR Code. Function modules need to be marked off before this is called.
    drawCodewords(t) {
      if (t.length != Math.floor(Zg.getNumRawDataModules(this.version) / 8))
        throw new RangeError("Invalid argument");
      let e = 0;
      for (let i = this.size - 1; i >= 1; i -= 2) {
        i == 6 && (i = 5);
        for (let a = 0; a < this.size; a++)
          for (let r = 0; r < 2; r++) {
            const h = i - r, l = (i + 1 & 2) == 0 ? this.size - 1 - a : a;
            !this.isFunction[l][h] && e < t.length * 8 && (this.modules[l][h] = B(t[e >>> 3], 7 - (e & 7)), e++);
          }
      }
      Q(e == t.length * 8);
    }
    // XORs the codeword modules in this QR Code with the given mask pattern.
    // The function modules must be marked and the codeword bits must be drawn
    // before masking. Due to the arithmetic of XOR, calling applyMask() with
    // the same mask value a second time will undo the mask. A final well-formed
    // QR Code needs exactly one (not zero, two, etc.) mask applied.
    applyMask(t) {
      if (t < 0 || t > 7)
        throw new RangeError("Mask value out of range");
      for (let e = 0; e < this.size; e++)
        for (let i = 0; i < this.size; i++) {
          let a;
          switch (t) {
            case 0:
              a = (i + e) % 2 == 0;
              break;
            case 1:
              a = e % 2 == 0;
              break;
            case 2:
              a = i % 3 == 0;
              break;
            case 3:
              a = (i + e) % 3 == 0;
              break;
            case 4:
              a = (Math.floor(i / 3) + Math.floor(e / 2)) % 2 == 0;
              break;
            case 5:
              a = i * e % 2 + i * e % 3 == 0;
              break;
            case 6:
              a = (i * e % 2 + i * e % 3) % 2 == 0;
              break;
            case 7:
              a = ((i + e) % 2 + i * e % 3) % 2 == 0;
              break;
            default:
              throw new Error("Unreachable");
          }
          !this.isFunction[e][i] && a && (this.modules[e][i] = !this.modules[e][i]);
        }
    }
    // Calculates and returns the penalty score based on state of this QR Code's current modules.
    // This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.
    getPenaltyScore() {
      let t = 0;
      for (let r = 0; r < this.size; r++) {
        let h = !1, n = 0, l = [0, 0, 0, 0, 0, 0, 0];
        for (let y = 0; y < this.size; y++)
          this.modules[r][y] == h ? (n++, n == 5 ? t += Zg.PENALTY_N1 : n > 5 && t++) : (this.finderPenaltyAddHistory(n, l), h || (t += this.finderPenaltyCountPatterns(l) * Zg.PENALTY_N3), h = this.modules[r][y], n = 1);
        t += this.finderPenaltyTerminateAndCount(h, n, l) * Zg.PENALTY_N3;
      }
      for (let r = 0; r < this.size; r++) {
        let h = !1, n = 0, l = [0, 0, 0, 0, 0, 0, 0];
        for (let y = 0; y < this.size; y++)
          this.modules[y][r] == h ? (n++, n == 5 ? t += Zg.PENALTY_N1 : n > 5 && t++) : (this.finderPenaltyAddHistory(n, l), h || (t += this.finderPenaltyCountPatterns(l) * Zg.PENALTY_N3), h = this.modules[y][r], n = 1);
        t += this.finderPenaltyTerminateAndCount(h, n, l) * Zg.PENALTY_N3;
      }
      for (let r = 0; r < this.size - 1; r++)
        for (let h = 0; h < this.size - 1; h++) {
          const n = this.modules[r][h];
          n == this.modules[r][h + 1] && n == this.modules[r + 1][h] && n == this.modules[r + 1][h + 1] && (t += Zg.PENALTY_N2);
        }
      let e = 0;
      for (const r of this.modules)
        e = r.reduce((h, n) => h + (n ? 1 : 0), e);
      const i = this.size * this.size, a = Math.ceil(Math.abs(e * 20 - i * 10) / i) - 1;
      return Q(0 <= a && a <= 9), t += a * Zg.PENALTY_N4, Q(0 <= t && t <= 2568888), t;
    }
    /*-- Private helper functions --*/
    // Returns an ascending list of positions of alignment patterns for this version number.
    // Each position is in the range [0,177), and are used on both the x and y axes.
    // This could be implemented as lookup table of 40 variable-length lists of integers.
    getAlignmentPatternPositions() {
      if (this.version == 1)
        return [];
      {
        const t = Math.floor(this.version / 7) + 2, e = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (t * 2 - 2)) * 2;
        let i = [6];
        for (let a = this.size - 7; i.length < t; a -= e)
          i.splice(1, 0, a);
        return i;
      }
    }
    // Returns the number of data bits that can be stored in a QR Code of the given version number, after
    // all function modules are excluded. This includes remainder bits, so it might not be a multiple of 8.
    // The result is in the range [208, 29648]. This could be implemented as a 40-entry lookup table.
    static getNumRawDataModules(t) {
      if (t < Zg.MIN_VERSION || t > Zg.MAX_VERSION)
        throw new RangeError("Version number out of range");
      let e = (16 * t + 128) * t + 64;
      if (t >= 2) {
        const i = Math.floor(t / 7) + 2;
        e -= (25 * i - 10) * i - 55, t >= 7 && (e -= 36);
      }
      return Q(208 <= e && e <= 29648), e;
    }
    // Returns the number of 8-bit data (i.e. not error correction) codewords contained in any
    // QR Code of the given version number and error correction level, with remainder bits discarded.
    // This stateless pure function could be implemented as a (40*4)-cell lookup table.
    static getNumDataCodewords(t, e) {
      return Math.floor(Zg.getNumRawDataModules(t) / 8) - Zg.ECC_CODEWORDS_PER_BLOCK[e.ordinal][t] * Zg.NUM_ERROR_CORRECTION_BLOCKS[e.ordinal][t];
    }
    // Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be
    // implemented as a lookup table over all possible parameter values, instead of as an algorithm.
    static reedSolomonComputeDivisor(t) {
      if (t < 1 || t > 255)
        throw new RangeError("Degree out of range");
      let e = [];
      for (let a = 0; a < t - 1; a++)
        e.push(0);
      e.push(1);
      let i = 1;
      for (let a = 0; a < t; a++) {
        for (let r = 0; r < e.length; r++)
          e[r] = Zg.reedSolomonMultiply(e[r], i), r + 1 < e.length && (e[r] ^= e[r + 1]);
        i = Zg.reedSolomonMultiply(i, 2);
      }
      return e;
    }
    // Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.
    static reedSolomonComputeRemainder(t, e) {
      let i = e.map((a) => 0);
      for (const a of t) {
        const r = a ^ i.shift();
        i.push(0), e.forEach((h, n) => i[n] ^= Zg.reedSolomonMultiply(h, r));
      }
      return i;
    }
    // Returns the product of the two given field elements modulo GF(2^8/0x11D). The arguments and result
    // are unsigned 8-bit integers. This could be implemented as a lookup table of 256*256 entries of uint8.
    static reedSolomonMultiply(t, e) {
      if (t >>> 8 || e >>> 8)
        throw new RangeError("Byte out of range");
      let i = 0;
      for (let a = 7; a >= 0; a--)
        i = i << 1 ^ (i >>> 7) * 285, i ^= (e >>> a & 1) * t;
      return Q(i >>> 8 == 0), i;
    }
    // Can only be called immediately after a light run is added, and
    // returns either 0, 1, or 2. A helper function for getPenaltyScore().
    finderPenaltyCountPatterns(t) {
      const e = t[1];
      Q(e <= this.size * 3);
      const i = e > 0 && t[2] == e && t[3] == e * 3 && t[4] == e && t[5] == e;
      return (i && t[0] >= e * 4 && t[6] >= e ? 1 : 0) + (i && t[6] >= e * 4 && t[0] >= e ? 1 : 0);
    }
    // Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().
    finderPenaltyTerminateAndCount(t, e, i) {
      return t && (this.finderPenaltyAddHistory(e, i), e = 0), e += this.size, this.finderPenaltyAddHistory(e, i), this.finderPenaltyCountPatterns(i);
    }
    // Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().
    finderPenaltyAddHistory(t, e) {
      e[0] == 0 && (t += this.size), e.pop(), e.unshift(t);
    }
  };
  g.MIN_VERSION = 1, g.MAX_VERSION = 40, g.PENALTY_N1 = 3, g.PENALTY_N2 = 3, g.PENALTY_N3 = 40, g.PENALTY_N4 = 10, g.ECC_CODEWORDS_PER_BLOCK = [
    // Version: (note that index 0 is for padding, and is set to an illegal value)
    //0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level
    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
    // Low
    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],
    // Medium
    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
    // Quartile
    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]
    // High
  ], g.NUM_ERROR_CORRECTION_BLOCKS = [
    // Version: (note that index 0 is for padding, and is set to an illegal value)
    //0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level
    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],
    // Low
    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],
    // Medium
    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],
    // Quartile
    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]
    // High
  ], A.QrCode = g;
  function I(o, t, e) {
    if (t < 0 || t > 31 || o >>> t)
      throw new RangeError("Value out of range");
    for (let i = t - 1; i >= 0; i--)
      e.push(o >>> i & 1);
  }
  function B(o, t) {
    return (o >>> t & 1) != 0;
  }
  function Q(o) {
    if (!o)
      throw new Error("Assertion error");
  }
  const E = class pB {
    /*-- Constructor (low level) and fields --*/
    // Creates a new QR Code segment with the given attributes and data.
    // The character count (numChars) must agree with the mode and the bit buffer length,
    // but the constraint isn't checked. The given bit buffer is cloned and stored.
    constructor(t, e, i) {
      if (this.mode = t, this.numChars = e, this.bitData = i, e < 0)
        throw new RangeError("Invalid argument");
      this.bitData = i.slice();
    }
    /*-- Static factory functions (mid level) --*/
    // Returns a segment representing the given binary data encoded in
    // byte mode. All input byte arrays are acceptable. Any text string
    // can be converted to UTF-8 bytes and encoded as a byte mode segment.
    static makeBytes(t) {
      let e = [];
      for (const i of t)
        I(i, 8, e);
      return new pB(pB.Mode.BYTE, t.length, e);
    }
    // Returns a segment representing the given string of decimal digits encoded in numeric mode.
    static makeNumeric(t) {
      if (!pB.isNumeric(t))
        throw new RangeError("String contains non-numeric characters");
      let e = [];
      for (let i = 0; i < t.length; ) {
        const a = Math.min(t.length - i, 3);
        I(parseInt(t.substring(i, i + a), 10), a * 3 + 1, e), i += a;
      }
      return new pB(pB.Mode.NUMERIC, t.length, e);
    }
    // Returns a segment representing the given text string encoded in alphanumeric mode.
    // The characters allowed are: 0 to 9, A to Z (uppercase only), space,
    // dollar, percent, asterisk, plus, hyphen, period, slash, colon.
    static makeAlphanumeric(t) {
      if (!pB.isAlphanumeric(t))
        throw new RangeError("String contains unencodable characters in alphanumeric mode");
      let e = [], i;
      for (i = 0; i + 2 <= t.length; i += 2) {
        let a = pB.ALPHANUMERIC_CHARSET.indexOf(t.charAt(i)) * 45;
        a += pB.ALPHANUMERIC_CHARSET.indexOf(t.charAt(i + 1)), I(a, 11, e);
      }
      return i < t.length && I(pB.ALPHANUMERIC_CHARSET.indexOf(t.charAt(i)), 6, e), new pB(pB.Mode.ALPHANUMERIC, t.length, e);
    }
    // Returns a new mutable list of zero or more segments to represent the given Unicode text string.
    // The result may use various segment modes and switch modes to optimize the length of the bit stream.
    static makeSegments(t) {
      return t == "" ? [] : pB.isNumeric(t) ? [pB.makeNumeric(t)] : pB.isAlphanumeric(t) ? [pB.makeAlphanumeric(t)] : [pB.makeBytes(pB.toUtf8ByteArray(t))];
    }
    // Returns a segment representing an Extended Channel Interpretation
    // (ECI) designator with the given assignment value.
    static makeEci(t) {
      let e = [];
      if (t < 0)
        throw new RangeError("ECI assignment value out of range");
      if (t < 128)
        I(t, 8, e);
      else if (t < 16384)
        I(2, 2, e), I(t, 14, e);
      else if (t < 1e6)
        I(6, 3, e), I(t, 21, e);
      else
        throw new RangeError("ECI assignment value out of range");
      return new pB(pB.Mode.ECI, 0, e);
    }
    // Tests whether the given string can be encoded as a segment in numeric mode.
    // A string is encodable iff each character is in the range 0 to 9.
    static isNumeric(t) {
      return pB.NUMERIC_REGEX.test(t);
    }
    // Tests whether the given string can be encoded as a segment in alphanumeric mode.
    // A string is encodable iff each character is in the following set: 0 to 9, A to Z
    // (uppercase only), space, dollar, percent, asterisk, plus, hyphen, period, slash, colon.
    static isAlphanumeric(t) {
      return pB.ALPHANUMERIC_REGEX.test(t);
    }
    /*-- Methods --*/
    // Returns a new copy of the data bits of this segment.
    getData() {
      return this.bitData.slice();
    }
    // (Package-private) Calculates and returns the number of bits needed to encode the given segments at
    // the given version. The result is infinity if a segment has too many characters to fit its length field.
    static getTotalBits(t, e) {
      let i = 0;
      for (const a of t) {
        const r = a.mode.numCharCountBits(e);
        if (a.numChars >= 1 << r)
          return 1 / 0;
        i += 4 + r + a.bitData.length;
      }
      return i;
    }
    // Returns a new array of bytes representing the given string encoded in UTF-8.
    static toUtf8ByteArray(t) {
      t = encodeURI(t);
      let e = [];
      for (let i = 0; i < t.length; i++)
        t.charAt(i) != "%" ? e.push(t.charCodeAt(i)) : (e.push(parseInt(t.substring(i + 1, i + 3), 16)), i += 2);
      return e;
    }
  };
  E.NUMERIC_REGEX = /^[0-9]*$/, E.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\/:-]*$/, E.ALPHANUMERIC_CHARSET = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";
  let C = E;
  A.QrSegment = E;
})(qE || (qE = {}));
((A) => {
  ((g) => {
    const I = class {
      // The QR Code can tolerate about 30% erroneous codewords
      /*-- Constructor and fields --*/
      constructor(Q, E) {
        this.ordinal = Q, this.formatBits = E;
      }
    };
    I.LOW = new I(0, 1), I.MEDIUM = new I(1, 0), I.QUARTILE = new I(2, 3), I.HIGH = new I(3, 2), g.Ecc = I;
  })(A.QrCode || (A.QrCode = {}));
})(qE || (qE = {}));
((A) => {
  ((g) => {
    const I = class {
      /*-- Constructor and fields --*/
      constructor(Q, E) {
        this.modeBits = Q, this.numBitsCharCount = E;
      }
      /*-- Method --*/
      // (Package-private) Returns the bit width of the character count field for a segment in
      // this mode in a QR Code at the given version number. The result is in the range [0, 16].
      numCharCountBits(Q) {
        return this.numBitsCharCount[Math.floor((Q + 7) / 17)];
      }
    };
    I.NUMERIC = new I(1, [10, 12, 14]), I.ALPHANUMERIC = new I(2, [9, 11, 13]), I.BYTE = new I(4, [8, 16, 16]), I.KANJI = new I(8, [8, 10, 12]), I.ECI = new I(7, [0, 0, 0]), g.Mode = I;
  })(A.QrSegment || (A.QrSegment = {}));
})(qE || (qE = {}));
var dC = qE;
/**
 * @license qrcode.react
 * Copyright (c) Paul O'Shannessy
 * SPDX-License-Identifier: ISC
 */
var nk = {
  L: dC.QrCode.Ecc.LOW,
  M: dC.QrCode.Ecc.MEDIUM,
  Q: dC.QrCode.Ecc.QUARTILE,
  H: dC.QrCode.Ecc.HIGH
}, ey = 128, ty = "L", iy = "#FFFFFF", oy = "#000000", ay = !1, ry = 1, ck = 4, Dk = 0, hk = 0.1;
function sy(A, g = 0) {
  const I = [];
  return A.forEach(function(B, Q) {
    let E = null;
    B.forEach(function(C, o) {
      if (!C && E !== null) {
        I.push(
          `M${E + g} ${Q + g}h${o - E}v1H${E + g}z`
        ), E = null;
        return;
      }
      if (o === B.length - 1) {
        if (!C)
          return;
        E === null ? I.push(`M${o + g},${Q + g} h1v1H${o + g}z`) : I.push(
          `M${E + g},${Q + g} h${o + 1 - E}v1H${E + g}z`
        );
        return;
      }
      C && E === null && (E = o);
    });
  }), I.join("");
}
function ny(A, g) {
  return A.slice().map((I, B) => B < g.y || B >= g.y + g.h ? I : I.map((Q, E) => E < g.x || E >= g.x + g.w ? Q : !1));
}
function lk(A, g, I, B) {
  if (B == null)
    return null;
  const Q = A.length + I * 2, E = Math.floor(g * hk), C = Q / g, o = (B.width || E) * C, t = (B.height || E) * C, e = B.x == null ? A.length / 2 - o / 2 : B.x * C, i = B.y == null ? A.length / 2 - t / 2 : B.y * C, a = B.opacity == null ? 1 : B.opacity;
  let r = null;
  if (B.excavate) {
    let n = Math.floor(e), l = Math.floor(i), y = Math.ceil(o + e - n), N = Math.ceil(t + i - l);
    r = { x: n, y: l, w: y, h: N };
  }
  const h = B.crossOrigin;
  return { x: e, y: i, h: t, w: o, excavation: r, opacity: a, crossOrigin: h };
}
function yk(A, g) {
  return g != null ? Math.max(Math.floor(g), 0) : A ? ck : Dk;
}
function cy({
  value: A,
  level: g,
  minVersion: I,
  includeMargin: B,
  marginSize: Q,
  imageSettings: E,
  size: C,
  boostLevel: o
}) {
  let t = ig.useMemo(() => {
    const n = (Array.isArray(A) ? A : [A]).reduce((l, y) => (l.push(...dC.QrSegment.makeSegments(y)), l), []);
    return dC.QrCode.encodeSegments(
      n,
      nk[g],
      I,
      void 0,
      void 0,
      o
    );
  }, [A, g, I, o]);
  const { cells: e, margin: i, numCells: a, calculatedImageSettings: r } = ig.useMemo(() => {
    let h = t.getModules();
    const n = yk(B, Q), l = h.length + n * 2, y = lk(
      h,
      C,
      n,
      E
    );
    return {
      cells: h,
      margin: n,
      numCells: l,
      calculatedImageSettings: y
    };
  }, [t, C, E, B, Q]);
  return {
    qrcode: t,
    margin: i,
    cells: e,
    numCells: a,
    calculatedImageSettings: r
  };
}
var wk = function() {
  try {
    new Path2D().addPath(new Path2D());
  } catch {
    return !1;
  }
  return !0;
}(), dk = ig.forwardRef(
  function(g, I) {
    const B = g, {
      value: Q,
      size: E = ey,
      level: C = ty,
      bgColor: o = iy,
      fgColor: t = oy,
      includeMargin: e = ay,
      minVersion: i = ry,
      boostLevel: a,
      marginSize: r,
      imageSettings: h
    } = B, l = Rr(B, [
      "value",
      "size",
      "level",
      "bgColor",
      "fgColor",
      "includeMargin",
      "minVersion",
      "boostLevel",
      "marginSize",
      "imageSettings"
    ]), { style: y } = l, N = Rr(l, ["style"]), s = h == null ? void 0 : h.src, F = ig.useRef(null), u = ig.useRef(null), U = ig.useCallback(
      (k) => {
        F.current = k, typeof I == "function" ? I(k) : I && (I.current = k);
      },
      [I]
    ), [J, L] = ig.useState(!1), { margin: f, cells: d, numCells: p, calculatedImageSettings: x } = cy({
      value: Q,
      level: C,
      minVersion: i,
      boostLevel: a,
      includeMargin: e,
      marginSize: r,
      imageSettings: h,
      size: E
    });
    ig.useEffect(() => {
      if (F.current != null) {
        const k = F.current, v = k.getContext("2d");
        if (!v)
          return;
        let m = d;
        const T = u.current, $ = x != null && T !== null && T.complete && T.naturalHeight !== 0 && T.naturalWidth !== 0;
        $ && x.excavation != null && (m = ny(
          d,
          x.excavation
        ));
        const AA = window.devicePixelRatio || 1;
        k.height = k.width = E * AA;
        const lA = E / p * AA;
        v.scale(lA, lA), v.fillStyle = o, v.fillRect(0, 0, p, p), v.fillStyle = t, wk ? v.fill(new Path2D(sy(m, f))) : d.forEach(function(FA, cA) {
          FA.forEach(function(yA, aA) {
            yA && v.fillRect(aA + f, cA + f, 1, 1);
          });
        }), x && (v.globalAlpha = x.opacity), $ && v.drawImage(
          T,
          x.x + f,
          x.y + f,
          x.w,
          x.h
        );
      }
    }), ig.useEffect(() => {
      L(!1);
    }, [s]);
    const M = Fr({ height: E, width: E }, y);
    let S = null;
    return s != null && (S = /* @__PURE__ */ ig.createElement(
      "img",
      {
        src: s,
        key: s,
        style: { display: "none" },
        onLoad: () => {
          L(!0);
        },
        ref: u,
        crossOrigin: x == null ? void 0 : x.crossOrigin
      }
    )), /* @__PURE__ */ ig.createElement(ig.Fragment, null, /* @__PURE__ */ ig.createElement(
      "canvas",
      Fr({
        style: M,
        height: E,
        width: E,
        ref: U,
        role: "img"
      }, N)
    ), S);
  }
);
dk.displayName = "QRCodeCanvas";
var fr = ig.forwardRef(
  function(g, I) {
    const B = g, {
      value: Q,
      size: E = ey,
      level: C = ty,
      bgColor: o = iy,
      fgColor: t = oy,
      includeMargin: e = ay,
      minVersion: i = ry,
      boostLevel: a,
      title: r,
      marginSize: h,
      imageSettings: n
    } = B, l = Rr(B, [
      "value",
      "size",
      "level",
      "bgColor",
      "fgColor",
      "includeMargin",
      "minVersion",
      "boostLevel",
      "title",
      "marginSize",
      "imageSettings"
    ]), { margin: y, cells: N, numCells: s, calculatedImageSettings: F } = cy({
      value: Q,
      level: C,
      minVersion: i,
      boostLevel: a,
      includeMargin: e,
      marginSize: h,
      imageSettings: n,
      size: E
    });
    let u = N, U = null;
    n != null && F != null && (F.excavation != null && (u = ny(
      N,
      F.excavation
    )), U = /* @__PURE__ */ ig.createElement(
      "image",
      {
        href: n.src,
        height: F.h,
        width: F.w,
        x: F.x + y,
        y: F.y + y,
        preserveAspectRatio: "none",
        opacity: F.opacity,
        crossOrigin: F.crossOrigin
      }
    ));
    const J = sy(u, y);
    return /* @__PURE__ */ ig.createElement(
      "svg",
      Fr({
        height: E,
        width: E,
        viewBox: `0 0 ${s} ${s}`,
        ref: I,
        role: "img"
      }, l),
      !!r && /* @__PURE__ */ ig.createElement("title", null, r),
      /* @__PURE__ */ ig.createElement(
        "path",
        {
          fill: o,
          d: `M0,0 h${s}v${s}H0z`,
          shapeRendering: "crispEdges"
        }
      ),
      /* @__PURE__ */ ig.createElement("path", { fill: t, d: J, shapeRendering: "crispEdges" }),
      U
    );
  }
);
fr.displayName = "QRCodeSVG";
function Fk({
  address: A,
  open: g,
  setOpen: I,
  onClose: B
}) {
  const { t: Q } = Hr(), [E, C] = IA.useState("");
  IA.useEffect(() => {
    const { username: e } = fB.all();
    C(e);
  }, []);
  const o = async () => {
    try {
      const e = document.querySelector("#qr-code-svg");
      if (!e) return;
      const i = e.querySelector("image");
      if (i) {
        const l = i.getAttribute("href") || "", N = await (await fetch(l)).blob(), s = await new Promise((F) => {
          const u = new FileReader();
          u.onloadend = () => F(u.result), u.readAsDataURL(N);
        });
        i.setAttribute("href", s);
      }
      const a = new XMLSerializer().serializeToString(e), r = new Blob([a], { type: "image/svg+xml;charset=utf-8" }), h = URL.createObjectURL(r), n = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
      await new Promise((l, y) => {
        const N = new Image();
        N.onload = () => {
          const s = document.createElement("canvas"), F = s.getContext("2d");
          s.width = N.width, s.height = N.height, F == null || F.drawImage(N, 0, 0), n ? s.toBlob(async (u) => {
            if (u)
              try {
                if (navigator.share) {
                  const U = new File([u], "qrcode.png", { type: "image/png" });
                  await navigator.share({
                    files: [U],
                    title: "QR Code"
                  });
                } else {
                  const U = URL.createObjectURL(u), J = document.createElement("a");
                  J.href = U, J.download = "qrcode.png", document.body.appendChild(J), J.click(), document.body.removeChild(J), URL.revokeObjectURL(U);
                }
                DI.success(Q("toastSuccess.copySuccess"), {
                  autoClose: 1e3,
                  hideProgressBar: !0
                }), l(null);
              } catch (U) {
                y(U);
              }
          }, "image/png") : s.toBlob(async (u) => {
            if (u)
              try {
                await navigator.clipboard.write([
                  new ClipboardItem({ "image/png": u })
                ]), DI.success(Q("toastSuccess.copySuccess"), {
                  autoClose: 1e3,
                  hideProgressBar: !0
                }), l(null);
              } catch (U) {
                y(U);
              }
          }, "image/png");
        }, N.onerror = y, N.src = h;
      });
    } catch (e) {
      DI.error(e.message);
    }
  }, t = g ? /* @__PURE__ */ sA.jsxs("div", { className: "fixed inset-0 z-50 flex items-center justify-center font-['Roboto']", children: [
    /* @__PURE__ */ sA.jsx("div", { className: "fixed inset-0 bg-[#1f2533]/40" }),
    /* @__PURE__ */ sA.jsx("div", { className: Rg(
      "relative z-50 w-[372px]"
    ), children: /* @__PURE__ */ sA.jsxs("div", { className: "bg-background text-primary rounded-[6px] w-full", children: [
      /* @__PURE__ */ sA.jsxs("header", { className: "flex justify-between items-center px-5 py-[14px] border-b border-[#EBEBEB]", children: [
        /* @__PURE__ */ sA.jsx("p", { className: "text-black text-lg font-medium font-['Roboto'] leading-normal", children: "Reveive" }),
        /* @__PURE__ */ sA.jsx(
          "button",
          {
            onClick: () => B(!1),
            className: "text-[#929292] hover:text-[#929292]/80",
            children: /* @__PURE__ */ sA.jsx(kr, {})
          }
        )
      ] }),
      /* @__PURE__ */ sA.jsx("div", { className: "p-6 border-b border-[#EBEBEB]", children: /* @__PURE__ */ sA.jsxs(rk, { defaultValue: "crypto", className: "w-full text-center", children: [
        /* @__PURE__ */ sA.jsxs(Qy, { className: "w-[226px] border border-black rounded-full bg-white", children: [
          /* @__PURE__ */ sA.jsx(
            wr,
            {
              value: "crypto",
              className: "w-full text-xs py-[8px] data-[state=active]:bg-black data-[state=active]:text-white data-[state=active]:rounded-full",
              children: Q("/dashboard.[token].receiveModal.Crypto")
            }
          ),
          /* @__PURE__ */ sA.jsx(
            wr,
            {
              value: "email",
              className: "w-full text-xs py-[8px] data-[state=active]:bg-black data-[state=active]:text-white data-[state=active]:rounded-full",
              children: Q("/dashboard.[token].receiveModal.Email")
            }
          )
        ] }),
        /* @__PURE__ */ sA.jsxs(dr, { value: "crypto", children: [
          /* @__PURE__ */ sA.jsx("div", { className: "flex items-center justify-center mx-auto mt-6 mb-2", children: /* @__PURE__ */ sA.jsx(_o, { address: A, iconSize: 14 }) }),
          /* @__PURE__ */ sA.jsx("div", { className: "w-[216px] mx-auto p-[10px]", children: /* @__PURE__ */ sA.jsx(
            fr,
            {
              id: "qr-code-svg",
              value: A,
              size: 320,
              level: "H",
              fgColor: "#000",
              bgColor: "#fff",
              imageSettings: {
                src: "/static/imgs/logos/vastlink.png",
                height: 60,
                width: 60,
                excavate: !0
              },
              style: { width: "196px", height: "196px" }
            }
          ) })
        ] }),
        /* @__PURE__ */ sA.jsxs(dr, { value: "email", children: [
          /* @__PURE__ */ sA.jsx("div", { className: "flex items-center justify-center mx-auto mt-6 mb-2", children: /* @__PURE__ */ sA.jsx(_o, { address: E, iconSize: 14 }) }),
          /* @__PURE__ */ sA.jsx("div", { className: "w-[216px] mx-auto p-[10px]", children: /* @__PURE__ */ sA.jsx(
            fr,
            {
              value: E,
              size: 320,
              level: "H",
              fgColor: "#000",
              bgColor: "#fff",
              imageSettings: {
                src: "/static/imgs/logos/vastlink.png",
                height: 60,
                width: 60,
                excavate: !0
              },
              style: { width: "196px", height: "196px" }
            }
          ) })
        ] })
      ] }) }),
      /* @__PURE__ */ sA.jsx("footer", { className: "flex justify-end items-center gap-2 px-5 py-[14px]", children: /* @__PURE__ */ sA.jsx(IE, { onClick: o, children: "Share QR code" }) })
    ] }) })
  ] }) : null;
  if (typeof window < "u")
    return pe.createPortal(
      t,
      document.body
    );
}
const Rk = ["totalAsset"], fk = 0.01, Gk = async (A) => {
  try {
    const I = (await yB.get("/user-assets/total-assets", {
      params: { address: A }
    })).data.totalAssets;
    return {
      raw: I,
      formatted: Dd(I, 2),
      isZero: I === 0,
      isUSDZero: I < fk
    };
  } catch (g) {
    throw vE(g);
  }
};
function Mk(A) {
  const { address: g } = fB.all();
  return Bt({
    queryKey: [...Rk, g],
    queryFn: () => Gk(g),
    enabled: (A == null ? void 0 : A.enabled) && !!g,
    staleTime: t0(e0)
  });
}
const Nk = async () => {
  const { data: A } = await yB.get("/user/info");
  return A;
}, uk = (A) => Bt({
  queryKey: ["userInfo"],
  queryFn: Nk,
  enabled: (A == null ? void 0 : A.enabled) !== !1,
  retry: !1,
  gcTime: 0,
  ...A
});
function Sk() {
  const { address: A } = fB.all(), { data: g, refetch: I } = Mk({
    enabled: !!A
  }), { data: B } = uk(), [Q, E] = IA.useState(""), [C, o] = IA.useState(!1), [t, e] = IA.useState(!1), [i, a] = IA.useState(VB.VAST), [r, h] = IA.useState(pn.getData() ?? !0);
  IA.useEffect(() => {
    n(i);
  }, []), IA.useEffect(() => {
    B && E(B.avatar || fB.getUserRandomAvatar(B.avatarIndex));
  }, [B]);
  const n = async (y) => {
    a(y);
  }, l = () => {
    h(!r), pn.setData(!r);
  };
  return /* @__PURE__ */ sA.jsxs(
    "div",
    {
      className: Rg(
        "w-full h-[300px] relative overflow-hidden bg-black"
      ),
      children: [
        /* @__PURE__ */ sA.jsx(
          "div",
          {
            className: Rg(
              "absolute inset-[-20%] z-0",
              "bg-center bg-no-repeat bg-cover",
              "blur-[26px] bg-opacity-[0.23] brightness-[0.4]"
            ),
            style: {
              backgroundImage: `url(${Q})`
            }
          }
        ),
        /* @__PURE__ */ sA.jsxs("div", { className: Rg(
          "relative z-10",
          "tablet:flex tablet:justify-between tablet:gap-2",
          "py-[28px] tablet:py-[72px] tablet:px-[104px]",
          "w-[317px] mx-auto tablet:w-full"
        ), children: [
          /* @__PURE__ */ sA.jsxs("div", { children: [
            /* @__PURE__ */ sA.jsx("div", { className: Rg(
              'text-white font-bold leading-tight font-["Asap"]',
              "text-lg tablet:text-[32px]",
              "mb-[25px] tablet:mb-[50px]"
            ), children: "Total asset" }),
            /* @__PURE__ */ sA.jsxs("div", { className: "flex items-start gap-2 tablet:w-auto", children: [
              /* @__PURE__ */ sA.jsx(
                "img",
                {
                  src: Q,
                  alt: "avatar",
                  className: Rg(
                    "w-[39px] h-[39px] rounded-full",
                    "tablet:w-[72px] tablet:h-[72px]",
                    "tablet:mr-[24px]",
                    "mb-[38px] tablet:mb-0"
                  )
                }
              ),
              /* @__PURE__ */ sA.jsxs("div", { className: "flex flex-col", children: [
                /* @__PURE__ */ sA.jsx("div", { className: Rg(
                  "text-[#828282] font-normal leading-none",
                  "text-[8px] tablet:text-[16px]",
                  "mb-[0px] tablet:mb-[10px]"
                ), children: "Portfolio value" }),
                /* @__PURE__ */ sA.jsx("div", { className: Rg(
                  'text-white font-bold font-["Asap"] flex items-center gap-4',
                  "text-[20px] tablet:text-[40px] tablet:leading-none"
                ), children: r ? /* @__PURE__ */ sA.jsxs("div", { className: "flex gap-4", children: [
                  "******",
                  /* @__PURE__ */ sA.jsx(
                    "img",
                    {
                      src: "/imgs/icons/close_eye.svg",
                      className: "w-[30px] h-[30px] cursor-pointer",
                      onClick: l
                    }
                  )
                ] }) : /* @__PURE__ */ sA.jsxs("div", { className: "flex flex-wrap gap-2", children: [
                  "$",
                  (g == null ? void 0 : g.formatted) || "",
                  /* @__PURE__ */ sA.jsxs("div", { className: "flex items-center gap-4", children: [
                    "USD",
                    /* @__PURE__ */ sA.jsx(
                      "img",
                      {
                        src: "/imgs/icons/open_eye.svg",
                        className: "w-[30px] h-[30px] cursor-pointer",
                        onClick: l
                      }
                    )
                  ] })
                ] }) })
              ] })
            ] })
          ] }),
          /* @__PURE__ */ sA.jsxs("div", { className: Rg(
            "w-[276px] tablet:w-auto",
            "mx-auto tablet:mx-0",
            "tablet:mt-[75px]"
          ), children: [
            /* @__PURE__ */ sA.jsxs("div", { className: Rg(
              "flex items-center gap-3 mb-[28px]",
              "justify-center tablet:justify-end"
            ), children: [
              /* @__PURE__ */ sA.jsxs(
                "div",
                {
                  className: " bg-white rounded-full py-[8px] px-[16px] flex items-center gap-2 cursor-pointer",
                  onClick: () => o(!0),
                  children: [
                    /* @__PURE__ */ sA.jsx("img", { src: "/imgs/icons/send.svg", alt: "" }),
                    /* @__PURE__ */ sA.jsx("span", { className: "text-black text-xs font-bold", children: "Send" })
                  ]
                }
              ),
              /* @__PURE__ */ sA.jsxs(
                "div",
                {
                  className: "bg-white rounded-full py-[8px] px-[16px] flex items-center gap-2 cursor-pointer",
                  onClick: () => e(!0),
                  children: [
                    /* @__PURE__ */ sA.jsx("img", { src: "/imgs/icons/receive.svg", alt: "" }),
                    /* @__PURE__ */ sA.jsx("span", { className: "text-black text-xs font-bold", children: "Receive" })
                  ]
                }
              )
            ] }),
            /* @__PURE__ */ sA.jsxs("div", { className: "flex items-start gap-2", children: [
              /* @__PURE__ */ sA.jsx(
                _o,
                {
                  address: A,
                  className: "text-white text-xs",
                  iconClassName: "text-white",
                  iconSize: 14
                }
              ),
              /* @__PURE__ */ sA.jsx(
                "img",
                {
                  className: "w-[14px] h-[14px] cursor-pointer",
                  src: "/imgs/icons/qrcode.svg",
                  alt: "",
                  onClick: () => e(!0)
                }
              )
            ] })
          ] })
        ] }),
        /* @__PURE__ */ sA.jsx(
          ak,
          {
            open: C,
            setOpen: o,
            address: A,
            tokenType: i,
            onClose: () => o(!1)
          }
        ),
        /* @__PURE__ */ sA.jsx(
          Fk,
          {
            address: A,
            open: t,
            setOpen: e,
            onClose: () => e(!1)
          }
        )
      ]
    }
  );
}
function Uk() {
  return /* @__PURE__ */ sA.jsxs("div", { className: "pb-[200px]", children: [
    /* @__PURE__ */ sA.jsx(Sk, {}),
    /* @__PURE__ */ sA.jsx("div", { className: Rg(
      "w-[342px] tablet:w-[725px] laptop:w-[908px] desktop:w-[1224px]",
      "mx-auto"
    ), children: /* @__PURE__ */ sA.jsx(A0, {}) })
  ] });
}
function kk() {
  const A = dw();
  return console.error(A), IA.useEffect(() => {
    var I;
    const g = Number(sessionStorage.getItem("error_refresh_count") || 0);
    (I = A.message) != null && I.includes("Failed to fetch dynamically imported module") && (g < 1 ? (sessionStorage.setItem("error_refresh_count", String(g + 1)), window.location.reload()) : (sessionStorage.removeItem("error_refresh_count"), console.error("Failed to load module after multiple attempts")));
  }, []), /* @__PURE__ */ sA.jsx("div", { id: "error-page", className: "min-h-screen flex items-center justify-center bg-gray-100", children: /* @__PURE__ */ sA.jsxs("div", { className: "text-center", children: [
    /* @__PURE__ */ sA.jsx("h1", { className: "text-4xl font-bold text-red-600 mb-4", children: "Oops!" }),
    /* @__PURE__ */ sA.jsx("p", { className: "text-xl text-gray-700 mb-4", children: "Sorry, an unexpected error has occurred." }),
    /* @__PURE__ */ sA.jsx("p", { className: "text-lg text-gray-600 italic", children: A.statusText || A.message })
  ] }) });
}
function Dp({
  total: A = 0,
  pageSize: g = 30
} = {}) {
  const [I, B] = IA.useState({
    current: 1,
    total: A,
    pageSize: g
  });
  return {
    pagination: I,
    handlePageChange: (o) => {
      B((t) => ({
        ...t,
        current: o
      }));
    },
    updateTotal: (o) => {
      B((t) => ({
        ...t,
        total: o
      }));
    },
    updatePageSize: (o) => {
      B((t) => ({
        ...t,
        pageSize: o,
        // reset to first page, when page size changed
        current: 1
      }));
    }
  };
}
const Hk = 30, pk = async () => {
  try {
    const A = await yB.post("/marketplace/product/search-products", {
      page: 1,
      pageSize: Hk
    });
    return {
      products: A.data.products,
      total: A.data.total
    };
  } catch (A) {
    const g = vE(A);
    throw new Error(g.message);
  }
};
var Dy = { exports: {} };
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */
(function(A, g) {
  (function(I, B) {
    A.exports = B();
  })($D, function() {
    var I = {};
    I.version = "0.2.0";
    var B = I.settings = {
      minimum: 0.08,
      easing: "ease",
      positionUsing: "",
      speed: 200,
      trickle: !0,
      trickleRate: 0.02,
      trickleSpeed: 800,
      showSpinner: !0,
      barSelector: '[role="bar"]',
      spinnerSelector: '[role="spinner"]',
      parent: "body",
      template: '<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'
    };
    I.configure = function(n) {
      var l, y;
      for (l in n)
        y = n[l], y !== void 0 && n.hasOwnProperty(l) && (B[l] = y);
      return this;
    }, I.status = null, I.set = function(n) {
      var l = I.isStarted();
      n = Q(n, B.minimum, 1), I.status = n === 1 ? null : n;
      var y = I.render(!l), N = y.querySelector(B.barSelector), s = B.speed, F = B.easing;
      return y.offsetWidth, o(function(u) {
        B.positionUsing === "" && (B.positionUsing = I.getPositioningCSS()), t(N, C(n, s, F)), n === 1 ? (t(y, {
          transition: "none",
          opacity: 1
        }), y.offsetWidth, setTimeout(function() {
          t(y, {
            transition: "all " + s + "ms linear",
            opacity: 0
          }), setTimeout(function() {
            I.remove(), u();
          }, s);
        }, s)) : setTimeout(u, s);
      }), this;
    }, I.isStarted = function() {
      return typeof I.status == "number";
    }, I.start = function() {
      I.status || I.set(0);
      var n = function() {
        setTimeout(function() {
          I.status && (I.trickle(), n());
        }, B.trickleSpeed);
      };
      return B.trickle && n(), this;
    }, I.done = function(n) {
      return !n && !I.status ? this : I.inc(0.3 + 0.5 * Math.random()).set(1);
    }, I.inc = function(n) {
      var l = I.status;
      return l ? (typeof n != "number" && (n = (1 - l) * Q(Math.random() * l, 0.1, 0.95)), l = Q(l + n, 0, 0.994), I.set(l)) : I.start();
    }, I.trickle = function() {
      return I.inc(Math.random() * B.trickleRate);
    }, function() {
      var n = 0, l = 0;
      I.promise = function(y) {
        return !y || y.state() === "resolved" ? this : (l === 0 && I.start(), n++, l++, y.always(function() {
          l--, l === 0 ? (n = 0, I.done()) : I.set((n - l) / n);
        }), this);
      };
    }(), I.render = function(n) {
      if (I.isRendered()) return document.getElementById("nprogress");
      i(document.documentElement, "nprogress-busy");
      var l = document.createElement("div");
      l.id = "nprogress", l.innerHTML = B.template;
      var y = l.querySelector(B.barSelector), N = n ? "-100" : E(I.status || 0), s = document.querySelector(B.parent), F;
      return t(y, {
        transition: "all 0 linear",
        transform: "translate3d(" + N + "%,0,0)"
      }), B.showSpinner || (F = l.querySelector(B.spinnerSelector), F && h(F)), s != document.body && i(s, "nprogress-custom-parent"), s.appendChild(l), l;
    }, I.remove = function() {
      a(document.documentElement, "nprogress-busy"), a(document.querySelector(B.parent), "nprogress-custom-parent");
      var n = document.getElementById("nprogress");
      n && h(n);
    }, I.isRendered = function() {
      return !!document.getElementById("nprogress");
    }, I.getPositioningCSS = function() {
      var n = document.body.style, l = "WebkitTransform" in n ? "Webkit" : "MozTransform" in n ? "Moz" : "msTransform" in n ? "ms" : "OTransform" in n ? "O" : "";
      return l + "Perspective" in n ? "translate3d" : l + "Transform" in n ? "translate" : "margin";
    };
    function Q(n, l, y) {
      return n < l ? l : n > y ? y : n;
    }
    function E(n) {
      return (-1 + n) * 100;
    }
    function C(n, l, y) {
      var N;
      return B.positionUsing === "translate3d" ? N = { transform: "translate3d(" + E(n) + "%,0,0)" } : B.positionUsing === "translate" ? N = { transform: "translate(" + E(n) + "%,0)" } : N = { "margin-left": E(n) + "%" }, N.transition = "all " + l + "ms " + y, N;
    }
    var o = /* @__PURE__ */ function() {
      var n = [];
      function l() {
        var y = n.shift();
        y && y(l);
      }
      return function(y) {
        n.push(y), n.length == 1 && l();
      };
    }(), t = /* @__PURE__ */ function() {
      var n = ["Webkit", "O", "Moz", "ms"], l = {};
      function y(u) {
        return u.replace(/^-ms-/, "ms-").replace(/-([\da-z])/gi, function(U, J) {
          return J.toUpperCase();
        });
      }
      function N(u) {
        var U = document.body.style;
        if (u in U) return u;
        for (var J = n.length, L = u.charAt(0).toUpperCase() + u.slice(1), f; J--; )
          if (f = n[J] + L, f in U) return f;
        return u;
      }
      function s(u) {
        return u = y(u), l[u] || (l[u] = N(u));
      }
      function F(u, U, J) {
        U = s(U), u.style[U] = J;
      }
      return function(u, U) {
        var J = arguments, L, f;
        if (J.length == 2)
          for (L in U)
            f = U[L], f !== void 0 && U.hasOwnProperty(L) && F(u, L, f);
        else
          F(u, J[1], J[2]);
      };
    }();
    function e(n, l) {
      var y = typeof n == "string" ? n : r(n);
      return y.indexOf(" " + l + " ") >= 0;
    }
    function i(n, l) {
      var y = r(n), N = y + l;
      e(y, l) || (n.className = N.substring(1));
    }
    function a(n, l) {
      var y = r(n), N;
      e(n, l) && (N = y.replace(" " + l + " ", " "), n.className = N.substring(1, N.length - 1));
    }
    function r(n) {
      return (" " + (n.className || "") + " ").replace(/\s+/gi, " ");
    }
    function h(n) {
      n && n.parentNode && n.parentNode.removeChild(n);
    }
    return I;
  });
})(Dy);
var Yk = Dy.exports;
const Gr = /* @__PURE__ */ Sr(Yk);
var Mr = function(A, g) {
  return Mr = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(I, B) {
    I.__proto__ = B;
  } || function(I, B) {
    for (var Q in B) Object.prototype.hasOwnProperty.call(B, Q) && (I[Q] = B[Q]);
  }, Mr(A, g);
};
function Jk(A, g) {
  if (typeof g != "function" && g !== null)
    throw new TypeError("Class extends value " + String(g) + " is not a constructor or null");
  Mr(A, g);
  function I() {
    this.constructor = A;
  }
  A.prototype = g === null ? Object.create(g) : (I.prototype = g.prototype, new I());
}
var OB = function() {
  return OB = Object.assign || function(g) {
    for (var I, B = 1, Q = arguments.length; B < Q; B++) {
      I = arguments[B];
      for (var E in I) Object.prototype.hasOwnProperty.call(I, E) && (g[E] = I[E]);
    }
    return g;
  }, OB.apply(this, arguments);
};
function Lk(A, g) {
  var I = {};
  for (var B in A) Object.prototype.hasOwnProperty.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && typeof Object.getOwnPropertySymbols == "function")
    for (var Q = 0, B = Object.getOwnPropertySymbols(A); Q < B.length; Q++)
      g.indexOf(B[Q]) < 0 && Object.prototype.propertyIsEnumerable.call(A, B[Q]) && (I[B[Q]] = A[B[Q]]);
  return I;
}
function aC(A, g, I, B) {
  function Q(E) {
    return E instanceof I ? E : new I(function(C) {
      C(E);
    });
  }
  return new (I || (I = Promise))(function(E, C) {
    function o(i) {
      try {
        e(B.next(i));
      } catch (a) {
        C(a);
      }
    }
    function t(i) {
      try {
        e(B.throw(i));
      } catch (a) {
        C(a);
      }
    }
    function e(i) {
      i.done ? E(i.value) : Q(i.value).then(o, t);
    }
    e((B = B.apply(A, [])).next());
  });
}
function rC(A, g) {
  var I = { label: 0, sent: function() {
    if (E[0] & 1) throw E[1];
    return E[1];
  }, trys: [], ops: [] }, B, Q, E, C = Object.create((typeof Iterator == "function" ? Iterator : Object).prototype);
  return C.next = o(0), C.throw = o(1), C.return = o(2), typeof Symbol == "function" && (C[Symbol.iterator] = function() {
    return this;
  }), C;
  function o(e) {
    return function(i) {
      return t([e, i]);
    };
  }
  function t(e) {
    if (B) throw new TypeError("Generator is already executing.");
    for (; C && (C = 0, e[0] && (I = 0)), I; ) try {
      if (B = 1, Q && (E = e[0] & 2 ? Q.return : e[0] ? Q.throw || ((E = Q.return) && E.call(Q), 0) : Q.next) && !(E = E.call(Q, e[1])).done) return E;
      switch (Q = 0, E && (e = [e[0] & 2, E.value]), e[0]) {
        case 0:
        case 1:
          E = e;
          break;
        case 4:
          return I.label++, { value: e[1], done: !1 };
        case 5:
          I.label++, Q = e[1], e = [0];
          continue;
        case 7:
          e = I.ops.pop(), I.trys.pop();
          continue;
        default:
          if (E = I.trys, !(E = E.length > 0 && E[E.length - 1]) && (e[0] === 6 || e[0] === 2)) {
            I = 0;
            continue;
          }
          if (e[0] === 3 && (!E || e[1] > E[0] && e[1] < E[3])) {
            I.label = e[1];
            break;
          }
          if (e[0] === 6 && I.label < E[1]) {
            I.label = E[1], E = e;
            break;
          }
          if (E && I.label < E[2]) {
            I.label = E[2], I.ops.push(e);
            break;
          }
          E[2] && I.ops.pop(), I.trys.pop();
          continue;
      }
      e = g.call(A, I);
    } catch (i) {
      e = [6, i], Q = 0;
    } finally {
      B = E = 0;
    }
    if (e[0] & 5) throw e[1];
    return { value: e[0] ? e[1] : void 0, done: !0 };
  }
}
function sQ(A, g) {
  var I = {};
  for (var B in A) Object.prototype.hasOwnProperty.call(A, B) && g.indexOf(B) < 0 && (I[B] = A[B]);
  if (A != null && typeof Object.getOwnPropertySymbols == "function") {
    var Q = 0;
    for (B = Object.getOwnPropertySymbols(A); Q < B.length; Q++) g.indexOf(B[Q]) < 0 && Object.prototype.propertyIsEnumerable.call(A, B[Q]) && (I[B[Q]] = A[B[Q]]);
  }
  return I;
}
var NE = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof kn < "u" ? kn : typeof self < "u" ? self : {};
function ys(A) {
  return A && A.__esModule && Object.prototype.hasOwnProperty.call(A, "default") ? A.default : A;
}
function ws(A, g) {
  return A(g = { exports: {} }, g.exports), g.exports;
}
var FE = ws(function(A, g) {
  Object.defineProperty(g, "__esModule", { value: !0 });
  var I = function() {
    function B() {
      var Q = this;
      this.locked = /* @__PURE__ */ new Map(), this.addToLocked = function(E, C) {
        var o = Q.locked.get(E);
        o === void 0 ? C === void 0 ? Q.locked.set(E, []) : Q.locked.set(E, [C]) : C !== void 0 && (o.unshift(C), Q.locked.set(E, o));
      }, this.isLocked = function(E) {
        return Q.locked.has(E);
      }, this.lock = function(E) {
        return new Promise(function(C, o) {
          Q.isLocked(E) ? Q.addToLocked(E, C) : (Q.addToLocked(E), C());
        });
      }, this.unlock = function(E) {
        var C = Q.locked.get(E);
        if (C !== void 0 && C.length !== 0) {
          var o = C.pop();
          Q.locked.set(E, C), o !== void 0 && setTimeout(o, 0);
        } else Q.locked.delete(E);
      };
    }
    return B.getInstance = function() {
      return B.instance === void 0 && (B.instance = new B()), B.instance;
    }, B;
  }();
  g.default = function() {
    return I.getInstance();
  };
});
ys(FE);
var Kk = ys(ws(function(A, g) {
  var I = NE && NE.__awaiter || function(i, a, r, h) {
    return new (r || (r = Promise))(function(n, l) {
      function y(F) {
        try {
          s(h.next(F));
        } catch (u) {
          l(u);
        }
      }
      function N(F) {
        try {
          s(h.throw(F));
        } catch (u) {
          l(u);
        }
      }
      function s(F) {
        F.done ? n(F.value) : new r(function(u) {
          u(F.value);
        }).then(y, N);
      }
      s((h = h.apply(i, a || [])).next());
    });
  }, B = NE && NE.__generator || function(i, a) {
    var r, h, n, l, y = { label: 0, sent: function() {
      if (1 & n[0]) throw n[1];
      return n[1];
    }, trys: [], ops: [] };
    return l = { next: N(0), throw: N(1), return: N(2) }, typeof Symbol == "function" && (l[Symbol.iterator] = function() {
      return this;
    }), l;
    function N(s) {
      return function(F) {
        return function(u) {
          if (r) throw new TypeError("Generator is already executing.");
          for (; y; ) try {
            if (r = 1, h && (n = 2 & u[0] ? h.return : u[0] ? h.throw || ((n = h.return) && n.call(h), 0) : h.next) && !(n = n.call(h, u[1])).done) return n;
            switch (h = 0, n && (u = [2 & u[0], n.value]), u[0]) {
              case 0:
              case 1:
                n = u;
                break;
              case 4:
                return y.label++, { value: u[1], done: !1 };
              case 5:
                y.label++, h = u[1], u = [0];
                continue;
              case 7:
                u = y.ops.pop(), y.trys.pop();
                continue;
              default:
                if (n = y.trys, !((n = n.length > 0 && n[n.length - 1]) || u[0] !== 6 && u[0] !== 2)) {
                  y = 0;
                  continue;
                }
                if (u[0] === 3 && (!n || u[1] > n[0] && u[1] < n[3])) {
                  y.label = u[1];
                  break;
                }
                if (u[0] === 6 && y.label < n[1]) {
                  y.label = n[1], n = u;
                  break;
                }
                if (n && y.label < n[2]) {
                  y.label = n[2], y.ops.push(u);
                  break;
                }
                n[2] && y.ops.pop(), y.trys.pop();
                continue;
            }
            u = a.call(i, y);
          } catch (U) {
            u = [6, U], h = 0;
          } finally {
            r = n = 0;
          }
          if (5 & u[0]) throw u[1];
          return { value: u[0] ? u[1] : void 0, done: !0 };
        }([s, F]);
      };
    }
  }, Q = NE;
  Object.defineProperty(g, "__esModule", { value: !0 });
  var E = "browser-tabs-lock-key", C = { key: function(i) {
    return I(Q, void 0, void 0, function() {
      return B(this, function(a) {
        throw new Error("Unsupported");
      });
    });
  }, getItem: function(i) {
    return I(Q, void 0, void 0, function() {
      return B(this, function(a) {
        throw new Error("Unsupported");
      });
    });
  }, clear: function() {
    return I(Q, void 0, void 0, function() {
      return B(this, function(i) {
        return [2, window.localStorage.clear()];
      });
    });
  }, removeItem: function(i) {
    return I(Q, void 0, void 0, function() {
      return B(this, function(a) {
        throw new Error("Unsupported");
      });
    });
  }, setItem: function(i, a) {
    return I(Q, void 0, void 0, function() {
      return B(this, function(r) {
        throw new Error("Unsupported");
      });
    });
  }, keySync: function(i) {
    return window.localStorage.key(i);
  }, getItemSync: function(i) {
    return window.localStorage.getItem(i);
  }, clearSync: function() {
    return window.localStorage.clear();
  }, removeItemSync: function(i) {
    return window.localStorage.removeItem(i);
  }, setItemSync: function(i, a) {
    return window.localStorage.setItem(i, a);
  } };
  function o(i) {
    return new Promise(function(a) {
      return setTimeout(a, i);
    });
  }
  function t(i) {
    for (var a = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz", r = "", h = 0; h < i; h++)
      r += a[Math.floor(Math.random() * a.length)];
    return r;
  }
  var e = function() {
    function i(a) {
      this.acquiredIatSet = /* @__PURE__ */ new Set(), this.storageHandler = void 0, this.id = Date.now().toString() + t(15), this.acquireLock = this.acquireLock.bind(this), this.releaseLock = this.releaseLock.bind(this), this.releaseLock__private__ = this.releaseLock__private__.bind(this), this.waitForSomethingToChange = this.waitForSomethingToChange.bind(this), this.refreshLockWhileAcquired = this.refreshLockWhileAcquired.bind(this), this.storageHandler = a, i.waiters === void 0 && (i.waiters = []);
    }
    return i.prototype.acquireLock = function(a, r) {
      return r === void 0 && (r = 5e3), I(this, void 0, void 0, function() {
        var h, n, l, y, N, s, F;
        return B(this, function(u) {
          switch (u.label) {
            case 0:
              h = Date.now() + t(4), n = Date.now() + r, l = E + "-" + a, y = this.storageHandler === void 0 ? C : this.storageHandler, u.label = 1;
            case 1:
              return Date.now() < n ? [4, o(30)] : [3, 8];
            case 2:
              return u.sent(), y.getItemSync(l) !== null ? [3, 5] : (N = this.id + "-" + a + "-" + h, [4, o(Math.floor(25 * Math.random()))]);
            case 3:
              return u.sent(), y.setItemSync(l, JSON.stringify({ id: this.id, iat: h, timeoutKey: N, timeAcquired: Date.now(), timeRefreshed: Date.now() })), [4, o(30)];
            case 4:
              return u.sent(), (s = y.getItemSync(l)) !== null && (F = JSON.parse(s)).id === this.id && F.iat === h ? (this.acquiredIatSet.add(h), this.refreshLockWhileAcquired(l, h), [2, !0]) : [3, 7];
            case 5:
              return i.lockCorrector(this.storageHandler === void 0 ? C : this.storageHandler), [4, this.waitForSomethingToChange(n)];
            case 6:
              u.sent(), u.label = 7;
            case 7:
              return h = Date.now() + t(4), [3, 1];
            case 8:
              return [2, !1];
          }
        });
      });
    }, i.prototype.refreshLockWhileAcquired = function(a, r) {
      return I(this, void 0, void 0, function() {
        var h = this;
        return B(this, function(n) {
          return setTimeout(function() {
            return I(h, void 0, void 0, function() {
              var l, y, N;
              return B(this, function(s) {
                switch (s.label) {
                  case 0:
                    return [4, FE.default().lock(r)];
                  case 1:
                    return s.sent(), this.acquiredIatSet.has(r) ? (l = this.storageHandler === void 0 ? C : this.storageHandler, (y = l.getItemSync(a)) === null ? (FE.default().unlock(r), [2]) : ((N = JSON.parse(y)).timeRefreshed = Date.now(), l.setItemSync(a, JSON.stringify(N)), FE.default().unlock(r), this.refreshLockWhileAcquired(a, r), [2])) : (FE.default().unlock(r), [2]);
                }
              });
            });
          }, 1e3), [2];
        });
      });
    }, i.prototype.waitForSomethingToChange = function(a) {
      return I(this, void 0, void 0, function() {
        return B(this, function(r) {
          switch (r.label) {
            case 0:
              return [4, new Promise(function(h) {
                var n = !1, l = Date.now(), y = !1;
                function N() {
                  if (y || (window.removeEventListener("storage", N), i.removeFromWaiting(N), clearTimeout(s), y = !0), !n) {
                    n = !0;
                    var F = 50 - (Date.now() - l);
                    F > 0 ? setTimeout(h, F) : h(null);
                  }
                }
                window.addEventListener("storage", N), i.addToWaiting(N);
                var s = setTimeout(N, Math.max(0, a - Date.now()));
              })];
            case 1:
              return r.sent(), [2];
          }
        });
      });
    }, i.addToWaiting = function(a) {
      this.removeFromWaiting(a), i.waiters !== void 0 && i.waiters.push(a);
    }, i.removeFromWaiting = function(a) {
      i.waiters !== void 0 && (i.waiters = i.waiters.filter(function(r) {
        return r !== a;
      }));
    }, i.notifyWaiters = function() {
      i.waiters !== void 0 && i.waiters.slice().forEach(function(a) {
        return a();
      });
    }, i.prototype.releaseLock = function(a) {
      return I(this, void 0, void 0, function() {
        return B(this, function(r) {
          switch (r.label) {
            case 0:
              return [4, this.releaseLock__private__(a)];
            case 1:
              return [2, r.sent()];
          }
        });
      });
    }, i.prototype.releaseLock__private__ = function(a) {
      return I(this, void 0, void 0, function() {
        var r, h, n, l;
        return B(this, function(y) {
          switch (y.label) {
            case 0:
              return r = this.storageHandler === void 0 ? C : this.storageHandler, h = E + "-" + a, (n = r.getItemSync(h)) === null ? [2] : (l = JSON.parse(n)).id !== this.id ? [3, 2] : [4, FE.default().lock(l.iat)];
            case 1:
              y.sent(), this.acquiredIatSet.delete(l.iat), r.removeItemSync(h), FE.default().unlock(l.iat), i.notifyWaiters(), y.label = 2;
            case 2:
              return [2];
          }
        });
      });
    }, i.lockCorrector = function(a) {
      for (var r = Date.now() - 5e3, h = a, n = [], l = 0; ; ) {
        var y = h.keySync(l);
        if (y === null) break;
        n.push(y), l++;
      }
      for (var N = !1, s = 0; s < n.length; s++) {
        var F = n[s];
        if (F.includes(E)) {
          var u = h.getItemSync(F);
          if (u !== null) {
            var U = JSON.parse(u);
            (U.timeRefreshed === void 0 && U.timeAcquired < r || U.timeRefreshed !== void 0 && U.timeRefreshed < r) && (h.removeItemSync(F), N = !0);
          }
        }
      }
      N && i.notifyWaiters();
    }, i.waiters = void 0, i;
  }();
  g.default = e;
}));
const mk = { timeoutInSeconds: 60 }, hy = { name: "auth0-spa-js", version: "2.1.3" }, ly = () => Date.now();
class eI extends Error {
  constructor(g, I) {
    super(I), this.error = g, this.error_description = I, Object.setPrototypeOf(this, eI.prototype);
  }
  static fromPayload({ error: g, error_description: I }) {
    return new eI(g, I);
  }
}
class ds extends eI {
  constructor(g, I, B, Q = null) {
    super(g, I), this.state = B, this.appState = Q, Object.setPrototypeOf(this, ds.prototype);
  }
}
class ze extends eI {
  constructor() {
    super("timeout", "Timeout"), Object.setPrototypeOf(this, ze.prototype);
  }
}
class Fs extends ze {
  constructor(g) {
    super(), this.popup = g, Object.setPrototypeOf(this, Fs.prototype);
  }
}
class Rs extends eI {
  constructor(g) {
    super("cancelled", "Popup closed"), this.popup = g, Object.setPrototypeOf(this, Rs.prototype);
  }
}
class fs extends eI {
  constructor(g, I, B) {
    super(g, I), this.mfa_token = B, Object.setPrototypeOf(this, fs.prototype);
  }
}
class Xi extends eI {
  constructor(g, I) {
    super("missing_refresh_token", `Missing Refresh Token (audience: '${dD(g, ["default"])}', scope: '${dD(I)}')`), this.audience = g, this.scope = I, Object.setPrototypeOf(this, Xi.prototype);
  }
}
function dD(A, g = []) {
  return A && !g.includes(A) ? A : "";
}
const _t = () => window.crypto, Zo = () => {
  const A = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_~.";
  let g = "";
  return Array.from(_t().getRandomValues(new Uint8Array(43))).forEach((I) => g += A[I % A.length]), g;
}, FD = (A) => btoa(A), Nr = (A) => {
  var { clientId: g } = A, I = sQ(A, ["clientId"]);
  return new URLSearchParams(((B) => Object.keys(B).filter((Q) => B[Q] !== void 0).reduce((Q, E) => Object.assign(Object.assign({}, Q), { [E]: B[E] }), {}))(Object.assign({ client_id: g }, I))).toString();
}, RD = (A) => ((g) => decodeURIComponent(atob(g).split("").map((I) => "%" + ("00" + I.charCodeAt(0).toString(16)).slice(-2)).join("")))(A.replace(/_/g, "/").replace(/-/g, "+")), xk = async (A, g) => {
  const I = await fetch(A, g);
  return { ok: I.ok, json: await I.json() };
}, vk = async (A, g, I) => {
  const B = new AbortController();
  let Q;
  return g.signal = B.signal, Promise.race([xk(A, g), new Promise((E, C) => {
    Q = setTimeout(() => {
      B.abort(), C(new Error("Timeout when executing 'fetch'"));
    }, I);
  })]).finally(() => {
    clearTimeout(Q);
  });
}, bk = async (A, g, I, B, Q, E, C) => {
  return o = { auth: { audience: g, scope: I }, timeout: Q, fetchUrl: A, fetchOptions: B, useFormData: C }, t = E, new Promise(function(e, i) {
    const a = new MessageChannel();
    a.port1.onmessage = function(r) {
      r.data.error ? i(new Error(r.data.error)) : e(r.data), a.port1.close();
    }, t.postMessage(o, [a.port2]);
  });
  var o, t;
}, Zk = async (A, g, I, B, Q, E, C = 1e4) => Q ? bk(A, g, I, B, C, Q, E) : vk(A, B, C);
async function Tk(A, g) {
  var { baseUrl: I, timeout: B, audience: Q, scope: E, auth0Client: C, useFormData: o } = A, t = sQ(A, ["baseUrl", "timeout", "audience", "scope", "auth0Client", "useFormData"]);
  const e = o ? Nr(t) : JSON.stringify(t);
  return await async function(i, a, r, h, n, l, y) {
    let N, s = null;
    for (let f = 0; f < 3; f++) try {
      N = await Zk(i, r, h, n, l, y, a), s = null;
      break;
    } catch (d) {
      s = d;
    }
    if (s) throw s;
    const F = N.json, { error: u, error_description: U } = F, J = sQ(F, ["error", "error_description"]), { ok: L } = N;
    if (!L) {
      const f = U || `HTTP error. Unable to fetch ${i}`;
      throw u === "mfa_required" ? new fs(u, f, J.mfa_token) : u === "missing_refresh_token" ? new Xi(r, h) : new eI(u || "request_error", f);
    }
    return J;
  }(`${I}/oauth/token`, B, Q || "default", E, { method: "POST", body: e, headers: { "Content-Type": o ? "application/x-www-form-urlencoded" : "application/json", "Auth0-Client": btoa(JSON.stringify(C || hy)) } }, g, o);
}
const mt = (...A) => {
  return (g = A.filter(Boolean).join(" ").trim().split(/\s+/), Array.from(new Set(g))).join(" ");
  var g;
};
class lQ {
  constructor(g, I = "@@auth0spajs@@", B) {
    this.prefix = I, this.suffix = B, this.clientId = g.clientId, this.scope = g.scope, this.audience = g.audience;
  }
  toKey() {
    return [this.prefix, this.clientId, this.audience, this.scope, this.suffix].filter(Boolean).join("::");
  }
  static fromKey(g) {
    const [I, B, Q, E] = g.split("::");
    return new lQ({ clientId: B, scope: E, audience: Q }, I);
  }
  static fromCacheEntry(g) {
    const { scope: I, audience: B, client_id: Q } = g;
    return new lQ({ scope: I, audience: B, clientId: Q });
  }
}
class Xk {
  set(g, I) {
    localStorage.setItem(g, JSON.stringify(I));
  }
  get(g) {
    const I = window.localStorage.getItem(g);
    if (I) try {
      return JSON.parse(I);
    } catch {
      return;
    }
  }
  remove(g) {
    localStorage.removeItem(g);
  }
  allKeys() {
    return Object.keys(window.localStorage).filter((g) => g.startsWith("@@auth0spajs@@"));
  }
}
class yy {
  constructor() {
    this.enclosedCache = /* @__PURE__ */ function() {
      let g = {};
      return { set(I, B) {
        g[I] = B;
      }, get(I) {
        const B = g[I];
        if (B) return B;
      }, remove(I) {
        delete g[I];
      }, allKeys: () => Object.keys(g) };
    }();
  }
}
class zk {
  constructor(g, I, B) {
    this.cache = g, this.keyManifest = I, this.nowProvider = B || ly;
  }
  async setIdToken(g, I, B) {
    var Q;
    const E = this.getIdTokenCacheKey(g);
    await this.cache.set(E, { id_token: I, decodedToken: B }), await ((Q = this.keyManifest) === null || Q === void 0 ? void 0 : Q.add(E));
  }
  async getIdToken(g) {
    const I = await this.cache.get(this.getIdTokenCacheKey(g.clientId));
    if (!I && g.scope && g.audience) {
      const B = await this.get(g);
      return !B || !B.id_token || !B.decodedToken ? void 0 : { id_token: B.id_token, decodedToken: B.decodedToken };
    }
    if (I) return { id_token: I.id_token, decodedToken: I.decodedToken };
  }
  async get(g, I = 0) {
    var B;
    let Q = await this.cache.get(g.toKey());
    if (!Q) {
      const o = await this.getCacheKeys();
      if (!o) return;
      const t = this.matchExistingCacheKey(g, o);
      t && (Q = await this.cache.get(t));
    }
    if (!Q) return;
    const E = await this.nowProvider(), C = Math.floor(E / 1e3);
    return Q.expiresAt - I < C ? Q.body.refresh_token ? (Q.body = { refresh_token: Q.body.refresh_token }, await this.cache.set(g.toKey(), Q), Q.body) : (await this.cache.remove(g.toKey()), void await ((B = this.keyManifest) === null || B === void 0 ? void 0 : B.remove(g.toKey()))) : Q.body;
  }
  async set(g) {
    var I;
    const B = new lQ({ clientId: g.client_id, scope: g.scope, audience: g.audience }), Q = await this.wrapCacheEntry(g);
    await this.cache.set(B.toKey(), Q), await ((I = this.keyManifest) === null || I === void 0 ? void 0 : I.add(B.toKey()));
  }
  async clear(g) {
    var I;
    const B = await this.getCacheKeys();
    B && (await B.filter((Q) => !g || Q.includes(g)).reduce(async (Q, E) => {
      await Q, await this.cache.remove(E);
    }, Promise.resolve()), await ((I = this.keyManifest) === null || I === void 0 ? void 0 : I.clear()));
  }
  async wrapCacheEntry(g) {
    const I = await this.nowProvider();
    return { body: g, expiresAt: Math.floor(I / 1e3) + g.expires_in };
  }
  async getCacheKeys() {
    var g;
    return this.keyManifest ? (g = await this.keyManifest.get()) === null || g === void 0 ? void 0 : g.keys : this.cache.allKeys ? this.cache.allKeys() : void 0;
  }
  getIdTokenCacheKey(g) {
    return new lQ({ clientId: g }, "@@auth0spajs@@", "@@user@@").toKey();
  }
  matchExistingCacheKey(g, I) {
    return I.filter((B) => {
      var Q;
      const E = lQ.fromKey(B), C = new Set(E.scope && E.scope.split(" ")), o = ((Q = g.scope) === null || Q === void 0 ? void 0 : Q.split(" ")) || [], t = E.scope && o.reduce((e, i) => e && C.has(i), !0);
      return E.prefix === "@@auth0spajs@@" && E.clientId === g.clientId && E.audience === g.audience && t;
    })[0];
  }
}
class Vk {
  constructor(g, I, B) {
    this.storage = g, this.clientId = I, this.cookieDomain = B, this.storageKey = `a0.spajs.txs.${this.clientId}`;
  }
  create(g) {
    this.storage.save(this.storageKey, g, { daysUntilExpire: 1, cookieDomain: this.cookieDomain });
  }
  get() {
    return this.storage.get(this.storageKey);
  }
  remove() {
    this.storage.remove(this.storageKey, { cookieDomain: this.cookieDomain });
  }
}
const Fe = (A) => typeof A == "number", qk = ["iss", "aud", "exp", "nbf", "iat", "jti", "azp", "nonce", "auth_time", "at_hash", "c_hash", "acr", "amr", "sub_jwk", "cnf", "sip_from_tag", "sip_date", "sip_callid", "sip_cseq_num", "sip_via_branch", "orig", "dest", "mky", "events", "toe", "txn", "rph", "sid", "vot", "vtm"], Pk = (A) => {
  if (!A.id_token) throw new Error("ID token is required but missing");
  const g = ((E) => {
    const C = E.split("."), [o, t, e] = C;
    if (C.length !== 3 || !o || !t || !e) throw new Error("ID token could not be decoded");
    const i = JSON.parse(RD(t)), a = { __raw: E }, r = {};
    return Object.keys(i).forEach((h) => {
      a[h] = i[h], qk.includes(h) || (r[h] = i[h]);
    }), { encoded: { header: o, payload: t, signature: e }, header: JSON.parse(RD(o)), claims: a, user: r };
  })(A.id_token);
  if (!g.claims.iss) throw new Error("Issuer (iss) claim must be a string present in the ID token");
  if (g.claims.iss !== A.iss) throw new Error(`Issuer (iss) claim mismatch in the ID token; expected "${A.iss}", found "${g.claims.iss}"`);
  if (!g.user.sub) throw new Error("Subject (sub) claim must be a string present in the ID token");
  if (g.header.alg !== "RS256") throw new Error(`Signature algorithm of "${g.header.alg}" is not supported. Expected the ID token to be signed with "RS256".`);
  if (!g.claims.aud || typeof g.claims.aud != "string" && !Array.isArray(g.claims.aud)) throw new Error("Audience (aud) claim must be a string or array of strings present in the ID token");
  if (Array.isArray(g.claims.aud)) {
    if (!g.claims.aud.includes(A.aud)) throw new Error(`Audience (aud) claim mismatch in the ID token; expected "${A.aud}" but was not one of "${g.claims.aud.join(", ")}"`);
    if (g.claims.aud.length > 1) {
      if (!g.claims.azp) throw new Error("Authorized Party (azp) claim must be a string present in the ID token when Audience (aud) claim has multiple values");
      if (g.claims.azp !== A.aud) throw new Error(`Authorized Party (azp) claim mismatch in the ID token; expected "${A.aud}", found "${g.claims.azp}"`);
    }
  } else if (g.claims.aud !== A.aud) throw new Error(`Audience (aud) claim mismatch in the ID token; expected "${A.aud}" but found "${g.claims.aud}"`);
  if (A.nonce) {
    if (!g.claims.nonce) throw new Error("Nonce (nonce) claim must be a string present in the ID token");
    if (g.claims.nonce !== A.nonce) throw new Error(`Nonce (nonce) claim mismatch in the ID token; expected "${A.nonce}", found "${g.claims.nonce}"`);
  }
  if (A.max_age && !Fe(g.claims.auth_time)) throw new Error("Authentication Time (auth_time) claim must be a number present in the ID token when Max Age (max_age) is specified");
  if (g.claims.exp == null || !Fe(g.claims.exp)) throw new Error("Expiration Time (exp) claim must be a number present in the ID token");
  if (!Fe(g.claims.iat)) throw new Error("Issued At (iat) claim must be a number present in the ID token");
  const I = A.leeway || 60, B = new Date(A.now || Date.now()), Q = /* @__PURE__ */ new Date(0);
  if (Q.setUTCSeconds(g.claims.exp + I), B > Q) throw new Error(`Expiration Time (exp) claim error in the ID token; current time (${B}) is after expiration time (${Q})`);
  if (g.claims.nbf != null && Fe(g.claims.nbf)) {
    const E = /* @__PURE__ */ new Date(0);
    if (E.setUTCSeconds(g.claims.nbf - I), B < E) throw new Error(`Not Before time (nbf) claim in the ID token indicates that this token can't be used just yet. Current time (${B}) is before ${E}`);
  }
  if (g.claims.auth_time != null && Fe(g.claims.auth_time)) {
    const E = /* @__PURE__ */ new Date(0);
    if (E.setUTCSeconds(parseInt(g.claims.auth_time) + A.max_age + I), B > E) throw new Error(`Authentication Time (auth_time) claim in the ID token indicates that too much time has passed since the last end-user authentication. Current time (${B}) is after last auth at ${E}`);
  }
  if (A.organization) {
    const E = A.organization.trim();
    if (E.startsWith("org_")) {
      const C = E;
      if (!g.claims.org_id) throw new Error("Organization ID (org_id) claim must be a string present in the ID token");
      if (C !== g.claims.org_id) throw new Error(`Organization ID (org_id) claim mismatch in the ID token; expected "${C}", found "${g.claims.org_id}"`);
    } else {
      const C = E.toLowerCase();
      if (!g.claims.org_name) throw new Error("Organization Name (org_name) claim must be a string present in the ID token");
      if (C !== g.claims.org_name) throw new Error(`Organization Name (org_name) claim mismatch in the ID token; expected "${C}", found "${g.claims.org_name}"`);
    }
  }
  return g;
};
var HE = ws(function(A, g) {
  var I = NE && NE.__assign || function() {
    return I = Object.assign || function(t) {
      for (var e, i = 1, a = arguments.length; i < a; i++) for (var r in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
      return t;
    }, I.apply(this, arguments);
  };
  function B(t, e) {
    if (!e) return "";
    var i = "; " + t;
    return e === !0 ? i : i + "=" + e;
  }
  function Q(t, e, i) {
    return encodeURIComponent(t).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/\(/g, "%28").replace(/\)/g, "%29") + "=" + encodeURIComponent(e).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent) + function(a) {
      if (typeof a.expires == "number") {
        var r = /* @__PURE__ */ new Date();
        r.setMilliseconds(r.getMilliseconds() + 864e5 * a.expires), a.expires = r;
      }
      return B("Expires", a.expires ? a.expires.toUTCString() : "") + B("Domain", a.domain) + B("Path", a.path) + B("Secure", a.secure) + B("SameSite", a.sameSite);
    }(i);
  }
  function E(t) {
    for (var e = {}, i = t ? t.split("; ") : [], a = /(%[\dA-F]{2})+/gi, r = 0; r < i.length; r++) {
      var h = i[r].split("="), n = h.slice(1).join("=");
      n.charAt(0) === '"' && (n = n.slice(1, -1));
      try {
        e[h[0].replace(a, decodeURIComponent)] = n.replace(a, decodeURIComponent);
      } catch {
      }
    }
    return e;
  }
  function C() {
    return E(document.cookie);
  }
  function o(t, e, i) {
    document.cookie = Q(t, e, I({ path: "/" }, i));
  }
  g.__esModule = !0, g.encode = Q, g.parse = E, g.getAll = C, g.get = function(t) {
    return C()[t];
  }, g.set = o, g.remove = function(t, e) {
    o(t, "", I(I({}, e), { expires: -1 }));
  };
});
ys(HE), HE.encode, HE.parse, HE.getAll;
var Wk = HE.get, wy = HE.set, dy = HE.remove;
const cC = { get(A) {
  const g = Wk(A);
  if (g !== void 0) return JSON.parse(g);
}, save(A, g, I) {
  let B = {};
  window.location.protocol === "https:" && (B = { secure: !0, sameSite: "none" }), I != null && I.daysUntilExpire && (B.expires = I.daysUntilExpire), I != null && I.cookieDomain && (B.domain = I.cookieDomain), wy(A, JSON.stringify(g), B);
}, remove(A, g) {
  let I = {};
  g != null && g.cookieDomain && (I.domain = g.cookieDomain), dy(A, I);
} }, Ok = { get(A) {
  return cC.get(A) || cC.get(`_legacy_${A}`);
}, save(A, g, I) {
  let B = {};
  window.location.protocol === "https:" && (B = { secure: !0 }), I != null && I.daysUntilExpire && (B.expires = I.daysUntilExpire), I != null && I.cookieDomain && (B.domain = I.cookieDomain), wy(`_legacy_${A}`, JSON.stringify(g), B), cC.save(A, g, I);
}, remove(A, g) {
  let I = {};
  g != null && g.cookieDomain && (I.domain = g.cookieDomain), dy(A, I), cC.remove(A, g), cC.remove(`_legacy_${A}`, g);
} }, jk = { get(A) {
  if (typeof sessionStorage > "u") return;
  const g = sessionStorage.getItem(A);
  return g != null ? JSON.parse(g) : void 0;
}, save(A, g) {
  sessionStorage.setItem(A, JSON.stringify(g));
}, remove(A) {
  sessionStorage.removeItem(A);
} };
function _k(A, g, I) {
  var B = g === void 0 ? null : g, Q = function(t, e) {
    var i = atob(t);
    if (e) {
      for (var a = new Uint8Array(i.length), r = 0, h = i.length; r < h; ++r) a[r] = i.charCodeAt(r);
      return String.fromCharCode.apply(null, new Uint16Array(a.buffer));
    }
    return i;
  }(A, I !== void 0 && I), E = Q.indexOf(`
`, 10) + 1, C = Q.substring(E) + (B ? "//# sourceMappingURL=" + B : ""), o = new Blob([C], { type: "application/javascript" });
  return URL.createObjectURL(o);
}
var fD, GD, MD, To, $k = (fD = "Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7Y2xhc3MgZSBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKHQscil7c3VwZXIociksdGhpcy5lcnJvcj10LHRoaXMuZXJyb3JfZGVzY3JpcHRpb249cixPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcyxlLnByb3RvdHlwZSl9c3RhdGljIGZyb21QYXlsb2FkKHtlcnJvcjp0LGVycm9yX2Rlc2NyaXB0aW9uOnJ9KXtyZXR1cm4gbmV3IGUodCxyKX19Y2xhc3MgdCBleHRlbmRzIGV7Y29uc3RydWN0b3IoZSxzKXtzdXBlcigibWlzc2luZ19yZWZyZXNoX3Rva2VuIixgTWlzc2luZyBSZWZyZXNoIFRva2VuIChhdWRpZW5jZTogJyR7cihlLFsiZGVmYXVsdCJdKX0nLCBzY29wZTogJyR7cihzKX0nKWApLHRoaXMuYXVkaWVuY2U9ZSx0aGlzLnNjb3BlPXMsT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsdC5wcm90b3R5cGUpfX1mdW5jdGlvbiByKGUsdD1bXSl7cmV0dXJuIGUmJiF0LmluY2x1ZGVzKGUpP2U6IiJ9ImZ1bmN0aW9uIj09dHlwZW9mIFN1cHByZXNzZWRFcnJvciYmU3VwcHJlc3NlZEVycm9yO2NvbnN0IHM9ZT0+e3ZhcntjbGllbnRJZDp0fT1lLHI9ZnVuY3Rpb24oZSx0KXt2YXIgcj17fTtmb3IodmFyIHMgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxzKSYmdC5pbmRleE9mKHMpPDAmJihyW3NdPWVbc10pO2lmKG51bGwhPWUmJiJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbz0wO2ZvcihzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7bzxzLmxlbmd0aDtvKyspdC5pbmRleE9mKHNbb10pPDAmJk9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLHNbb10pJiYocltzW29dXT1lW3Nbb11dKX1yZXR1cm4gcn0oZSxbImNsaWVudElkIl0pO3JldHVybiBuZXcgVVJMU2VhcmNoUGFyYW1zKChlPT5PYmplY3Qua2V5cyhlKS5maWx0ZXIoKHQ9PnZvaWQgMCE9PWVbdF0pKS5yZWR1Y2UoKCh0LHIpPT5PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sdCkse1tyXTplW3JdfSkpLHt9KSkoT2JqZWN0LmFzc2lnbih7Y2xpZW50X2lkOnR9LHIpKSkudG9TdHJpbmcoKX07bGV0IG89e307Y29uc3Qgbj0oZSx0KT0+YCR7ZX18JHt0fWA7YWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsKGFzeW5jKHtkYXRhOnt0aW1lb3V0OmUsYXV0aDpyLGZldGNoVXJsOmksZmV0Y2hPcHRpb25zOmMsdXNlRm9ybURhdGE6YX0scG9ydHM6W3BdfSk9PntsZXQgZjtjb25zdHthdWRpZW5jZTp1LHNjb3BlOmx9PXJ8fHt9O3RyeXtjb25zdCByPWE/KGU9Pntjb25zdCB0PW5ldyBVUkxTZWFyY2hQYXJhbXMoZSkscj17fTtyZXR1cm4gdC5mb3JFYWNoKCgoZSx0KT0+e3JbdF09ZX0pKSxyfSkoYy5ib2R5KTpKU09OLnBhcnNlKGMuYm9keSk7aWYoIXIucmVmcmVzaF90b2tlbiYmInJlZnJlc2hfdG9rZW4iPT09ci5ncmFudF90eXBlKXtjb25zdCBlPSgoZSx0KT0+b1tuKGUsdCldKSh1LGwpO2lmKCFlKXRocm93IG5ldyB0KHUsbCk7Yy5ib2R5PWE/cyhPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30scikse3JlZnJlc2hfdG9rZW46ZX0pKTpKU09OLnN0cmluZ2lmeShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30scikse3JlZnJlc2hfdG9rZW46ZX0pKX1sZXQgaCxnOyJmdW5jdGlvbiI9PXR5cGVvZiBBYm9ydENvbnRyb2xsZXImJihoPW5ldyBBYm9ydENvbnRyb2xsZXIsYy5zaWduYWw9aC5zaWduYWwpO3RyeXtnPWF3YWl0IFByb21pc2UucmFjZShbKGQ9ZSxuZXcgUHJvbWlzZSgoZT0+c2V0VGltZW91dChlLGQpKSkpLGZldGNoKGksT2JqZWN0LmFzc2lnbih7fSxjKSldKX1jYXRjaChlKXtyZXR1cm4gdm9pZCBwLnBvc3RNZXNzYWdlKHtlcnJvcjplLm1lc3NhZ2V9KX1pZighZylyZXR1cm4gaCYmaC5hYm9ydCgpLHZvaWQgcC5wb3N0TWVzc2FnZSh7ZXJyb3I6IlRpbWVvdXQgd2hlbiBleGVjdXRpbmcgJ2ZldGNoJyJ9KTtmPWF3YWl0IGcuanNvbigpLGYucmVmcmVzaF90b2tlbj8oKChlLHQscik9PntvW24odCxyKV09ZX0pKGYucmVmcmVzaF90b2tlbix1LGwpLGRlbGV0ZSBmLnJlZnJlc2hfdG9rZW4pOigoZSx0KT0+e2RlbGV0ZSBvW24oZSx0KV19KSh1LGwpLHAucG9zdE1lc3NhZ2Uoe29rOmcub2ssanNvbjpmfSl9Y2F0Y2goZSl7cC5wb3N0TWVzc2FnZSh7b2s6ITEsanNvbjp7ZXJyb3I6ZS5lcnJvcixlcnJvcl9kZXNjcmlwdGlvbjplLm1lc3NhZ2V9fSl9dmFyIGR9KSl9KCk7Cgo=", GD = null, MD = !1, function(A) {
  return To = To || _k(fD, GD, MD), new Worker(To, A);
});
const Xo = {};
class AH {
  constructor(g, I) {
    this.cache = g, this.clientId = I, this.manifestKey = this.createManifestKeyFrom(this.clientId);
  }
  async add(g) {
    var I;
    const B = new Set(((I = await this.cache.get(this.manifestKey)) === null || I === void 0 ? void 0 : I.keys) || []);
    B.add(g), await this.cache.set(this.manifestKey, { keys: [...B] });
  }
  async remove(g) {
    const I = await this.cache.get(this.manifestKey);
    if (I) {
      const B = new Set(I.keys);
      return B.delete(g), B.size > 0 ? await this.cache.set(this.manifestKey, { keys: [...B] }) : await this.cache.remove(this.manifestKey);
    }
  }
  get() {
    return this.cache.get(this.manifestKey);
  }
  clear() {
    return this.cache.remove(this.manifestKey);
  }
  createManifestKeyFrom(g) {
    return `@@auth0spajs@@::${g}`;
  }
}
const gH = { memory: () => new yy().enclosedCache, localstorage: () => new Xk() }, ND = (A) => gH[A], uD = (A) => {
  const { openUrl: g, onRedirect: I } = A, B = sQ(A, ["openUrl", "onRedirect"]);
  return Object.assign(Object.assign({}, B), { openUrl: g === !1 || g ? g : I });
}, zo = new Kk();
class BH {
  constructor(g) {
    let I, B;
    if (this.userCache = new yy().enclosedCache, this.defaultOptions = { authorizationParams: { scope: "openid profile email" }, useRefreshTokensFallback: !1, useFormData: !0 }, this._releaseLockOnPageHide = async () => {
      await zo.releaseLock("auth0.lock.getTokenSilently"), window.removeEventListener("pagehide", this._releaseLockOnPageHide);
    }, this.options = Object.assign(Object.assign(Object.assign({}, this.defaultOptions), g), { authorizationParams: Object.assign(Object.assign({}, this.defaultOptions.authorizationParams), g.authorizationParams) }), typeof window < "u" && (() => {
      if (!_t()) throw new Error("For security reasons, `window.crypto` is required to run `auth0-spa-js`.");
      if (_t().subtle === void 0) throw new Error(`
      auth0-spa-js must run on a secure origin. See https://github.com/auth0/auth0-spa-js/blob/main/FAQ.md#why-do-i-get-auth0-spa-js-must-run-on-a-secure-origin for more information.
    `);
    })(), g.cache && g.cacheLocation && console.warn("Both `cache` and `cacheLocation` options have been specified in the Auth0Client configuration; ignoring `cacheLocation` and using `cache`."), g.cache) B = g.cache;
    else {
      if (I = g.cacheLocation || "memory", !ND(I)) throw new Error(`Invalid cache location "${I}"`);
      B = ND(I)();
    }
    this.httpTimeoutMs = g.httpTimeoutInSeconds ? 1e3 * g.httpTimeoutInSeconds : 1e4, this.cookieStorage = g.legacySameSiteCookie === !1 ? cC : Ok, this.orgHintCookieName = `auth0.${this.options.clientId}.organization_hint`, this.isAuthenticatedCookieName = ((C) => `auth0.${C}.is.authenticated`)(this.options.clientId), this.sessionCheckExpiryDays = g.sessionCheckExpiryDays || 1;
    const Q = g.useCookiesForTransactions ? this.cookieStorage : jk;
    var E;
    this.scope = mt("openid", this.options.authorizationParams.scope, this.options.useRefreshTokens ? "offline_access" : ""), this.transactionManager = new Vk(Q, this.options.clientId, this.options.cookieDomain), this.nowProvider = this.options.nowProvider || ly, this.cacheManager = new zk(B, B.allKeys ? void 0 : new AH(B, this.options.clientId), this.nowProvider), this.domainUrl = (E = this.options.domain, /^https?:\/\//.test(E) ? E : `https://${E}`), this.tokenIssuer = ((C, o) => C ? C.startsWith("https://") ? C : `https://${C}/` : `${o}/`)(this.options.issuer, this.domainUrl), typeof window < "u" && window.Worker && this.options.useRefreshTokens && I === "memory" && (this.options.workerUrl ? this.worker = new Worker(this.options.workerUrl) : this.worker = new $k());
  }
  _url(g) {
    const I = encodeURIComponent(btoa(JSON.stringify(this.options.auth0Client || hy)));
    return `${this.domainUrl}${g}&auth0Client=${I}`;
  }
  _authorizeUrl(g) {
    return this._url(`/authorize?${Nr(g)}`);
  }
  async _verifyIdToken(g, I, B) {
    const Q = await this.nowProvider();
    return Pk({ iss: this.tokenIssuer, aud: this.options.clientId, id_token: g, nonce: I, organization: B, leeway: this.options.leeway, max_age: (E = this.options.authorizationParams.max_age, typeof E != "string" ? E : parseInt(E, 10) || void 0), now: Q });
    var E;
  }
  _processOrgHint(g) {
    g ? this.cookieStorage.save(this.orgHintCookieName, g, { daysUntilExpire: this.sessionCheckExpiryDays, cookieDomain: this.options.cookieDomain }) : this.cookieStorage.remove(this.orgHintCookieName, { cookieDomain: this.options.cookieDomain });
  }
  async _prepareAuthorizeUrl(g, I, B) {
    const Q = FD(Zo()), E = FD(Zo()), C = Zo(), o = ((i) => {
      const a = new Uint8Array(i);
      return ((r) => {
        const h = { "+": "-", "/": "_", "=": "" };
        return r.replace(/[+/=]/g, (n) => h[n]);
      })(window.btoa(String.fromCharCode(...Array.from(a))));
    })(await (async (i) => await _t().subtle.digest({ name: "SHA-256" }, new TextEncoder().encode(i)))(C)), t = ((i, a, r, h, n, l, y, N) => Object.assign(Object.assign(Object.assign({ client_id: i.clientId }, i.authorizationParams), r), { scope: mt(a, r.scope), response_type: "code", response_mode: N || "query", state: h, nonce: n, redirect_uri: y || i.authorizationParams.redirect_uri, code_challenge: l, code_challenge_method: "S256" }))(this.options, this.scope, g, Q, E, o, g.redirect_uri || this.options.authorizationParams.redirect_uri || B, I == null ? void 0 : I.response_mode), e = this._authorizeUrl(t);
    return { nonce: E, code_verifier: C, scope: t.scope, audience: t.audience || "default", redirect_uri: t.redirect_uri, state: Q, url: e };
  }
  async loginWithPopup(g, I) {
    var B;
    if (g = g || {}, !(I = I || {}).popup && (I.popup = ((o) => {
      const t = window.screenX + (window.innerWidth - 400) / 2, e = window.screenY + (window.innerHeight - 600) / 2;
      return window.open(o, "auth0:authorize:popup", `left=${t},top=${e},width=400,height=600,resizable,scrollbars=yes,status=1`);
    })(""), !I.popup)) throw new Error("Unable to open a popup for loginWithPopup - window.open returned `null`");
    const Q = await this._prepareAuthorizeUrl(g.authorizationParams || {}, { response_mode: "web_message" }, window.location.origin);
    I.popup.location.href = Q.url;
    const E = await ((o) => new Promise((t, e) => {
      let i;
      const a = setInterval(() => {
        o.popup && o.popup.closed && (clearInterval(a), clearTimeout(r), window.removeEventListener("message", i, !1), e(new Rs(o.popup)));
      }, 1e3), r = setTimeout(() => {
        clearInterval(a), e(new Fs(o.popup)), window.removeEventListener("message", i, !1);
      }, 1e3 * (o.timeoutInSeconds || 60));
      i = function(h) {
        if (h.data && h.data.type === "authorization_response") {
          if (clearTimeout(r), clearInterval(a), window.removeEventListener("message", i, !1), o.popup.close(), h.data.response.error) return e(eI.fromPayload(h.data.response));
          t(h.data.response);
        }
      }, window.addEventListener("message", i);
    }))(Object.assign(Object.assign({}, I), { timeoutInSeconds: I.timeoutInSeconds || this.options.authorizeTimeoutInSeconds || 60 }));
    if (Q.state !== E.state) throw new eI("state_mismatch", "Invalid state");
    const C = ((B = g.authorizationParams) === null || B === void 0 ? void 0 : B.organization) || this.options.authorizationParams.organization;
    await this._requestToken({ audience: Q.audience, scope: Q.scope, code_verifier: Q.code_verifier, grant_type: "authorization_code", code: E.code, redirect_uri: Q.redirect_uri }, { nonceIn: Q.nonce, organization: C });
  }
  async getUser() {
    var g;
    const I = await this._getIdTokenFromCache();
    return (g = I == null ? void 0 : I.decodedToken) === null || g === void 0 ? void 0 : g.user;
  }
  async getIdTokenClaims() {
    var g;
    const I = await this._getIdTokenFromCache();
    return (g = I == null ? void 0 : I.decodedToken) === null || g === void 0 ? void 0 : g.claims;
  }
  async loginWithRedirect(g = {}) {
    var I;
    const B = uD(g), { openUrl: Q, fragment: E, appState: C } = B, o = sQ(B, ["openUrl", "fragment", "appState"]), t = ((I = o.authorizationParams) === null || I === void 0 ? void 0 : I.organization) || this.options.authorizationParams.organization, e = await this._prepareAuthorizeUrl(o.authorizationParams || {}), { url: i } = e, a = sQ(e, ["url"]);
    this.transactionManager.create(Object.assign(Object.assign(Object.assign({}, a), { appState: C }), t && { organization: t }));
    const r = E ? `${i}#${E}` : i;
    Q ? await Q(r) : window.location.assign(r);
  }
  async handleRedirectCallback(g = window.location.href) {
    const I = g.split("?").slice(1);
    if (I.length === 0) throw new Error("There are no query params available for parsing.");
    const { state: B, code: Q, error: E, error_description: C } = ((a) => {
      a.indexOf("#") > -1 && (a = a.substring(0, a.indexOf("#")));
      const r = new URLSearchParams(a);
      return { state: r.get("state"), code: r.get("code") || void 0, error: r.get("error") || void 0, error_description: r.get("error_description") || void 0 };
    })(I.join("")), o = this.transactionManager.get();
    if (!o) throw new eI("missing_transaction", "Invalid state");
    if (this.transactionManager.remove(), E) throw new ds(E, C || E, B, o.appState);
    if (!o.code_verifier || o.state && o.state !== B) throw new eI("state_mismatch", "Invalid state");
    const t = o.organization, e = o.nonce, i = o.redirect_uri;
    return await this._requestToken(Object.assign({ audience: o.audience, scope: o.scope, code_verifier: o.code_verifier, grant_type: "authorization_code", code: Q }, i ? { redirect_uri: i } : {}), { nonceIn: e, organization: t }), { appState: o.appState };
  }
  async checkSession(g) {
    if (!this.cookieStorage.get(this.isAuthenticatedCookieName)) {
      if (!this.cookieStorage.get("auth0.is.authenticated")) return;
      this.cookieStorage.save(this.isAuthenticatedCookieName, !0, { daysUntilExpire: this.sessionCheckExpiryDays, cookieDomain: this.options.cookieDomain }), this.cookieStorage.remove("auth0.is.authenticated");
    }
    try {
      await this.getTokenSilently(g);
    } catch {
    }
  }
  async getTokenSilently(g = {}) {
    var I;
    const B = Object.assign(Object.assign({ cacheMode: "on" }, g), { authorizationParams: Object.assign(Object.assign(Object.assign({}, this.options.authorizationParams), g.authorizationParams), { scope: mt(this.scope, (I = g.authorizationParams) === null || I === void 0 ? void 0 : I.scope) }) }), Q = await ((E, C) => {
      let o = Xo[C];
      return o || (o = E().finally(() => {
        delete Xo[C], o = null;
      }), Xo[C] = o), o;
    })(() => this._getTokenSilently(B), `${this.options.clientId}::${B.authorizationParams.audience}::${B.authorizationParams.scope}`);
    return g.detailedResponse ? Q : Q == null ? void 0 : Q.access_token;
  }
  async _getTokenSilently(g) {
    const { cacheMode: I } = g, B = sQ(g, ["cacheMode"]);
    if (I !== "off") {
      const Q = await this._getEntryFromCache({ scope: B.authorizationParams.scope, audience: B.authorizationParams.audience || "default", clientId: this.options.clientId });
      if (Q) return Q;
    }
    if (I !== "cache-only") {
      if (!await (async (Q, E = 3) => {
        for (let C = 0; C < E; C++) if (await Q()) return !0;
        return !1;
      })(() => zo.acquireLock("auth0.lock.getTokenSilently", 5e3), 10)) throw new ze();
      try {
        if (window.addEventListener("pagehide", this._releaseLockOnPageHide), I !== "off") {
          const e = await this._getEntryFromCache({ scope: B.authorizationParams.scope, audience: B.authorizationParams.audience || "default", clientId: this.options.clientId });
          if (e) return e;
        }
        const Q = this.options.useRefreshTokens ? await this._getTokenUsingRefreshToken(B) : await this._getTokenFromIFrame(B), { id_token: E, access_token: C, oauthTokenScope: o, expires_in: t } = Q;
        return Object.assign(Object.assign({ id_token: E, access_token: C }, o ? { scope: o } : null), { expires_in: t });
      } finally {
        await zo.releaseLock("auth0.lock.getTokenSilently"), window.removeEventListener("pagehide", this._releaseLockOnPageHide);
      }
    }
  }
  async getTokenWithPopup(g = {}, I = {}) {
    var B;
    const Q = Object.assign(Object.assign({}, g), { authorizationParams: Object.assign(Object.assign(Object.assign({}, this.options.authorizationParams), g.authorizationParams), { scope: mt(this.scope, (B = g.authorizationParams) === null || B === void 0 ? void 0 : B.scope) }) });
    return I = Object.assign(Object.assign({}, mk), I), await this.loginWithPopup(Q, I), (await this.cacheManager.get(new lQ({ scope: Q.authorizationParams.scope, audience: Q.authorizationParams.audience || "default", clientId: this.options.clientId }))).access_token;
  }
  async isAuthenticated() {
    return !!await this.getUser();
  }
  _buildLogoutUrl(g) {
    g.clientId !== null ? g.clientId = g.clientId || this.options.clientId : delete g.clientId;
    const I = g.logoutParams || {}, { federated: B } = I, Q = sQ(I, ["federated"]), E = B ? "&federated" : "";
    return this._url(`/v2/logout?${Nr(Object.assign({ clientId: g.clientId }, Q))}`) + E;
  }
  async logout(g = {}) {
    const I = uD(g), { openUrl: B } = I, Q = sQ(I, ["openUrl"]);
    g.clientId === null ? await this.cacheManager.clear() : await this.cacheManager.clear(g.clientId || this.options.clientId), this.cookieStorage.remove(this.orgHintCookieName, { cookieDomain: this.options.cookieDomain }), this.cookieStorage.remove(this.isAuthenticatedCookieName, { cookieDomain: this.options.cookieDomain }), this.userCache.remove("@@user@@");
    const E = this._buildLogoutUrl(Q);
    B ? await B(E) : B !== !1 && window.location.assign(E);
  }
  async _getTokenFromIFrame(g) {
    const I = Object.assign(Object.assign({}, g.authorizationParams), { prompt: "none" }), B = this.cookieStorage.get(this.orgHintCookieName);
    B && !I.organization && (I.organization = B);
    const { url: Q, state: E, nonce: C, code_verifier: o, redirect_uri: t, scope: e, audience: i } = await this._prepareAuthorizeUrl(I, { response_mode: "web_message" }, window.location.origin);
    try {
      if (window.crossOriginIsolated) throw new eI("login_required", "The application is running in a Cross-Origin Isolated context, silently retrieving a token without refresh token is not possible.");
      const a = g.timeoutInSeconds || this.options.authorizeTimeoutInSeconds, r = await ((n, l, y = 60) => new Promise((N, s) => {
        const F = window.document.createElement("iframe");
        F.setAttribute("width", "0"), F.setAttribute("height", "0"), F.style.display = "none";
        const u = () => {
          window.document.body.contains(F) && (window.document.body.removeChild(F), window.removeEventListener("message", U, !1));
        };
        let U;
        const J = setTimeout(() => {
          s(new ze()), u();
        }, 1e3 * y);
        U = function(L) {
          if (L.origin != l || !L.data || L.data.type !== "authorization_response") return;
          const f = L.source;
          f && f.close(), L.data.response.error ? s(eI.fromPayload(L.data.response)) : N(L.data.response), clearTimeout(J), window.removeEventListener("message", U, !1), setTimeout(u, 2e3);
        }, window.addEventListener("message", U, !1), window.document.body.appendChild(F), F.setAttribute("src", n);
      }))(Q, this.domainUrl, a);
      if (E !== r.state) throw new eI("state_mismatch", "Invalid state");
      const h = await this._requestToken(Object.assign(Object.assign({}, g.authorizationParams), { code_verifier: o, code: r.code, grant_type: "authorization_code", redirect_uri: t, timeout: g.authorizationParams.timeout || this.httpTimeoutMs }), { nonceIn: C, organization: I.organization });
      return Object.assign(Object.assign({}, h), { scope: e, oauthTokenScope: h.scope, audience: i });
    } catch (a) {
      throw a.error === "login_required" && this.logout({ openUrl: !1 }), a;
    }
  }
  async _getTokenUsingRefreshToken(g) {
    const I = await this.cacheManager.get(new lQ({ scope: g.authorizationParams.scope, audience: g.authorizationParams.audience || "default", clientId: this.options.clientId }));
    if (!(I && I.refresh_token || this.worker)) {
      if (this.options.useRefreshTokensFallback) return await this._getTokenFromIFrame(g);
      throw new Xi(g.authorizationParams.audience || "default", g.authorizationParams.scope);
    }
    const B = g.authorizationParams.redirect_uri || this.options.authorizationParams.redirect_uri || window.location.origin, Q = typeof g.timeoutInSeconds == "number" ? 1e3 * g.timeoutInSeconds : null;
    try {
      const E = await this._requestToken(Object.assign(Object.assign(Object.assign({}, g.authorizationParams), { grant_type: "refresh_token", refresh_token: I && I.refresh_token, redirect_uri: B }), Q && { timeout: Q }));
      return Object.assign(Object.assign({}, E), { scope: g.authorizationParams.scope, oauthTokenScope: E.scope, audience: g.authorizationParams.audience || "default" });
    } catch (E) {
      if ((E.message.indexOf("Missing Refresh Token") > -1 || E.message && E.message.indexOf("invalid refresh token") > -1) && this.options.useRefreshTokensFallback) return await this._getTokenFromIFrame(g);
      throw E;
    }
  }
  async _saveEntryInCache(g) {
    const { id_token: I, decodedToken: B } = g, Q = sQ(g, ["id_token", "decodedToken"]);
    this.userCache.set("@@user@@", { id_token: I, decodedToken: B }), await this.cacheManager.setIdToken(this.options.clientId, g.id_token, g.decodedToken), await this.cacheManager.set(Q);
  }
  async _getIdTokenFromCache() {
    const g = this.options.authorizationParams.audience || "default", I = await this.cacheManager.getIdToken(new lQ({ clientId: this.options.clientId, audience: g, scope: this.scope })), B = this.userCache.get("@@user@@");
    return I && I.id_token === (B == null ? void 0 : B.id_token) ? B : (this.userCache.set("@@user@@", I), I);
  }
  async _getEntryFromCache({ scope: g, audience: I, clientId: B }) {
    const Q = await this.cacheManager.get(new lQ({ scope: g, audience: I, clientId: B }), 60);
    if (Q && Q.access_token) {
      const { access_token: E, oauthTokenScope: C, expires_in: o } = Q, t = await this._getIdTokenFromCache();
      return t && Object.assign(Object.assign({ id_token: t.id_token, access_token: E }, C ? { scope: C } : null), { expires_in: o });
    }
  }
  async _requestToken(g, I) {
    const { nonceIn: B, organization: Q } = I || {}, E = await Tk(Object.assign({ baseUrl: this.domainUrl, client_id: this.options.clientId, auth0Client: this.options.auth0Client, useFormData: this.options.useFormData, timeout: this.httpTimeoutMs }, g), this.worker), C = await this._verifyIdToken(E.id_token, B, Q);
    return await this._saveEntryInCache(Object.assign(Object.assign(Object.assign(Object.assign({}, E), { decodedToken: C, scope: g.scope, audience: g.audience || "default" }), E.scope ? { oauthTokenScope: E.scope } : null), { client_id: this.options.clientId })), this.cookieStorage.save(this.isAuthenticatedCookieName, !0, { daysUntilExpire: this.sessionCheckExpiryDays, cookieDomain: this.options.cookieDomain }), this._processOrgHint(Q || C.claims.org_id), Object.assign(Object.assign({}, E), { decodedToken: C });
  }
}
var Fy = {
  isAuthenticated: !1,
  isLoading: !0
}, MQ = function() {
  throw new Error("You forgot to wrap your component in <Auth0Provider>.");
}, IH = OB(OB({}, Fy), { buildAuthorizeUrl: MQ, buildLogoutUrl: MQ, getAccessTokenSilently: MQ, getAccessTokenWithPopup: MQ, getIdTokenClaims: MQ, loginWithRedirect: MQ, loginWithPopup: MQ, logout: MQ, handleRedirectCallback: MQ }), Ry = IA.createContext(IH), SD = (
  /** @class */
  function(A) {
    Jk(g, A);
    function g(I, B) {
      var Q = A.call(this, B || I) || this;
      return Q.error = I, Q.error_description = B, Object.setPrototypeOf(Q, g.prototype), Q;
    }
    return g;
  }(Error)
), QH = /[?&]code=[^&]+/, EH = /[?&]state=[^&]+/, CH = /[?&]error=[^&]+/, eH = function(A) {
  return A === void 0 && (A = window.location.search), (QH.test(A) || CH.test(A)) && EH.test(A);
}, fy = function(A) {
  return function(g) {
    return g instanceof Error ? g : g !== null && typeof g == "object" && "error" in g && typeof g.error == "string" ? "error_description" in g && typeof g.error_description == "string" ? new SD(g.error, g.error_description) : new SD(g.error) : new Error(A);
  };
}, UD = fy("Login failed"), Vo = fy("Get access token failed"), Gy = function(A) {
  var g;
  A != null && A.redirectUri && (console.warn("Using `redirectUri` has been deprecated, please use `authorizationParams.redirect_uri` instead as `redirectUri` will be no longer supported in a future version"), A.authorizationParams = A.authorizationParams || {}, A.authorizationParams.redirect_uri = A.redirectUri, delete A.redirectUri), !((g = A == null ? void 0 : A.authorizationParams) === null || g === void 0) && g.redirectUri && (console.warn("Using `authorizationParams.redirectUri` has been deprecated, please use `authorizationParams.redirect_uri` instead as `authorizationParams.redirectUri` will be removed in a future version"), A.authorizationParams.redirect_uri = A.authorizationParams.redirectUri, delete A.authorizationParams.redirectUri);
}, tH = function(A, g) {
  switch (g.type) {
    case "LOGIN_POPUP_STARTED":
      return OB(OB({}, A), { isLoading: !0 });
    case "LOGIN_POPUP_COMPLETE":
    case "INITIALISED":
      return OB(OB({}, A), { isAuthenticated: !!g.user, user: g.user, isLoading: !1, error: void 0 });
    case "HANDLE_REDIRECT_COMPLETE":
    case "GET_ACCESS_TOKEN_COMPLETE":
      return A.user === g.user ? A : OB(OB({}, A), { isAuthenticated: !!g.user, user: g.user });
    case "LOGOUT":
      return OB(OB({}, A), { isAuthenticated: !1, user: void 0 });
    case "ERROR":
      return OB(OB({}, A), { isLoading: !1, error: g.error });
  }
}, iH = function(A) {
  return Gy(A), OB(OB({}, A), { auth0Client: {
    name: "auth0-react",
    version: "2.3.0"
  } });
}, oH = function(A) {
  window.history.replaceState({}, document.title, (A == null ? void 0 : A.returnTo) || window.location.pathname);
}, aH = function(A) {
  var g = A.children, I = A.skipRedirectCallback, B = A.onRedirectCallback, Q = B === void 0 ? oH : B, E = A.context, C = E === void 0 ? Ry : E, o = Lk(A, ["children", "skipRedirectCallback", "onRedirectCallback", "context"]), t = IA.useState(function() {
    return new BH(iH(o));
  })[0], e = IA.useReducer(tH, Fy), i = e[0], a = e[1], r = IA.useRef(!1), h = IA.useCallback(function(J) {
    return a({ type: "ERROR", error: J }), J;
  }, []);
  IA.useEffect(function() {
    r.current || (r.current = !0, function() {
      return aC(void 0, void 0, void 0, function() {
        var J, L, f;
        return rC(this, function(d) {
          switch (d.label) {
            case 0:
              return d.trys.push([0, 7, , 8]), J = void 0, eH() && !I ? [4, t.handleRedirectCallback()] : [3, 3];
            case 1:
              return L = d.sent().appState, [4, t.getUser()];
            case 2:
              return J = d.sent(), Q(L, J), [3, 6];
            case 3:
              return [4, t.checkSession()];
            case 4:
              return d.sent(), [4, t.getUser()];
            case 5:
              J = d.sent(), d.label = 6;
            case 6:
              return a({ type: "INITIALISED", user: J }), [3, 8];
            case 7:
              return f = d.sent(), h(UD(f)), [3, 8];
            case 8:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }());
  }, [t, Q, I, h]);
  var n = IA.useCallback(function(J) {
    return Gy(J), t.loginWithRedirect(J);
  }, [t]), l = IA.useCallback(function(J, L) {
    return aC(void 0, void 0, void 0, function() {
      var f, d;
      return rC(this, function(p) {
        switch (p.label) {
          case 0:
            a({ type: "LOGIN_POPUP_STARTED" }), p.label = 1;
          case 1:
            return p.trys.push([1, 3, , 4]), [4, t.loginWithPopup(J, L)];
          case 2:
            return p.sent(), [3, 4];
          case 3:
            return f = p.sent(), h(UD(f)), [
              2
              /*return*/
            ];
          case 4:
            return [4, t.getUser()];
          case 5:
            return d = p.sent(), a({ type: "LOGIN_POPUP_COMPLETE", user: d }), [
              2
              /*return*/
            ];
        }
      });
    });
  }, [t]), y = IA.useCallback(function(J) {
    return J === void 0 && (J = {}), aC(void 0, void 0, void 0, function() {
      return rC(this, function(L) {
        switch (L.label) {
          case 0:
            return [4, t.logout(J)];
          case 1:
            return L.sent(), (J.openUrl || J.openUrl === !1) && a({ type: "LOGOUT" }), [
              2
              /*return*/
            ];
        }
      });
    });
  }, [t]), N = IA.useCallback(
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    function(J) {
      return aC(void 0, void 0, void 0, function() {
        var L, f, d, p;
        return rC(this, function(x) {
          switch (x.label) {
            case 0:
              return x.trys.push([0, 2, 3, 5]), [4, t.getTokenSilently(J)];
            case 1:
              return L = x.sent(), [3, 5];
            case 2:
              throw f = x.sent(), Vo(f);
            case 3:
              return d = a, p = {
                type: "GET_ACCESS_TOKEN_COMPLETE"
              }, [4, t.getUser()];
            case 4:
              return d.apply(void 0, [(p.user = x.sent(), p)]), [
                7
                /*endfinally*/
              ];
            case 5:
              return [2, L];
          }
        });
      });
    },
    [t]
  ), s = IA.useCallback(function(J, L) {
    return aC(void 0, void 0, void 0, function() {
      var f, d, p, x;
      return rC(this, function(M) {
        switch (M.label) {
          case 0:
            return M.trys.push([0, 2, 3, 5]), [4, t.getTokenWithPopup(J, L)];
          case 1:
            return f = M.sent(), [3, 5];
          case 2:
            throw d = M.sent(), Vo(d);
          case 3:
            return p = a, x = {
              type: "GET_ACCESS_TOKEN_COMPLETE"
            }, [4, t.getUser()];
          case 4:
            return p.apply(void 0, [(x.user = M.sent(), x)]), [
              7
              /*endfinally*/
            ];
          case 5:
            return [2, f];
        }
      });
    });
  }, [t]), F = IA.useCallback(function() {
    return t.getIdTokenClaims();
  }, [t]), u = IA.useCallback(function(J) {
    return aC(void 0, void 0, void 0, function() {
      var L, f, d;
      return rC(this, function(p) {
        switch (p.label) {
          case 0:
            return p.trys.push([0, 2, 3, 5]), [4, t.handleRedirectCallback(J)];
          case 1:
            return [2, p.sent()];
          case 2:
            throw L = p.sent(), Vo(L);
          case 3:
            return f = a, d = {
              type: "HANDLE_REDIRECT_COMPLETE"
            }, [4, t.getUser()];
          case 4:
            return f.apply(void 0, [(d.user = p.sent(), d)]), [
              7
              /*endfinally*/
            ];
          case 5:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [t]), U = IA.useMemo(function() {
    return OB(OB({}, i), { getAccessTokenSilently: N, getAccessTokenWithPopup: s, getIdTokenClaims: F, loginWithRedirect: n, loginWithPopup: l, logout: y, handleRedirectCallback: u });
  }, [
    i,
    N,
    s,
    F,
    n,
    l,
    y,
    u
  ]);
  return ig.createElement(C.Provider, { value: U }, g);
}, hp = function(A) {
  return A === void 0 && (A = Ry), IA.useContext(A);
};
const rH = ({ children: A }) => {
  const g = Fw(), I = "vastlink-staging.au.auth0.com", B = "sYO2CoypDphGpzF6rMocB7jT9elW9uFe", Q = "https://staging.app.vastlink.xyz/callback", E = "https://staging.api.vastlink.xyz", C = (o) => {
    g((o == null ? void 0 : o.returnTo) || window.location.pathname);
  };
  return /* @__PURE__ */ sA.jsx(
    aH,
    {
      domain: I,
      clientId: B,
      authorizationParams: {
        audience: E,
        redirect_uri: Q,
        scope: "openid profile email",
        connection: "email"
      },
      onRedirectCallback: C,
      children: A
    }
  );
};
Gr.configure({
  showSpinner: !1,
  minimum: 0.1,
  easing: "ease",
  speed: 500
});
function sH() {
  const A = Rw(), { pathname: g } = fw();
  return IA.useEffect(() => {
    A.state !== "idle" ? Gr.start() : Gr.done();
  }, [A]), IA.useEffect(() => {
    window.scrollTo(0, 0);
  }, [g]), /* @__PURE__ */ sA.jsx(rH, { children: /* @__PURE__ */ sA.jsx(A0, {}) });
}
const nH = Gw([
  {
    path: "/",
    Component: sH,
    errorElement: /* @__PURE__ */ sA.jsx(kk, {}),
    children: [
      {
        path: "/",
        async lazy() {
          const { default: A } = await import("./main-layout-CDQAWrTI.js");
          return { Component: A };
        },
        children: [
          {
            path: "/",
            async lazy() {
              const { default: A } = await import("./page-l3uuaX_1.js");
              return { Component: A };
            }
          },
          {
            path: "/callback",
            async lazy() {
              const { default: A } = await import("./page-BehCJ9RD.js");
              return { Component: A };
            }
          },
          {
            path: "/auth",
            async lazy() {
              const { default: A } = await import("./page-DvwAbq-i.js");
              return { Component: A };
            }
          },
          {
            path: "/verify-transaction",
            async lazy() {
              const { default: A } = await import("./page-ALqkZt6g.js");
              return { Component: A };
            }
          },
          {
            path: "/verify-auth",
            async lazy() {
              const { default: A } = await import("./page-BSGaoN5l.js");
              return { Component: A };
            }
          },
          {
            path: "/verify-daily-withdrawal-limit",
            async lazy() {
              const { default: A } = await import("./page-lIa81DVq.js");
              return { Component: A };
            }
          },
          {
            path: "dashboard",
            element: /* @__PURE__ */ sA.jsx(Uk, {}),
            children: [
              {
                index: !0,
                async lazy() {
                  const { default: A } = await import("./page-CuDWvnK9.js");
                  return { Component: A };
                }
              },
              {
                path: "viewall",
                async lazy() {
                  const { default: A } = await import("./page-395MN389.js");
                  return { Component: A };
                }
              },
              {
                path: ":token",
                async lazy() {
                  const { default: A } = await import("./page-BWlEHJ6F.js");
                  return { Component: A };
                }
              }
            ]
          },
          {
            path: "marketplace",
            children: [
              {
                index: !0,
                async lazy() {
                  const { default: A } = await import("./page-D4K-WlCE.js");
                  return { Component: A };
                },
                loader: pk
              },
              {
                path: "search-result",
                async lazy() {
                  const { default: A } = await import("./page-Bve0Khiv.js");
                  return { Component: A };
                }
              },
              {
                path: "feature-detail/:productId",
                async lazy() {
                  const { default: A } = await import("./page-BDa4syXl.js");
                  return { Component: A };
                }
              },
              {
                path: "multisig-setting",
                async lazy() {
                  const { default: A } = await import("./page-D1ZuvgXs.js");
                  return { Component: A };
                }
              },
              {
                path: "kyb-proxy",
                async lazy() {
                  const { default: A } = await import("./page-BZLPOpOt.js");
                  return { Component: A };
                }
              },
              {
                path: "kyb-self",
                async lazy() {
                  const { default: A } = await import("./page-DXn07k53.js");
                  return { Component: A };
                }
              },
              {
                path: "kyc",
                async lazy() {
                  const { default: A } = await import("./page-Hug0Zgt9.js");
                  return { Component: A };
                }
              },
              {
                path: "product-flow",
                children: [
                  {
                    path: "kyb",
                    children: [
                      {
                        path: "starting",
                        async lazy() {
                          const { default: A } = await import("./page-BStM3Iae.js");
                          return { Component: A };
                        }
                      },
                      {
                        path: "ending",
                        async lazy() {
                          const { default: A } = await import("./page-YLW1n0WA.js");
                          return { Component: A };
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            path: "invite",
            children: [
              {
                path: "transfer",
                async lazy() {
                  const { default: A } = await import("./page-BLXPCNxv.js");
                  return { Component: A };
                }
              },
              {
                path: "register",
                async lazy() {
                  const { default: A } = await import("./page-_NOLqHS4.js");
                  return { Component: A };
                }
              }
            ]
          },
          {
            path: "profile",
            async lazy() {
              const { default: A } = await import("./index-B5Y8c6S1.js");
              return { Component: A };
            }
          },
          {
            path: "multisender",
            async lazy() {
              const { default: A } = await import("./page-FLUl-f8_.js");
              return { Component: A };
            }
          },
          {
            path: "my-rewards",
            async lazy() {
              const { default: A } = await import("./page--5CgI3x_.js");
              return { Component: A };
            }
          },
          {
            path: "/fireblocks_demo",
            async lazy() {
              const { default: A } = await import("./page-k-wGfzoo.js");
              return { Component: A };
            }
          }
        ]
      }
    ]
  }
]);
function cH() {
  const [A, g] = IA.useState(!1);
  return IA.useEffect(() => {
    const I = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test((navigator == null ? void 0 : navigator.userAgent) || "");
    g(I);
  }, []), /* @__PURE__ */ sA.jsx(
    vw,
    {
      position: "top-center",
      autoClose: 5e3,
      hideProgressBar: !0,
      newestOnTop: !1,
      closeOnClick: !1,
      rtl: !1,
      pauseOnFocusLoss: !0,
      draggable: !1,
      pauseOnHover: !0,
      closeButton: !1,
      theme: "colored",
      transition: bw,
      icon: ({ type: I }) => {
        if (I === "error")
          return /* @__PURE__ */ sA.jsx(Kw, {});
        if (I === "success")
          return /* @__PURE__ */ sA.jsx(Po, {});
        if (I === "info")
          return /* @__PURE__ */ sA.jsx(mw, {});
        if (I === "warning")
          return /* @__PURE__ */ sA.jsx(g0, {});
      },
      toastClassName: Rg(
        "text-sm",
        // 'laptop:top-[82px]',
        "max-w-[688px] w-auto"
        // 'left-1/2 -translate-x-1/2'
      )
    }
  );
}
var Gs = "moonpay-react-sdk-embedded-frame", DH = ({
  props: A,
  apiKey: g,
  debug: I,
  environment: B,
  signature: Q
}) => {
  const {
    // params
    currencyCode: E,
    defaultCurrencyCode: C,
    walletAddress: o,
    walletAddressTag: t,
    walletAddresses: e,
    walletAddressTags: i,
    colorCode: a,
    theme: r,
    themeId: h,
    language: n,
    baseCurrencyCode: l,
    baseCurrencyAmount: y,
    quoteCurrencyAmount: N,
    lockAmount: s,
    email: F,
    externalTransactionId: u,
    externalCustomerId: U,
    paymentMethod: J,
    redirectURL: L,
    showAllCurrencies: f,
    showOnlyCurrencies: d,
    showWalletAddressForm: p,
    unsupportedRegionRedirectUrl: x,
    skipUnsupportedRegionScreen: M,
    baseOrigin: S,
    // handlers
    onAuthToken: k,
    onInitiateDeposit: v,
    onKmsWalletsCreated: m,
    onLogin: T,
    onTransactionCompleted: $,
    onUnsupportedRegion: AA,
    onSwapsCustomerSetupComplete: lA,
    onCloseOverlay: FA,
    onTransactionCreated: cA,
    // auth
    auth: yA,
    useWarnBeforeRefresh: aA,
    // other
    overlayNode: eA
  } = A, CA = {
    apiKey: g,
    signature: Q,
    currencyCode: E,
    defaultCurrencyCode: C,
    walletAddress: o,
    walletAddressTag: t,
    walletAddresses: e,
    walletAddressTags: i,
    colorCode: a,
    theme: r,
    themeId: h,
    language: n,
    baseCurrencyCode: l,
    baseCurrencyAmount: y,
    quoteCurrencyAmount: N,
    lockAmount: s,
    email: F,
    externalTransactionId: u,
    externalCustomerId: U,
    paymentMethod: J,
    redirectURL: L,
    showAllCurrencies: f,
    showOnlyCurrencies: d,
    showWalletAddressForm: p,
    unsupportedRegionRedirectUrl: x,
    skipUnsupportedRegionScreen: M,
    baseOrigin: S
  }, b = {
    onAuthToken: k,
    onInitiateDeposit: v,
    onKmsWalletsCreated: m,
    onLogin: T,
    onTransactionCompleted: $,
    onUnsupportedRegion: AA,
    onSwapsCustomerSetupComplete: lA,
    onCloseOverlay: FA,
    onTransactionCreated: cA
  };
  return {
    flow: "buy",
    variant: A.variant,
    environment: B,
    params: CA,
    debug: I,
    handlers: b,
    auth: yA,
    useWarnBeforeRefresh: aA,
    containerNodeSelector: `#${Gs}`,
    overlayNode: eA
  };
}, hH = ({
  props: A,
  apiKey: g,
  debug: I,
  environment: B,
  signature: Q
}) => {
  const {
    // params
    quoteCurrencyCode: E,
    defaultCurrencyCode: C,
    defaultBaseCurrencyCode: o,
    walletAddress: t,
    walletAddressTag: e,
    walletAddresses: i,
    walletAddressTags: a,
    colorCode: r,
    theme: h,
    themeId: n,
    language: l,
    baseCurrencyCode: y,
    baseCurrencyAmount: N,
    quoteCurrencyAmount: s,
    lockAmount: F,
    email: u,
    externalTransactionId: U,
    externalCustomerId: J,
    paymentMethod: L,
    redirectURL: f,
    showAllCurrencies: d,
    showOnlyCurrencies: p,
    showWalletAddressForm: x,
    unsupportedRegionRedirectUrl: M,
    skipUnsupportedRegionScreen: S,
    mpWalletId: k,
    baseOrigin: v,
    // handlers
    onAuthToken: m,
    onInitiateDeposit: T,
    onKmsWalletsCreated: $,
    onLogin: AA,
    onTransactionCompleted: lA,
    onUnsupportedRegion: FA,
    onSwapsCustomerSetupComplete: cA,
    onCloseOverlay: yA,
    onTransactionCreated: aA,
    // auth
    auth: eA,
    useWarnBeforeRefresh: CA
  } = A, b = {
    apiKey: g,
    signature: Q,
    quoteCurrencyCode: E,
    defaultCurrencyCode: C,
    defaultBaseCurrencyCode: o,
    walletAddress: t,
    walletAddressTag: e,
    walletAddresses: i,
    walletAddressTags: a,
    colorCode: r,
    theme: h,
    themeId: n,
    language: l,
    baseCurrencyCode: y,
    baseCurrencyAmount: N,
    quoteCurrencyAmount: s,
    lockAmount: F,
    email: u,
    externalTransactionId: U,
    externalCustomerId: J,
    paymentMethod: L,
    redirectURL: f,
    showAllCurrencies: d,
    showOnlyCurrencies: p,
    showWalletAddressForm: x,
    unsupportedRegionRedirectUrl: M,
    skipUnsupportedRegionScreen: S,
    mpWalletId: k,
    baseOrigin: v
  }, Y = {
    onAuthToken: m,
    onInitiateDeposit: T,
    onKmsWalletsCreated: $,
    onLogin: AA,
    onTransactionCompleted: lA,
    onUnsupportedRegion: FA,
    onSwapsCustomerSetupComplete: cA,
    onCloseOverlay: yA,
    onTransactionCreated: aA
  };
  return {
    flow: "sell",
    variant: A.variant,
    environment: B,
    params: b,
    debug: I,
    handlers: Y,
    auth: eA,
    useWarnBeforeRefresh: CA,
    containerNodeSelector: `#${Gs}`
  };
};
async function lH(A = "v1") {
  return new Promise((g, I) => {
    const B = `https://static.moonpay.com/web-sdk/${A}/moonpay-web-sdk.min.js`, Q = document.querySelector(`script[src="${B}"]`), E = (C = 0) => {
      if (window.MoonPayWebSdk) {
        g(window.MoonPayWebSdk.init);
        return;
      }
      if (C > 100) {
        I(new Error("Loading MoonPayWebSdk script timed out."));
        return;
      }
      setTimeout(() => E(C + 1), 100);
    };
    if (Q)
      E();
    else {
      const C = document.createElement("script");
      C.async = !0, C.src = B, C.addEventListener("load", () => {
        var o;
        g((o = window.MoonPayWebSdk) == null ? void 0 : o.init);
      }), C.addEventListener("error", () => {
        I(new Error("Failed to load MoonPayWebSdk script."));
      }), document.body.appendChild(C);
    }
  });
}
function yH(A) {
  return A.startsWith("pk_live") || A.startsWith("sk_live") ? "production" : "sandbox";
}
var qo = () => {
}, wH = {
  info: qo,
  warn: qo,
  error: qo
}, dH = class My {
  constructor({
    logger: g,
    prefix: I
  }) {
    DA(this, "prefix");
    DA(this, "logger");
    this.logger = g, this.prefix = I ?? ["Logger"];
  }
  if(g) {
    return g ? this : new My({ logger: wH });
  }
  info(...g) {
    this.logger.info(`[${this.prefix}]`, ...g);
  }
  warn(...g) {
    this.logger.warn(`[${this.prefix}]`, ...g);
  }
  error(...g) {
    this.logger.error(`[${this.prefix}]`, ...g);
  }
}, zi = IA.createContext({
  apiKey: "",
  environment: "sandbox",
  debug: !1
}), FH = ({
  children: A,
  apiKey: g,
  debug: I = !1
}) => {
  const B = yH(g), [Q, E] = IA.useState({
    apiKey: g,
    environment: B,
    debug: I
  }), C = IA.useCallback(async () => {
    const o = await lH();
    E((t) => ({ ...t, init: o }));
  }, []);
  return IA.useEffect(() => {
    Q.init || C();
  }, [C, Q.init]), /* @__PURE__ */ sA.jsx(zi.Provider, { value: Q, children: A });
}, RH = class extends dH {
  constructor() {
    super({ logger: console, prefix: ["MoonPay React SDK"] });
  }
}, fH = (A, g, I) => {
  const B = IA.useRef(null), { init: Q, debug: E } = IA.useContext(zi), C = IA.useRef(new RH().if(E || !1)), o = IA.useCallback(async () => {
    var t, e;
    if (B.current) {
      if (!I && ("walletAddress" in A || "walletAddresses" in A) && C.current.warn(
        "You must provide an `onUrlSignatureRequested` function to sign the URL when using the `walletAddress` or `walletAddresses` prop"
      ), I) {
        const i = B.current.generateUrlForSigning();
        try {
          const a = await (I == null ? void 0 : I(i));
          if (!a)
            return;
          (t = B.current) == null || t.updateSignature(a);
        } catch (a) {
          C.current.error(
            "Something went wrong calling the provided `onUrlSignatureRequested` function:",
            a
          );
        }
      }
      g && ((e = B.current) == null || e.show());
    }
  }, [I, g, A]);
  IA.useEffect(() => {
    B.current && B.current.close();
    const t = (Q == null ? void 0 : Q(A)) || null;
    B.current = t, o();
  }, [Q, A, o]);
}, GH = {
  width: "424px",
  height: "656px",
  margin: "32px 28px 32px 28px",
  border: "1px solid #E5E7EB",
  borderRadius: "16px",
  overflow: "hidden"
};
function Ny({
  config: A,
  onUrlSignatureRequested: g,
  visible: I = !0,
  className: B,
  style: Q
}) {
  return fH(A, I, g), I ? /* @__PURE__ */ sA.jsx(
    "div",
    {
      id: Gs,
      className: B,
      style: A.variant === "embedded" ? {
        ...GH,
        ...Q
      } : void 0
    }
  ) : null;
}
function lp(A) {
  const { apiKey: g, environment: I } = IA.useContext(zi), B = IA.useMemo(
    () => DH({
      props: A,
      apiKey: g,
      environment: I,
      debug: !1,
      signature: A.signature || ""
    }),
    [A, g, I]
  );
  return /* @__PURE__ */ sA.jsx(
    Ny,
    {
      config: B,
      visible: A.visible,
      onUrlSignatureRequested: A.onUrlSignatureRequested,
      className: A.className,
      style: A.style
    }
  );
}
function yp(A) {
  const { apiKey: g, environment: I } = IA.useContext(zi), B = IA.useMemo(
    () => hH({
      props: A,
      apiKey: g,
      environment: I,
      debug: !1,
      signature: A.signature || ""
    }),
    [A, g, I]
  );
  return /* @__PURE__ */ sA.jsx(
    Ny,
    {
      config: B,
      visible: A.visible,
      onUrlSignatureRequested: A.onUrlSignatureRequested,
      className: A.className,
      style: A.style
    }
  );
}
const MH = "pk_test_GGxTJn499WJaHQZ6faHNOacvCqYZuM";
function NH({ children: A }) {
  return /* @__PURE__ */ sA.jsx(
    FH,
    {
      apiKey: MH,
      debug: !0,
      children: A
    }
  );
}
const uH = {
  overview: "Overview",
  dashboard: "Dashboard",
  marketplace: "Marketplace",
  community: "Community"
}, SH = {
  pairModal: {
    title: "Connect Account",
    instructions: "To pair your wallet with the DApp using WalletConnect, please follow these steps:",
    steps: {
      1: "Visit the Dapp website",
      2: 'Look for a "Connect Wallet" or similar option',
      3: 'Choose "WalletConnect" as the connection method',
      4: "Copy the provided WalletConnect URI",
      "5a": "Paste the URI in the input field below",
      "5b": "Return to this page - the URI will be automatically detected and processed"
    },
    clipboardError: "Clipboard access denied. To use this feature, please click the lock icon to the left of the address bar, find the 'Clipboard' option, set it to 'Allow', then refresh the page.",
    goToDapp: "Go to the Dapp",
    enterUri: "Enter URI",
    pair: "Pair"
  },
  connectDApps: "Connect dApps",
  disconnectSession: "Disconnect Session",
  connectAccount: "Connect Account",
  reject: "Reject",
  approve: "Approve",
  confirmTransfer: "Confirm Transfer",
  reviewTransferDetails: "Please review the transfer details below",
  from: "From:",
  to: "To:",
  amount: "Amount:",
  data: "Data:",
  confirm: "Confirm",
  connectionSuccess: "Connected successfully.",
  transferFailed: "Transfer failed",
  transferRejected: "Transfer rejected",
  disconnected: "Disconnected"
}, UH = {
  copySuccess: "Copy successfully!",
  connectSuccess: "Connected successfully!"
}, kH = {
  authenticationError: "Authentication Error. Please sign in again."
}, HH = {
  "/": {
    signinTitle: "Let’s sign in your account",
    signupTitle: "Let’s sign up your account",
    emailLabel: "Email",
    emailPlaceholder: "Email Address",
    emailValidationError: "Email is invalid or not found. Please check and try again.",
    signUpButton: "Sign Up",
    signInButton: "Sign In",
    authenticating: "Authenticating...",
    registering: "Registering...",
    alreadyHaveAccount: "Already have an account? Sign in here",
    signUp: "Don’t have an account yet? Sign up here",
    otpSentMessage: "A sign up verification code will be sent to your email. Please check your inbox and get it.",
    otpLoginSentMessage: "A login verification code will be sent to your email. Please check your inbox and get it.",
    emailAlreadySignedUp: "This email address is already signed up. Please use a different email to sign up."
  },
  "/dashboard": {
    userWallet: {
      syncTitle: "Sync"
    },
    "[token]": {
      balance: "Balance",
      recentTransactions: {
        title: "Recent Transactions",
        seeAll: "See all",
        table: {
          transactionHash: "Transaction Hash",
          time: "Time",
          from: "From",
          to: "To",
          amount: "Amount"
        },
        noTransactions: "No transactions to display"
      },
      sendModal: {
        title: "Send",
        to: "Crypto address or email address",
        toPlaceholder: "Address or Email",
        amount: "Amount",
        note: "Note",
        balance: "Balance",
        unregisteredEmailNotice: "The recipient will receive an invitation email.",
        invalidEmailFormat: "Invalid email format",
        emailSentToUnregistered: "An invitation email has been sent",
        sendError: "An error occurred while sending. Please try again."
      },
      receiveModal: {
        title: "Receive",
        Crypto: "Crypto Address",
        Email: "Email Address"
      }
    }
  },
  header: uH,
  "/marketplace": {
    tabs: {
      all: "All Products",
      purchased: "Added Products"
    },
    productCard: {
      status: {
        active: "Active",
        deleted: "Deleted"
      },
      price: "Price",
      currency: "TVWT",
      discount: "Discount",
      purchased: "Added",
      deleted: "Uninstalled",
      buttons: {
        purchase: "Install",
        purchased: "Added",
        delete: "Uninstall",
        deleted: "Uninstalled"
      },
      deleteConfirmation: {
        title: "Confirmation",
        message: "Are you sure you want to uninstall this item?",
        cancel: "Cancel",
        confirm: "Uninstall"
      },
      purchaseSuccess: "Product purchased successfully",
      insufficientBalance: "Insufficient balance",
      dailyLimitExceededOtpRequired: "Daily limit exceeded. Check your email for OTP. DO NOT close this dialog to complete your purchase."
    },
    moonpayRamp: {
      modalTitle: "MoonPay on-ramp / off-ramp",
      buyButton: "Buy Crypto with Fiat",
      sellButton: "Sell Crypto for Fiat",
      buy: "Buy",
      sell: "Sell",
      openCryptoExchange: "Open MoonPay",
      depositConfirmation: {
        title: "Confirm Deposit",
        message: "Are you sure you want to initiate this deposit?",
        confirmButton: "Confirm",
        cancelButton: "Cancel"
      }
    }
  },
  vastWalletConnect: SH,
  toastSuccess: UH,
  toastError: kH
}, pH = {
  overview: "概览",
  dashboard: "仪表盘",
  marketplace: "市场",
  community: "社区"
}, YH = {
  pairModal: {
    title: "连接账户",
    instructions: "要使用 WalletConnect 将您的钱包与 DApp 配对，请按照以下步骤操作：",
    steps: {
      1: "访问 Dapp 网站",
      2: '寻找"连接钱包"或类似选项',
      3: '选择"WalletConnect"作为连接方式',
      4: "复制提供的 WalletConnect URI",
      "5a": "将 URI 粘贴到下面的输入框中",
      "5b": "返回此页面 - URI 将被自动检测和处理"
    },
    clipboardError: '剪贴板访问被拒绝。要使用此功能，请点击地址栏左侧的锁定图标，找到"剪贴板"选项，将其设置为"允许"，然后刷新页面。',
    goToDapp: "前往 Dapp",
    enterUri: "输入 URI",
    pair: "配对"
  },
  connectDApps: "连接 dApps",
  disconnectSession: "断开会话",
  connectAccount: "连接账户",
  reject: "拒绝",
  approve: "批准",
  confirmTransfer: "确认转账",
  reviewTransferDetails: "请检查以下转账详情",
  from: "从：",
  to: "到：",
  amount: "金额：",
  data: "数据：",
  confirm: "确认",
  connectionSuccess: "连接成功。",
  transferFailed: "转账失败",
  transferRejected: "转账被拒绝",
  disconnected: "已断开连接"
}, JH = {
  copySuccess: "复制成功!",
  connectSuccess: "连接成功!"
}, LH = {
  authenticationError: "认证错误，请重新登录。"
}, KH = {
  "/": {
    signinTitle: "让我们登录您的账户",
    signupTitle: "让我们注册您的账户",
    emailLabel: "电子邮箱",
    emailPlaceholder: "请输入电子邮箱地址",
    emailValidationError: "邮箱格式不正确或不存在。请检查后重试。",
    signUpButton: "注册",
    signInButton: "登录",
    authenticating: "正在认证...",
    registering: "正在注册...",
    alreadyHaveAccount: "已有账户？请点击这里登录",
    signUp: "还没有账户？请点击这里注册",
    otpSentMessage: "注册链接将发送至您的电子邮箱。请查收并点击链接以完成注册。",
    otpLoginSentMessage: "登录链接将发送至您的邮箱。请查收并点击链接以完成登录。",
    emailAlreadySignedUp: "该电子邮箱已注册。请使用其他邮箱进行注册。"
  },
  "/dashboard": {
    userWallet: {
      syncTitle: "同步"
    },
    "[token]": {
      balance: "余额",
      recentTransactions: {
        title: "最近交易",
        seeAll: "查看全部",
        table: {
          transactionHash: "交易哈希",
          time: "时间",
          from: "发送方",
          to: "加密货币地址或邮箱地址",
          amount: "金额"
        },
        noTransactions: "暂无交易记录"
      },
      sendModal: {
        title: "发送",
        to: "接收方",
        toPlaceholder: "地址或邮箱",
        amount: "金额",
        note: "备注",
        balance: "余额",
        invalidEmailOrAddress: "无效的邮箱或地址格式",
        invalidAddress: "无效地址。请检查后重试",
        unregisteredEmailNotice: "收件人将收到一封邀请邮件。",
        invalidEmailFormat: "邮箱格式不正确",
        emailSentToUnregistered: "已发送邀请邮件",
        sendError: "发送时出错。请重试"
      },
      receiveModal: {
        title: "接收",
        Crypto: "加密货币地址",
        Email: "电子邮件地址"
      }
    }
  },
  header: pH,
  "/marketplace": {
    tabs: {
      all: "所有产品",
      purchased: "已安装产品"
    },
    productCard: {
      status: {
        active: "已激活",
        deleted: "已卸载"
      },
      price: "价格",
      currency: "TVWT",
      discount: "折扣",
      purchased: "安装时间",
      deleted: "卸载时间",
      buttons: {
        purchase: "安装",
        purchased: "已安装",
        delete: "卸载",
        deleted: "已卸载"
      },
      deleteConfirmation: {
        title: "确认卸载",
        message: "您确定要卸载此项目吗？",
        cancel: "取消",
        confirm: "卸载"
      },
      purchaseSuccess: "购买成功",
      insufficientBalance: "余额不足",
      dailyLimitExceededOtpRequired: "已超出每日限额。请查看邮箱获取验证码。请勿关闭此窗口，以完成购买。"
    },
    moonpayRamp: {
      modalTitle: "加密货币交易",
      buyButton: "用法币购买加密货币",
      sellButton: "出售加密货币换取法币",
      buy: "购买",
      sell: "出售",
      openCryptoExchange: "打开加密货币交易",
      depositConfirmation: {
        title: "确认存款",
        message: "您确定要开始这笔存款吗？",
        confirmButton: "确认",
        cancelButton: "取消"
      }
    }
  },
  vastWalletConnect: YH,
  toastSuccess: JH,
  toastError: LH
}, mH = {
  en: {
    translation: HH
  },
  zh: {
    translation: KH
  }
};
KI("savedLng", I0);
const xH = I0.getData();
B0.use(Zw).init({
  resources: mH,
  lng: xH || "en",
  // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources
  // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage
  // if you're using a language detector, do not define the lng option
  interpolation: {
    escapeValue: !1
    // react already safes from xss
  }
});
function vH() {
  return IA.useEffect(() => {
    const g = [
      {
        rel: "preconnect",
        href: "https://fonts.googleapis.com"
      },
      {
        rel: "preconnect",
        href: "https://fonts.gstatic.com",
        crossOrigin: "anonymous"
      },
      {
        rel: "stylesheet",
        href: "https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&family=Roboto+Mono:wght@400;700&family=Asap:wght@400;500;700&display=swap"
      }
    ].map((I) => {
      const B = document.createElement("link");
      return Object.entries(I).forEach(([Q, E]) => {
        B.setAttribute(Q, E);
      }), document.head.appendChild(B);
    });
    return () => {
      g.forEach((I) => I.remove());
    };
  }, []), null;
}
const bH = new JU({
  defaultOptions: {
    queries: {
      retry: 2,
      staleTime: ld,
      // data is fresh within 1 hour
      gcTime: yd
      // cache for 24 hours
    }
  }
});
function ZH() {
  return /* @__PURE__ */ sA.jsxs(sA.Fragment, { children: [
    /* @__PURE__ */ sA.jsx("div", { className: "font-['Roboto']", children: /* @__PURE__ */ sA.jsx(IA.Suspense, { children: /* @__PURE__ */ sA.jsx(xU, { client: bH, children: /* @__PURE__ */ sA.jsxs(Tw, { i18n: B0, children: [
      /* @__PURE__ */ sA.jsx(NH, { children: /* @__PURE__ */ sA.jsx(Mw, { router: nH }) }),
      /* @__PURE__ */ sA.jsx(cH, {})
    ] }) }) }) }),
    /* @__PURE__ */ sA.jsx(vH, {})
  ] });
}
const TH = "theme_light", XH = "0.0.0", zH = "module", VH = {
  dev: "vite",
  build: "tsc -b && vite build --mode heroku",
  "build-staging": "tsc -b && vite build --mode staging",
  "build-local": "tsc -b && vite build",
  lint: "eslint . --quiet",
  preview: "vite preview"
}, qH = {
  "@auth0/auth0-react": "^2.3.0",
  "@fireblocks/ncw-js-sdk": "^12.5.3",
  "@fontsource/asap": "^5.0.0",
  "@fontsource/roboto": "^5.1.0",
  "@fontsource/roboto-mono": "^5.1.0",
  "@moonpay/moonpay-react": "^1.8.2",
  "@radix-ui/react-checkbox": "^1.1.2",
  "@radix-ui/react-dialog": "^1.1.2",
  "@radix-ui/react-dropdown-menu": "^2.1.2",
  "@radix-ui/react-label": "^2.1.0",
  "@radix-ui/react-popover": "^1.1.2",
  "@radix-ui/react-select": "^2.1.2",
  "@radix-ui/react-slot": "^1.1.0",
  "@radix-ui/react-tabs": "^1.1.1",
  "@radix-ui/react-tooltip": "^1.1.3",
  "@tanstack/react-query": "^5.59.20",
  "@walletconnect/core": "^2.17.1",
  "@walletconnect/types": "^2.17.1",
  "@walletconnect/utils": "^2.17.1",
  "@walletconnect/web3wallet": "^1.16.1",
  "@web3auth/base": "^9.3.0",
  "@web3auth/ethereum-mpc-provider": "^9.3.0",
  "@web3auth/mpc-core-kit": "^3.2.4",
  antd: "^5.21.6",
  axios: "^1.7.7",
  "class-variance-authority": "^0.7.0",
  clsx: "^2.1.1",
  cmdk: "1.0.0",
  "date-fns": "^4.1.0",
  dayjs: "^1.11.13",
  firebase: "^11.3.0",
  i18next: "^23.16.2",
  "js-base64": "^3.7.7",
  "lucide-react": "^0.453.0",
  "node-forge": "^1.3.1",
  nprogress: "^0.2.0",
  papaparse: "^5.4.1",
  "qrcode.react": "^4.1.0",
  react: "^18.3.1",
  "react-chatbotify": "2.0.0-beta.21",
  "react-copy-to-clipboard": "^5.1.0",
  "react-dom": "^18.3.1",
  "react-i18next": "^15.1.0",
  "react-qr-code": "^2.0.15",
  "react-router-dom": "^6.27.0",
  "react-toastify": "^10.0.6",
  "react-verification-input": "^4.2.0",
  recharts: "^2.13.3",
  "socket.io-client": "^4.8.1",
  "tailwind-merge": "^2.5.4",
  "tailwind-scrollbar-hide": "^1.1.7",
  "tailwindcss-animate": "^1.0.7",
  uuid: "^10.0.0",
  viem: "^2.21.32"
}, PH = {
  "@eslint/js": "^9.11.1",
  "@types/node-forge": "^1.3.11",
  "@types/nprogress": "^0.2.3",
  "@types/papaparse": "^5.3.15",
  "@types/react": "^18.3.10",
  "@types/react-copy-to-clipboard": "^5.0.7",
  "@types/react-dom": "^18.3.0",
  "@types/uuid": "^10.0.0",
  "@vitejs/plugin-react": "^4.3.2",
  autoprefixer: "^10.4.20",
  eslint: "^9.11.1",
  "eslint-plugin-react-hooks": "^5.1.0-rc.0",
  "eslint-plugin-react-refresh": "^0.4.12",
  globals: "^15.9.0",
  postcss: "^8.4.47",
  "rollup-plugin-visualizer": "^5.12.0",
  tailwindcss: "^3.4.14",
  typescript: "^5.5.3",
  "typescript-eslint": "^8.7.0",
  vite: "^5.4.8",
  "vite-plugin-imp": "^2.4.0",
  "vite-plugin-node-polyfills": "^0.22.0"
}, WH = {
  name: TH,
  private: !0,
  version: XH,
  type: zH,
  scripts: VH,
  dependencies: qH,
  devDependencies: PH
};
KI("isDev", C0);
function kD(A) {
  const g = Wo(document.getElementById(A));
  return g.render(
    /* @__PURE__ */ sA.jsx(ZH, {})
    // <StrictMode>
    // </StrictMode>
  ), () => g.unmount();
}
C0 ? kD("root") : typeof window < "u" && (window[`mount_${WH.name}`] = kD);
export {
  ul as $,
  rE as A,
  IE as B,
  OE as C,
  NG as D,
  _C as E,
  Gl as F,
  VC as G,
  vG as H,
  Bi as I,
  fI as J,
  Ge as K,
  Jr as L,
  aE as M,
  ep as N,
  GS as O,
  dQ as P,
  wQ as Q,
  fl as R,
  ak as S,
  rs as T,
  cu as U,
  Iy as V,
  iu as W,
  op as X,
  lI as Y,
  ip as Z,
  Dg as _,
  fB as a,
  ih as a$,
  qa as a0,
  rp as a1,
  pc as a2,
  Tt as a3,
  Dd as a4,
  Bt as a5,
  t0 as a6,
  e0 as a7,
  rk as a8,
  Qy as a9,
  ap as aA,
  Va as aB,
  TS as aC,
  sp as aD,
  TG as aE,
  $C as aF,
  XG as aG,
  ve as aH,
  pN as aI,
  nu as aJ,
  Du as aK,
  JQ as aL,
  Lo as aM,
  Rl as aN,
  i0 as aO,
  nd as aP,
  cd as aQ,
  Ik as aR,
  nc as aS,
  Ip as aT,
  Qp as aU,
  Cp as aV,
  ZG as aW,
  gs as aX,
  Wa as aY,
  TE as aZ,
  yh as a_,
  wr as aa,
  VB as ab,
  _o as ac,
  Mk as ad,
  Fk as ae,
  Dp as af,
  Hk as ag,
  Xl as ah,
  lp as ai,
  yp as aj,
  o0 as ak,
  Ay as al,
  Jn as am,
  Ak as an,
  Ll as ao,
  be as ap,
  Yi as aq,
  Ji as ar,
  ZE as as,
  Di as at,
  Lu as au,
  Tu as av,
  Zi as aw,
  ik as ax,
  Ck as ay,
  Zh as az,
  uG as b,
  ya as b0,
  si as b1,
  CN as b2,
  Sa as b3,
  Ho as b4,
  $G as b5,
  th as b6,
  hc as b7,
  gS as b8,
  pl as b9,
  dr as ba,
  Gd as bb,
  Ep as bc,
  kD as bd,
  Rg as c,
  Ih as d,
  Qh as e,
  yB as f,
  KI as g,
  vE as h,
  Ne as i,
  hp as j,
  E0 as k,
  I0 as l,
  FG as m,
  Ln as n,
  RC as o,
  sc as p,
  tE as q,
  pI as r,
  Pa as s,
  NB as t,
  uk as u,
  Fh as v,
  ni as w,
  tp as x,
  ou as y,
  eE as z
};
